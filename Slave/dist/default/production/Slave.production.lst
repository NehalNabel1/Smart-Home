

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Feb 04 14:17:39 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1,inline
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1,inline
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1,inline
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1,inline
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1,inline
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1,inline
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    72                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1
    89                           	psect	text69,global,reloc=2,class=CODE,delta=1
    90                           	psect	text70,global,reloc=2,class=CODE,delta=1
    91                           	psect	text71,global,reloc=2,class=CODE,delta=1
    92                           	psect	text72,global,reloc=2,class=CODE,delta=1
    93                           	psect	text73,global,reloc=2,class=CODE,delta=1
    94                           	psect	text74,global,reloc=2,class=CODE,delta=1
    95                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    98                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    99                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   100   000000                     
   101                           ; Generated 23/03/2023 GMT
   102                           ; 
   103                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   104                           ; All rights reserved.
   105                           ; 
   106                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   107                           ; 
   108                           ; Redistribution and use in source and binary forms, with or without modification, are
   109                           ; permitted provided that the following conditions are met:
   110                           ; 
   111                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   112                           ;        conditions and the following disclaimer.
   113                           ; 
   114                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   115                           ;        of conditions and the following disclaimer in the documentation and/or other
   116                           ;        materials provided with the distribution. Publication is not required when
   117                           ;        this file is used in an embedded application.
   118                           ; 
   119                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   120                           ;        software without specific prior written permission.
   121                           ; 
   122                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   123                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   124                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   125                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   126                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   127                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   128                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   129                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   130                           ; 
   131                           ; 
   132                           ; Code-generator required, PIC18F4620 Definitions
   133                           ; 
   134                           ; SFR Addresses
   135   000000                     
   136                           	psect	idataCOMRAM
   137   004A40                     __pidataCOMRAM:
   138                           	callstack 0
   139                           
   140                           ;initializer for _RB7_Flag
   141   004A40  01                 	db	1
   142                           
   143                           ;initializer for _RB6_Flag
   144   004A41  01                 	db	1
   145                           
   146                           ;initializer for _RB5_Flag
   147   004A42  01                 	db	1
   148                           
   149                           ;initializer for _RB4_Flag
   150   004A43  01                 	db	1
   151                           
   152                           	psect	idataBANK0
   153   0049F2                     __pidataBANK0:
   154                           	callstack 0
   155                           
   156                           ;initializer for _ret
   157   0049F2  01                 	db	1
   158                           
   159                           ;initializer for _lcd_2
   160   0049F3  01                 	db	1
   161   0049F4  08                 	db	8
   162   0049F5  03                 	db	3
   163   0049F6  0B                 	db	11
   164   0049F7  13                 	db	19
   165   0049F8  1B                 	db	27
   166   0049F9  23                 	db	35
   167   0049FA  2B                 	db	43
   168   0049FB  33                 	db	51
   169   0049FC  3B                 	db	59
   170                           
   171                           ;initializer for _dc_motor2
   172   0049FD  10                 	db	16
   173   0049FE  2A                 	db	42
   174                           
   175                           ;initializer for _dc_motor1
   176   0049FF  02                 	db	2
   177   004A00  0A                 	db	10
   178                           
   179                           	psect	idataBANK1
   180   00491C                     __pidataBANK1:
   181                           	callstack 0
   182                           
   183                           ;initializer for _port_registers
   184   00491C  80                 	db	128
   185   00491D  0F                 	db	15
   186   00491E  81                 	db	129
   187   00491F  0F                 	db	15
   188   004920  82                 	db	130
   189   004921  0F                 	db	15
   190   004922  83                 	db	131
   191   004923  0F                 	db	15
   192   004924  84                 	db	132
   193   004925  0F                 	db	15
   194                           
   195                           ;initializer for _lat_registers
   196   004926  89                 	db	137
   197   004927  0F                 	db	15
   198   004928  8A                 	db	138
   199   004929  0F                 	db	15
   200   00492A  8B                 	db	139
   201   00492B  0F                 	db	15
   202   00492C  8C                 	db	140
   203   00492D  0F                 	db	15
   204   00492E  8D                 	db	141
   205   00492F  0F                 	db	15
   206                           
   207                           ;initializer for _tris_registers
   208   004930  92                 	db	146
   209   004931  0F                 	db	15
   210   004932  93                 	db	147
   211   004933  0F                 	db	15
   212   004934  94                 	db	148
   213   004935  0F                 	db	15
   214   004936  95                 	db	149
   215   004937  0F                 	db	15
   216   004938  96                 	db	150
   217   004939  0F                 	db	15
   218                           
   219                           ;initializer for _lcd_1
   220   00493A  02                 	db	2
   221   00493B  0A                 	db	10
   222   00493C  12                 	db	18
   223   00493D  1A                 	db	26
   224   00493E  22                 	db	34
   225   00493F  2A                 	db	42
   226                           
   227                           ;initializer for _adc_1
   228   004940  00                 	db	0
   229   004941  00                 	db	0
   230   004942  00                 	db	0
   231   004943  05                 	db	5
   232   004944  05                 	db	5
   233   004945  00                 	db	0
   234   004946  02                 	db	2
   235                           
   236                           	psect	smallconst
   237   001000                     __psmallconst:
   238                           	callstack 0
   239   001000  00                 	db	0
   240   001001                     _btn_value:
   241                           	callstack 0
   242   001001  37                 	db	55
   243   001002  38                 	db	56
   244   001003  39                 	db	57
   245   001004  2F                 	db	47
   246   001005  34                 	db	52
   247   001006  35                 	db	53
   248   001007  36                 	db	54
   249   001008  2A                 	db	42
   250   001009  31                 	db	49
   251   00100A  32                 	db	50
   252   00100B  33                 	db	51
   253   00100C  2D                 	db	45
   254   00100D  23                 	db	35
   255   00100E  30                 	db	48
   256   00100F  3D                 	db	61
   257   001010  2B                 	db	43
   258   001011                     __end_of_btn_value:
   259                           	callstack 0
   260   000000                     _SPBRGH	set	4016
   261   000000                     _SPBRG	set	4015
   262   000000                     _TXREG	set	4013
   263   000000                     _TXSTAbits	set	4012
   264   000000                     _RCREG	set	4014
   265   000000                     _RCSTAbits	set	4011
   266   000000                     _TMR3L	set	4018
   267   000000                     _TMR3H	set	4019
   268   000000                     _TMR1L	set	4046
   269   000000                     _TMR1H	set	4047
   270   000000                     _TMR0L	set	4054
   271   000000                     _TMR0H	set	4055
   272   000000                     _INTCON2bits	set	4081
   273   000000                     _SSPSTATbits	set	4039
   274   000000                     _SSPADD	set	4040
   275   000000                     _SSPCON2bits	set	4037
   276   000000                     _SSPCON1bits	set	4038
   277   000000                     _EECON2	set	4007
   278   000000                     _CCPR2H	set	4028
   279   000000                     _CCPR2L	set	4027
   280   000000                     _CCPR1H	set	4031
   281   000000                     _CCPR1L	set	4030
   282   000000                     _ADCON1bits	set	4033
   283   000000                     _ADRESL	set	4035
   284   000000                     _ADRESH	set	4036
   285   000000                     _INTCONbits	set	4082
   286   000000                     _ADCON2bits	set	4032
   287   000000                     _ADCON0bits	set	4034
   288   000000                     _TRISD	set	3989
   289   000000                     _TRISC	set	3988
   290   000000                     _TRISB	set	3987
   291   000000                     _TRISE	set	3990
   292   001011                     STR_12:
   293   001011  46                 	db	70	;'F'
   294   001012  61                 	db	97	;'a'
   295   001013  6E                 	db	110	;'n'
   296   001014  20                 	db	32
   297   001015  4F                 	db	79	;'O'
   298   001016  46                 	db	70	;'F'
   299   001017  46                 	db	70	;'F'
   300   001018  20                 	db	32
   301   001019  2F                 	db	47
   302   00101A  20                 	db	32
   303   00101B  48                 	db	72	;'H'
   304   00101C  65                 	db	101	;'e'
   305   00101D  61                 	db	97	;'a'
   306   00101E  74                 	db	116	;'t'
   307   00101F  65                 	db	101	;'e'
   308   001020  72                 	db	114	;'r'
   309   001021  20                 	db	32
   310   001022  4F                 	db	79	;'O'
   311   001023  46                 	db	70	;'F'
   312   001024  46                 	db	70	;'F'
   313   001025  20                 	db	32
   314   001026  00                 	db	0
   315   001027                     STR_6:
   316   001027  54                 	db	84	;'T'
   317   001028  65                 	db	101	;'e'
   318   001029  6D                 	db	109	;'m'
   319   00102A  70                 	db	112	;'p'
   320   00102B  65                 	db	101	;'e'
   321   00102C  72                 	db	114	;'r'
   322   00102D  61                 	db	97	;'a'
   323   00102E  74                 	db	116	;'t'
   324   00102F  75                 	db	117	;'u'
   325   001030  72                 	db	114	;'r'
   326   001031  65                 	db	101	;'e'
   327   001032  20                 	db	32
   328   001033  3A                 	db	58	;':'
   329   001034  20                 	db	32
   330   001035  00                 	db	0
   331   001036                     STR_10:
   332   001036  48                 	db	72	;'H'
   333   001037  65                 	db	101	;'e'
   334   001038  61                 	db	97	;'a'
   335   001039  74                 	db	116	;'t'
   336   00103A  65                 	db	101	;'e'
   337   00103B  72                 	db	114	;'r'
   338   00103C  20                 	db	32
   339   00103D  4F                 	db	79	;'O'
   340   00103E  4E                 	db	78	;'N'
   341   00103F  20                 	db	32
   342   001040  00                 	db	0
   343   001041                     STR_8:
   344   001041  46                 	db	70	;'F'
   345   001042  61                 	db	97	;'a'
   346   001043  6E                 	db	110	;'n'
   347   001044  20                 	db	32
   348   001045  4F                 	db	79	;'O'
   349   001046  4E                 	db	78	;'N'
   350   001047  20                 	db	32
   351   001048  00                 	db	0
   352   001049  54                 	db	84	;'T'
   353   00104A  69                 	db	105	;'i'
   354   00104B  6D                 	db	109	;'m'
   355   00104C  65                 	db	101	;'e'
   356   00104D  20                 	db	32
   357   00104E  3A                 	db	58	;':'
   358   00104F  20                 	db	32
   359   001050  00                 	db	0
   360   001051  44                 	db	68	;'D'
   361   001052  61                 	db	97	;'a'
   362   001053  74                 	db	116	;'t'
   363   001054  65                 	db	101	;'e'
   364   001055  20                 	db	32
   365   001056  3A                 	db	58	;':'
   366   001057  20                 	db	32
   367   001058  00                 	db	0
   368   001059                     STR_1:
   369   001059  25                 	db	37
   370   00105A  69                 	db	105	;'i'
   371   00105B  00                 	db	0
   372   00105C  00                 	db	0	; dummy byte at the end
   373   000000                     
   374                           	psect	nvCOMRAM
   375   000071                     __pnvCOMRAM:
   376                           	callstack 0
   377   000071                     _adc_lm35_celsius:
   378                           	callstack 0
   379   000071                     	ds	2
   380   000000                     _PORTBbits	set	3969
   381   000000                     _TRISCbits	set	3988
   382   000000                     _PIE1bits	set	3997
   383   000000                     _CCP1CONbits	set	4029
   384   000000                     _PORTE	set	3972
   385   000000                     _PORTD	set	3971
   386   000000                     _PORTC	set	3970
   387   000000                     _PORTB	set	3969
   388   000000                     _PORTA	set	3968
   389   000000                     _LATA	set	3977
   390   000000                     _TRISA	set	3986
   391   000000                     _PIE2bits	set	4000
   392   000000                     _PIR2bits	set	4001
   393   000000                     _PIR1bits	set	3998
   394   000000                     _EECON1bits	set	4006
   395   000000                     _EEDATA	set	4008
   396   000000                     _EEADR	set	4009
   397   000000                     _EEADRH	set	4010
   398   000000                     _T3CONbits	set	4017
   399   000000                     _CCP2CONbits	set	4026
   400   000000                     _LATE	set	3981
   401   000000                     _LATD	set	3980
   402   000000                     _LATC	set	3979
   403   000000                     _LATB	set	3978
   404   000000                     _TMR2	set	4044
   405   000000                     _T2CONbits	set	4042
   406   000000                     _T1CONbits	set	4045
   407   000000                     _T0CONbits	set	4053
   408   000000                     _INTCON3bits	set	4080
   409   000000                     _SSPBUF	set	4041
   410   000000                     _BAUDCONbits	set	4024
   411                           
   412                           ; #config settings
   413                           
   414                           	psect	cinit
   415   00410A                     __pcinit:
   416                           	callstack 0
   417   00410A                     start_initialization:
   418                           	callstack 0
   419   00410A                     __initialization:
   420                           	callstack 0
   421                           
   422                           ; Initialize objects allocated to BANK1 (43 bytes)
   423                           ; load TBLPTR registers with __pidataBANK1
   424   00410A  0E1C               	movlw	low __pidataBANK1
   425   00410C  6EF6               	movwf	tblptrl,c
   426   00410E  0E49               	movlw	high __pidataBANK1
   427   004110  6EF7               	movwf	tblptrh,c
   428   004112  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   429   004114  6EF8               	movwf	tblptru,c
   430   004116  EE01  F066         	lfsr	0,__pdataBANK1
   431   00411A  EE10 F02B          	lfsr	1,43
   432   00411E                     copy_data0:
   433   00411E  0009               	tblrd		*+
   434   004120  CFF5 FFEE          	movff	tablat,postinc0
   435   004124  50E5               	movf	postdec1,w,c
   436   004126  50E1               	movf	fsr1l,w,c
   437   004128  E1FA               	bnz	copy_data0
   438                           
   439                           ; Initialize objects allocated to BANK0 (15 bytes)
   440                           ; load TBLPTR registers with __pidataBANK0
   441   00412A  0EF2               	movlw	low __pidataBANK0
   442   00412C  6EF6               	movwf	tblptrl,c
   443   00412E  0E49               	movlw	high __pidataBANK0
   444   004130  6EF7               	movwf	tblptrh,c
   445   004132  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   446   004134  6EF8               	movwf	tblptru,c
   447   004136  EE00  F0EE         	lfsr	0,__pdataBANK0
   448   00413A  EE10 F00F          	lfsr	1,15
   449   00413E                     copy_data1:
   450   00413E  0009               	tblrd		*+
   451   004140  CFF5 FFEE          	movff	tablat,postinc0
   452   004144  50E5               	movf	postdec1,w,c
   453   004146  50E1               	movf	fsr1l,w,c
   454   004148  E1FA               	bnz	copy_data1
   455                           
   456                           ; Initialize objects allocated to COMRAM (4 bytes)
   457                           ; load TBLPTR registers with __pidataCOMRAM
   458   00414A  0E40               	movlw	low __pidataCOMRAM
   459   00414C  6EF6               	movwf	tblptrl,c
   460   00414E  0E4A               	movlw	high __pidataCOMRAM
   461   004150  6EF7               	movwf	tblptrh,c
   462   004152  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   463   004154  6EF8               	movwf	tblptru,c
   464   004156  EE00  F06D         	lfsr	0,__pdataCOMRAM
   465   00415A  EE10 F004          	lfsr	1,4
   466   00415E                     copy_data2:
   467   00415E  0009               	tblrd		*+
   468   004160  CFF5 FFEE          	movff	tablat,postinc0
   469   004164  50E5               	movf	postdec1,w,c
   470   004166  50E1               	movf	fsr1l,w,c
   471   004168  E1FA               	bnz	copy_data2
   472                           
   473                           ; Clear objects allocated to BANK1 (102 bytes)
   474   00416A  EE01  F000         	lfsr	0,__pbssBANK1
   475   00416E  0E66               	movlw	102
   476   004170                     clear_0:
   477   004170  6AEE               	clrf	postinc0,c
   478   004172  06E8               	decf	wreg,f,c
   479   004174  E1FD               	bnz	clear_0
   480                           
   481                           ; Clear objects allocated to BANK0 (110 bytes)
   482   004176  EE00  F080         	lfsr	0,__pbssBANK0
   483   00417A  0E6E               	movlw	110
   484   00417C                     clear_1:
   485   00417C  6AEE               	clrf	postinc0,c
   486   00417E  06E8               	decf	wreg,f,c
   487   004180  E1FD               	bnz	clear_1
   488                           
   489                           ; Clear objects allocated to COMRAM (14 bytes)
   490   004182  EE00  F05F         	lfsr	0,__pbssCOMRAM
   491   004186  0E0E               	movlw	14
   492   004188                     clear_2:
   493   004188  6AEE               	clrf	postinc0,c
   494   00418A  06E8               	decf	wreg,f,c
   495   00418C  E1FD               	bnz	clear_2
   496   00418E                     end_of_initialization:
   497                           	callstack 0
   498   00418E                     __end_of__initialization:
   499                           	callstack 0
   500   00418E  9073               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   501   004190  9273               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   502   004192  0100               	movlb	0
   503   004194  EF2F  F008         	goto	_main	;jump to C main() function
   504                           
   505                           	psect	bssCOMRAM
   506   00005F                     __pbssCOMRAM:
   507                           	callstack 0
   508   00005F                     _check3:
   509                           	callstack 0
   510   00005F                     	ds	1
   511   000060                     _check2:
   512                           	callstack 0
   513   000060                     	ds	1
   514   000061                     _check1:
   515                           	callstack 0
   516   000061                     	ds	1
   517   000062                     _timer2_preload:
   518                           	callstack 0
   519   000062                     	ds	1
   520   000063                     _compare_flag:
   521                           	callstack 0
   522   000063                     	ds	1
   523   000064                     relay_turn_off@F3052:
   524                           	callstack 0
   525   000064                     	ds	1
   526   000065                     relay_turn_on@F3047:
   527                           	callstack 0
   528   000065                     	ds	1
   529   000066                     relay_initialize@F3042:
   530                           	callstack 0
   531   000066                     	ds	1
   532   000067                     led_toggle@F3063:
   533                           	callstack 0
   534   000067                     	ds	1
   535   000068                     led_turn_off@F3058:
   536                           	callstack 0
   537   000068                     	ds	1
   538   000069                     led_turn_on@F3053:
   539                           	callstack 0
   540   000069                     	ds	1
   541   00006A                     led_initialize@F3048:
   542                           	callstack 0
   543   00006A                     	ds	1
   544   00006B                     _adc_lm35_1:
   545                           	callstack 0
   546   00006B                     	ds	2
   547                           
   548                           	psect	dataCOMRAM
   549   00006D                     __pdataCOMRAM:
   550                           	callstack 0
   551   00006D                     _RB7_Flag:
   552                           	callstack 0
   553   00006D                     	ds	1
   554   00006E                     _RB6_Flag:
   555                           	callstack 0
   556   00006E                     	ds	1
   557   00006F                     _RB5_Flag:
   558                           	callstack 0
   559   00006F                     	ds	1
   560   000070                     _RB4_Flag:
   561                           	callstack 0
   562   000070                     	ds	1
   563                           
   564                           	psect	bssBANK0
   565   000080                     __pbssBANK0:
   566                           	callstack 0
   567   000080                     _RealTimeClockDS1307:
   568                           	callstack 0
   569   000080                     	ds	6
   570   000086                     _width:
   571                           	callstack 0
   572   000086                     	ds	2
   573   000088                     _prec:
   574                           	callstack 0
   575   000088                     	ds	2
   576   00008A                     _EUSART_OverrunErrorHandler:
   577                           	callstack 0
   578   00008A                     	ds	2
   579   00008C                     _EUSART_FramingErrorHandler:
   580                           	callstack 0
   581   00008C                     	ds	2
   582   00008E                     _EUSART_RxInterruptHandler:
   583                           	callstack 0
   584   00008E                     	ds	2
   585   000090                     _EUSART_TxInterruptHandler:
   586                           	callstack 0
   587   000090                     	ds	2
   588   000092                     _timer3_preload:
   589                           	callstack 0
   590   000092                     	ds	2
   591   000094                     _TMR3_Interrupt_Handler:
   592                           	callstack 0
   593   000094                     	ds	2
   594   000096                     _TMR2_Interrupt_Handler:
   595                           	callstack 0
   596   000096                     	ds	2
   597   000098                     _timer1_preload:
   598                           	callstack 0
   599   000098                     	ds	2
   600   00009A                     _TMR1_Interrupt_Handler:
   601                           	callstack 0
   602   00009A                     	ds	2
   603   00009C                     _timer0_preload:
   604                           	callstack 0
   605   00009C                     	ds	2
   606   00009E                     _TMR0_Interrupt_Handler:
   607                           	callstack 0
   608   00009E                     	ds	2
   609   0000A0                     _RB7_InterruptHandler_LOW:
   610                           	callstack 0
   611   0000A0                     	ds	2
   612   0000A2                     _RB7_InterruptHandler_HIGH:
   613                           	callstack 0
   614   0000A2                     	ds	2
   615   0000A4                     _RB6_InterruptHandler_LOW:
   616                           	callstack 0
   617   0000A4                     	ds	2
   618   0000A6                     _RB6_InterruptHandler_HIGH:
   619                           	callstack 0
   620   0000A6                     	ds	2
   621   0000A8                     _RB5_InterruptHandler_LOW:
   622                           	callstack 0
   623   0000A8                     	ds	2
   624   0000AA                     _RB5_InterruptHandler_HIGH:
   625                           	callstack 0
   626   0000AA                     	ds	2
   627   0000AC                     _RB4_InterruptHandler_LOW:
   628                           	callstack 0
   629   0000AC                     	ds	2
   630   0000AE                     _RB4_InterruptHandler_HIGH:
   631                           	callstack 0
   632   0000AE                     	ds	2
   633   0000B0                     _INT2_InterruptHandler:
   634                           	callstack 0
   635   0000B0                     	ds	2
   636   0000B2                     _INT1_InterruptHandler:
   637                           	callstack 0
   638   0000B2                     	ds	2
   639   0000B4                     _INT0_InterruptHandler:
   640                           	callstack 0
   641   0000B4                     	ds	2
   642   0000B6                     _I2C_Report_Receive_Overflow_InterruptHandler:
   643                           	callstack 0
   644   0000B6                     	ds	2
   645   0000B8                     _I2C_DefaultInterruptHandler:
   646                           	callstack 0
   647   0000B8                     	ds	2
   648   0000BA                     _I2C_Report_Write_Collision_InterruptHandler:
   649                           	callstack 0
   650   0000BA                     	ds	2
   651   0000BC                     CCP_Compare_Mode_Set_Value@F3112:
   652                           	callstack 0
   653   0000BC                     	ds	2
   654   0000BE                     _CCP2_Interrupt_Handler:
   655                           	callstack 0
   656   0000BE                     	ds	2
   657   0000C0                     _CCP1_Interrupt_Handler:
   658                           	callstack 0
   659   0000C0                     	ds	2
   660   0000C2                     _ADC_Interrupt_Handler:
   661                           	callstack 0
   662   0000C2                     	ds	2
   663   0000C4                     _flags:
   664                           	callstack 0
   665   0000C4                     	ds	1
   666   0000C5                     _i:
   667                           	callstack 0
   668   0000C5                     	ds	1
   669   0000C6                     _keypadvalue:
   670                           	callstack 0
   671   0000C6                     	ds	1
   672   0000C7                     _i2c_slave_rec_data:
   673                           	callstack 0
   674   0000C7                     	ds	1
   675   0000C8                     _dummy_buffer:
   676                           	callstack 0
   677   0000C8                     	ds	1
   678   0000C9                     _ADC_Req:
   679                           	callstack 0
   680   0000C9                     	ds	1
   681   0000CA                     _usart_obj:
   682                           	callstack 0
   683   0000CA                     	ds	16
   684   0000DA                     _i2c_obj:
   685                           	callstack 0
   686   0000DA                     	ds	13
   687   0000E7                     _adc_lm35_1_txt:
   688                           	callstack 0
   689   0000E7                     	ds	7
   690                           
   691                           	psect	dataBANK0
   692   0000EE                     __pdataBANK0:
   693                           	callstack 0
   694   0000EE                     _ret:
   695                           	callstack 0
   696   0000EE                     	ds	1
   697   0000EF                     _lcd_2:
   698                           	callstack 0
   699   0000EF                     	ds	10
   700   0000F9                     _dc_motor2:
   701                           	callstack 0
   702   0000F9                     	ds	2
   703   0000FB                     _dc_motor1:
   704                           	callstack 0
   705   0000FB                     	ds	2
   706                           
   707                           	psect	bssBANK1
   708   000100                     __pbssBANK1:
   709                           	callstack 0
   710   000100                     	ds	11
   711   00010B                     _RealTimeClockDS1307_Str_Data:
   712                           	callstack 0
   713   00010B                     	ds	9
   714   000114                     	ds	6
   715   00011A                     _str:
   716                           	callstack 0
   717   00011A                     	ds	4
   718   00011E                     	ds	4
   719   000122                     _dbuf:
   720                           	callstack 0
   721   000122                     	ds	32
   722   000142                     _ccp1_obj:
   723                           	callstack 0
   724   000142                     	ds	11
   725   00014D                     _RealTimeClockDS1307_Time:
   726                           	callstack 0
   727   00014D                     	ds	9
   728   000156                     _RealTimeClockDS1307_Data:
   729                           	callstack 0
   730   000156                     	ds	9
   731   00015F                     _timer_obj:
   732                           	callstack 0
   733   00015F                     	ds	7
   734                           
   735                           	psect	dataBANK1
   736   000166                     __pdataBANK1:
   737                           	callstack 0
   738   000166                     _port_registers:
   739                           	callstack 0
   740   000166                     	ds	10
   741   000170                     _lat_registers:
   742                           	callstack 0
   743   000170                     	ds	10
   744   00017A                     _tris_registers:
   745                           	callstack 0
   746   00017A                     	ds	10
   747   000184                     _lcd_1:
   748                           	callstack 0
   749   000184                     	ds	6
   750   00018A                     _adc_1:
   751                           	callstack 0
   752   00018A                     	ds	7
   753                           
   754                           	psect	cstackBANK1
   755   000191                     __pcstackBANK1:
   756                           	callstack 0
   757   000191                     convert_uint16_to_string@value:
   758                           	callstack 0
   759                           
   760                           ; 2 bytes @ 0x0
   761   000191                     	ds	2
   762   000193                     convert_uint16_to_string@str:
   763                           	callstack 0
   764                           
   765                           ; 2 bytes @ 0x2
   766   000193                     	ds	2
   767   000195                     convert_uint16_to_string@Temp_String:
   768                           	callstack 0
   769                           
   770                           ; 6 bytes @ 0x4
   771   000195                     	ds	6
   772   00019B                     convert_uint16_to_string@ret:
   773                           	callstack 0
   774                           
   775                           ; 1 bytes @ 0xA
   776   00019B                     	ds	1
   777   00019C                     convert_uint16_to_string@DataCounter:
   778                           	callstack 0
   779                           
   780                           ; 1 bytes @ 0xB
   781   00019C                     	ds	1
   782                           
   783                           	psect	cstackCOMRAM
   784   000001                     __pcstackCOMRAM:
   785                           	callstack 0
   786   000001                     RB4_ISR@RB4_source:
   787                           	callstack 0
   788   000001                     RB5_ISR@RB5_source:
   789                           	callstack 0
   790   000001                     RB6_ISR@RB6_source:
   791                           	callstack 0
   792   000001                     RB7_ISR@RB7_source:
   793                           	callstack 0
   794   000001                     CCP_Compare_Mode_Set_Value@_ccp_obj:
   795                           	callstack 0
   796   000001                     Timer3_Write_value@_timer:
   797                           	callstack 0
   798                           
   799                           ; 2 bytes @ 0x0
   800   000001                     	ds	2
   801   000003                     CCP_Compare_Mode_Set_Value@compare_value:
   802                           	callstack 0
   803   000003                     Timer3_Write_value@_value:
   804                           	callstack 0
   805                           
   806                           ; 2 bytes @ 0x2
   807   000003                     	ds	2
   808   000005                     
   809                           ; 1 bytes @ 0x4
   810   000005                     	ds	1
   811   000006                     CCP_Compare_Mode_Set_Value@capture_temp_value:
   812                           	callstack 0
   813                           
   814                           ; 2 bytes @ 0x5
   815   000006                     	ds	2
   816   000008                     ??_InterruptManagerHigh:
   817                           
   818                           ; 1 bytes @ 0x7
   819   000008                     	ds	4
   820   00000C                     ??_adc_input_channel_port_configure:
   821   00000C                     ?___awdiv:
   822                           	callstack 0
   823   00000C                     ?___awmod:
   824                           	callstack 0
   825   00000C                     ?___lwdiv:
   826                           	callstack 0
   827   00000C                     ?___xxtofl:
   828                           	callstack 0
   829   00000C                     ADC_StartConversion@_adc:
   830                           	callstack 0
   831   00000C                     ADC_GetConversionResult@_adc:
   832                           	callstack 0
   833   00000C                     select_result_format@_adc:
   834                           	callstack 0
   835   00000C                     configure_voltage_reference@_adc:
   836                           	callstack 0
   837   00000C                     gpio_pin_direction_intialize@_pin_config:
   838                           	callstack 0
   839   00000C                     gpio_pin_write_logic@_pin_config:
   840                           	callstack 0
   841   00000C                     MSSP_I2C_Interrupt_Configuration@i2c_obj:
   842                           	callstack 0
   843   00000C                     EUSART_ASYNC_TX_Init@_eusart:
   844                           	callstack 0
   845   00000C                     EUSART_ASYNC_RX_Init@_eusart:
   846                           	callstack 0
   847   00000C                     ___awdiv@dividend:
   848                           	callstack 0
   849   00000C                     ___awmod@dividend:
   850                           	callstack 0
   851   00000C                     ___lwdiv@dividend:
   852                           	callstack 0
   853   00000C                     memset@dest:
   854                           	callstack 0
   855   00000C                     fputc@c:
   856                           	callstack 0
   857   00000C                     ___xxtofl@val:
   858                           	callstack 0
   859                           
   860                           ; 4 bytes @ 0xB
   861   00000C                     	ds	2
   862   00000E                     ??_gpio_pin_direction_intialize:
   863   00000E                     adc_input_channel_port_configure@channel:
   864                           	callstack 0
   865   00000E                     gpio_pin_write_logic@logic:
   866                           	callstack 0
   867   00000E                     ADC_GetConversionResult@conversion_result:
   868                           	callstack 0
   869   00000E                     ___awdiv@divisor:
   870                           	callstack 0
   871   00000E                     ___awmod@divisor:
   872                           	callstack 0
   873   00000E                     ___lwdiv@divisor:
   874                           	callstack 0
   875   00000E                     memset@c:
   876                           	callstack 0
   877   00000E                     fputc@fp:
   878                           	callstack 0
   879                           
   880                           ; 2 bytes @ 0xD
   881   00000E                     	ds	1
   882   00000F                     ??_gpio_pin_write_logic:
   883   00000F                     ADC_Init@_adc:
   884                           	callstack 0
   885   00000F                     ADC_SelectChannel@_adc:
   886                           	callstack 0
   887                           
   888                           ; 2 bytes @ 0xE
   889   00000F                     	ds	1
   890   000010                     ??_fputc:
   891   000010                     ??_ADC_GetConversionResult:
   892   000010                     ??___xxtofl:
   893   000010                     ___awdiv@counter:
   894                           	callstack 0
   895   000010                     ___awmod@counter:
   896                           	callstack 0
   897   000010                     ___lwdiv@quotient:
   898                           	callstack 0
   899   000010                     memset@n:
   900                           	callstack 0
   901                           
   902                           ; 2 bytes @ 0xF
   903   000010                     	ds	1
   904   000011                     ??_ADC_Init:
   905   000011                     ADC_SelectChannel@channel:
   906                           	callstack 0
   907   000011                     ___awdiv@sign:
   908                           	callstack 0
   909   000011                     ___awmod@sign:
   910                           	callstack 0
   911                           
   912                           ; 1 bytes @ 0x10
   913   000011                     	ds	1
   914   000012                     ??_memset:
   915   000012                     ??_ADC_SelectChannel:
   916   000012                     ?_abs:
   917                           	callstack 0
   918   000012                     ___lwdiv@counter:
   919                           	callstack 0
   920   000012                     ___awdiv@quotient:
   921                           	callstack 0
   922   000012                     abs@a:
   923                           	callstack 0
   924                           
   925                           ; 2 bytes @ 0x11
   926   000012                     	ds	1
   927   000013                     ADC_GetConversion_Blocking@_adc:
   928                           	callstack 0
   929                           
   930                           ; 2 bytes @ 0x12
   931   000013                     	ds	1
   932   000014                     ??_abs:
   933   000014                     ___xxtofl@sign:
   934                           	callstack 0
   935   000014                     memset@k:
   936                           	callstack 0
   937                           
   938                           ; 2 bytes @ 0x13
   939   000014                     	ds	1
   940   000015                     ADC_GetConversion_Blocking@channel:
   941                           	callstack 0
   942   000015                     ___xxtofl@exp:
   943                           	callstack 0
   944   000015                     lcd_8bit_send_enable_signal@lcd:
   945                           	callstack 0
   946   000015                     dc_motor_move_right@_motor:
   947                           	callstack 0
   948   000015                     dc_motor_stop@_motor:
   949                           	callstack 0
   950   000015                     gpio_pin_intialize@_pin_config:
   951                           	callstack 0
   952   000015                     fputs@s:
   953                           	callstack 0
   954                           
   955                           ; 2 bytes @ 0x14
   956   000015                     	ds	1
   957   000016                     ADC_GetConversion_Blocking@conversion_result:
   958                           	callstack 0
   959   000016                     memset@s:
   960                           	callstack 0
   961   000016                     ___xxtofl@arg:
   962                           	callstack 0
   963                           
   964                           ; 4 bytes @ 0x15
   965   000016                     	ds	1
   966   000017                     ??_gpio_pin_intialize:
   967   000017                     lcd_8bit_send_enable_signal@ret:
   968                           	callstack 0
   969   000017                     fputs@fp:
   970                           	callstack 0
   971                           
   972                           ; 2 bytes @ 0x16
   973   000017                     	ds	1
   974   000018                     ADC_GetConversion_Blocking@ret:
   975                           	callstack 0
   976   000018                     gpio_pin_intialize@ret:
   977                           	callstack 0
   978   000018                     lcd_8bit_send_command@lcd:
   979                           	callstack 0
   980   000018                     lcd_8bit_send_char_data@lcd:
   981                           	callstack 0
   982                           
   983                           ; 2 bytes @ 0x17
   984   000018                     	ds	1
   985   000019                     fputs@c:
   986                           	callstack 0
   987   000019                     dc_motor_initialize@_motor:
   988                           	callstack 0
   989                           
   990                           ; 2 bytes @ 0x18
   991   000019                     	ds	1
   992   00001A                     ?___fldiv:
   993                           	callstack 0
   994   00001A                     ?___flmul:
   995                           	callstack 0
   996   00001A                     lcd_8bit_send_command@command:
   997                           	callstack 0
   998   00001A                     lcd_8bit_send_char_data@data:
   999                           	callstack 0
  1000   00001A                     fputs@i:
  1001                           	callstack 0
  1002   00001A                     ___fldiv@b:
  1003                           	callstack 0
  1004   00001A                     ___flmul@b:
  1005                           	callstack 0
  1006                           
  1007                           ; 4 bytes @ 0x19
  1008   00001A                     	ds	1
  1009   00001B                     ??_lcd_8bit_send_command:
  1010   00001B                     ??_lcd_8bit_send_char_data:
  1011   00001B                     
  1012                           ; 1 bytes @ 0x1A
  1013   00001B                     	ds	1
  1014   00001C                     pad@fp:
  1015                           	callstack 0
  1016                           
  1017                           ; 2 bytes @ 0x1B
  1018   00001C                     	ds	2
  1019   00001E                     pad@buf:
  1020                           	callstack 0
  1021   00001E                     ___fldiv@a:
  1022                           	callstack 0
  1023   00001E                     ___flmul@a:
  1024                           	callstack 0
  1025                           
  1026                           ; 4 bytes @ 0x1D
  1027   00001E                     	ds	1
  1028   00001F                     lcd_8bit_send_command@ret:
  1029                           	callstack 0
  1030   00001F                     lcd_8bit_send_char_data@ret:
  1031                           	callstack 0
  1032                           
  1033                           ; 1 bytes @ 0x1E
  1034   00001F                     	ds	1
  1035   000020                     lcd_8bit_send_command@l_pins_counter:
  1036                           	callstack 0
  1037   000020                     lcd_8bit_send_char_data@l_pins_counter:
  1038                           	callstack 0
  1039   000020                     pad@p:
  1040                           	callstack 0
  1041                           
  1042                           ; 2 bytes @ 0x1F
  1043   000020                     	ds	1
  1044   000021                     lcd_8bit_initialize@lcd:
  1045                           	callstack 0
  1046   000021                     lcd_8bit_set_cursor@lcd:
  1047                           	callstack 0
  1048                           
  1049                           ; 2 bytes @ 0x20
  1050   000021                     	ds	1
  1051   000022                     ??___fldiv:
  1052   000022                     ??___flmul:
  1053   000022                     ??_pad:
  1054                           
  1055                           ; 1 bytes @ 0x21
  1056   000022                     	ds	1
  1057   000023                     ??_lcd_8bit_initialize:
  1058   000023                     lcd_8bit_set_cursor@row:
  1059                           	callstack 0
  1060   000023                     pad@i:
  1061                           	callstack 0
  1062                           
  1063                           ; 2 bytes @ 0x22
  1064   000023                     	ds	1
  1065   000024                     lcd_8bit_set_cursor@coulmn:
  1066                           	callstack 0
  1067                           
  1068                           ; 1 bytes @ 0x23
  1069   000024                     	ds	1
  1070   000025                     ??_lcd_8bit_set_cursor:
  1071   000025                     lcd_8bit_initialize@l_data_pins_counter:
  1072                           	callstack 0
  1073   000025                     pad@w:
  1074                           	callstack 0
  1075                           
  1076                           ; 2 bytes @ 0x24
  1077   000025                     	ds	1
  1078   000026                     lcd_8bit_initialize@ret:
  1079                           	callstack 0
  1080   000026                     ___flmul@sign:
  1081                           	callstack 0
  1082   000026                     ___fldiv@rem:
  1083                           	callstack 0
  1084                           
  1085                           ; 4 bytes @ 0x25
  1086   000026                     	ds	1
  1087   000027                     lcd_8bit_send_string_pos@lcd:
  1088                           	callstack 0
  1089   000027                     dtoa@fp:
  1090                           	callstack 0
  1091   000027                     ___flmul@grs:
  1092                           	callstack 0
  1093                           
  1094                           ; 4 bytes @ 0x26
  1095   000027                     	ds	2
  1096   000029                     lcd_8bit_send_string_pos@row:
  1097                           	callstack 0
  1098   000029                     dtoa@d:
  1099                           	callstack 0
  1100                           
  1101                           ; 2 bytes @ 0x28
  1102   000029                     	ds	1
  1103   00002A                     lcd_8bit_send_string_pos@column:
  1104                           	callstack 0
  1105   00002A                     ___fldiv@sign:
  1106                           	callstack 0
  1107                           
  1108                           ; 1 bytes @ 0x29
  1109   00002A                     	ds	1
  1110   00002B                     ___flmul@aexp:
  1111                           	callstack 0
  1112   00002B                     lcd_8bit_send_string_pos@str:
  1113                           	callstack 0
  1114   00002B                     ___fldiv@new_exp:
  1115                           	callstack 0
  1116   00002B                     _dtoa$5246:
  1117                           	callstack 0
  1118                           
  1119                           ; 2 bytes @ 0x2A
  1120   00002B                     	ds	1
  1121   00002C                     ___flmul@bexp:
  1122                           	callstack 0
  1123                           
  1124                           ; 1 bytes @ 0x2B
  1125   00002C                     	ds	1
  1126   00002D                     lcd_8bit_send_string_pos@ret:
  1127                           	callstack 0
  1128   00002D                     dtoa@p:
  1129                           	callstack 0
  1130   00002D                     ___fldiv@grs:
  1131                           	callstack 0
  1132   00002D                     ___flmul@prod:
  1133                           	callstack 0
  1134                           
  1135                           ; 4 bytes @ 0x2C
  1136   00002D                     	ds	2
  1137   00002F                     dtoa@w:
  1138                           	callstack 0
  1139                           
  1140                           ; 2 bytes @ 0x2E
  1141   00002F                     	ds	2
  1142   000031                     ___fldiv@bexp:
  1143                           	callstack 0
  1144   000031                     dtoa@s:
  1145                           	callstack 0
  1146   000031                     ___flmul@temp:
  1147                           	callstack 0
  1148                           
  1149                           ; 2 bytes @ 0x30
  1150   000031                     	ds	1
  1151   000032                     ___fldiv@aexp:
  1152                           	callstack 0
  1153   000032                     dtoa@i:
  1154                           	callstack 0
  1155                           
  1156                           ; 2 bytes @ 0x31
  1157   000032                     	ds	1
  1158   000033                     ?___fladd:
  1159                           	callstack 0
  1160   000033                     ___fladd@b:
  1161                           	callstack 0
  1162                           
  1163                           ; 4 bytes @ 0x32
  1164   000033                     	ds	1
  1165   000034                     vfpfcnvrt@fp:
  1166                           	callstack 0
  1167                           
  1168                           ; 2 bytes @ 0x33
  1169   000034                     	ds	2
  1170   000036                     vfpfcnvrt@fmt:
  1171                           	callstack 0
  1172                           
  1173                           ; 2 bytes @ 0x35
  1174   000036                     	ds	1
  1175   000037                     ___fladd@a:
  1176                           	callstack 0
  1177                           
  1178                           ; 4 bytes @ 0x36
  1179   000037                     	ds	1
  1180   000038                     vfpfcnvrt@ap:
  1181                           	callstack 0
  1182                           
  1183                           ; 2 bytes @ 0x37
  1184   000038                     	ds	2
  1185   00003A                     ??_vfpfcnvrt:
  1186                           
  1187                           ; 1 bytes @ 0x39
  1188   00003A                     	ds	1
  1189   00003B                     ??___fladd:
  1190                           
  1191                           ; 1 bytes @ 0x3A
  1192   00003B                     	ds	1
  1193   00003C                     vfpfcnvrt@convarg:
  1194                           	callstack 0
  1195                           
  1196                           ; 4 bytes @ 0x3B
  1197   00003C                     	ds	3
  1198   00003F                     ___fladd@signs:
  1199                           	callstack 0
  1200                           
  1201                           ; 1 bytes @ 0x3E
  1202   00003F                     	ds	1
  1203   000040                     ___fladd@aexp:
  1204                           	callstack 0
  1205   000040                     vfpfcnvrt@cp:
  1206                           	callstack 0
  1207                           
  1208                           ; 2 bytes @ 0x3F
  1209   000040                     	ds	1
  1210   000041                     ___fladd@bexp:
  1211                           	callstack 0
  1212                           
  1213                           ; 1 bytes @ 0x40
  1214   000041                     	ds	1
  1215   000042                     ?_vfprintf:
  1216                           	callstack 0
  1217   000042                     ___fladd@grs:
  1218                           	callstack 0
  1219   000042                     vfprintf@fp:
  1220                           	callstack 0
  1221                           
  1222                           ; 2 bytes @ 0x41
  1223   000042                     	ds	1
  1224   000043                     ?___fltol:
  1225                           	callstack 0
  1226   000043                     ___fltol@f1:
  1227                           	callstack 0
  1228                           
  1229                           ; 4 bytes @ 0x42
  1230   000043                     	ds	1
  1231   000044                     vfprintf@fmt:
  1232                           	callstack 0
  1233                           
  1234                           ; 2 bytes @ 0x43
  1235   000044                     	ds	2
  1236   000046                     vfprintf@ap:
  1237                           	callstack 0
  1238                           
  1239                           ; 2 bytes @ 0x45
  1240   000046                     	ds	1
  1241   000047                     ??___fltol:
  1242                           
  1243                           ; 1 bytes @ 0x46
  1244   000047                     	ds	1
  1245   000048                     vfprintf@cfmt:
  1246                           	callstack 0
  1247                           
  1248                           ; 2 bytes @ 0x47
  1249   000048                     	ds	2
  1250   00004A                     ?_sprintf:
  1251                           	callstack 0
  1252   00004A                     sprintf@s:
  1253                           	callstack 0
  1254                           
  1255                           ; 2 bytes @ 0x49
  1256   00004A                     	ds	1
  1257   00004B                     ___fltol@sign1:
  1258                           	callstack 0
  1259                           
  1260                           ; 1 bytes @ 0x4A
  1261   00004B                     	ds	1
  1262   00004C                     ___fltol@exp1:
  1263                           	callstack 0
  1264   00004C                     sprintf@fmt:
  1265                           	callstack 0
  1266                           
  1267                           ; 2 bytes @ 0x4B
  1268   00004C                     	ds	1
  1269   00004D                     MSSP_I2C_Master_Mode_Clock_CFG@i2c_obj:
  1270                           	callstack 0
  1271   00004D                     EUSART_Baud_Rate_Calculation@_eusart:
  1272                           	callstack 0
  1273                           
  1274                           ; 2 bytes @ 0x4C
  1275   00004D                     	ds	2
  1276   00004F                     ??_MSSP_I2C_Master_Mode_Clock_CFG:
  1277   00004F                     ??_EUSART_Baud_Rate_Calculation:
  1278                           
  1279                           ; 1 bytes @ 0x4E
  1280   00004F                     	ds	1
  1281   000050                     sprintf@ap:
  1282                           	callstack 0
  1283                           
  1284                           ; 2 bytes @ 0x4F
  1285   000050                     	ds	1
  1286   000051                     MSSP_I2C_Init@i2c_obj:
  1287                           	callstack 0
  1288   000051                     EUSART_Baud_Rate_Calculation@Baud_Rate_Temp:
  1289                           	callstack 0
  1290                           
  1291                           ; 4 bytes @ 0x50
  1292   000051                     	ds	1
  1293   000052                     sprintf@f:
  1294                           	callstack 0
  1295                           
  1296                           ; 12 bytes @ 0x51
  1297   000052                     	ds	1
  1298   000053                     ??_MSSP_I2C_Init:
  1299                           
  1300                           ; 1 bytes @ 0x52
  1301   000053                     	ds	1
  1302   000054                     
  1303                           ; 1 bytes @ 0x53
  1304   000054                     	ds	1
  1305   000055                     _EUSART_Baud_Rate_Calculation$5785:
  1306                           	callstack 0
  1307                           
  1308                           ; 4 bytes @ 0x54
  1309   000055                     	ds	4
  1310   000059                     EUSART_ASYNC_Init@_eusart:
  1311                           	callstack 0
  1312                           
  1313                           ; 2 bytes @ 0x58
  1314   000059                     	ds	2
  1315   00005B                     
  1316                           ; 1 bytes @ 0x5A
  1317   00005B                     	ds	3
  1318   00005E                     ??_main:
  1319                           
  1320                           ; 1 bytes @ 0x5D
  1321   00005E                     	ds	1
  1322                           
  1323 ;;
  1324 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1325 ;;
  1326 ;; *************** function _main *****************
  1327 ;; Defined at:
  1328 ;;		line 63 in file "application.c"
  1329 ;; Parameters:    Size  Location     Type
  1330 ;;		None
  1331 ;; Auto vars:     Size  Location     Type
  1332 ;;		None
  1333 ;; Return value:  Size  Location     Type
  1334 ;;                  2  1811[None  ] int 
  1335 ;; Registers used:
  1336 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1337 ;; Tracked objects:
  1338 ;;		On entry : 0/0
  1339 ;;		On exit  : 0/0
  1340 ;;		Unchanged: 0/0
  1341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1344 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1345 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1346 ;;Total ram usage:        1 bytes
  1347 ;; Hardware stack levels required when called: 13
  1348 ;; This function calls:
  1349 ;;		_ADC_GetConversion_Blocking
  1350 ;;		_I2C_Obj_CFG
  1351 ;;		___flmul
  1352 ;;		___fltol
  1353 ;;		___lwdiv
  1354 ;;		___xxtofl
  1355 ;;		_application_intialize
  1356 ;;		_convert_uint16_to_string
  1357 ;;		_dc_motor_move_right
  1358 ;;		_dc_motor_stop
  1359 ;;		_lcd_8bit_send_command
  1360 ;;		_lcd_8bit_send_string_pos
  1361 ;; This function is called by:
  1362 ;;		Startup code after reset
  1363 ;; This function uses a non-reentrant model
  1364 ;;
  1365                           
  1366                           	psect	text0
  1367   00105E                     __ptext0:
  1368                           	callstack 0
  1369   00105E                     _main:
  1370                           	callstack 18
  1371   00105E                     
  1372                           ;application.c: 66:     application_intialize();
  1373   00105E  EC1A  F025         	call	_application_intialize	;wreg free
  1374   001062                     
  1375                           ;application.c: 67:     I2C_Obj_CFG();
  1376   001062  EC30  F023         	call	_I2C_Obj_CFG	;wreg free
  1377   001066                     l10110:
  1378                           
  1379                           ;application.c: 77:       ret=ADC_GetConversion_Blocking(&adc_1,ADC_CHANNEL_AN0,&adc_lm3
      +                          5_1) ;
  1380   001066  0E8A               	movlw	low _adc_1
  1381   001068  6E13               	movwf	ADC_GetConversion_Blocking@_adc^0,c
  1382   00106A  0E01               	movlw	high _adc_1
  1383   00106C  6E14               	movwf	(ADC_GetConversion_Blocking@_adc+1)^0,c
  1384   00106E  0E00               	movlw	0
  1385   001070  6E15               	movwf	ADC_GetConversion_Blocking@channel^0,c
  1386   001072  0E6B               	movlw	low _adc_lm35_1
  1387   001074  6E16               	movwf	ADC_GetConversion_Blocking@conversion_result^0,c
  1388   001076  0E00               	movlw	high _adc_lm35_1
  1389   001078  6E17               	movwf	(ADC_GetConversion_Blocking@conversion_result+1)^0,c
  1390   00107A  EC86  F021         	call	_ADC_GetConversion_Blocking	;wreg free
  1391   00107E  0100               	movlb	0	; () banked
  1392   001080  6FEE               	movwf	_ret& (0+255),b
  1393   001082                     
  1394                           ; BSR set to: 0
  1395                           ;application.c: 78:        adc_lm35_celsius=adc_lm35_1* 4.88f;
  1396   001082  0EF6               	movlw	246
  1397   001084  6E1E               	movwf	___flmul@a^0,c
  1398   001086  0E28               	movlw	40
  1399   001088  6E1F               	movwf	(___flmul@a+1)^0,c
  1400   00108A  0E9C               	movlw	156
  1401   00108C  6E20               	movwf	(___flmul@a+2)^0,c
  1402   00108E  0E40               	movlw	64
  1403   001090  6E21               	movwf	(___flmul@a+3)^0,c
  1404   001092  C06B  F00C         	movff	_adc_lm35_1,___xxtofl@val
  1405   001096  C06C  F00D         	movff	_adc_lm35_1+1,___xxtofl@val+1
  1406   00109A  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1407   00109C  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1408   00109E  0E00               	movlw	0
  1409   0010A0  EC85  F015         	call	___xxtofl
  1410   0010A4  C00C  F01A         	movff	?___xxtofl,___flmul@b
  1411   0010A8  C00D  F01B         	movff	?___xxtofl+1,___flmul@b+1
  1412   0010AC  C00E  F01C         	movff	?___xxtofl+2,___flmul@b+2
  1413   0010B0  C00F  F01D         	movff	?___xxtofl+3,___flmul@b+3
  1414   0010B4  ECA0  F00F         	call	___flmul	;wreg free
  1415   0010B8  C01A  F043         	movff	?___flmul,___fltol@f1
  1416   0010BC  C01B  F044         	movff	?___flmul+1,___fltol@f1+1
  1417   0010C0  C01C  F045         	movff	?___flmul+2,___fltol@f1+2
  1418   0010C4  C01D  F046         	movff	?___flmul+3,___fltol@f1+3
  1419   0010C8  ECEE  F01A         	call	___fltol	;wreg free
  1420   0010CC  C043  F071         	movff	?___fltol,_adc_lm35_celsius
  1421   0010D0  C044  F072         	movff	?___fltol+1,_adc_lm35_celsius+1
  1422   0010D4                     
  1423                           ;application.c: 79:        adc_lm35_celsius/=10;
  1424   0010D4  C071  F00C         	movff	_adc_lm35_celsius,___lwdiv@dividend
  1425   0010D8  C072  F00D         	movff	_adc_lm35_celsius+1,___lwdiv@dividend+1
  1426   0010DC  0E00               	movlw	0
  1427   0010DE  6E0F               	movwf	(___lwdiv@divisor+1)^0,c
  1428   0010E0  0E0A               	movlw	10
  1429   0010E2  6E0E               	movwf	___lwdiv@divisor^0,c
  1430   0010E4  EC4C  F021         	call	___lwdiv	;wreg free
  1431   0010E8  C00C  F071         	movff	?___lwdiv,_adc_lm35_celsius
  1432   0010EC  C00D  F072         	movff	?___lwdiv+1,_adc_lm35_celsius+1
  1433   0010F0                     
  1434                           ;application.c: 80:         ret=convert_uint16_to_string( adc_lm35_celsius,adc_lm35_1_tx
      +                          t);
  1435   0010F0  C071  F191         	movff	_adc_lm35_celsius,convert_uint16_to_string@value
  1436   0010F4  C072  F192         	movff	_adc_lm35_celsius+1,convert_uint16_to_string@value+1
  1437   0010F8  0EE7               	movlw	low _adc_lm35_1_txt
  1438   0010FA  0101               	movlb	1	; () banked
  1439   0010FC  6F93               	movwf	convert_uint16_to_string@str& (0+255),b
  1440   0010FE  0E00               	movlw	high _adc_lm35_1_txt
  1441   001100  6F94               	movwf	(convert_uint16_to_string@str+1)& (0+255),b
  1442   001102  ECEC  F01D         	call	_convert_uint16_to_string	;wreg free
  1443   001106  0100               	movlb	0	; () banked
  1444   001108  6FEE               	movwf	_ret& (0+255),b
  1445   00110A                     
  1446                           ; BSR set to: 0
  1447                           ;application.c: 81:        ret=lcd_8bit_send_string_pos(&lcd_2,1,1,"Temperature : ");
  1448   00110A  0EEF               	movlw	low _lcd_2
  1449   00110C  6E27               	movwf	lcd_8bit_send_string_pos@lcd^0,c
  1450   00110E  0E00               	movlw	high _lcd_2
  1451   001110  6E28               	movwf	(lcd_8bit_send_string_pos@lcd+1)^0,c
  1452   001112  0E01               	movlw	1
  1453   001114  6E29               	movwf	lcd_8bit_send_string_pos@row^0,c
  1454   001116  0E01               	movlw	1
  1455   001118  6E2A               	movwf	lcd_8bit_send_string_pos@column^0,c
  1456   00111A  0E27               	movlw	low STR_6
  1457   00111C  6E2B               	movwf	lcd_8bit_send_string_pos@str^0,c
  1458   00111E  0E10               	movlw	high STR_6
  1459   001120  6E2C               	movwf	(lcd_8bit_send_string_pos@str+1)^0,c
  1460   001122  ECA8  F01E         	call	_lcd_8bit_send_string_pos	;wreg free
  1461   001126  0100               	movlb	0	; () banked
  1462   001128  6FEE               	movwf	_ret& (0+255),b
  1463   00112A                     
  1464                           ; BSR set to: 0
  1465                           ;application.c: 82:         ret=lcd_8bit_send_string_pos(&lcd_2,1,14,adc_lm35_1_txt);
  1466   00112A  0EEF               	movlw	low _lcd_2
  1467   00112C  6E27               	movwf	lcd_8bit_send_string_pos@lcd^0,c
  1468   00112E  0E00               	movlw	high _lcd_2
  1469   001130  6E28               	movwf	(lcd_8bit_send_string_pos@lcd+1)^0,c
  1470   001132  0E01               	movlw	1
  1471   001134  6E29               	movwf	lcd_8bit_send_string_pos@row^0,c
  1472   001136  0E0E               	movlw	14
  1473   001138  6E2A               	movwf	lcd_8bit_send_string_pos@column^0,c
  1474   00113A  0EE7               	movlw	low _adc_lm35_1_txt
  1475   00113C  6E2B               	movwf	lcd_8bit_send_string_pos@str^0,c
  1476   00113E  0E00               	movlw	high _adc_lm35_1_txt
  1477   001140  6E2C               	movwf	(lcd_8bit_send_string_pos@str+1)^0,c
  1478   001142  ECA8  F01E         	call	_lcd_8bit_send_string_pos	;wreg free
  1479   001146  0100               	movlb	0	; () banked
  1480   001148  6FEE               	movwf	_ret& (0+255),b
  1481   00114A                     
  1482                           ; BSR set to: 0
  1483                           ;application.c: 83:         _delay((unsigned long)((50)*(4000000UL/4000.0)));
  1484   00114A  0E41               	movlw	65
  1485   00114C  6E5E               	movwf	??_main^0,c
  1486   00114E  0EEE               	movlw	238
  1487   001150                     u9477:
  1488   001150  2EE8               	decfsz	wreg,f,c
  1489   001152  D7FE               	bra	u9477
  1490   001154  2E5E               	decfsz	??_main^0,f,c
  1491   001156  D7FC               	bra	u9477
  1492   001158  D000               	nop2	
  1493   00115A                     
  1494                           ;application.c: 84:         if ( adc_lm35_celsius >30){
  1495   00115A  5072               	movf	(_adc_lm35_celsius+1)^0,w,c
  1496   00115C  E109               	bnz	u9420
  1497   00115E  0E1F               	movlw	31
  1498   001160  5C71               	subwf	_adc_lm35_celsius^0,w,c
  1499   001162  A0D8               	btfss	status,0,c
  1500   001164  EFB6  F008         	goto	u9421
  1501   001168  EFB8  F008         	goto	u9420
  1502   00116C                     u9421:
  1503   00116C  EF64  F009         	goto	l10150
  1504   001170                     u9420:
  1505   001170                     
  1506                           ;application.c: 85:             check2=0;
  1507   001170  0E00               	movlw	0
  1508   001172  6E60               	movwf	_check2^0,c	;volatile
  1509                           
  1510                           ;application.c: 86:             check3=0;
  1511   001174  0E00               	movlw	0
  1512   001176  6E5F               	movwf	_check3^0,c	;volatile
  1513                           
  1514                           ;application.c: 87:             if(check1==0){
  1515   001178  5061               	movf	_check1^0,w,c	;volatile
  1516   00117A  A4D8               	btfss	status,2,c
  1517   00117C  EFC2  F008         	goto	u9431
  1518   001180  EFC4  F008         	goto	u9430
  1519   001184                     u9431:
  1520   001184  EF42  F009         	goto	l10144
  1521   001188                     u9430:
  1522   001188                     
  1523                           ;application.c: 88:              ret=lcd_8bit_send_command (&lcd_2,0x01);
  1524   001188  0EEF               	movlw	low _lcd_2
  1525   00118A  6E18               	movwf	lcd_8bit_send_command@lcd^0,c
  1526   00118C  0E00               	movlw	high _lcd_2
  1527   00118E  6E19               	movwf	(lcd_8bit_send_command@lcd+1)^0,c
  1528   001190  0E01               	movlw	1
  1529   001192  6E1A               	movwf	lcd_8bit_send_command@command^0,c
  1530   001194  EC3D  F020         	call	_lcd_8bit_send_command	;wreg free
  1531   001198  0100               	movlb	0	; () banked
  1532   00119A  6FEE               	movwf	_ret& (0+255),b
  1533   00119C                     
  1534                           ; BSR set to: 0
  1535                           ;application.c: 89:              ret=lcd_8bit_send_string_pos(&lcd_2,1,1,"Temperature : 
      +                          ");
  1536   00119C  0EEF               	movlw	low _lcd_2
  1537   00119E  6E27               	movwf	lcd_8bit_send_string_pos@lcd^0,c
  1538   0011A0  0E00               	movlw	high _lcd_2
  1539   0011A2  6E28               	movwf	(lcd_8bit_send_string_pos@lcd+1)^0,c
  1540   0011A4  0E01               	movlw	1
  1541   0011A6  6E29               	movwf	lcd_8bit_send_string_pos@row^0,c
  1542   0011A8  0E01               	movlw	1
  1543   0011AA  6E2A               	movwf	lcd_8bit_send_string_pos@column^0,c
  1544   0011AC  0E27               	movlw	low STR_6
  1545   0011AE  6E2B               	movwf	lcd_8bit_send_string_pos@str^0,c
  1546   0011B0  0E10               	movlw	high STR_6
  1547   0011B2  6E2C               	movwf	(lcd_8bit_send_string_pos@str+1)^0,c
  1548   0011B4  ECA8  F01E         	call	_lcd_8bit_send_string_pos	;wreg free
  1549   0011B8  0100               	movlb	0	; () banked
  1550   0011BA  6FEE               	movwf	_ret& (0+255),b
  1551   0011BC                     
  1552                           ; BSR set to: 0
  1553                           ;application.c: 90:              ret=ADC_GetConversion_Blocking(&adc_1,ADC_CHANNEL_AN0,&
      +                          adc_lm35_1) ;
  1554   0011BC  0E8A               	movlw	low _adc_1
  1555   0011BE  6E13               	movwf	ADC_GetConversion_Blocking@_adc^0,c
  1556   0011C0  0E01               	movlw	high _adc_1
  1557   0011C2  6E14               	movwf	(ADC_GetConversion_Blocking@_adc+1)^0,c
  1558   0011C4  0E00               	movlw	0
  1559   0011C6  6E15               	movwf	ADC_GetConversion_Blocking@channel^0,c
  1560   0011C8  0E6B               	movlw	low _adc_lm35_1
  1561   0011CA  6E16               	movwf	ADC_GetConversion_Blocking@conversion_result^0,c
  1562   0011CC  0E00               	movlw	high _adc_lm35_1
  1563   0011CE  6E17               	movwf	(ADC_GetConversion_Blocking@conversion_result+1)^0,c
  1564   0011D0  EC86  F021         	call	_ADC_GetConversion_Blocking	;wreg free
  1565   0011D4  0100               	movlb	0	; () banked
  1566   0011D6  6FEE               	movwf	_ret& (0+255),b
  1567   0011D8                     
  1568                           ; BSR set to: 0
  1569                           ;application.c: 91:              adc_lm35_celsius=adc_lm35_1*4.88f;
  1570   0011D8  0EF6               	movlw	246
  1571   0011DA  6E1E               	movwf	___flmul@a^0,c
  1572   0011DC  0E28               	movlw	40
  1573   0011DE  6E1F               	movwf	(___flmul@a+1)^0,c
  1574   0011E0  0E9C               	movlw	156
  1575   0011E2  6E20               	movwf	(___flmul@a+2)^0,c
  1576   0011E4  0E40               	movlw	64
  1577   0011E6  6E21               	movwf	(___flmul@a+3)^0,c
  1578   0011E8  C06B  F00C         	movff	_adc_lm35_1,___xxtofl@val
  1579   0011EC  C06C  F00D         	movff	_adc_lm35_1+1,___xxtofl@val+1
  1580   0011F0  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1581   0011F2  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1582   0011F4  0E00               	movlw	0
  1583   0011F6  EC85  F015         	call	___xxtofl
  1584   0011FA  C00C  F01A         	movff	?___xxtofl,___flmul@b
  1585   0011FE  C00D  F01B         	movff	?___xxtofl+1,___flmul@b+1
  1586   001202  C00E  F01C         	movff	?___xxtofl+2,___flmul@b+2
  1587   001206  C00F  F01D         	movff	?___xxtofl+3,___flmul@b+3
  1588   00120A  ECA0  F00F         	call	___flmul	;wreg free
  1589   00120E  C01A  F043         	movff	?___flmul,___fltol@f1
  1590   001212  C01B  F044         	movff	?___flmul+1,___fltol@f1+1
  1591   001216  C01C  F045         	movff	?___flmul+2,___fltol@f1+2
  1592   00121A  C01D  F046         	movff	?___flmul+3,___fltol@f1+3
  1593   00121E  ECEE  F01A         	call	___fltol	;wreg free
  1594   001222  C043  F071         	movff	?___fltol,_adc_lm35_celsius
  1595   001226  C044  F072         	movff	?___fltol+1,_adc_lm35_celsius+1
  1596   00122A                     
  1597                           ;application.c: 92:              adc_lm35_celsius/=10;
  1598   00122A  C071  F00C         	movff	_adc_lm35_celsius,___lwdiv@dividend
  1599   00122E  C072  F00D         	movff	_adc_lm35_celsius+1,___lwdiv@dividend+1
  1600   001232  0E00               	movlw	0
  1601   001234  6E0F               	movwf	(___lwdiv@divisor+1)^0,c
  1602   001236  0E0A               	movlw	10
  1603   001238  6E0E               	movwf	___lwdiv@divisor^0,c
  1604   00123A  EC4C  F021         	call	___lwdiv	;wreg free
  1605   00123E  C00C  F071         	movff	?___lwdiv,_adc_lm35_celsius
  1606   001242  C00D  F072         	movff	?___lwdiv+1,_adc_lm35_celsius+1
  1607   001246                     
  1608                           ;application.c: 93:              ret=convert_uint16_to_string( adc_lm35_celsius,adc_lm35
      +                          _1_txt);
  1609   001246  C071  F191         	movff	_adc_lm35_celsius,convert_uint16_to_string@value
  1610   00124A  C072  F192         	movff	_adc_lm35_celsius+1,convert_uint16_to_string@value+1
  1611   00124E  0EE7               	movlw	low _adc_lm35_1_txt
  1612   001250  0101               	movlb	1	; () banked
  1613   001252  6F93               	movwf	convert_uint16_to_string@str& (0+255),b
  1614   001254  0E00               	movlw	high _adc_lm35_1_txt
  1615   001256  6F94               	movwf	(convert_uint16_to_string@str+1)& (0+255),b
  1616   001258  ECEC  F01D         	call	_convert_uint16_to_string	;wreg free
  1617   00125C  0100               	movlb	0	; () banked
  1618   00125E  6FEE               	movwf	_ret& (0+255),b
  1619   001260                     
  1620                           ; BSR set to: 0
  1621                           ;application.c: 94:              ret=lcd_8bit_send_string_pos(&lcd_2,1,14,adc_lm35_1_txt
      +                          );
  1622   001260  0EEF               	movlw	low _lcd_2
  1623   001262  6E27               	movwf	lcd_8bit_send_string_pos@lcd^0,c
  1624   001264  0E00               	movlw	high _lcd_2
  1625   001266  6E28               	movwf	(lcd_8bit_send_string_pos@lcd+1)^0,c
  1626   001268  0E01               	movlw	1
  1627   00126A  6E29               	movwf	lcd_8bit_send_string_pos@row^0,c
  1628   00126C  0E0E               	movlw	14
  1629   00126E  6E2A               	movwf	lcd_8bit_send_string_pos@column^0,c
  1630   001270  0EE7               	movlw	low _adc_lm35_1_txt
  1631   001272  6E2B               	movwf	lcd_8bit_send_string_pos@str^0,c
  1632   001274  0E00               	movlw	high _adc_lm35_1_txt
  1633   001276  6E2C               	movwf	(lcd_8bit_send_string_pos@str+1)^0,c
  1634   001278  ECA8  F01E         	call	_lcd_8bit_send_string_pos	;wreg free
  1635   00127C  0100               	movlb	0	; () banked
  1636   00127E  6FEE               	movwf	_ret& (0+255),b
  1637   001280                     
  1638                           ; BSR set to: 0
  1639                           ;application.c: 95:              check1=1;
  1640   001280  0E01               	movlw	1
  1641   001282  6E61               	movwf	_check1^0,c	;volatile
  1642   001284                     l10144:
  1643                           
  1644                           ;application.c: 97:             ret=lcd_8bit_send_string_pos(&lcd_2,2,1,"Fan ON ");
  1645   001284  0EEF               	movlw	low _lcd_2
  1646   001286  6E27               	movwf	lcd_8bit_send_string_pos@lcd^0,c
  1647   001288  0E00               	movlw	high _lcd_2
  1648   00128A  6E28               	movwf	(lcd_8bit_send_string_pos@lcd+1)^0,c
  1649   00128C  0E02               	movlw	2
  1650   00128E  6E29               	movwf	lcd_8bit_send_string_pos@row^0,c
  1651   001290  0E01               	movlw	1
  1652   001292  6E2A               	movwf	lcd_8bit_send_string_pos@column^0,c
  1653   001294  0E41               	movlw	low STR_8
  1654   001296  6E2B               	movwf	lcd_8bit_send_string_pos@str^0,c
  1655   001298  0E10               	movlw	high STR_8
  1656   00129A  6E2C               	movwf	(lcd_8bit_send_string_pos@str+1)^0,c
  1657   00129C  ECA8  F01E         	call	_lcd_8bit_send_string_pos	;wreg free
  1658   0012A0  0100               	movlb	0	; () banked
  1659   0012A2  6FEE               	movwf	_ret& (0+255),b
  1660   0012A4                     
  1661                           ; BSR set to: 0
  1662                           ;application.c: 98:             ret=dc_motor_move_right(&dc_motor1);
  1663   0012A4  0EFB               	movlw	low _dc_motor1
  1664   0012A6  6E15               	movwf	dc_motor_move_right@_motor^0,c
  1665   0012A8  0E00               	movlw	high _dc_motor1
  1666   0012AA  6E16               	movwf	(dc_motor_move_right@_motor+1)^0,c
  1667   0012AC  ECB2  F023         	call	_dc_motor_move_right	;wreg free
  1668   0012B0  0100               	movlb	0	; () banked
  1669   0012B2  6FEE               	movwf	_ret& (0+255),b
  1670   0012B4                     
  1671                           ; BSR set to: 0
  1672                           ;application.c: 99:             ret=dc_motor_stop(&dc_motor2);
  1673   0012B4  0EF9               	movlw	low _dc_motor2
  1674   0012B6  6E15               	movwf	dc_motor_stop@_motor^0,c
  1675   0012B8  0E00               	movlw	high _dc_motor2
  1676   0012BA  6E16               	movwf	(dc_motor_stop@_motor+1)^0,c
  1677   0012BC  EC93  F023         	call	_dc_motor_stop	;wreg free
  1678   0012C0  0100               	movlb	0	; () banked
  1679   0012C2  6FEE               	movwf	_ret& (0+255),b
  1680                           
  1681                           ;application.c: 101:         }
  1682   0012C4  EF33  F008         	goto	l10110
  1683   0012C8                     l10150:
  1684   0012C8  5072               	movf	(_adc_lm35_celsius+1)^0,w,c
  1685   0012CA  E107               	bnz	u9441
  1686   0012CC  0E14               	movlw	20
  1687   0012CE  5C71               	subwf	_adc_lm35_celsius^0,w,c
  1688   0012D0  B0D8               	btfsc	status,0,c
  1689   0012D2  EF6D  F009         	goto	u9441
  1690   0012D6  EF6F  F009         	goto	u9440
  1691   0012DA                     u9441:
  1692   0012DA  EF1B  F00A         	goto	l10176
  1693   0012DE                     u9440:
  1694   0012DE                     
  1695                           ;application.c: 103:             check1=0;
  1696   0012DE  0E00               	movlw	0
  1697   0012E0  6E61               	movwf	_check1^0,c	;volatile
  1698                           
  1699                           ;application.c: 104:             check3=0;
  1700   0012E2  0E00               	movlw	0
  1701   0012E4  6E5F               	movwf	_check3^0,c	;volatile
  1702   0012E6                     
  1703                           ;application.c: 105:              ret=dc_motor_move_right(&dc_motor2);
  1704   0012E6  0EF9               	movlw	low _dc_motor2
  1705   0012E8  6E15               	movwf	dc_motor_move_right@_motor^0,c
  1706   0012EA  0E00               	movlw	high _dc_motor2
  1707   0012EC  6E16               	movwf	(dc_motor_move_right@_motor+1)^0,c
  1708   0012EE  ECB2  F023         	call	_dc_motor_move_right	;wreg free
  1709   0012F2  0100               	movlb	0	; () banked
  1710   0012F4  6FEE               	movwf	_ret& (0+255),b
  1711   0012F6                     
  1712                           ; BSR set to: 0
  1713                           ;application.c: 106:              ret=dc_motor_stop(&dc_motor1);
  1714   0012F6  0EFB               	movlw	low _dc_motor1
  1715   0012F8  6E15               	movwf	dc_motor_stop@_motor^0,c
  1716   0012FA  0E00               	movlw	high _dc_motor1
  1717   0012FC  6E16               	movwf	(dc_motor_stop@_motor+1)^0,c
  1718   0012FE  EC93  F023         	call	_dc_motor_stop	;wreg free
  1719   001302  0100               	movlb	0	; () banked
  1720   001304  6FEE               	movwf	_ret& (0+255),b
  1721                           
  1722                           ;application.c: 107:              if(check2==0){
  1723   001306  5060               	movf	_check2^0,w,c	;volatile
  1724   001308  A4D8               	btfss	status,2,c
  1725   00130A  EF89  F009         	goto	u9451
  1726   00130E  EF8B  F009         	goto	u9450
  1727   001312                     u9451:
  1728   001312  EF09  F00A         	goto	l10174
  1729   001316                     u9450:
  1730   001316                     
  1731                           ; BSR set to: 0
  1732                           ;application.c: 108:              ret=lcd_8bit_send_command (&lcd_2,0x01);
  1733   001316  0EEF               	movlw	low _lcd_2
  1734   001318  6E18               	movwf	lcd_8bit_send_command@lcd^0,c
  1735   00131A  0E00               	movlw	high _lcd_2
  1736   00131C  6E19               	movwf	(lcd_8bit_send_command@lcd+1)^0,c
  1737   00131E  0E01               	movlw	1
  1738   001320  6E1A               	movwf	lcd_8bit_send_command@command^0,c
  1739   001322  EC3D  F020         	call	_lcd_8bit_send_command	;wreg free
  1740   001326  0100               	movlb	0	; () banked
  1741   001328  6FEE               	movwf	_ret& (0+255),b
  1742   00132A                     
  1743                           ; BSR set to: 0
  1744                           ;application.c: 109:              ret=lcd_8bit_send_string_pos(&lcd_2,1,1,"Temperature :
      +                           ");
  1745   00132A  0EEF               	movlw	low _lcd_2
  1746   00132C  6E27               	movwf	lcd_8bit_send_string_pos@lcd^0,c
  1747   00132E  0E00               	movlw	high _lcd_2
  1748   001330  6E28               	movwf	(lcd_8bit_send_string_pos@lcd+1)^0,c
  1749   001332  0E01               	movlw	1
  1750   001334  6E29               	movwf	lcd_8bit_send_string_pos@row^0,c
  1751   001336  0E01               	movlw	1
  1752   001338  6E2A               	movwf	lcd_8bit_send_string_pos@column^0,c
  1753   00133A  0E27               	movlw	low STR_6
  1754   00133C  6E2B               	movwf	lcd_8bit_send_string_pos@str^0,c
  1755   00133E  0E10               	movlw	high STR_6
  1756   001340  6E2C               	movwf	(lcd_8bit_send_string_pos@str+1)^0,c
  1757   001342  ECA8  F01E         	call	_lcd_8bit_send_string_pos	;wreg free
  1758   001346  0100               	movlb	0	; () banked
  1759   001348  6FEE               	movwf	_ret& (0+255),b
  1760   00134A                     
  1761                           ; BSR set to: 0
  1762                           ;application.c: 110:              ret=ADC_GetConversion_Blocking(&adc_1,ADC_CHANNEL_AN0,
      +                          &adc_lm35_1) ;
  1763   00134A  0E8A               	movlw	low _adc_1
  1764   00134C  6E13               	movwf	ADC_GetConversion_Blocking@_adc^0,c
  1765   00134E  0E01               	movlw	high _adc_1
  1766   001350  6E14               	movwf	(ADC_GetConversion_Blocking@_adc+1)^0,c
  1767   001352  0E00               	movlw	0
  1768   001354  6E15               	movwf	ADC_GetConversion_Blocking@channel^0,c
  1769   001356  0E6B               	movlw	low _adc_lm35_1
  1770   001358  6E16               	movwf	ADC_GetConversion_Blocking@conversion_result^0,c
  1771   00135A  0E00               	movlw	high _adc_lm35_1
  1772   00135C  6E17               	movwf	(ADC_GetConversion_Blocking@conversion_result+1)^0,c
  1773   00135E  EC86  F021         	call	_ADC_GetConversion_Blocking	;wreg free
  1774   001362  0100               	movlb	0	; () banked
  1775   001364  6FEE               	movwf	_ret& (0+255),b
  1776   001366                     
  1777                           ; BSR set to: 0
  1778                           ;application.c: 111:              adc_lm35_celsius=adc_lm35_1*4.88f;
  1779   001366  0EF6               	movlw	246
  1780   001368  6E1E               	movwf	___flmul@a^0,c
  1781   00136A  0E28               	movlw	40
  1782   00136C  6E1F               	movwf	(___flmul@a+1)^0,c
  1783   00136E  0E9C               	movlw	156
  1784   001370  6E20               	movwf	(___flmul@a+2)^0,c
  1785   001372  0E40               	movlw	64
  1786   001374  6E21               	movwf	(___flmul@a+3)^0,c
  1787   001376  C06B  F00C         	movff	_adc_lm35_1,___xxtofl@val
  1788   00137A  C06C  F00D         	movff	_adc_lm35_1+1,___xxtofl@val+1
  1789   00137E  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1790   001380  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1791   001382  0E00               	movlw	0
  1792   001384  EC85  F015         	call	___xxtofl
  1793   001388  C00C  F01A         	movff	?___xxtofl,___flmul@b
  1794   00138C  C00D  F01B         	movff	?___xxtofl+1,___flmul@b+1
  1795   001390  C00E  F01C         	movff	?___xxtofl+2,___flmul@b+2
  1796   001394  C00F  F01D         	movff	?___xxtofl+3,___flmul@b+3
  1797   001398  ECA0  F00F         	call	___flmul	;wreg free
  1798   00139C  C01A  F043         	movff	?___flmul,___fltol@f1
  1799   0013A0  C01B  F044         	movff	?___flmul+1,___fltol@f1+1
  1800   0013A4  C01C  F045         	movff	?___flmul+2,___fltol@f1+2
  1801   0013A8  C01D  F046         	movff	?___flmul+3,___fltol@f1+3
  1802   0013AC  ECEE  F01A         	call	___fltol	;wreg free
  1803   0013B0  C043  F071         	movff	?___fltol,_adc_lm35_celsius
  1804   0013B4  C044  F072         	movff	?___fltol+1,_adc_lm35_celsius+1
  1805   0013B8                     
  1806                           ;application.c: 112:              adc_lm35_celsius/=10;
  1807   0013B8  C071  F00C         	movff	_adc_lm35_celsius,___lwdiv@dividend
  1808   0013BC  C072  F00D         	movff	_adc_lm35_celsius+1,___lwdiv@dividend+1
  1809   0013C0  0E00               	movlw	0
  1810   0013C2  6E0F               	movwf	(___lwdiv@divisor+1)^0,c
  1811   0013C4  0E0A               	movlw	10
  1812   0013C6  6E0E               	movwf	___lwdiv@divisor^0,c
  1813   0013C8  EC4C  F021         	call	___lwdiv	;wreg free
  1814   0013CC  C00C  F071         	movff	?___lwdiv,_adc_lm35_celsius
  1815   0013D0  C00D  F072         	movff	?___lwdiv+1,_adc_lm35_celsius+1
  1816   0013D4                     
  1817                           ;application.c: 113:              ret=convert_uint16_to_string( adc_lm35_celsius,adc_lm3
      +                          5_1_txt);
  1818   0013D4  C071  F191         	movff	_adc_lm35_celsius,convert_uint16_to_string@value
  1819   0013D8  C072  F192         	movff	_adc_lm35_celsius+1,convert_uint16_to_string@value+1
  1820   0013DC  0EE7               	movlw	low _adc_lm35_1_txt
  1821   0013DE  0101               	movlb	1	; () banked
  1822   0013E0  6F93               	movwf	convert_uint16_to_string@str& (0+255),b
  1823   0013E2  0E00               	movlw	high _adc_lm35_1_txt
  1824   0013E4  6F94               	movwf	(convert_uint16_to_string@str+1)& (0+255),b
  1825   0013E6  ECEC  F01D         	call	_convert_uint16_to_string	;wreg free
  1826   0013EA  0100               	movlb	0	; () banked
  1827   0013EC  6FEE               	movwf	_ret& (0+255),b
  1828   0013EE                     
  1829                           ; BSR set to: 0
  1830                           ;application.c: 114:              ret=lcd_8bit_send_string_pos(&lcd_2,1,14,adc_lm35_1_tx
      +                          t);
  1831   0013EE  0EEF               	movlw	low _lcd_2
  1832   0013F0  6E27               	movwf	lcd_8bit_send_string_pos@lcd^0,c
  1833   0013F2  0E00               	movlw	high _lcd_2
  1834   0013F4  6E28               	movwf	(lcd_8bit_send_string_pos@lcd+1)^0,c
  1835   0013F6  0E01               	movlw	1
  1836   0013F8  6E29               	movwf	lcd_8bit_send_string_pos@row^0,c
  1837   0013FA  0E0E               	movlw	14
  1838   0013FC  6E2A               	movwf	lcd_8bit_send_string_pos@column^0,c
  1839   0013FE  0EE7               	movlw	low _adc_lm35_1_txt
  1840   001400  6E2B               	movwf	lcd_8bit_send_string_pos@str^0,c
  1841   001402  0E00               	movlw	high _adc_lm35_1_txt
  1842   001404  6E2C               	movwf	(lcd_8bit_send_string_pos@str+1)^0,c
  1843   001406  ECA8  F01E         	call	_lcd_8bit_send_string_pos	;wreg free
  1844   00140A  0100               	movlb	0	; () banked
  1845   00140C  6FEE               	movwf	_ret& (0+255),b
  1846   00140E                     
  1847                           ; BSR set to: 0
  1848                           ;application.c: 115:              check2=1;
  1849   00140E  0E01               	movlw	1
  1850   001410  6E60               	movwf	_check2^0,c	;volatile
  1851   001412                     l10174:
  1852                           
  1853                           ; BSR set to: 0
  1854                           ;application.c: 118:              ret=lcd_8bit_send_string_pos(&lcd_2,2,1,"Heater ON ");
  1855   001412  0EEF               	movlw	low _lcd_2
  1856   001414  6E27               	movwf	lcd_8bit_send_string_pos@lcd^0,c
  1857   001416  0E00               	movlw	high _lcd_2
  1858   001418  6E28               	movwf	(lcd_8bit_send_string_pos@lcd+1)^0,c
  1859   00141A  0E02               	movlw	2
  1860   00141C  6E29               	movwf	lcd_8bit_send_string_pos@row^0,c
  1861   00141E  0E01               	movlw	1
  1862   001420  6E2A               	movwf	lcd_8bit_send_string_pos@column^0,c
  1863   001422  0E36               	movlw	low STR_10
  1864   001424  6E2B               	movwf	lcd_8bit_send_string_pos@str^0,c
  1865   001426  0E10               	movlw	high STR_10
  1866   001428  6E2C               	movwf	(lcd_8bit_send_string_pos@str+1)^0,c
  1867   00142A  ECA8  F01E         	call	_lcd_8bit_send_string_pos	;wreg free
  1868   00142E  0100               	movlb	0	; () banked
  1869   001430  6FEE               	movwf	_ret& (0+255),b
  1870                           
  1871                           ;application.c: 121:         }
  1872   001432  EF33  F008         	goto	l10110
  1873   001436                     l10176:
  1874                           
  1875                           ;application.c: 123:              check1=0;
  1876   001436  0E00               	movlw	0
  1877   001438  6E61               	movwf	_check1^0,c	;volatile
  1878                           
  1879                           ;application.c: 124:              check2=0;
  1880   00143A  0E00               	movlw	0
  1881   00143C  6E60               	movwf	_check2^0,c	;volatile
  1882   00143E                     
  1883                           ;application.c: 125:              ret=dc_motor_stop(&dc_motor1);
  1884   00143E  0EFB               	movlw	low _dc_motor1
  1885   001440  6E15               	movwf	dc_motor_stop@_motor^0,c
  1886   001442  0E00               	movlw	high _dc_motor1
  1887   001444  6E16               	movwf	(dc_motor_stop@_motor+1)^0,c
  1888   001446  EC93  F023         	call	_dc_motor_stop	;wreg free
  1889   00144A  0100               	movlb	0	; () banked
  1890   00144C  6FEE               	movwf	_ret& (0+255),b
  1891   00144E                     
  1892                           ; BSR set to: 0
  1893                           ;application.c: 126:              ret=dc_motor_stop(&dc_motor2);
  1894   00144E  0EF9               	movlw	low _dc_motor2
  1895   001450  6E15               	movwf	dc_motor_stop@_motor^0,c
  1896   001452  0E00               	movlw	high _dc_motor2
  1897   001454  6E16               	movwf	(dc_motor_stop@_motor+1)^0,c
  1898   001456  EC93  F023         	call	_dc_motor_stop	;wreg free
  1899   00145A  0100               	movlb	0	; () banked
  1900   00145C  6FEE               	movwf	_ret& (0+255),b
  1901                           
  1902                           ;application.c: 127:              if(check3==0){
  1903   00145E  505F               	movf	_check3^0,w,c	;volatile
  1904   001460  A4D8               	btfss	status,2,c
  1905   001462  EF35  F00A         	goto	u9461
  1906   001466  EF37  F00A         	goto	u9460
  1907   00146A                     u9461:
  1908   00146A  EFB5  F00A         	goto	l10198
  1909   00146E                     u9460:
  1910   00146E                     
  1911                           ; BSR set to: 0
  1912                           ;application.c: 128:              ret=lcd_8bit_send_command (&lcd_2,0x01);
  1913   00146E  0EEF               	movlw	low _lcd_2
  1914   001470  6E18               	movwf	lcd_8bit_send_command@lcd^0,c
  1915   001472  0E00               	movlw	high _lcd_2
  1916   001474  6E19               	movwf	(lcd_8bit_send_command@lcd+1)^0,c
  1917   001476  0E01               	movlw	1
  1918   001478  6E1A               	movwf	lcd_8bit_send_command@command^0,c
  1919   00147A  EC3D  F020         	call	_lcd_8bit_send_command	;wreg free
  1920   00147E  0100               	movlb	0	; () banked
  1921   001480  6FEE               	movwf	_ret& (0+255),b
  1922   001482                     
  1923                           ; BSR set to: 0
  1924                           ;application.c: 129:              ret=lcd_8bit_send_string_pos(&lcd_2,1,1,"Temperature :
      +                           ");
  1925   001482  0EEF               	movlw	low _lcd_2
  1926   001484  6E27               	movwf	lcd_8bit_send_string_pos@lcd^0,c
  1927   001486  0E00               	movlw	high _lcd_2
  1928   001488  6E28               	movwf	(lcd_8bit_send_string_pos@lcd+1)^0,c
  1929   00148A  0E01               	movlw	1
  1930   00148C  6E29               	movwf	lcd_8bit_send_string_pos@row^0,c
  1931   00148E  0E01               	movlw	1
  1932   001490  6E2A               	movwf	lcd_8bit_send_string_pos@column^0,c
  1933   001492  0E27               	movlw	low STR_6
  1934   001494  6E2B               	movwf	lcd_8bit_send_string_pos@str^0,c
  1935   001496  0E10               	movlw	high STR_6
  1936   001498  6E2C               	movwf	(lcd_8bit_send_string_pos@str+1)^0,c
  1937   00149A  ECA8  F01E         	call	_lcd_8bit_send_string_pos	;wreg free
  1938   00149E  0100               	movlb	0	; () banked
  1939   0014A0  6FEE               	movwf	_ret& (0+255),b
  1940   0014A2                     
  1941                           ; BSR set to: 0
  1942                           ;application.c: 130:              ret=ADC_GetConversion_Blocking(&adc_1,ADC_CHANNEL_AN0,
      +                          &adc_lm35_1) ;
  1943   0014A2  0E8A               	movlw	low _adc_1
  1944   0014A4  6E13               	movwf	ADC_GetConversion_Blocking@_adc^0,c
  1945   0014A6  0E01               	movlw	high _adc_1
  1946   0014A8  6E14               	movwf	(ADC_GetConversion_Blocking@_adc+1)^0,c
  1947   0014AA  0E00               	movlw	0
  1948   0014AC  6E15               	movwf	ADC_GetConversion_Blocking@channel^0,c
  1949   0014AE  0E6B               	movlw	low _adc_lm35_1
  1950   0014B0  6E16               	movwf	ADC_GetConversion_Blocking@conversion_result^0,c
  1951   0014B2  0E00               	movlw	high _adc_lm35_1
  1952   0014B4  6E17               	movwf	(ADC_GetConversion_Blocking@conversion_result+1)^0,c
  1953   0014B6  EC86  F021         	call	_ADC_GetConversion_Blocking	;wreg free
  1954   0014BA  0100               	movlb	0	; () banked
  1955   0014BC  6FEE               	movwf	_ret& (0+255),b
  1956   0014BE                     
  1957                           ; BSR set to: 0
  1958                           ;application.c: 131:              adc_lm35_celsius=adc_lm35_1 * 4.88f;
  1959   0014BE  0EF6               	movlw	246
  1960   0014C0  6E1E               	movwf	___flmul@a^0,c
  1961   0014C2  0E28               	movlw	40
  1962   0014C4  6E1F               	movwf	(___flmul@a+1)^0,c
  1963   0014C6  0E9C               	movlw	156
  1964   0014C8  6E20               	movwf	(___flmul@a+2)^0,c
  1965   0014CA  0E40               	movlw	64
  1966   0014CC  6E21               	movwf	(___flmul@a+3)^0,c
  1967   0014CE  C06B  F00C         	movff	_adc_lm35_1,___xxtofl@val
  1968   0014D2  C06C  F00D         	movff	_adc_lm35_1+1,___xxtofl@val+1
  1969   0014D6  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1970   0014D8  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1971   0014DA  0E00               	movlw	0
  1972   0014DC  EC85  F015         	call	___xxtofl
  1973   0014E0  C00C  F01A         	movff	?___xxtofl,___flmul@b
  1974   0014E4  C00D  F01B         	movff	?___xxtofl+1,___flmul@b+1
  1975   0014E8  C00E  F01C         	movff	?___xxtofl+2,___flmul@b+2
  1976   0014EC  C00F  F01D         	movff	?___xxtofl+3,___flmul@b+3
  1977   0014F0  ECA0  F00F         	call	___flmul	;wreg free
  1978   0014F4  C01A  F043         	movff	?___flmul,___fltol@f1
  1979   0014F8  C01B  F044         	movff	?___flmul+1,___fltol@f1+1
  1980   0014FC  C01C  F045         	movff	?___flmul+2,___fltol@f1+2
  1981   001500  C01D  F046         	movff	?___flmul+3,___fltol@f1+3
  1982   001504  ECEE  F01A         	call	___fltol	;wreg free
  1983   001508  C043  F071         	movff	?___fltol,_adc_lm35_celsius
  1984   00150C  C044  F072         	movff	?___fltol+1,_adc_lm35_celsius+1
  1985   001510                     
  1986                           ;application.c: 132:              adc_lm35_celsius/=10;
  1987   001510  C071  F00C         	movff	_adc_lm35_celsius,___lwdiv@dividend
  1988   001514  C072  F00D         	movff	_adc_lm35_celsius+1,___lwdiv@dividend+1
  1989   001518  0E00               	movlw	0
  1990   00151A  6E0F               	movwf	(___lwdiv@divisor+1)^0,c
  1991   00151C  0E0A               	movlw	10
  1992   00151E  6E0E               	movwf	___lwdiv@divisor^0,c
  1993   001520  EC4C  F021         	call	___lwdiv	;wreg free
  1994   001524  C00C  F071         	movff	?___lwdiv,_adc_lm35_celsius
  1995   001528  C00D  F072         	movff	?___lwdiv+1,_adc_lm35_celsius+1
  1996   00152C                     
  1997                           ;application.c: 133:              ret=convert_uint16_to_string( adc_lm35_celsius,adc_lm3
      +                          5_1_txt);
  1998   00152C  C071  F191         	movff	_adc_lm35_celsius,convert_uint16_to_string@value
  1999   001530  C072  F192         	movff	_adc_lm35_celsius+1,convert_uint16_to_string@value+1
  2000   001534  0EE7               	movlw	low _adc_lm35_1_txt
  2001   001536  0101               	movlb	1	; () banked
  2002   001538  6F93               	movwf	convert_uint16_to_string@str& (0+255),b
  2003   00153A  0E00               	movlw	high _adc_lm35_1_txt
  2004   00153C  6F94               	movwf	(convert_uint16_to_string@str+1)& (0+255),b
  2005   00153E  ECEC  F01D         	call	_convert_uint16_to_string	;wreg free
  2006   001542  0100               	movlb	0	; () banked
  2007   001544  6FEE               	movwf	_ret& (0+255),b
  2008   001546                     
  2009                           ; BSR set to: 0
  2010                           ;application.c: 134:              ret=lcd_8bit_send_string_pos(&lcd_2,1,14,adc_lm35_1_tx
      +                          t);
  2011   001546  0EEF               	movlw	low _lcd_2
  2012   001548  6E27               	movwf	lcd_8bit_send_string_pos@lcd^0,c
  2013   00154A  0E00               	movlw	high _lcd_2
  2014   00154C  6E28               	movwf	(lcd_8bit_send_string_pos@lcd+1)^0,c
  2015   00154E  0E01               	movlw	1
  2016   001550  6E29               	movwf	lcd_8bit_send_string_pos@row^0,c
  2017   001552  0E0E               	movlw	14
  2018   001554  6E2A               	movwf	lcd_8bit_send_string_pos@column^0,c
  2019   001556  0EE7               	movlw	low _adc_lm35_1_txt
  2020   001558  6E2B               	movwf	lcd_8bit_send_string_pos@str^0,c
  2021   00155A  0E00               	movlw	high _adc_lm35_1_txt
  2022   00155C  6E2C               	movwf	(lcd_8bit_send_string_pos@str+1)^0,c
  2023   00155E  ECA8  F01E         	call	_lcd_8bit_send_string_pos	;wreg free
  2024   001562  0100               	movlb	0	; () banked
  2025   001564  6FEE               	movwf	_ret& (0+255),b
  2026   001566                     
  2027                           ; BSR set to: 0
  2028                           ;application.c: 135:              check3=1;
  2029   001566  0E01               	movlw	1
  2030   001568  6E5F               	movwf	_check3^0,c	;volatile
  2031   00156A                     l10198:
  2032                           
  2033                           ; BSR set to: 0
  2034                           ;application.c: 137:              ret=lcd_8bit_send_string_pos(&lcd_2,2,1,"Fan OFF / Hea
      +                          ter OFF ");
  2035   00156A  0EEF               	movlw	low _lcd_2
  2036   00156C  6E27               	movwf	lcd_8bit_send_string_pos@lcd^0,c
  2037   00156E  0E00               	movlw	high _lcd_2
  2038   001570  6E28               	movwf	(lcd_8bit_send_string_pos@lcd+1)^0,c
  2039   001572  0E02               	movlw	2
  2040   001574  6E29               	movwf	lcd_8bit_send_string_pos@row^0,c
  2041   001576  0E01               	movlw	1
  2042   001578  6E2A               	movwf	lcd_8bit_send_string_pos@column^0,c
  2043   00157A  0E11               	movlw	low STR_12
  2044   00157C  6E2B               	movwf	lcd_8bit_send_string_pos@str^0,c
  2045   00157E  0E10               	movlw	high STR_12
  2046   001580  6E2C               	movwf	(lcd_8bit_send_string_pos@str+1)^0,c
  2047   001582  ECA8  F01E         	call	_lcd_8bit_send_string_pos	;wreg free
  2048   001586  0100               	movlb	0	; () banked
  2049   001588  6FEE               	movwf	_ret& (0+255),b
  2050   00158A  EF33  F008         	goto	l10110
  2051   00158E  EF07  F000         	goto	start
  2052   001592                     __end_of_main:
  2053                           	callstack 0
  2054                           
  2055 ;; *************** function _lcd_8bit_send_string_pos *****************
  2056 ;; Defined at:
  2057 ;;		line 273 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;  lcd             2   38[COMRAM] PTR const struct .
  2060 ;;		 -> lcd_2(10), 
  2061 ;;  row             1   40[COMRAM] unsigned char 
  2062 ;;  column          1   41[COMRAM] unsigned char 
  2063 ;;  str             2   42[COMRAM] PTR unsigned char 
  2064 ;;		 -> STR_12(22), STR_11(15), STR_10(11), STR_9(15), 
  2065 ;;		 -> STR_8(8), STR_7(15), STR_6(15), adc_lm35_1_txt(7), 
  2066 ;;		 -> STR_5(8), STR_4(8), RealTimeClockDS1307_Time(9), RealTimeClockDS1307_Data(9), 
  2067 ;; Auto vars:     Size  Location     Type
  2068 ;;  ret             1   44[COMRAM] unsigned char 
  2069 ;; Return value:  Size  Location     Type
  2070 ;;                  1    wreg      unsigned char 
  2071 ;; Registers used:
  2072 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2073 ;; Tracked objects:
  2074 ;;		On entry : 0/0
  2075 ;;		On exit  : 0/0
  2076 ;;		Unchanged: 0/0
  2077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2078 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2079 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2081 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2082 ;;Total ram usage:        7 bytes
  2083 ;; Hardware stack levels used: 1
  2084 ;; Hardware stack levels required when called: 8
  2085 ;; This function calls:
  2086 ;;		_lcd_8bit_send_char_data
  2087 ;;		_lcd_8bit_set_cursor
  2088 ;; This function is called by:
  2089 ;;		_main
  2090 ;;		_Print_RealTimeClockDS1307
  2091 ;; This function uses a non-reentrant model
  2092 ;;
  2093                           
  2094                           	psect	text1
  2095   003D50                     __ptext1:
  2096                           	callstack 0
  2097   003D50                     _lcd_8bit_send_string_pos:
  2098                           	callstack 22
  2099   003D50                     
  2100                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 275:     if((((void*)0) == lcd) ||(((void*)0) == str))
      +                          {
  2101   003D50  5027               	movf	lcd_8bit_send_string_pos@lcd^0,w,c
  2102   003D52  1028               	iorwf	(lcd_8bit_send_string_pos@lcd+1)^0,w,c
  2103   003D54  B4D8               	btfsc	status,2,c
  2104   003D56  EFAF  F01E         	goto	u6651
  2105   003D5A  EFB1  F01E         	goto	u6650
  2106   003D5E                     u6651:
  2107   003D5E  EFBA  F01E         	goto	l7798
  2108   003D62                     u6650:
  2109   003D62  502B               	movf	lcd_8bit_send_string_pos@str^0,w,c
  2110   003D64  102C               	iorwf	(lcd_8bit_send_string_pos@str+1)^0,w,c
  2111   003D66  A4D8               	btfss	status,2,c
  2112   003D68  EFB8  F01E         	goto	u6661
  2113   003D6C  EFBA  F01E         	goto	u6660
  2114   003D70                     u6661:
  2115   003D70  EFBE  F01E         	goto	l7800
  2116   003D74                     u6660:
  2117   003D74                     l7798:
  2118                           
  2119                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 276:         ret=(Std_ReturnType)0x01;
  2120   003D74  0E01               	movlw	1
  2121   003D76  6E2D               	movwf	lcd_8bit_send_string_pos@ret^0,c
  2122                           
  2123                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 277:     }
  2124   003D78  EFFF  F01E         	goto	l7808
  2125   003D7C                     l7800:
  2126                           
  2127                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 279:         ret=lcd_8bit_set_cursor(lcd ,row,column);
  2128   003D7C  C027  F021         	movff	lcd_8bit_send_string_pos@lcd,lcd_8bit_set_cursor@lcd
  2129   003D80  C028  F022         	movff	lcd_8bit_send_string_pos@lcd+1,lcd_8bit_set_cursor@lcd+1
  2130   003D84  C029  F023         	movff	lcd_8bit_send_string_pos@row,lcd_8bit_set_cursor@row
  2131   003D88  C02A  F024         	movff	lcd_8bit_send_string_pos@column,lcd_8bit_set_cursor@coulmn
  2132   003D8C  ECA8  F01F         	call	_lcd_8bit_set_cursor	;wreg free
  2133   003D90  6E2D               	movwf	lcd_8bit_send_string_pos@ret^0,c
  2134                           
  2135                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 280:         while(*str){
  2136   003D92  EFE6  F01E         	goto	l7806
  2137   003D96                     l7802:
  2138                           
  2139                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 281:             ret=lcd_8bit_send_char_data(lcd,*str+
      +                          +);
  2140   003D96  C027  F018         	movff	lcd_8bit_send_string_pos@lcd,lcd_8bit_send_char_data@lcd
  2141   003D9A  C028  F019         	movff	lcd_8bit_send_string_pos@lcd+1,lcd_8bit_send_char_data@lcd+1
  2142   003D9E  C02B  FFF6         	movff	lcd_8bit_send_string_pos@str,tblptrl
  2143   003DA2  C02C  FFF7         	movff	lcd_8bit_send_string_pos@str+1,tblptrh
  2144   003DA6  0E00               	movlw	low (__smallconst shr (0+16))
  2145   003DA8  6EF8               	movwf	tblptru,c
  2146   003DAA  0E0F               	movlw	(high __ramtop+-1)
  2147   003DAC  64F7               	cpfsgt	tblptrh,c
  2148   003DAE  D003               	bra	u6677
  2149   003DB0  0008               	tblrd		*
  2150   003DB2  50F5               	movf	tablat,w,c
  2151   003DB4  D005               	bra	u6670
  2152   003DB6                     u6677:
  2153   003DB6  CFF6 FFE9          	movff	tblptrl,fsr0l
  2154   003DBA  CFF7 FFEA          	movff	tblptrh,fsr0h
  2155   003DBE  50EF               	movf	indf0,w,c
  2156   003DC0                     u6670:
  2157   003DC0  6E1A               	movwf	lcd_8bit_send_char_data@data^0,c
  2158   003DC2  ECF5  F01F         	call	_lcd_8bit_send_char_data	;wreg free
  2159   003DC6  6E2D               	movwf	lcd_8bit_send_string_pos@ret^0,c
  2160   003DC8  4A2B               	infsnz	lcd_8bit_send_string_pos@str^0,f,c
  2161   003DCA  2A2C               	incf	(lcd_8bit_send_string_pos@str+1)^0,f,c
  2162   003DCC                     l7806:
  2163                           
  2164                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 280:         while(*str){
  2165   003DCC  C02B  FFF6         	movff	lcd_8bit_send_string_pos@str,tblptrl
  2166   003DD0  C02C  FFF7         	movff	lcd_8bit_send_string_pos@str+1,tblptrh
  2167   003DD4  0E00               	movlw	low (__smallconst shr (0+16))
  2168   003DD6  6EF8               	movwf	tblptru,c
  2169   003DD8  0E0F               	movlw	(high __ramtop+-1)
  2170   003DDA  64F7               	cpfsgt	tblptrh,c
  2171   003DDC  D003               	bra	u6687
  2172   003DDE  0008               	tblrd		*
  2173   003DE0  50F5               	movf	tablat,w,c
  2174   003DE2  D005               	bra	u6680
  2175   003DE4                     u6687:
  2176   003DE4  CFF6 FFE9          	movff	tblptrl,fsr0l
  2177   003DE8  CFF7 FFEA          	movff	tblptrh,fsr0h
  2178   003DEC  50EF               	movf	indf0,w,c
  2179   003DEE                     u6680:
  2180   003DEE  0900               	iorlw	0
  2181   003DF0  A4D8               	btfss	status,2,c
  2182   003DF2  EFFD  F01E         	goto	u6691
  2183   003DF6  EFFF  F01E         	goto	u6690
  2184   003DFA                     u6691:
  2185   003DFA  EFCB  F01E         	goto	l7802
  2186   003DFE                     u6690:
  2187   003DFE                     l7808:
  2188                           
  2189                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 286:     return ret;
  2190   003DFE  502D               	movf	lcd_8bit_send_string_pos@ret^0,w,c
  2191   003E00  0012               	return		;funcret
  2192   003E02                     __end_of_lcd_8bit_send_string_pos:
  2193                           	callstack 0
  2194                           
  2195 ;; *************** function _lcd_8bit_set_cursor *****************
  2196 ;; Defined at:
  2197 ;;		line 411 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  2198 ;; Parameters:    Size  Location     Type
  2199 ;;  lcd             2   32[COMRAM] PTR const struct .
  2200 ;;		 -> lcd_2(10), 
  2201 ;;  row             1   34[COMRAM] unsigned char 
  2202 ;;  coulmn          1   35[COMRAM] unsigned char 
  2203 ;; Auto vars:     Size  Location     Type
  2204 ;;  ret             1    0        unsigned char 
  2205 ;; Return value:  Size  Location     Type
  2206 ;;                  1    wreg      unsigned char 
  2207 ;; Registers used:
  2208 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2209 ;; Tracked objects:
  2210 ;;		On entry : 0/0
  2211 ;;		On exit  : 0/0
  2212 ;;		Unchanged: 0/0
  2213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2214 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2216 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2217 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2218 ;;Total ram usage:        6 bytes
  2219 ;; Hardware stack levels used: 1
  2220 ;; Hardware stack levels required when called: 7
  2221 ;; This function calls:
  2222 ;;		_lcd_8bit_send_command
  2223 ;; This function is called by:
  2224 ;;		_lcd_8bit_send_string_pos
  2225 ;;		_lcd_8bit_send_char_data_pos
  2226 ;; This function uses a non-reentrant model
  2227 ;;
  2228                           
  2229                           	psect	text2
  2230   003F50                     __ptext2:
  2231                           	callstack 0
  2232   003F50                     _lcd_8bit_set_cursor:
  2233                           	callstack 22
  2234   003F50                     
  2235                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 413:     coulmn--;
  2236   003F50  0624               	decf	lcd_8bit_set_cursor@coulmn^0,f,c
  2237                           
  2238                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 414:     switch(row){
  2239   003F52  EFD7  F01F         	goto	l7566
  2240   003F56                     l7558:
  2241   003F56  C021  F018         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
  2242   003F5A  C022  F019         	movff	lcd_8bit_set_cursor@lcd+1,lcd_8bit_send_command@lcd+1
  2243   003F5E  5024               	movf	lcd_8bit_set_cursor@coulmn^0,w,c
  2244   003F60  0F80               	addlw	128
  2245   003F62  6E1A               	movwf	lcd_8bit_send_command@command^0,c
  2246   003F64  EC3D  F020         	call	_lcd_8bit_send_command	;wreg free
  2247   003F68  EFF4  F01F         	goto	l215
  2248   003F6C                     l7560:
  2249   003F6C  C021  F018         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
  2250   003F70  C022  F019         	movff	lcd_8bit_set_cursor@lcd+1,lcd_8bit_send_command@lcd+1
  2251   003F74  5024               	movf	lcd_8bit_set_cursor@coulmn^0,w,c
  2252   003F76  0FC0               	addlw	192
  2253   003F78  6E1A               	movwf	lcd_8bit_send_command@command^0,c
  2254   003F7A  EC3D  F020         	call	_lcd_8bit_send_command	;wreg free
  2255   003F7E  EFF4  F01F         	goto	l215
  2256   003F82                     l7562:
  2257   003F82  C021  F018         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
  2258   003F86  C022  F019         	movff	lcd_8bit_set_cursor@lcd+1,lcd_8bit_send_command@lcd+1
  2259   003F8A  5024               	movf	lcd_8bit_set_cursor@coulmn^0,w,c
  2260   003F8C  0F94               	addlw	148
  2261   003F8E  6E1A               	movwf	lcd_8bit_send_command@command^0,c
  2262   003F90  EC3D  F020         	call	_lcd_8bit_send_command	;wreg free
  2263   003F94  EFF4  F01F         	goto	l215
  2264   003F98                     l7564:
  2265   003F98  C021  F018         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
  2266   003F9C  C022  F019         	movff	lcd_8bit_set_cursor@lcd+1,lcd_8bit_send_command@lcd+1
  2267   003FA0  5024               	movf	lcd_8bit_set_cursor@coulmn^0,w,c
  2268   003FA2  0FD4               	addlw	212
  2269   003FA4  6E1A               	movwf	lcd_8bit_send_command@command^0,c
  2270   003FA6  EC3D  F020         	call	_lcd_8bit_send_command	;wreg free
  2271   003FAA  EFF4  F01F         	goto	l215
  2272   003FAE                     l7566:
  2273   003FAE  5023               	movf	lcd_8bit_set_cursor@row^0,w,c
  2274   003FB0  6E25               	movwf	??_lcd_8bit_set_cursor^0,c
  2275   003FB2  6A26               	clrf	(??_lcd_8bit_set_cursor+1)^0,c
  2276                           
  2277                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2278                           ; Switch size 1, requested type "simple"
  2279                           ; Number of cases is 1, Range of values is 0 to 0
  2280                           ; switch strategies available:
  2281                           ; Name         Instructions Cycles
  2282                           ; simple_byte            4     3 (average)
  2283                           ;	Chosen strategy is simple_byte
  2284   003FB4  5026               	movf	(??_lcd_8bit_set_cursor+1)^0,w,c
  2285   003FB6  0A00               	xorlw	0	; case 0
  2286   003FB8  B4D8               	btfsc	status,2,c
  2287   003FBA  EFE1  F01F         	goto	l10300
  2288   003FBE  EFF4  F01F         	goto	l215
  2289   003FC2                     l10300:
  2290                           
  2291                           ; Switch size 1, requested type "simple"
  2292                           ; Number of cases is 4, Range of values is 1 to 4
  2293                           ; switch strategies available:
  2294                           ; Name         Instructions Cycles
  2295                           ; simple_byte           13     7 (average)
  2296                           ;	Chosen strategy is simple_byte
  2297   003FC2  5025               	movf	??_lcd_8bit_set_cursor^0,w,c
  2298   003FC4  0A01               	xorlw	1	; case 1
  2299   003FC6  B4D8               	btfsc	status,2,c
  2300   003FC8  EFAB  F01F         	goto	l7558
  2301   003FCC  0A03               	xorlw	3	; case 2
  2302   003FCE  B4D8               	btfsc	status,2,c
  2303   003FD0  EFB6  F01F         	goto	l7560
  2304   003FD4  0A01               	xorlw	1	; case 3
  2305   003FD6  B4D8               	btfsc	status,2,c
  2306   003FD8  EFC1  F01F         	goto	l7562
  2307   003FDC  0A07               	xorlw	7	; case 4
  2308   003FDE  B4D8               	btfsc	status,2,c
  2309   003FE0  EFCC  F01F         	goto	l7564
  2310   003FE4  EFF4  F01F         	goto	l215
  2311   003FE8                     l215:
  2312   003FE8  0012               	return		;funcret
  2313   003FEA                     __end_of_lcd_8bit_set_cursor:
  2314                           	callstack 0
  2315                           
  2316 ;; *************** function _lcd_8bit_send_char_data *****************
  2317 ;; Defined at:
  2318 ;;		line 222 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  2319 ;; Parameters:    Size  Location     Type
  2320 ;;  lcd             2   23[COMRAM] PTR const struct .
  2321 ;;		 -> lcd_2(10), 
  2322 ;;  data            1   25[COMRAM] unsigned char 
  2323 ;; Auto vars:     Size  Location     Type
  2324 ;;  l_pins_count    1   31[COMRAM] unsigned char 
  2325 ;;  ret             1   30[COMRAM] unsigned char 
  2326 ;; Return value:  Size  Location     Type
  2327 ;;                  1    wreg      unsigned char 
  2328 ;; Registers used:
  2329 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2330 ;; Tracked objects:
  2331 ;;		On entry : 0/0
  2332 ;;		On exit  : 0/0
  2333 ;;		Unchanged: 0/0
  2334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2335 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2336 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2337 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2338 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2339 ;;Total ram usage:        9 bytes
  2340 ;; Hardware stack levels used: 1
  2341 ;; Hardware stack levels required when called: 6
  2342 ;; This function calls:
  2343 ;;		_gpio_pin_write_logic
  2344 ;;		_lcd_8bit_send_enable_signal
  2345 ;; This function is called by:
  2346 ;;		_lcd_8bit_send_string_pos
  2347 ;;		_lcd_8bit_send_char_data_pos
  2348 ;;		_lcd_8bit_send_string
  2349 ;;		_lcd_8bit_send_custom_char
  2350 ;; This function uses a non-reentrant model
  2351 ;;
  2352                           
  2353                           	psect	text3
  2354   003FEA                     __ptext3:
  2355                           	callstack 0
  2356   003FEA                     _lcd_8bit_send_char_data:
  2357                           	callstack 23
  2358   003FEA                     
  2359                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 224:     uint8 l_pins_counter= 0;
  2360   003FEA  0E00               	movlw	0
  2361   003FEC  6E20               	movwf	lcd_8bit_send_char_data@l_pins_counter^0,c
  2362   003FEE                     
  2363                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 225:     if(((void*)0) == lcd){
  2364   003FEE  5018               	movf	lcd_8bit_send_char_data@lcd^0,w,c
  2365   003FF0  1019               	iorwf	(lcd_8bit_send_char_data@lcd+1)^0,w,c
  2366   003FF2  A4D8               	btfss	status,2,c
  2367   003FF4  EFFE  F01F         	goto	u6331
  2368   003FF8  EF00  F020         	goto	u6330
  2369   003FFC                     u6331:
  2370   003FFC  EF04  F020         	goto	l7534
  2371   004000                     u6330:
  2372   004000                     
  2373                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 226:         ret=(Std_ReturnType)0x01;
  2374   004000  0E01               	movlw	1
  2375   004002  6E1F               	movwf	lcd_8bit_send_char_data@ret^0,c
  2376                           
  2377                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 227:     }
  2378   004004  EF3B  F020         	goto	l7550
  2379   004008                     l7534:
  2380   004008  C018  F00C         	movff	lcd_8bit_send_char_data@lcd,gpio_pin_write_logic@_pin_config
  2381   00400C  C019  F00D         	movff	lcd_8bit_send_char_data@lcd+1,gpio_pin_write_logic@_pin_config+1
  2382   004010  0E01               	movlw	1
  2383   004012  6E0E               	movwf	gpio_pin_write_logic@logic^0,c
  2384   004014  EC5C  F01A         	call	_gpio_pin_write_logic	;wreg free
  2385   004018                     
  2386                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 230:         for(l_pins_counter=0;l_pins_counter<8; ++
      +                          l_pins_counter){
  2387   004018  0E00               	movlw	0
  2388   00401A  6E20               	movwf	lcd_8bit_send_char_data@l_pins_counter^0,c
  2389   00401C                     l7542:
  2390   00401C  5020               	movf	lcd_8bit_send_char_data@l_pins_counter^0,w,c
  2391   00401E  2418               	addwf	lcd_8bit_send_char_data@lcd^0,w,c
  2392   004020  6E1B               	movwf	??_lcd_8bit_send_char_data^0,c
  2393   004022  0E00               	movlw	0
  2394   004024  2019               	addwfc	(lcd_8bit_send_char_data@lcd+1)^0,w,c
  2395   004026  6E1C               	movwf	(??_lcd_8bit_send_char_data+1)^0,c
  2396   004028  0E02               	movlw	2
  2397   00402A  241B               	addwf	??_lcd_8bit_send_char_data^0,w,c
  2398   00402C  6E0C               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2399   00402E  0E00               	movlw	0
  2400   004030  201C               	addwfc	(??_lcd_8bit_send_char_data+1)^0,w,c
  2401   004032  6E0D               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2402   004034  C020  F01D         	movff	lcd_8bit_send_char_data@l_pins_counter,??_lcd_8bit_send_char_data+2
  2403   004038  C01A  F01E         	movff	lcd_8bit_send_char_data@data,??_lcd_8bit_send_char_data+3
  2404   00403C  2A1D               	incf	(??_lcd_8bit_send_char_data+2)^0,f,c
  2405   00403E  EF23  F020         	goto	u6344
  2406   004042                     u6345:
  2407   004042  90D8               	bcf	status,0,c
  2408   004044  321E               	rrcf	(??_lcd_8bit_send_char_data+3)^0,f,c
  2409   004046                     u6344:
  2410   004046  2E1D               	decfsz	(??_lcd_8bit_send_char_data+2)^0,f,c
  2411   004048  EF21  F020         	goto	u6345
  2412   00404C  501E               	movf	(??_lcd_8bit_send_char_data+3)^0,w,c
  2413   00404E  0B01               	andlw	1
  2414   004050  6E0E               	movwf	gpio_pin_write_logic@logic^0,c
  2415   004052  EC5C  F01A         	call	_gpio_pin_write_logic	;wreg free
  2416   004056                     
  2417                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 233:         }
  2418   004056  2A20               	incf	lcd_8bit_send_char_data@l_pins_counter^0,f,c
  2419   004058  0E07               	movlw	7
  2420   00405A  6420               	cpfsgt	lcd_8bit_send_char_data@l_pins_counter^0,c
  2421   00405C  EF32  F020         	goto	u6351
  2422   004060  EF34  F020         	goto	u6350
  2423   004064                     u6351:
  2424   004064  EF0E  F020         	goto	l7542
  2425   004068                     u6350:
  2426   004068                     
  2427                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 234:         ret=lcd_8bit_send_enable_signal(lcd);
  2428   004068  C018  F015         	movff	lcd_8bit_send_char_data@lcd,lcd_8bit_send_enable_signal@lcd
  2429   00406C  C019  F016         	movff	lcd_8bit_send_char_data@lcd+1,lcd_8bit_send_enable_signal@lcd+1
  2430   004070  EC44  F024         	call	_lcd_8bit_send_enable_signal	;wreg free
  2431   004074  6E1F               	movwf	lcd_8bit_send_char_data@ret^0,c
  2432   004076                     l7550:
  2433                           
  2434                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 238:     return ret;
  2435   004076  501F               	movf	lcd_8bit_send_char_data@ret^0,w,c
  2436   004078  0012               	return		;funcret
  2437   00407A                     __end_of_lcd_8bit_send_char_data:
  2438                           	callstack 0
  2439                           
  2440 ;; *************** function _dc_motor_stop *****************
  2441 ;; Defined at:
  2442 ;;		line 86 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
  2443 ;; Parameters:    Size  Location     Type
  2444 ;;  _motor          2   20[COMRAM] PTR const struct .
  2445 ;;		 -> dc_motor2(2), dc_motor1(2), 
  2446 ;; Auto vars:     Size  Location     Type
  2447 ;;  ret             1    0        unsigned char 
  2448 ;; Return value:  Size  Location     Type
  2449 ;;                  1    wreg      unsigned char 
  2450 ;; Registers used:
  2451 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2452 ;; Tracked objects:
  2453 ;;		On entry : 0/0
  2454 ;;		On exit  : 0/0
  2455 ;;		Unchanged: 0/0
  2456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2457 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2460 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2461 ;;Total ram usage:        2 bytes
  2462 ;; Hardware stack levels used: 1
  2463 ;; Hardware stack levels required when called: 5
  2464 ;; This function calls:
  2465 ;;		_gpio_pin_write_logic
  2466 ;; This function is called by:
  2467 ;;		_main
  2468 ;; This function uses a non-reentrant model
  2469 ;;
  2470                           
  2471                           	psect	text4
  2472   004726                     __ptext4:
  2473                           	callstack 0
  2474   004726                     _dc_motor_stop:
  2475                           	callstack 25
  2476   004726                     
  2477                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 88:     if(((void*)0)== _motor){
  2478   004726  5015               	movf	dc_motor_stop@_motor^0,w,c
  2479   004728  1016               	iorwf	(dc_motor_stop@_motor+1)^0,w,c
  2480   00472A  A4D8               	btfss	status,2,c
  2481   00472C  EF9A  F023         	goto	u6741
  2482   004730  EF9C  F023         	goto	u6740
  2483   004734                     u6741:
  2484   004734  EF9E  F023         	goto	l7856
  2485   004738                     u6740:
  2486   004738                     
  2487                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 90:     }
  2488   004738  EFB0  F023         	goto	l7858
  2489   00473C                     l7856:
  2490                           
  2491                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 92:         gpio_pin_write_logic(&(_motor->dc_motor_
      +                          pin[0x00U]),GPIO_LOW);
  2492   00473C  C015  F00C         	movff	dc_motor_stop@_motor,gpio_pin_write_logic@_pin_config
  2493   004740  C016  F00D         	movff	dc_motor_stop@_motor+1,gpio_pin_write_logic@_pin_config+1
  2494   004744  0E00               	movlw	0
  2495   004746  6E0E               	movwf	gpio_pin_write_logic@logic^0,c
  2496   004748  EC5C  F01A         	call	_gpio_pin_write_logic	;wreg free
  2497                           
  2498                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 93:         gpio_pin_write_logic(&(_motor->dc_motor_
      +                          pin[0x01U]),GPIO_LOW);
  2499   00474C  0E01               	movlw	1
  2500   00474E  2415               	addwf	dc_motor_stop@_motor^0,w,c
  2501   004750  6E0C               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2502   004752  0E00               	movlw	0
  2503   004754  2016               	addwfc	(dc_motor_stop@_motor+1)^0,w,c
  2504   004756  6E0D               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2505   004758  0E00               	movlw	0
  2506   00475A  6E0E               	movwf	gpio_pin_write_logic@logic^0,c
  2507   00475C  EC5C  F01A         	call	_gpio_pin_write_logic	;wreg free
  2508   004760                     l7858:
  2509                           
  2510                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 97:     return ret;
  2511   004760  0E01               	movlw	1
  2512   004762  0012               	return		;funcret
  2513   004764                     __end_of_dc_motor_stop:
  2514                           	callstack 0
  2515                           
  2516 ;; *************** function _dc_motor_move_right *****************
  2517 ;; Defined at:
  2518 ;;		line 39 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
  2519 ;; Parameters:    Size  Location     Type
  2520 ;;  _motor          2   20[COMRAM] PTR const struct .
  2521 ;;		 -> dc_motor2(2), dc_motor1(2), 
  2522 ;; Auto vars:     Size  Location     Type
  2523 ;;  ret             1    0        unsigned char 
  2524 ;; Return value:  Size  Location     Type
  2525 ;;                  1    wreg      unsigned char 
  2526 ;; Registers used:
  2527 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2528 ;; Tracked objects:
  2529 ;;		On entry : 0/0
  2530 ;;		On exit  : 0/0
  2531 ;;		Unchanged: 0/0
  2532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2533 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2536 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2537 ;;Total ram usage:        2 bytes
  2538 ;; Hardware stack levels used: 1
  2539 ;; Hardware stack levels required when called: 5
  2540 ;; This function calls:
  2541 ;;		_gpio_pin_write_logic
  2542 ;; This function is called by:
  2543 ;;		_main
  2544 ;; This function uses a non-reentrant model
  2545 ;;
  2546                           
  2547                           	psect	text5
  2548   004764                     __ptext5:
  2549                           	callstack 0
  2550   004764                     _dc_motor_move_right:
  2551                           	callstack 25
  2552   004764                     
  2553                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 41:     if(((void*)0)== _motor){
  2554   004764  5015               	movf	dc_motor_move_right@_motor^0,w,c
  2555   004766  1016               	iorwf	(dc_motor_move_right@_motor+1)^0,w,c
  2556   004768  A4D8               	btfss	status,2,c
  2557   00476A  EFB9  F023         	goto	u6731
  2558   00476E  EFBB  F023         	goto	u6730
  2559   004772                     u6731:
  2560   004772  EFBD  F023         	goto	l7844
  2561   004776                     u6730:
  2562   004776                     
  2563                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 43:     }
  2564   004776  EFCF  F023         	goto	l7846
  2565   00477A                     l7844:
  2566                           
  2567                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 45:         gpio_pin_write_logic(&(_motor->dc_motor_
      +                          pin[0x00U]),GPIO_HIGH);
  2568   00477A  C015  F00C         	movff	dc_motor_move_right@_motor,gpio_pin_write_logic@_pin_config
  2569   00477E  C016  F00D         	movff	dc_motor_move_right@_motor+1,gpio_pin_write_logic@_pin_config+1
  2570   004782  0E01               	movlw	1
  2571   004784  6E0E               	movwf	gpio_pin_write_logic@logic^0,c
  2572   004786  EC5C  F01A         	call	_gpio_pin_write_logic	;wreg free
  2573                           
  2574                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 46:         gpio_pin_write_logic(&(_motor->dc_motor_
      +                          pin[0x01U]),GPIO_LOW);
  2575   00478A  0E01               	movlw	1
  2576   00478C  2415               	addwf	dc_motor_move_right@_motor^0,w,c
  2577   00478E  6E0C               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2578   004790  0E00               	movlw	0
  2579   004792  2016               	addwfc	(dc_motor_move_right@_motor+1)^0,w,c
  2580   004794  6E0D               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2581   004796  0E00               	movlw	0
  2582   004798  6E0E               	movwf	gpio_pin_write_logic@logic^0,c
  2583   00479A  EC5C  F01A         	call	_gpio_pin_write_logic	;wreg free
  2584   00479E                     l7846:
  2585                           
  2586                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 50:     return ret;
  2587   00479E  0E01               	movlw	1
  2588   0047A0  0012               	return		;funcret
  2589   0047A2                     __end_of_dc_motor_move_right:
  2590                           	callstack 0
  2591                           
  2592 ;; *************** function _convert_uint16_to_string *****************
  2593 ;; Defined at:
  2594 ;;		line 334 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  2595 ;; Parameters:    Size  Location     Type
  2596 ;;  value           2    0[BANK1 ] unsigned short 
  2597 ;;  str             2    2[BANK1 ] PTR unsigned char 
  2598 ;;		 -> adc_lm35_1_txt(7), 
  2599 ;; Auto vars:     Size  Location     Type
  2600 ;;  Temp_String     6    4[BANK1 ] unsigned char [6]
  2601 ;;  DataCounter     1   11[BANK1 ] unsigned char 
  2602 ;;  ret             1   10[BANK1 ] unsigned char 
  2603 ;; Return value:  Size  Location     Type
  2604 ;;                  1    wreg      unsigned char 
  2605 ;; Registers used:
  2606 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2607 ;; Tracked objects:
  2608 ;;		On entry : 0/0
  2609 ;;		On exit  : 0/0
  2610 ;;		Unchanged: 0/0
  2611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2612 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2613 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2615 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2616 ;;Total ram usage:       12 bytes
  2617 ;; Hardware stack levels used: 1
  2618 ;; Hardware stack levels required when called: 12
  2619 ;; This function calls:
  2620 ;;		_memset
  2621 ;;		_sprintf
  2622 ;; This function is called by:
  2623 ;;		_main
  2624 ;; This function uses a non-reentrant model
  2625 ;;
  2626                           
  2627                           	psect	text6
  2628   003BD8                     __ptext6:
  2629                           	callstack 0
  2630   003BD8                     _convert_uint16_to_string:
  2631                           	callstack 18
  2632   003BD8                     
  2633                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 335:     Std_ReturnType ret=(Std_ReturnType)0x01;
  2634   003BD8  0E01               	movlw	1
  2635   003BDA  0101               	movlb	1	; () banked
  2636   003BDC  6F9B               	movwf	convert_uint16_to_string@ret& (0+255),b
  2637   003BDE                     
  2638                           ; BSR set to: 1
  2639                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 336:     uint8 Temp_String[6]={0};
  2640   003BDE  EE21  F095         	lfsr	2,convert_uint16_to_string@Temp_String
  2641   003BE2  0E05               	movlw	5
  2642   003BE4                     u9341:
  2643   003BE4  6ADE               	clrf	postinc2,c
  2644   003BE6  06E8               	decf	wreg,f,c
  2645   003BE8  E2FD               	bc	u9341
  2646   003BEA                     
  2647                           ; BSR set to: 1
  2648                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 337:     uint8 DataCounter=0;
  2649   003BEA  0E00               	movlw	0
  2650   003BEC  6F9C               	movwf	convert_uint16_to_string@DataCounter& (0+255),b
  2651   003BEE                     
  2652                           ; BSR set to: 1
  2653                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 338:     if(((void*)0) == str){
  2654   003BEE  5193               	movf	convert_uint16_to_string@str& (0+255),w,b
  2655   003BF0  1194               	iorwf	(convert_uint16_to_string@str+1)& (0+255),w,b
  2656   003BF2  A4D8               	btfss	status,2,c
  2657   003BF4  EFFE  F01D         	goto	u9351
  2658   003BF8  EF00  F01E         	goto	u9350
  2659   003BFC                     u9351:
  2660   003BFC  EF04  F01E         	goto	l10050
  2661   003C00                     u9350:
  2662   003C00                     
  2663                           ; BSR set to: 1
  2664                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 339:         ret=(Std_ReturnType)0x01;
  2665   003C00  0E01               	movlw	1
  2666   003C02  6F9B               	movwf	convert_uint16_to_string@ret& (0+255),b
  2667                           
  2668                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 340:     }
  2669   003C04  EF48  F01E         	goto	l10062
  2670   003C08                     l10050:
  2671                           
  2672                           ; BSR set to: 1
  2673                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 342:         memset(str,' ',5);
  2674   003C08  C193  F00C         	movff	convert_uint16_to_string@str,memset@dest
  2675   003C0C  C194  F00D         	movff	convert_uint16_to_string@str+1,memset@dest+1
  2676   003C10  0E00               	movlw	0
  2677   003C12  6E0F               	movwf	(memset@c+1)^0,c
  2678   003C14  0E20               	movlw	32
  2679   003C16  6E0E               	movwf	memset@c^0,c
  2680   003C18  0E00               	movlw	0
  2681   003C1A  6E11               	movwf	(memset@n+1)^0,c
  2682   003C1C  0E05               	movlw	5
  2683   003C1E  6E10               	movwf	memset@n^0,c
  2684   003C20  EC2A  F017         	call	_memset	;wreg free
  2685   003C24                     
  2686                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 343:         str[5]='\0';
  2687   003C24  0101               	movlb	1	; () banked
  2688   003C26  EE20 F005          	lfsr	2,5
  2689   003C2A  5193               	movf	convert_uint16_to_string@str& (0+255),w,b
  2690   003C2C  26D9               	addwf	fsr2l,f,c
  2691   003C2E  5194               	movf	(convert_uint16_to_string@str+1)& (0+255),w,b
  2692   003C30  22DA               	addwfc	fsr2h,f,c
  2693   003C32  6ADF               	clrf	indf2,c
  2694   003C34                     
  2695                           ; BSR set to: 1
  2696                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 344:         sprintf((char *)Temp_String,"%i",value);
  2697   003C34  0E95               	movlw	low convert_uint16_to_string@Temp_String
  2698   003C36  6E4A               	movwf	sprintf@s^0,c
  2699   003C38  0E01               	movlw	high convert_uint16_to_string@Temp_String
  2700   003C3A  6E4B               	movwf	(sprintf@s+1)^0,c
  2701   003C3C  0E59               	movlw	low STR_1
  2702   003C3E  6E4C               	movwf	sprintf@fmt^0,c
  2703   003C40  0E10               	movlw	high STR_1
  2704   003C42  6E4D               	movwf	(sprintf@fmt+1)^0,c
  2705   003C44  C191  F04E         	movff	convert_uint16_to_string@value,?_sprintf+4
  2706   003C48  C192  F04F         	movff	convert_uint16_to_string@value+1,?_sprintf+5
  2707   003C4C  EC57  F022         	call	_sprintf	;wreg free
  2708                           
  2709                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 345:         while(Temp_String[DataCounter] != '\0'){
  2710   003C50  EF39  F01E         	goto	l10060
  2711   003C54                     l10056:
  2712                           
  2713                           ; BSR set to: 1
  2714                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 346:             str[DataCounter]=Temp_String[DataCoun
      +                          ter];
  2715   003C54  0E95               	movlw	low convert_uint16_to_string@Temp_String
  2716   003C56  259C               	addwf	convert_uint16_to_string@DataCounter& (0+255),w,b
  2717   003C58  6ED9               	movwf	fsr2l,c
  2718   003C5A  6ADA               	clrf	fsr2h,c
  2719   003C5C  0E01               	movlw	high convert_uint16_to_string@Temp_String
  2720   003C5E  22DA               	addwfc	fsr2h,f,c
  2721   003C60  519C               	movf	convert_uint16_to_string@DataCounter& (0+255),w,b
  2722   003C62  2593               	addwf	convert_uint16_to_string@str& (0+255),w,b
  2723   003C64  6EE1               	movwf	fsr1l,c
  2724   003C66  0E00               	movlw	0
  2725   003C68  2194               	addwfc	(convert_uint16_to_string@str+1)& (0+255),w,b
  2726   003C6A  6EE2               	movwf	fsr1h,c
  2727   003C6C  CFDF FFE7          	movff	indf2,indf1
  2728   003C70                     
  2729                           ; BSR set to: 1
  2730                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 347:             DataCounter++;
  2731   003C70  2B9C               	incf	convert_uint16_to_string@DataCounter& (0+255),f,b
  2732   003C72                     l10060:
  2733                           
  2734                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 345:         while(Temp_String[DataCounter] != '\0'){
  2735   003C72  0E95               	movlw	low convert_uint16_to_string@Temp_String
  2736   003C74  0101               	movlb	1	; () banked
  2737   003C76  259C               	addwf	convert_uint16_to_string@DataCounter& (0+255),w,b
  2738   003C78  6ED9               	movwf	fsr2l,c
  2739   003C7A  6ADA               	clrf	fsr2h,c
  2740   003C7C  0E01               	movlw	high convert_uint16_to_string@Temp_String
  2741   003C7E  22DA               	addwfc	fsr2h,f,c
  2742   003C80  50DF               	movf	indf2,w,c
  2743   003C82  A4D8               	btfss	status,2,c
  2744   003C84  EF46  F01E         	goto	u9361
  2745   003C88  EF48  F01E         	goto	u9360
  2746   003C8C                     u9361:
  2747   003C8C  EF2A  F01E         	goto	l10056
  2748   003C90                     u9360:
  2749   003C90                     l10062:
  2750                           
  2751                           ; BSR set to: 1
  2752                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 352:     return ret;
  2753   003C90  519B               	movf	convert_uint16_to_string@ret& (0+255),w,b
  2754   003C92                     
  2755                           ; BSR set to: 1
  2756   003C92  0012               	return		;funcret
  2757   003C94                     __end_of_convert_uint16_to_string:
  2758                           	callstack 0
  2759                           
  2760 ;; *************** function _sprintf *****************
  2761 ;; Defined at:
  2762 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
  2763 ;; Parameters:    Size  Location     Type
  2764 ;;  s               2   73[COMRAM] PTR unsigned char 
  2765 ;;		 -> convert_uint32_to_string@Temp_String(11), convert_uint16_to_string@Temp_String(6), convert_uint8_to_string@Temp_
      +String(4), 
  2766 ;;  fmt             2   75[COMRAM] PTR const unsigned char 
  2767 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2768 ;; Auto vars:     Size  Location     Type
  2769 ;;  f              12   81[COMRAM] struct _IO_FILE
  2770 ;;  ap              2   79[COMRAM] PTR void [1]
  2771 ;;		 -> ?_sprintf(2), 
  2772 ;;  ret             2    0        int 
  2773 ;; Return value:  Size  Location     Type
  2774 ;;                  2   73[COMRAM] int 
  2775 ;; Registers used:
  2776 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2777 ;; Tracked objects:
  2778 ;;		On entry : 0/0
  2779 ;;		On exit  : 0/0
  2780 ;;		Unchanged: 0/0
  2781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2782 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2783 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2785 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2786 ;;Total ram usage:       20 bytes
  2787 ;; Hardware stack levels used: 1
  2788 ;; Hardware stack levels required when called: 11
  2789 ;; This function calls:
  2790 ;;		_vfprintf
  2791 ;; This function is called by:
  2792 ;;		_convert_uint16_to_string
  2793 ;;		_convert_uint8_to_string
  2794 ;;		_convert_uint32_to_string
  2795 ;; This function uses a non-reentrant model
  2796 ;;
  2797                           
  2798                           	psect	text7
  2799   0044AE                     __ptext7:
  2800                           	callstack 0
  2801   0044AE                     _sprintf:
  2802                           	callstack 18
  2803   0044AE  0E4E               	movlw	low (?_sprintf+4)
  2804   0044B0  6E50               	movwf	sprintf@ap^0,c
  2805   0044B2  0E00               	movlw	high (?_sprintf+4)
  2806   0044B4  6E51               	movwf	(sprintf@ap+1)^0,c
  2807   0044B6  C04A  F052         	movff	sprintf@s,sprintf@f
  2808   0044BA  C04B  F053         	movff	sprintf@s+1,sprintf@f+1
  2809   0044BE  0E00               	movlw	0
  2810   0044C0  6E56               	movwf	(sprintf@f+4)^0,c
  2811   0044C2  0E00               	movlw	0
  2812   0044C4  6E55               	movwf	(sprintf@f+3)^0,c
  2813   0044C6  0E00               	movlw	0
  2814   0044C8  6E5D               	movwf	(sprintf@f+11)^0,c
  2815   0044CA  0E00               	movlw	0
  2816   0044CC  6E5C               	movwf	(sprintf@f+10)^0,c
  2817   0044CE  0E52               	movlw	low sprintf@f
  2818   0044D0  6E42               	movwf	vfprintf@fp^0,c
  2819   0044D2  0E00               	movlw	high sprintf@f
  2820   0044D4  6E43               	movwf	(vfprintf@fp+1)^0,c
  2821   0044D6  C04C  F044         	movff	sprintf@fmt,vfprintf@fmt
  2822   0044DA  C04D  F045         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2823   0044DE  0E50               	movlw	low sprintf@ap
  2824   0044E0  6E46               	movwf	vfprintf@ap^0,c
  2825   0044E2  0E00               	movlw	high sprintf@ap
  2826   0044E4  6E47               	movwf	(vfprintf@ap+1)^0,c
  2827   0044E6  EC2F  F022         	call	_vfprintf	;wreg free
  2828   0044EA  5055               	movf	(sprintf@f+3)^0,w,c
  2829   0044EC  244A               	addwf	sprintf@s^0,w,c
  2830   0044EE  6ED9               	movwf	fsr2l,c
  2831   0044F0  5056               	movf	(sprintf@f+4)^0,w,c
  2832   0044F2  204B               	addwfc	(sprintf@s+1)^0,w,c
  2833   0044F4  6EDA               	movwf	fsr2h,c
  2834   0044F6  6ADF               	clrf	indf2,c
  2835   0044F8  0012               	return		;funcret
  2836   0044FA                     __end_of_sprintf:
  2837                           	callstack 0
  2838                           
  2839 ;; *************** function _vfprintf *****************
  2840 ;; Defined at:
  2841 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2842 ;; Parameters:    Size  Location     Type
  2843 ;;  fp              2   65[COMRAM] PTR struct _IO_FILE
  2844 ;;		 -> sprintf@f(12), 
  2845 ;;  fmt             2   67[COMRAM] PTR const unsigned char 
  2846 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2847 ;;  ap              2   69[COMRAM] PTR PTR void 
  2848 ;;		 -> sprintf@ap(2), 
  2849 ;; Auto vars:     Size  Location     Type
  2850 ;;  cfmt            2   71[COMRAM] PTR unsigned char 
  2851 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2852 ;; Return value:  Size  Location     Type
  2853 ;;                  2   65[COMRAM] int 
  2854 ;; Registers used:
  2855 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2856 ;; Tracked objects:
  2857 ;;		On entry : 0/0
  2858 ;;		On exit  : 0/0
  2859 ;;		Unchanged: 0/0
  2860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2861 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2862 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2864 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2865 ;;Total ram usage:        8 bytes
  2866 ;; Hardware stack levels used: 1
  2867 ;; Hardware stack levels required when called: 10
  2868 ;; This function calls:
  2869 ;;		_vfpfcnvrt
  2870 ;; This function is called by:
  2871 ;;		_sprintf
  2872 ;; This function uses a non-reentrant model
  2873 ;;
  2874                           
  2875                           	psect	text8
  2876   00445E                     __ptext8:
  2877                           	callstack 0
  2878   00445E                     _vfprintf:
  2879                           	callstack 18
  2880   00445E                     
  2881                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  2882   00445E  C044  F048         	movff	vfprintf@fmt,vfprintf@cfmt
  2883   004462  C045  F049         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2884                           
  2885                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2886   004466  EF43  F022         	goto	l9990
  2887   00446A                     l9988:
  2888                           
  2889                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2890   00446A  C042  F034         	movff	vfprintf@fp,vfpfcnvrt@fp
  2891   00446E  C043  F035         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2892   004472  0E48               	movlw	low vfprintf@cfmt
  2893   004474  6E36               	movwf	vfpfcnvrt@fmt^0,c
  2894   004476  0E00               	movlw	high vfprintf@cfmt
  2895   004478  6E37               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2896   00447A  C046  F038         	movff	vfprintf@ap,vfpfcnvrt@ap
  2897   00447E  C047  F039         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2898   004482  EC30  F019         	call	_vfpfcnvrt	;wreg free
  2899   004486                     l9990:
  2900                           
  2901                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2902   004486  C048  FFF6         	movff	vfprintf@cfmt,tblptrl
  2903   00448A  C049  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2904   00448E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2905   00448E  6AF8               	clrf	tblptru,c
  2906   004490                     	endif
  2907   004490                     	if	0	;tblptru may be non-zero
  2908   004490                     	endif
  2909   004490  0008               	tblrd		*
  2910   004492  50F5               	movf	tablat,w,c
  2911   004494  0900               	iorlw	0
  2912   004496  A4D8               	btfss	status,2,c
  2913   004498  EF50  F022         	goto	u9281
  2914   00449C  EF52  F022         	goto	u9280
  2915   0044A0                     u9281:
  2916   0044A0  EF35  F022         	goto	l9988
  2917   0044A4                     u9280:
  2918   0044A4                     
  2919                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  2920   0044A4  0E00               	movlw	0
  2921   0044A6  6E43               	movwf	(?_vfprintf+1)^0,c
  2922   0044A8  0E00               	movlw	0
  2923   0044AA  6E42               	movwf	?_vfprintf^0,c
  2924   0044AC  0012               	return		;funcret
  2925   0044AE                     __end_of_vfprintf:
  2926                           	callstack 0
  2927                           
  2928 ;; *************** function _vfpfcnvrt *****************
  2929 ;; Defined at:
  2930 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2931 ;; Parameters:    Size  Location     Type
  2932 ;;  fp              2   51[COMRAM] PTR struct _IO_FILE
  2933 ;;		 -> sprintf@f(12), 
  2934 ;;  fmt             2   53[COMRAM] PTR PTR unsigned char 
  2935 ;;		 -> vfprintf@cfmt(2), 
  2936 ;;  ap              2   55[COMRAM] PTR PTR void 
  2937 ;;		 -> sprintf@ap(2), 
  2938 ;; Auto vars:     Size  Location     Type
  2939 ;;  convarg         4   59[COMRAM] struct .
  2940 ;;  cp              2   63[COMRAM] PTR unsigned char 
  2941 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2942 ;;  i               2    0        int 
  2943 ;;  done            2    0        int 
  2944 ;;  c               1    0        unsigned char 
  2945 ;; Return value:  Size  Location     Type
  2946 ;;                  1    wreg      void 
  2947 ;; Registers used:
  2948 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2949 ;; Tracked objects:
  2950 ;;		On entry : 0/0
  2951 ;;		On exit  : 0/0
  2952 ;;		Unchanged: 0/0
  2953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2954 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2955 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2956 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2957 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2958 ;;Total ram usage:       14 bytes
  2959 ;; Hardware stack levels used: 1
  2960 ;; Hardware stack levels required when called: 9
  2961 ;; This function calls:
  2962 ;;		_dtoa
  2963 ;;		_fputc
  2964 ;; This function is called by:
  2965 ;;		_vfprintf
  2966 ;; This function uses a non-reentrant model
  2967 ;;
  2968                           
  2969                           	psect	text9
  2970   003260                     __ptext9:
  2971                           	callstack 0
  2972   003260                     _vfpfcnvrt:
  2973                           	callstack 18
  2974   003260                     
  2975                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  2976   003260  C036  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2977   003264  C037  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2978   003268  CFDE FFF6          	movff	postinc2,tblptrl
  2979   00326C  CFDD FFF7          	movff	postdec2,tblptrh
  2980   003270                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2981   003270  6AF8               	clrf	tblptru,c
  2982   003272                     	endif
  2983   003272                     	if	0	;tblptru may be non-zero
  2984   003272                     	endif
  2985   003272  0008               	tblrd		*
  2986   003274  50F5               	movf	tablat,w,c
  2987   003276  0A25               	xorlw	37
  2988   003278  A4D8               	btfss	status,2,c
  2989   00327A  EF41  F019         	goto	u9251
  2990   00327E  EF43  F019         	goto	u9250
  2991   003282                     u9251:
  2992   003282  EFB0  F019         	goto	l9980
  2993   003286                     u9250:
  2994   003286                     
  2995                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  2996   003286  C036  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2997   00328A  C037  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2998   00328E  2ADE               	incf	postinc2,f,c
  2999   003290  0E00               	movlw	0
  3000   003292  22DD               	addwfc	postdec2,f,c
  3001   003294                     
  3002                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  3003   003294  0E00               	movlw	0
  3004   003296  0100               	movlb	0	; () banked
  3005   003298  6F87               	movwf	(_width+1)& (0+255),b
  3006   00329A  0E00               	movlw	0
  3007   00329C  6F86               	movwf	_width& (0+255),b
  3008   00329E  C086  F0C4         	movff	_width,_flags
  3009   0032A2                     
  3010                           ; BSR set to: 0
  3011                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  3012   0032A2  6988               	setf	_prec& (0+255),b
  3013   0032A4  6989               	setf	(_prec+1)& (0+255),b
  3014   0032A6                     
  3015                           ; BSR set to: 0
  3016                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  3017   0032A6  C036  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3018   0032AA  C037  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3019   0032AE  CFDE F040          	movff	postinc2,vfpfcnvrt@cp
  3020   0032B2  CFDD F041          	movff	postdec2,vfpfcnvrt@cp+1
  3021   0032B6                     
  3022                           ; BSR set to: 0
  3023                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  3024   0032B6  C040  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3025   0032BA  C041  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3026   0032BE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3027   0032BE  6AF8               	clrf	tblptru,c
  3028   0032C0                     	endif
  3029   0032C0                     	if	0	;tblptru may be non-zero
  3030   0032C0                     	endif
  3031   0032C0  0008               	tblrd		*
  3032   0032C2  50F5               	movf	tablat,w,c
  3033   0032C4  0A64               	xorlw	100
  3034   0032C6  B4D8               	btfsc	status,2,c
  3035   0032C8  EF68  F019         	goto	u9261
  3036   0032CC  EF6A  F019         	goto	u9260
  3037   0032D0                     u9261:
  3038   0032D0  EF79  F019         	goto	l9970
  3039   0032D4                     u9260:
  3040   0032D4                     
  3041                           ; BSR set to: 0
  3042   0032D4  C040  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3043   0032D8  C041  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3044   0032DC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3045   0032DC  6AF8               	clrf	tblptru,c
  3046   0032DE                     	endif
  3047   0032DE                     	if	0	;tblptru may be non-zero
  3048   0032DE                     	endif
  3049   0032DE  0008               	tblrd		*
  3050   0032E0  50F5               	movf	tablat,w,c
  3051   0032E2  0A69               	xorlw	105
  3052   0032E4  A4D8               	btfss	status,2,c
  3053   0032E6  EF77  F019         	goto	u9271
  3054   0032EA  EF79  F019         	goto	u9270
  3055   0032EE                     u9271:
  3056   0032EE  EFA7  F019         	goto	l9976
  3057   0032F2                     u9270:
  3058   0032F2                     l9970:
  3059                           
  3060                           ; BSR set to: 0
  3061                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1256:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3062   0032F2  C038  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3063   0032F6  C039  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3064   0032FA  CFDF F03A          	movff	indf2,??_vfpfcnvrt
  3065   0032FE  0E02               	movlw	2
  3066   003300  26DE               	addwf	postinc2,f,c
  3067   003302  CFDF F03B          	movff	indf2,??_vfpfcnvrt+1
  3068   003306  0E00               	movlw	0
  3069   003308  22DD               	addwfc	postdec2,f,c
  3070   00330A  C03A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3071   00330E  C03B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3072   003312  CFDE F03C          	movff	postinc2,vfpfcnvrt@convarg
  3073   003316  CFDD F03D          	movff	postdec2,vfpfcnvrt@convarg+1
  3074                           
  3075                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  3076   00331A  0E01               	movlw	1
  3077   00331C  2440               	addwf	vfpfcnvrt@cp^0,w,c
  3078   00331E  6E3A               	movwf	??_vfpfcnvrt^0,c
  3079   003320  0E00               	movlw	0
  3080   003322  2041               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  3081   003324  6E3B               	movwf	(??_vfpfcnvrt+1)^0,c
  3082   003326  C036  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3083   00332A  C037  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3084   00332E  C03A  FFDE         	movff	??_vfpfcnvrt,postinc2
  3085   003332  C03B  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  3086   003336                     
  3087                           ; BSR set to: 0
  3088                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  3089   003336  C034  F027         	movff	vfpfcnvrt@fp,dtoa@fp
  3090   00333A  C035  F028         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3091   00333E  C03C  F029         	movff	vfpfcnvrt@convarg,dtoa@d
  3092   003342  C03D  F02A         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  3093   003346  EC5F  F016         	call	_dtoa	;wreg free
  3094   00334A  EFC5  F019         	goto	l2568
  3095   00334E                     l9976:
  3096                           
  3097                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  3098   00334E  C036  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3099   003352  C037  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3100   003356  2ADE               	incf	postinc2,f,c
  3101   003358  0E00               	movlw	0
  3102   00335A  22DD               	addwfc	postdec2,f,c
  3103   00335C  EFC5  F019         	goto	l2568
  3104   003360                     l9980:
  3105                           
  3106                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  3107   003360  C036  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3108   003364  C037  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3109   003368  CFDE FFF6          	movff	postinc2,tblptrl
  3110   00336C  CFDD FFF7          	movff	postdec2,tblptrh
  3111   003370                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3112   003370  6AF8               	clrf	tblptru,c
  3113   003372                     	endif
  3114   003372                     	if	0	;tblptru may be non-zero
  3115   003372                     	endif
  3116   003372  0008               	tblrd		*
  3117   003374  50F5               	movf	tablat,w,c
  3118   003376  6E0C               	movwf	fputc@c^0,c
  3119   003378  6A0D               	clrf	(fputc@c+1)^0,c
  3120   00337A  C034  F00E         	movff	vfpfcnvrt@fp,fputc@fp
  3121   00337E  C035  F00F         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3122   003382  ECC5  F01C         	call	_fputc	;wreg free
  3123   003386  EFA7  F019         	goto	l9976
  3124   00338A                     l2568:
  3125   00338A  0012               	return		;funcret
  3126   00338C                     __end_of_vfpfcnvrt:
  3127                           	callstack 0
  3128                           
  3129 ;; *************** function _dtoa *****************
  3130 ;; Defined at:
  3131 ;;		line 470 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  3132 ;; Parameters:    Size  Location     Type
  3133 ;;  fp              2   38[COMRAM] PTR struct _IO_FILE
  3134 ;;		 -> sprintf@f(12), 
  3135 ;;  d               2   40[COMRAM] int 
  3136 ;; Auto vars:     Size  Location     Type
  3137 ;;  i               2   49[COMRAM] int 
  3138 ;;  w               2   46[COMRAM] int 
  3139 ;;  p               2   44[COMRAM] int 
  3140 ;;  s               1   48[COMRAM] unsigned char 
  3141 ;; Return value:  Size  Location     Type
  3142 ;;                  1    wreg      void 
  3143 ;; Registers used:
  3144 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3145 ;; Tracked objects:
  3146 ;;		On entry : 0/0
  3147 ;;		On exit  : 0/0
  3148 ;;		Unchanged: 0/0
  3149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3150 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3151 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3153 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3154 ;;Total ram usage:       13 bytes
  3155 ;; Hardware stack levels used: 1
  3156 ;; Hardware stack levels required when called: 8
  3157 ;; This function calls:
  3158 ;;		___awdiv
  3159 ;;		___awmod
  3160 ;;		_abs
  3161 ;;		_pad
  3162 ;; This function is called by:
  3163 ;;		_vfpfcnvrt
  3164 ;; This function uses a non-reentrant model
  3165 ;;
  3166                           
  3167                           	psect	text10
  3168   002CBE                     __ptext10:
  3169                           	callstack 0
  3170   002CBE                     _dtoa:
  3171                           	callstack 18
  3172   002CBE                     
  3173                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 471: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           472:  char s;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           476:     s = d < 0 ? 1 : 0;
  3174   002CBE  BE2A               	btfsc	(dtoa@d+1)^0,7,c
  3175   002CC0  EF64  F016         	goto	u9151
  3176   002CC4  EF67  F016         	goto	u9150
  3177   002CC8                     u9151:
  3178   002CC8  0E01               	movlw	1
  3179   002CCA  EF68  F016         	goto	u9160
  3180   002CCE                     u9150:
  3181   002CCE  0E00               	movlw	0
  3182   002CD0                     u9160:
  3183   002CD0  6E31               	movwf	dtoa@s^0,c
  3184   002CD2                     
  3185                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  3186   002CD2  5031               	movf	dtoa@s^0,w,c
  3187   002CD4  B4D8               	btfsc	status,2,c
  3188   002CD6  EF6F  F016         	goto	u9171
  3189   002CDA  EF71  F016         	goto	u9170
  3190   002CDE                     u9171:
  3191   002CDE  EF75  F016         	goto	l9912
  3192   002CE2                     u9170:
  3193   002CE2                     
  3194                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
  3195   002CE2  6C29               	negf	dtoa@d^0,c
  3196   002CE4  1E2A               	comf	(dtoa@d+1)^0,f,c
  3197   002CE6  B0D8               	btfsc	status,0,c
  3198   002CE8  2A2A               	incf	(dtoa@d+1)^0,f,c
  3199   002CEA                     l9912:
  3200                           
  3201                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
  3202   002CEA  0100               	movlb	0	; () banked
  3203   002CEC  BF89               	btfsc	(_prec+1)& (0+255),7,b
  3204   002CEE  EF7D  F016         	goto	u9180
  3205   002CF2  EF7B  F016         	goto	u9181
  3206   002CF6                     u9181:
  3207   002CF6  EF83  F016         	goto	l2547
  3208   002CFA                     u9180:
  3209   002CFA                     
  3210                           ; BSR set to: 0
  3211   002CFA  0E00               	movlw	0
  3212   002CFC  6E2E               	movwf	(dtoa@p+1)^0,c
  3213   002CFE  0E01               	movlw	1
  3214   002D00  6E2D               	movwf	dtoa@p^0,c
  3215   002D02  EF87  F016         	goto	l2549
  3216   002D06                     l2547:
  3217                           
  3218                           ; BSR set to: 0
  3219   002D06  C088  F02D         	movff	_prec,dtoa@p
  3220   002D0A  C089  F02E         	movff	_prec+1,dtoa@p+1
  3221   002D0E                     l2549:
  3222                           
  3223                           ; BSR set to: 0
  3224                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
  3225   002D0E  C086  F02F         	movff	_width,dtoa@w
  3226   002D12  C087  F030         	movff	_width+1,dtoa@w+1
  3227   002D16                     
  3228                           ; BSR set to: 0
  3229                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
  3230   002D16  5031               	movf	dtoa@s^0,w,c
  3231   002D18  B4D8               	btfsc	status,2,c
  3232   002D1A  EF91  F016         	goto	u9191
  3233   002D1E  EF93  F016         	goto	u9190
  3234   002D22                     u9191:
  3235   002D22  EFAA  F016         	goto	l2550
  3236   002D26                     u9190:
  3237   002D26                     
  3238                           ; BSR set to: 0
  3239                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
  3240   002D26  062F               	decf	dtoa@w^0,f,c
  3241   002D28  A0D8               	btfss	status,0,c
  3242   002D2A  0630               	decf	(dtoa@w+1)^0,f,c
  3243   002D2C                     
  3244                           ; BSR set to: 0
  3245                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
  3246   002D2C  5031               	movf	dtoa@s^0,w,c
  3247   002D2E  A4D8               	btfss	status,2,c
  3248   002D30  EF9C  F016         	goto	u9201
  3249   002D34  EF9E  F016         	goto	u9200
  3250   002D38                     u9201:
  3251   002D38  EFA4  F016         	goto	l9924
  3252   002D3C                     u9200:
  3253   002D3C                     
  3254                           ; BSR set to: 0
  3255   002D3C  0E00               	movlw	0
  3256   002D3E  6E2C               	movwf	(_dtoa$5246+1)^0,c
  3257   002D40  0E2B               	movlw	43
  3258   002D42  6E2B               	movwf	_dtoa$5246^0,c
  3259   002D44  EFA8  F016         	goto	l9926
  3260   002D48                     l9924:
  3261                           
  3262                           ; BSR set to: 0
  3263   002D48  0E00               	movlw	0
  3264   002D4A  6E2C               	movwf	(_dtoa$5246+1)^0,c
  3265   002D4C  0E2D               	movlw	45
  3266   002D4E  6E2B               	movwf	_dtoa$5246^0,c
  3267   002D50                     l9926:
  3268                           
  3269                           ; BSR set to: 0
  3270   002D50  C02B  F031         	movff	_dtoa$5246,dtoa@s
  3271   002D54                     l2550:
  3272                           
  3273                           ; BSR set to: 0
  3274                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
  3275   002D54  0E00               	movlw	0
  3276   002D56  6E33               	movwf	(dtoa@i+1)^0,c
  3277   002D58  0E1F               	movlw	31
  3278   002D5A  6E32               	movwf	dtoa@i^0,c
  3279   002D5C                     
  3280                           ; BSR set to: 0
  3281                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
  3282   002D5C  0E00               	movlw	0
  3283   002D5E  0101               	movlb	1	; () banked
  3284   002D60  6F41               	movwf	(_dbuf+31)& (0+255),b
  3285                           
  3286                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  3287   002D62  EFE3  F016         	goto	l9940
  3288   002D66                     l9930:
  3289                           
  3290                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
  3291   002D66  0632               	decf	dtoa@i^0,f,c
  3292   002D68  A0D8               	btfss	status,0,c
  3293   002D6A  0633               	decf	(dtoa@i+1)^0,f,c
  3294   002D6C                     
  3295                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  3296   002D6C  0E22               	movlw	low _dbuf
  3297   002D6E  2432               	addwf	dtoa@i^0,w,c
  3298   002D70  6ED9               	movwf	fsr2l,c
  3299   002D72  0E01               	movlw	high _dbuf
  3300   002D74  2033               	addwfc	(dtoa@i+1)^0,w,c
  3301   002D76  6EDA               	movwf	fsr2h,c
  3302   002D78  C029  F00C         	movff	dtoa@d,___awmod@dividend
  3303   002D7C  C02A  F00D         	movff	dtoa@d+1,___awmod@dividend+1
  3304   002D80  0E00               	movlw	0
  3305   002D82  6E0F               	movwf	(___awmod@divisor+1)^0,c
  3306   002D84  0E0A               	movlw	10
  3307   002D86  6E0E               	movwf	___awmod@divisor^0,c
  3308   002D88  EC01  F01F         	call	___awmod	;wreg free
  3309   002D8C  C00C  F012         	movff	?___awmod,abs@a
  3310   002D90  C00D  F013         	movff	?___awmod+1,abs@a+1
  3311   002D94  EC73  F023         	call	_abs	;wreg free
  3312   002D98  5012               	movf	?_abs^0,w,c
  3313   002D9A  0F30               	addlw	48
  3314   002D9C  6EDF               	movwf	indf2,c
  3315   002D9E                     
  3316                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
  3317   002D9E  062D               	decf	dtoa@p^0,f,c
  3318   002DA0  A0D8               	btfss	status,0,c
  3319   002DA2  062E               	decf	(dtoa@p+1)^0,f,c
  3320   002DA4                     
  3321                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
  3322   002DA4  062F               	decf	dtoa@w^0,f,c
  3323   002DA6  A0D8               	btfss	status,0,c
  3324   002DA8  0630               	decf	(dtoa@w+1)^0,f,c
  3325   002DAA                     
  3326                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
  3327   002DAA  C029  F00C         	movff	dtoa@d,___awdiv@dividend
  3328   002DAE  C02A  F00D         	movff	dtoa@d+1,___awdiv@dividend+1
  3329   002DB2  0E00               	movlw	0
  3330   002DB4  6E0F               	movwf	(___awdiv@divisor+1)^0,c
  3331   002DB6  0E0A               	movlw	10
  3332   002DB8  6E0E               	movwf	___awdiv@divisor^0,c
  3333   002DBA  EC2A  F01D         	call	___awdiv	;wreg free
  3334   002DBE  C00C  F029         	movff	?___awdiv,dtoa@d
  3335   002DC2  C00D  F02A         	movff	?___awdiv+1,dtoa@d+1
  3336   002DC6                     l9940:
  3337                           
  3338                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  3339   002DC6  BE33               	btfsc	(dtoa@i+1)^0,7,c
  3340   002DC8  EFEE  F016         	goto	u9211
  3341   002DCC  5033               	movf	(dtoa@i+1)^0,w,c
  3342   002DCE  E108               	bnz	u9210
  3343   002DD0  0432               	decf	dtoa@i^0,w,c
  3344   002DD2  A0D8               	btfss	status,0,c
  3345   002DD4  EFEE  F016         	goto	u9211
  3346   002DD8  EFF0  F016         	goto	u9210
  3347   002DDC                     u9211:
  3348   002DDC  EF06  F017         	goto	l9946
  3349   002DE0                     u9210:
  3350   002DE0  5029               	movf	dtoa@d^0,w,c
  3351   002DE2  102A               	iorwf	(dtoa@d+1)^0,w,c
  3352   002DE4  A4D8               	btfss	status,2,c
  3353   002DE6  EFF7  F016         	goto	u9221
  3354   002DEA  EFF9  F016         	goto	u9220
  3355   002DEE                     u9221:
  3356   002DEE  EFB3  F016         	goto	l9930
  3357   002DF2                     u9220:
  3358   002DF2  BE2E               	btfsc	(dtoa@p+1)^0,7,c
  3359   002DF4  EF06  F017         	goto	u9230
  3360   002DF8  502E               	movf	(dtoa@p+1)^0,w,c
  3361   002DFA  E106               	bnz	u9231
  3362   002DFC  042D               	decf	dtoa@p^0,w,c
  3363   002DFE  B0D8               	btfsc	status,0,c
  3364   002E00  EF04  F017         	goto	u9231
  3365   002E04  EF06  F017         	goto	u9230
  3366   002E08                     u9231:
  3367   002E08  EFB3  F016         	goto	l9930
  3368   002E0C                     u9230:
  3369   002E0C                     l9946:
  3370                           
  3371                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
  3372   002E0C  5031               	movf	dtoa@s^0,w,c
  3373   002E0E  B4D8               	btfsc	status,2,c
  3374   002E10  EF0C  F017         	goto	u9241
  3375   002E14  EF0E  F017         	goto	u9240
  3376   002E18                     u9241:
  3377   002E18  EF19  F017         	goto	l9952
  3378   002E1C                     u9240:
  3379   002E1C                     
  3380                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
  3381   002E1C  0632               	decf	dtoa@i^0,f,c
  3382   002E1E  A0D8               	btfss	status,0,c
  3383   002E20  0633               	decf	(dtoa@i+1)^0,f,c
  3384   002E22                     
  3385                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
  3386   002E22  0E22               	movlw	low _dbuf
  3387   002E24  2432               	addwf	dtoa@i^0,w,c
  3388   002E26  6ED9               	movwf	fsr2l,c
  3389   002E28  0E01               	movlw	high _dbuf
  3390   002E2A  2033               	addwfc	(dtoa@i+1)^0,w,c
  3391   002E2C  6EDA               	movwf	fsr2h,c
  3392   002E2E  C031  FFDF         	movff	dtoa@s,indf2
  3393   002E32                     l9952:
  3394                           
  3395                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
  3396   002E32  C027  F01C         	movff	dtoa@fp,pad@fp
  3397   002E36  C028  F01D         	movff	dtoa@fp+1,pad@fp+1
  3398   002E3A  0E22               	movlw	low _dbuf
  3399   002E3C  2432               	addwf	dtoa@i^0,w,c
  3400   002E3E  6E1E               	movwf	pad@buf^0,c
  3401   002E40  0E01               	movlw	high _dbuf
  3402   002E42  2033               	addwfc	(dtoa@i+1)^0,w,c
  3403   002E44  6E1F               	movwf	(pad@buf+1)^0,c
  3404   002E46  C02F  F020         	movff	dtoa@w,pad@p
  3405   002E4A  C030  F021         	movff	dtoa@w+1,pad@p+1
  3406   002E4E  EC0F  F021         	call	_pad	;wreg free
  3407   002E52  0012               	return		;funcret
  3408   002E54                     __end_of_dtoa:
  3409                           	callstack 0
  3410                           
  3411 ;; *************** function _pad *****************
  3412 ;; Defined at:
  3413 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  3414 ;; Parameters:    Size  Location     Type
  3415 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  3416 ;;		 -> sprintf@f(12), 
  3417 ;;  buf             2   29[COMRAM] PTR unsigned char 
  3418 ;;		 -> dbuf(32), 
  3419 ;;  p               2   31[COMRAM] int 
  3420 ;; Auto vars:     Size  Location     Type
  3421 ;;  w               2   36[COMRAM] int 
  3422 ;;  i               2   34[COMRAM] int 
  3423 ;; Return value:  Size  Location     Type
  3424 ;;                  1    wreg      void 
  3425 ;; Registers used:
  3426 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3427 ;; Tracked objects:
  3428 ;;		On entry : 0/0
  3429 ;;		On exit  : 0/0
  3430 ;;		Unchanged: 0/0
  3431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3432 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3433 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3434 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3435 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3436 ;;Total ram usage:       11 bytes
  3437 ;; Hardware stack levels used: 1
  3438 ;; Hardware stack levels required when called: 7
  3439 ;; This function calls:
  3440 ;;		_fputc
  3441 ;;		_fputs
  3442 ;; This function is called by:
  3443 ;;		_dtoa
  3444 ;; This function uses a non-reentrant model
  3445 ;;
  3446                           
  3447                           	psect	text11
  3448   00421E                     __ptext11:
  3449                           	callstack 0
  3450   00421E                     _pad:
  3451                           	callstack 18
  3452   00421E                     
  3453                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 164:     w = (p < 0) ? 0 : p;
  3454   00421E  BE21               	btfsc	(pad@p+1)^0,7,c
  3455   004220  EF14  F021         	goto	u9121
  3456   004224  EF16  F021         	goto	u9120
  3457   004228                     u9121:
  3458   004228  EF1C  F021         	goto	l9892
  3459   00422C                     u9120:
  3460   00422C  C020  F025         	movff	pad@p,pad@w
  3461   004230  C021  F026         	movff	pad@p+1,pad@w+1
  3462   004234  EF20  F021         	goto	l2538
  3463   004238                     l9892:
  3464   004238  0E00               	movlw	0
  3465   00423A  6E26               	movwf	(pad@w+1)^0,c
  3466   00423C  0E00               	movlw	0
  3467   00423E  6E25               	movwf	pad@w^0,c
  3468   004240                     l2538:
  3469                           
  3470                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  3471   004240  0E00               	movlw	0
  3472   004242  6E24               	movwf	(pad@i+1)^0,c
  3473   004244  0E00               	movlw	0
  3474   004246  6E23               	movwf	pad@i^0,c
  3475                           
  3476                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  3477   004248  EF32  F021         	goto	l9898
  3478   00424C                     l9894:
  3479                           
  3480                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  3481   00424C  0E00               	movlw	0
  3482   00424E  6E0D               	movwf	(fputc@c+1)^0,c
  3483   004250  0E20               	movlw	32
  3484   004252  6E0C               	movwf	fputc@c^0,c
  3485   004254  C01C  F00E         	movff	pad@fp,fputc@fp
  3486   004258  C01D  F00F         	movff	pad@fp+1,fputc@fp+1
  3487   00425C  ECC5  F01C         	call	_fputc	;wreg free
  3488   004260                     
  3489                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  3490   004260  4A23               	infsnz	pad@i^0,f,c
  3491   004262  2A24               	incf	(pad@i+1)^0,f,c
  3492   004264                     l9898:
  3493                           
  3494                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  3495   004264  5025               	movf	pad@w^0,w,c
  3496   004266  5C23               	subwf	pad@i^0,w,c
  3497   004268  5024               	movf	(pad@i+1)^0,w,c
  3498   00426A  0A80               	xorlw	128
  3499   00426C  6E22               	movwf	??_pad^0,c
  3500   00426E  5026               	movf	(pad@w+1)^0,w,c
  3501   004270  0A80               	xorlw	128
  3502   004272  5822               	subwfb	??_pad^0,w,c
  3503   004274  A0D8               	btfss	status,0,c
  3504   004276  EF3F  F021         	goto	u9131
  3505   00427A  EF41  F021         	goto	u9130
  3506   00427E                     u9131:
  3507   00427E  EF26  F021         	goto	l9894
  3508   004282                     u9130:
  3509   004282                     
  3510                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  3511   004282  C01E  F015         	movff	pad@buf,fputs@s
  3512   004286  C01F  F016         	movff	pad@buf+1,fputs@s+1
  3513   00428A  C01C  F017         	movff	pad@fp,fputs@fp
  3514   00428E  C01D  F018         	movff	pad@fp+1,fputs@fp+1
  3515   004292  ECEC  F022         	call	_fputs	;wreg free
  3516   004296  0012               	return		;funcret
  3517   004298                     __end_of_pad:
  3518                           	callstack 0
  3519                           
  3520 ;; *************** function _fputs *****************
  3521 ;; Defined at:
  3522 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  3523 ;; Parameters:    Size  Location     Type
  3524 ;;  s               2   20[COMRAM] PTR const unsigned char 
  3525 ;;		 -> dbuf(32), 
  3526 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  3527 ;;		 -> sprintf@f(12), 
  3528 ;; Auto vars:     Size  Location     Type
  3529 ;;  i               2   25[COMRAM] int 
  3530 ;;  c               1   24[COMRAM] unsigned char 
  3531 ;; Return value:  Size  Location     Type
  3532 ;;                  2   20[COMRAM] int 
  3533 ;; Registers used:
  3534 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3535 ;; Tracked objects:
  3536 ;;		On entry : 0/0
  3537 ;;		On exit  : 0/0
  3538 ;;		Unchanged: 0/0
  3539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3540 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3541 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3543 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3544 ;;Total ram usage:        7 bytes
  3545 ;; Hardware stack levels used: 1
  3546 ;; Hardware stack levels required when called: 6
  3547 ;; This function calls:
  3548 ;;		_fputc
  3549 ;; This function is called by:
  3550 ;;		_pad
  3551 ;; This function uses a non-reentrant model
  3552 ;;
  3553                           
  3554                           	psect	text12
  3555   0045D8                     __ptext12:
  3556                           	callstack 0
  3557   0045D8                     _fputs:
  3558                           	callstack 18
  3559   0045D8  0E00               	movlw	0
  3560   0045DA  6E1B               	movwf	(fputs@i+1)^0,c
  3561   0045DC  0E00               	movlw	0
  3562   0045DE  6E1A               	movwf	fputs@i^0,c
  3563   0045E0  EFFD  F022         	goto	l9806
  3564   0045E4                     l9802:
  3565   0045E4  C019  F00C         	movff	fputs@c,fputc@c
  3566   0045E8  6A0D               	clrf	(fputc@c+1)^0,c
  3567   0045EA  C017  F00E         	movff	fputs@fp,fputc@fp
  3568   0045EE  C018  F00F         	movff	fputs@fp+1,fputc@fp+1
  3569   0045F2  ECC5  F01C         	call	_fputc	;wreg free
  3570   0045F6  4A1A               	infsnz	fputs@i^0,f,c
  3571   0045F8  2A1B               	incf	(fputs@i+1)^0,f,c
  3572   0045FA                     l9806:
  3573   0045FA  501A               	movf	fputs@i^0,w,c
  3574   0045FC  2415               	addwf	fputs@s^0,w,c
  3575   0045FE  6ED9               	movwf	fsr2l,c
  3576   004600  501B               	movf	(fputs@i+1)^0,w,c
  3577   004602  2016               	addwfc	(fputs@s+1)^0,w,c
  3578   004604  6EDA               	movwf	fsr2h,c
  3579   004606  50DF               	movf	indf2,w,c
  3580   004608  6E19               	movwf	fputs@c^0,c
  3581   00460A  5019               	movf	fputs@c^0,w,c
  3582   00460C  A4D8               	btfss	status,2,c
  3583   00460E  EF0B  F023         	goto	u8991
  3584   004612  EF0D  F023         	goto	u8990
  3585   004616                     u8991:
  3586   004616  EFF2  F022         	goto	l9802
  3587   00461A                     u8990:
  3588   00461A  0012               	return		;funcret
  3589   00461C                     __end_of_fputs:
  3590                           	callstack 0
  3591                           
  3592 ;; *************** function _fputc *****************
  3593 ;; Defined at:
  3594 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  3595 ;; Parameters:    Size  Location     Type
  3596 ;;  c               2   11[COMRAM] int 
  3597 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  3598 ;;		 -> sprintf@f(12), 
  3599 ;; Auto vars:     Size  Location     Type
  3600 ;;		None
  3601 ;; Return value:  Size  Location     Type
  3602 ;;                  2   11[COMRAM] int 
  3603 ;; Registers used:
  3604 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3605 ;; Tracked objects:
  3606 ;;		On entry : 0/0
  3607 ;;		On exit  : 0/0
  3608 ;;		Unchanged: 0/0
  3609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3610 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3612 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3613 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3614 ;;Total ram usage:        9 bytes
  3615 ;; Hardware stack levels used: 1
  3616 ;; Hardware stack levels required when called: 5
  3617 ;; This function calls:
  3618 ;;		_putch
  3619 ;; This function is called by:
  3620 ;;		_pad
  3621 ;;		_vfpfcnvrt
  3622 ;;		_fputs
  3623 ;; This function uses a non-reentrant model
  3624 ;;
  3625                           
  3626                           	psect	text13
  3627   00398A                     __ptext13:
  3628                           	callstack 0
  3629   00398A                     _fputc:
  3630                           	callstack 21
  3631   00398A  500E               	movf	fputc@fp^0,w,c
  3632   00398C  100F               	iorwf	(fputc@fp+1)^0,w,c
  3633   00398E  B4D8               	btfsc	status,2,c
  3634   003990  EFCC  F01C         	goto	u8951
  3635   003994  EFCE  F01C         	goto	u8950
  3636   003998                     u8951:
  3637   003998  EFD7  F01C         	goto	l9790
  3638   00399C                     u8950:
  3639   00399C  500E               	movf	fputc@fp^0,w,c
  3640   00399E  100F               	iorwf	(fputc@fp+1)^0,w,c
  3641   0039A0  A4D8               	btfss	status,2,c
  3642   0039A2  EFD5  F01C         	goto	u8961
  3643   0039A6  EFD7  F01C         	goto	u8960
  3644   0039AA                     u8961:
  3645   0039AA  EFDC  F01C         	goto	l9792
  3646   0039AE                     u8960:
  3647   0039AE                     l9790:
  3648   0039AE  500C               	movf	fputc@c^0,w,c
  3649   0039B0  EC30  F025         	call	_putch
  3650   0039B4  EF29  F01D         	goto	l2593
  3651   0039B8                     l9792:
  3652   0039B8  EE20 F00A          	lfsr	2,10
  3653   0039BC  500E               	movf	fputc@fp^0,w,c
  3654   0039BE  26D9               	addwf	fsr2l,f,c
  3655   0039C0  500F               	movf	(fputc@fp+1)^0,w,c
  3656   0039C2  22DA               	addwfc	fsr2h,f,c
  3657   0039C4  50DE               	movf	postinc2,w,c
  3658   0039C6  10DE               	iorwf	postinc2,w,c
  3659   0039C8  B4D8               	btfsc	status,2,c
  3660   0039CA  EFE9  F01C         	goto	u8971
  3661   0039CE  EFEB  F01C         	goto	u8970
  3662   0039D2                     u8971:
  3663   0039D2  EF06  F01D         	goto	l9796
  3664   0039D6                     u8970:
  3665   0039D6  EE20 F00A          	lfsr	2,10
  3666   0039DA  500E               	movf	fputc@fp^0,w,c
  3667   0039DC  26D9               	addwf	fsr2l,f,c
  3668   0039DE  500F               	movf	(fputc@fp+1)^0,w,c
  3669   0039E0  22DA               	addwfc	fsr2h,f,c
  3670   0039E2  EE10 F003          	lfsr	1,3
  3671   0039E6  500E               	movf	fputc@fp^0,w,c
  3672   0039E8  26E1               	addwf	fsr1l,f,c
  3673   0039EA  500F               	movf	(fputc@fp+1)^0,w,c
  3674   0039EC  22E2               	addwfc	fsr1h,f,c
  3675   0039EE  50DE               	movf	postinc2,w,c
  3676   0039F0  5CE6               	subwf	postinc1,w,c
  3677   0039F2  50E6               	movf	postinc1,w,c
  3678   0039F4  0A80               	xorlw	128
  3679   0039F6  6E14               	movwf	(??_fputc+4)^0,c
  3680   0039F8  50DE               	movf	postinc2,w,c
  3681   0039FA  0A80               	xorlw	128
  3682   0039FC  5814               	subwfb	(??_fputc+4)^0,w,c
  3683   0039FE  B0D8               	btfsc	status,0,c
  3684   003A00  EF04  F01D         	goto	u8981
  3685   003A04  EF06  F01D         	goto	u8980
  3686   003A08                     u8981:
  3687   003A08  EF29  F01D         	goto	l2593
  3688   003A0C                     u8980:
  3689   003A0C                     l9796:
  3690   003A0C  EE20 F003          	lfsr	2,3
  3691   003A10  500E               	movf	fputc@fp^0,w,c
  3692   003A12  26D9               	addwf	fsr2l,f,c
  3693   003A14  500F               	movf	(fputc@fp+1)^0,w,c
  3694   003A16  22DA               	addwfc	fsr2h,f,c
  3695   003A18  CFDE F010          	movff	postinc2,??_fputc
  3696   003A1C  CFDD F011          	movff	postdec2,??_fputc+1
  3697   003A20  C00E  FFD9         	movff	fputc@fp,fsr2l
  3698   003A24  C00F  FFDA         	movff	fputc@fp+1,fsr2h
  3699   003A28  CFDE F012          	movff	postinc2,??_fputc+2
  3700   003A2C  CFDD F013          	movff	postdec2,??_fputc+3
  3701   003A30  5010               	movf	??_fputc^0,w,c
  3702   003A32  2412               	addwf	(??_fputc+2)^0,w,c
  3703   003A34  6ED9               	movwf	fsr2l,c
  3704   003A36  5011               	movf	(??_fputc+1)^0,w,c
  3705   003A38  2013               	addwfc	(??_fputc+3)^0,w,c
  3706   003A3A  6EDA               	movwf	fsr2h,c
  3707   003A3C  C00C  FFDF         	movff	fputc@c,indf2
  3708   003A40  EE20 F003          	lfsr	2,3
  3709   003A44  500E               	movf	fputc@fp^0,w,c
  3710   003A46  26D9               	addwf	fsr2l,f,c
  3711   003A48  500F               	movf	(fputc@fp+1)^0,w,c
  3712   003A4A  22DA               	addwfc	fsr2h,f,c
  3713   003A4C  2ADE               	incf	postinc2,f,c
  3714   003A4E  0E00               	movlw	0
  3715   003A50  22DD               	addwfc	postdec2,f,c
  3716   003A52                     l2593:
  3717   003A52  0012               	return		;funcret
  3718   003A54                     __end_of_fputc:
  3719                           	callstack 0
  3720                           
  3721 ;; *************** function _putch *****************
  3722 ;; Defined at:
  3723 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  3724 ;; Parameters:    Size  Location     Type
  3725 ;;  c               1    wreg     unsigned char 
  3726 ;; Auto vars:     Size  Location     Type
  3727 ;;  c               1    0[COMRAM] unsigned char 
  3728 ;; Return value:  Size  Location     Type
  3729 ;;                  1    wreg      void 
  3730 ;; Registers used:
  3731 ;;		wreg
  3732 ;; Tracked objects:
  3733 ;;		On entry : 0/0
  3734 ;;		On exit  : 0/0
  3735 ;;		Unchanged: 0/0
  3736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3741 ;;Total ram usage:        0 bytes
  3742 ;; Hardware stack levels used: 1
  3743 ;; Hardware stack levels required when called: 4
  3744 ;; This function calls:
  3745 ;;		Nothing
  3746 ;; This function is called by:
  3747 ;;		_fputc
  3748 ;; This function uses a non-reentrant model
  3749 ;;
  3750                           
  3751                           	psect	text14
  3752   004A60                     __ptext14:
  3753                           	callstack 0
  3754   004A60                     _putch:
  3755                           	callstack 21
  3756   004A60  0012               	return		;funcret
  3757   004A62                     __end_of_putch:
  3758                           	callstack 0
  3759                           
  3760 ;; *************** function _abs *****************
  3761 ;; Defined at:
  3762 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  3763 ;; Parameters:    Size  Location     Type
  3764 ;;  a               2   17[COMRAM] int 
  3765 ;; Auto vars:     Size  Location     Type
  3766 ;;		None
  3767 ;; Return value:  Size  Location     Type
  3768 ;;                  2   17[COMRAM] int 
  3769 ;; Registers used:
  3770 ;;		wreg, status,2, status,0
  3771 ;; Tracked objects:
  3772 ;;		On entry : 0/0
  3773 ;;		On exit  : 0/0
  3774 ;;		Unchanged: 0/0
  3775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3776 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3778 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3779 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3780 ;;Total ram usage:        4 bytes
  3781 ;; Hardware stack levels used: 1
  3782 ;; Hardware stack levels required when called: 4
  3783 ;; This function calls:
  3784 ;;		Nothing
  3785 ;; This function is called by:
  3786 ;;		_dtoa
  3787 ;; This function uses a non-reentrant model
  3788 ;;
  3789                           
  3790                           	psect	text15
  3791   0046E6                     __ptext15:
  3792                           	callstack 0
  3793   0046E6                     _abs:
  3794                           	callstack 21
  3795   0046E6  BE13               	btfsc	(abs@a+1)^0,7,c
  3796   0046E8  EF80  F023         	goto	u9140
  3797   0046EC  5013               	movf	(abs@a+1)^0,w,c
  3798   0046EE  E106               	bnz	u9141
  3799   0046F0  0412               	decf	abs@a^0,w,c
  3800   0046F2  B0D8               	btfsc	status,0,c
  3801   0046F4  EF7E  F023         	goto	u9141
  3802   0046F8  EF80  F023         	goto	u9140
  3803   0046FC                     u9141:
  3804   0046FC  EF8E  F023         	goto	l2578
  3805   004700                     u9140:
  3806   004700  C012  F014         	movff	abs@a,??_abs
  3807   004704  C013  F015         	movff	abs@a+1,??_abs+1
  3808   004708  1E14               	comf	??_abs^0,f,c
  3809   00470A  1E15               	comf	(??_abs+1)^0,f,c
  3810   00470C  4A14               	infsnz	??_abs^0,f,c
  3811   00470E  2A15               	incf	(??_abs+1)^0,f,c
  3812   004710  C014  F012         	movff	??_abs,?_abs
  3813   004714  C015  F013         	movff	??_abs+1,?_abs+1
  3814   004718  EF92  F023         	goto	l2581
  3815   00471C                     l2578:
  3816   00471C  C012  F012         	movff	abs@a,?_abs
  3817   004720  C013  F013         	movff	abs@a+1,?_abs+1
  3818   004724                     l2581:
  3819   004724  0012               	return		;funcret
  3820   004726                     __end_of_abs:
  3821                           	callstack 0
  3822                           
  3823 ;; *************** function ___awmod *****************
  3824 ;; Defined at:
  3825 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  3826 ;; Parameters:    Size  Location     Type
  3827 ;;  dividend        2   11[COMRAM] int 
  3828 ;;  divisor         2   13[COMRAM] int 
  3829 ;; Auto vars:     Size  Location     Type
  3830 ;;  sign            1   16[COMRAM] unsigned char 
  3831 ;;  counter         1   15[COMRAM] unsigned char 
  3832 ;; Return value:  Size  Location     Type
  3833 ;;                  2   11[COMRAM] int 
  3834 ;; Registers used:
  3835 ;;		wreg, status,2, status,0
  3836 ;; Tracked objects:
  3837 ;;		On entry : 0/0
  3838 ;;		On exit  : 0/0
  3839 ;;		Unchanged: 0/0
  3840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3841 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3842 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3844 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3845 ;;Total ram usage:        6 bytes
  3846 ;; Hardware stack levels used: 1
  3847 ;; Hardware stack levels required when called: 4
  3848 ;; This function calls:
  3849 ;;		Nothing
  3850 ;; This function is called by:
  3851 ;;		_dtoa
  3852 ;; This function uses a non-reentrant model
  3853 ;;
  3854                           
  3855                           	psect	text16
  3856   003E02                     __ptext16:
  3857                           	callstack 0
  3858   003E02                     ___awmod:
  3859                           	callstack 21
  3860   003E02  0E00               	movlw	0
  3861   003E04  6E11               	movwf	___awmod@sign^0,c
  3862   003E06  BE0D               	btfsc	(___awmod@dividend+1)^0,7,c
  3863   003E08  EF0A  F01F         	goto	u9060
  3864   003E0C  EF08  F01F         	goto	u9061
  3865   003E10                     u9061:
  3866   003E10  EF10  F01F         	goto	l9860
  3867   003E14                     u9060:
  3868   003E14  6C0C               	negf	___awmod@dividend^0,c
  3869   003E16  1E0D               	comf	(___awmod@dividend+1)^0,f,c
  3870   003E18  B0D8               	btfsc	status,0,c
  3871   003E1A  2A0D               	incf	(___awmod@dividend+1)^0,f,c
  3872   003E1C  0E01               	movlw	1
  3873   003E1E  6E11               	movwf	___awmod@sign^0,c
  3874   003E20                     l9860:
  3875   003E20  BE0F               	btfsc	(___awmod@divisor+1)^0,7,c
  3876   003E22  EF17  F01F         	goto	u9070
  3877   003E26  EF15  F01F         	goto	u9071
  3878   003E2A                     u9071:
  3879   003E2A  EF1B  F01F         	goto	l9864
  3880   003E2E                     u9070:
  3881   003E2E  6C0E               	negf	___awmod@divisor^0,c
  3882   003E30  1E0F               	comf	(___awmod@divisor+1)^0,f,c
  3883   003E32  B0D8               	btfsc	status,0,c
  3884   003E34  2A0F               	incf	(___awmod@divisor+1)^0,f,c
  3885   003E36                     l9864:
  3886   003E36  500E               	movf	___awmod@divisor^0,w,c
  3887   003E38  100F               	iorwf	(___awmod@divisor+1)^0,w,c
  3888   003E3A  B4D8               	btfsc	status,2,c
  3889   003E3C  EF22  F01F         	goto	u9081
  3890   003E40  EF24  F01F         	goto	u9080
  3891   003E44                     u9081:
  3892   003E44  EF48  F01F         	goto	l9880
  3893   003E48                     u9080:
  3894   003E48  0E01               	movlw	1
  3895   003E4A  6E10               	movwf	___awmod@counter^0,c
  3896   003E4C  EF2C  F01F         	goto	l9870
  3897   003E50                     l9868:
  3898   003E50  90D8               	bcf	status,0,c
  3899   003E52  360E               	rlcf	___awmod@divisor^0,f,c
  3900   003E54  360F               	rlcf	(___awmod@divisor+1)^0,f,c
  3901   003E56  2A10               	incf	___awmod@counter^0,f,c
  3902   003E58                     l9870:
  3903   003E58  AE0F               	btfss	(___awmod@divisor+1)^0,7,c
  3904   003E5A  EF31  F01F         	goto	u9091
  3905   003E5E  EF33  F01F         	goto	u9090
  3906   003E62                     u9091:
  3907   003E62  EF28  F01F         	goto	l9868
  3908   003E66                     u9090:
  3909   003E66                     l9872:
  3910   003E66  500E               	movf	___awmod@divisor^0,w,c
  3911   003E68  5C0C               	subwf	___awmod@dividend^0,w,c
  3912   003E6A  500F               	movf	(___awmod@divisor+1)^0,w,c
  3913   003E6C  580D               	subwfb	(___awmod@dividend+1)^0,w,c
  3914   003E6E  A0D8               	btfss	status,0,c
  3915   003E70  EF3C  F01F         	goto	u9101
  3916   003E74  EF3E  F01F         	goto	u9100
  3917   003E78                     u9101:
  3918   003E78  EF42  F01F         	goto	l9876
  3919   003E7C                     u9100:
  3920   003E7C  500E               	movf	___awmod@divisor^0,w,c
  3921   003E7E  5E0C               	subwf	___awmod@dividend^0,f,c
  3922   003E80  500F               	movf	(___awmod@divisor+1)^0,w,c
  3923   003E82  5A0D               	subwfb	(___awmod@dividend+1)^0,f,c
  3924   003E84                     l9876:
  3925   003E84  90D8               	bcf	status,0,c
  3926   003E86  320F               	rrcf	(___awmod@divisor+1)^0,f,c
  3927   003E88  320E               	rrcf	___awmod@divisor^0,f,c
  3928   003E8A  2E10               	decfsz	___awmod@counter^0,f,c
  3929   003E8C  EF33  F01F         	goto	l9872
  3930   003E90                     l9880:
  3931   003E90  5011               	movf	___awmod@sign^0,w,c
  3932   003E92  B4D8               	btfsc	status,2,c
  3933   003E94  EF4E  F01F         	goto	u9111
  3934   003E98  EF50  F01F         	goto	u9110
  3935   003E9C                     u9111:
  3936   003E9C  EF54  F01F         	goto	l9884
  3937   003EA0                     u9110:
  3938   003EA0  6C0C               	negf	___awmod@dividend^0,c
  3939   003EA2  1E0D               	comf	(___awmod@dividend+1)^0,f,c
  3940   003EA4  B0D8               	btfsc	status,0,c
  3941   003EA6  2A0D               	incf	(___awmod@dividend+1)^0,f,c
  3942   003EA8                     l9884:
  3943   003EA8  C00C  F00C         	movff	___awmod@dividend,?___awmod
  3944   003EAC  C00D  F00D         	movff	___awmod@dividend+1,?___awmod+1
  3945   003EB0  0012               	return		;funcret
  3946   003EB2                     __end_of___awmod:
  3947                           	callstack 0
  3948                           
  3949 ;; *************** function ___awdiv *****************
  3950 ;; Defined at:
  3951 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  3952 ;; Parameters:    Size  Location     Type
  3953 ;;  dividend        2   11[COMRAM] int 
  3954 ;;  divisor         2   13[COMRAM] int 
  3955 ;; Auto vars:     Size  Location     Type
  3956 ;;  quotient        2   17[COMRAM] int 
  3957 ;;  sign            1   16[COMRAM] unsigned char 
  3958 ;;  counter         1   15[COMRAM] unsigned char 
  3959 ;; Return value:  Size  Location     Type
  3960 ;;                  2   11[COMRAM] int 
  3961 ;; Registers used:
  3962 ;;		wreg, status,2, status,0
  3963 ;; Tracked objects:
  3964 ;;		On entry : 0/0
  3965 ;;		On exit  : 0/0
  3966 ;;		Unchanged: 0/0
  3967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3968 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3969 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3971 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3972 ;;Total ram usage:        8 bytes
  3973 ;; Hardware stack levels used: 1
  3974 ;; Hardware stack levels required when called: 4
  3975 ;; This function calls:
  3976 ;;		Nothing
  3977 ;; This function is called by:
  3978 ;;		_dtoa
  3979 ;; This function uses a non-reentrant model
  3980 ;;
  3981                           
  3982                           	psect	text17
  3983   003A54                     __ptext17:
  3984                           	callstack 0
  3985   003A54                     ___awdiv:
  3986                           	callstack 21
  3987   003A54  0E00               	movlw	0
  3988   003A56  6E11               	movwf	___awdiv@sign^0,c
  3989   003A58  BE0F               	btfsc	(___awdiv@divisor+1)^0,7,c
  3990   003A5A  EF33  F01D         	goto	u9000
  3991   003A5E  EF31  F01D         	goto	u9001
  3992   003A62                     u9001:
  3993   003A62  EF39  F01D         	goto	l9816
  3994   003A66                     u9000:
  3995   003A66  6C0E               	negf	___awdiv@divisor^0,c
  3996   003A68  1E0F               	comf	(___awdiv@divisor+1)^0,f,c
  3997   003A6A  B0D8               	btfsc	status,0,c
  3998   003A6C  2A0F               	incf	(___awdiv@divisor+1)^0,f,c
  3999   003A6E  0E01               	movlw	1
  4000   003A70  6E11               	movwf	___awdiv@sign^0,c
  4001   003A72                     l9816:
  4002   003A72  BE0D               	btfsc	(___awdiv@dividend+1)^0,7,c
  4003   003A74  EF40  F01D         	goto	u9010
  4004   003A78  EF3E  F01D         	goto	u9011
  4005   003A7C                     u9011:
  4006   003A7C  EF46  F01D         	goto	l9822
  4007   003A80                     u9010:
  4008   003A80  6C0C               	negf	___awdiv@dividend^0,c
  4009   003A82  1E0D               	comf	(___awdiv@dividend+1)^0,f,c
  4010   003A84  B0D8               	btfsc	status,0,c
  4011   003A86  2A0D               	incf	(___awdiv@dividend+1)^0,f,c
  4012   003A88  0E01               	movlw	1
  4013   003A8A  1A11               	xorwf	___awdiv@sign^0,f,c
  4014   003A8C                     l9822:
  4015   003A8C  0E00               	movlw	0
  4016   003A8E  6E13               	movwf	(___awdiv@quotient+1)^0,c
  4017   003A90  0E00               	movlw	0
  4018   003A92  6E12               	movwf	___awdiv@quotient^0,c
  4019   003A94  500E               	movf	___awdiv@divisor^0,w,c
  4020   003A96  100F               	iorwf	(___awdiv@divisor+1)^0,w,c
  4021   003A98  B4D8               	btfsc	status,2,c
  4022   003A9A  EF51  F01D         	goto	u9021
  4023   003A9E  EF53  F01D         	goto	u9020
  4024   003AA2                     u9021:
  4025   003AA2  EF7B  F01D         	goto	l9844
  4026   003AA6                     u9020:
  4027   003AA6  0E01               	movlw	1
  4028   003AA8  6E10               	movwf	___awdiv@counter^0,c
  4029   003AAA  EF5B  F01D         	goto	l9830
  4030   003AAE                     l9828:
  4031   003AAE  90D8               	bcf	status,0,c
  4032   003AB0  360E               	rlcf	___awdiv@divisor^0,f,c
  4033   003AB2  360F               	rlcf	(___awdiv@divisor+1)^0,f,c
  4034   003AB4  2A10               	incf	___awdiv@counter^0,f,c
  4035   003AB6                     l9830:
  4036   003AB6  AE0F               	btfss	(___awdiv@divisor+1)^0,7,c
  4037   003AB8  EF60  F01D         	goto	u9031
  4038   003ABC  EF62  F01D         	goto	u9030
  4039   003AC0                     u9031:
  4040   003AC0  EF57  F01D         	goto	l9828
  4041   003AC4                     u9030:
  4042   003AC4                     l9832:
  4043   003AC4  90D8               	bcf	status,0,c
  4044   003AC6  3612               	rlcf	___awdiv@quotient^0,f,c
  4045   003AC8  3613               	rlcf	(___awdiv@quotient+1)^0,f,c
  4046   003ACA  500E               	movf	___awdiv@divisor^0,w,c
  4047   003ACC  5C0C               	subwf	___awdiv@dividend^0,w,c
  4048   003ACE  500F               	movf	(___awdiv@divisor+1)^0,w,c
  4049   003AD0  580D               	subwfb	(___awdiv@dividend+1)^0,w,c
  4050   003AD2  A0D8               	btfss	status,0,c
  4051   003AD4  EF6E  F01D         	goto	u9041
  4052   003AD8  EF70  F01D         	goto	u9040
  4053   003ADC                     u9041:
  4054   003ADC  EF75  F01D         	goto	l9840
  4055   003AE0                     u9040:
  4056   003AE0  500E               	movf	___awdiv@divisor^0,w,c
  4057   003AE2  5E0C               	subwf	___awdiv@dividend^0,f,c
  4058   003AE4  500F               	movf	(___awdiv@divisor+1)^0,w,c
  4059   003AE6  5A0D               	subwfb	(___awdiv@dividend+1)^0,f,c
  4060   003AE8  8012               	bsf	___awdiv@quotient^0,0,c
  4061   003AEA                     l9840:
  4062   003AEA  90D8               	bcf	status,0,c
  4063   003AEC  320F               	rrcf	(___awdiv@divisor+1)^0,f,c
  4064   003AEE  320E               	rrcf	___awdiv@divisor^0,f,c
  4065   003AF0  2E10               	decfsz	___awdiv@counter^0,f,c
  4066   003AF2  EF62  F01D         	goto	l9832
  4067   003AF6                     l9844:
  4068   003AF6  5011               	movf	___awdiv@sign^0,w,c
  4069   003AF8  B4D8               	btfsc	status,2,c
  4070   003AFA  EF81  F01D         	goto	u9051
  4071   003AFE  EF83  F01D         	goto	u9050
  4072   003B02                     u9051:
  4073   003B02  EF87  F01D         	goto	l9848
  4074   003B06                     u9050:
  4075   003B06  6C12               	negf	___awdiv@quotient^0,c
  4076   003B08  1E13               	comf	(___awdiv@quotient+1)^0,f,c
  4077   003B0A  B0D8               	btfsc	status,0,c
  4078   003B0C  2A13               	incf	(___awdiv@quotient+1)^0,f,c
  4079   003B0E                     l9848:
  4080   003B0E  C012  F00C         	movff	___awdiv@quotient,?___awdiv
  4081   003B12  C013  F00D         	movff	___awdiv@quotient+1,?___awdiv+1
  4082   003B16  0012               	return		;funcret
  4083   003B18                     __end_of___awdiv:
  4084                           	callstack 0
  4085                           
  4086 ;; *************** function _memset *****************
  4087 ;; Defined at:
  4088 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\memset.c"
  4089 ;; Parameters:    Size  Location     Type
  4090 ;;  dest            2   11[COMRAM] PTR void 
  4091 ;;		 -> adc_lm35_1_txt(7), 
  4092 ;;  c               2   13[COMRAM] int 
  4093 ;;  n               2   15[COMRAM] unsigned int 
  4094 ;; Auto vars:     Size  Location     Type
  4095 ;;  s               2   21[COMRAM] PTR unsigned char 
  4096 ;;		 -> adc_lm35_1_txt(7), 
  4097 ;;  k               2   19[COMRAM] unsigned int 
  4098 ;; Return value:  Size  Location     Type
  4099 ;;                  2   11[COMRAM] PTR void 
  4100 ;; Registers used:
  4101 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4102 ;; Tracked objects:
  4103 ;;		On entry : 0/0
  4104 ;;		On exit  : 0/0
  4105 ;;		Unchanged: 0/0
  4106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4107 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4108 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4109 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4110 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4111 ;;Total ram usage:       12 bytes
  4112 ;; Hardware stack levels used: 1
  4113 ;; Hardware stack levels required when called: 4
  4114 ;; This function calls:
  4115 ;;		Nothing
  4116 ;; This function is called by:
  4117 ;;		_convert_uint16_to_string
  4118 ;;		_convert_uint8_to_string
  4119 ;;		_convert_uint32_to_string
  4120 ;; This function uses a non-reentrant model
  4121 ;;
  4122                           
  4123                           	psect	text18
  4124   002E54                     __ptext18:
  4125                           	callstack 0
  4126   002E54                     _memset:
  4127                           	callstack 25
  4128   002E54  C00C  F016         	movff	memset@dest,memset@s
  4129   002E58  C00D  F017         	movff	memset@dest+1,memset@s+1
  4130   002E5C  5010               	movf	memset@n^0,w,c
  4131   002E5E  1011               	iorwf	(memset@n+1)^0,w,c
  4132   002E60  A4D8               	btfss	status,2,c
  4133   002E62  EF35  F017         	goto	u9291
  4134   002E66  EF37  F017         	goto	u9290
  4135   002E6A                     u9291:
  4136   002E6A  EF39  F017         	goto	l10000
  4137   002E6E                     u9290:
  4138   002E6E  EFE4  F017         	goto	l2503
  4139   002E72                     l10000:
  4140   002E72  C016  FFD9         	movff	memset@s,fsr2l
  4141   002E76  C017  FFDA         	movff	memset@s+1,fsr2h
  4142   002E7A  C00E  FFDF         	movff	memset@c,indf2
  4143   002E7E  5010               	movf	memset@n^0,w,c
  4144   002E80  2416               	addwf	memset@s^0,w,c
  4145   002E82  6E12               	movwf	??_memset^0,c
  4146   002E84  5011               	movf	(memset@n+1)^0,w,c
  4147   002E86  2017               	addwfc	(memset@s+1)^0,w,c
  4148   002E88  6E13               	movwf	(??_memset+1)^0,c
  4149   002E8A  0EFF               	movlw	255
  4150   002E8C  2412               	addwf	??_memset^0,w,c
  4151   002E8E  6ED9               	movwf	fsr2l,c
  4152   002E90  0EFF               	movlw	255
  4153   002E92  2013               	addwfc	(??_memset+1)^0,w,c
  4154   002E94  6EDA               	movwf	fsr2h,c
  4155   002E96  C00E  FFDF         	movff	memset@c,indf2
  4156   002E9A  5011               	movf	(memset@n+1)^0,w,c
  4157   002E9C  E107               	bnz	u9301
  4158   002E9E  0E03               	movlw	3
  4159   002EA0  5C10               	subwf	memset@n^0,w,c
  4160   002EA2  B0D8               	btfsc	status,0,c
  4161   002EA4  EF56  F017         	goto	u9301
  4162   002EA8  EF58  F017         	goto	u9300
  4163   002EAC                     u9301:
  4164   002EAC  EF5A  F017         	goto	l10006
  4165   002EB0                     u9300:
  4166   002EB0  EFE4  F017         	goto	l2503
  4167   002EB4                     l10006:
  4168   002EB4  EE20 F001          	lfsr	2,1
  4169   002EB8  5016               	movf	memset@s^0,w,c
  4170   002EBA  26D9               	addwf	fsr2l,f,c
  4171   002EBC  5017               	movf	(memset@s+1)^0,w,c
  4172   002EBE  22DA               	addwfc	fsr2h,f,c
  4173   002EC0  C00E  FFDF         	movff	memset@c,indf2
  4174   002EC4  EE20 F002          	lfsr	2,2
  4175   002EC8  5016               	movf	memset@s^0,w,c
  4176   002ECA  26D9               	addwf	fsr2l,f,c
  4177   002ECC  5017               	movf	(memset@s+1)^0,w,c
  4178   002ECE  22DA               	addwfc	fsr2h,f,c
  4179   002ED0  C00E  FFDF         	movff	memset@c,indf2
  4180   002ED4  5010               	movf	memset@n^0,w,c
  4181   002ED6  2416               	addwf	memset@s^0,w,c
  4182   002ED8  6E12               	movwf	??_memset^0,c
  4183   002EDA  5011               	movf	(memset@n+1)^0,w,c
  4184   002EDC  2017               	addwfc	(memset@s+1)^0,w,c
  4185   002EDE  6E13               	movwf	(??_memset+1)^0,c
  4186   002EE0  0EFE               	movlw	254
  4187   002EE2  2412               	addwf	??_memset^0,w,c
  4188   002EE4  6ED9               	movwf	fsr2l,c
  4189   002EE6  0EFF               	movlw	255
  4190   002EE8  2013               	addwfc	(??_memset+1)^0,w,c
  4191   002EEA  6EDA               	movwf	fsr2h,c
  4192   002EEC  C00E  FFDF         	movff	memset@c,indf2
  4193   002EF0  5010               	movf	memset@n^0,w,c
  4194   002EF2  2416               	addwf	memset@s^0,w,c
  4195   002EF4  6E12               	movwf	??_memset^0,c
  4196   002EF6  5011               	movf	(memset@n+1)^0,w,c
  4197   002EF8  2017               	addwfc	(memset@s+1)^0,w,c
  4198   002EFA  6E13               	movwf	(??_memset+1)^0,c
  4199   002EFC  0EFD               	movlw	253
  4200   002EFE  2412               	addwf	??_memset^0,w,c
  4201   002F00  6ED9               	movwf	fsr2l,c
  4202   002F02  0EFF               	movlw	255
  4203   002F04  2013               	addwfc	(??_memset+1)^0,w,c
  4204   002F06  6EDA               	movwf	fsr2h,c
  4205   002F08  C00E  FFDF         	movff	memset@c,indf2
  4206   002F0C  5011               	movf	(memset@n+1)^0,w,c
  4207   002F0E  E107               	bnz	u9311
  4208   002F10  0E07               	movlw	7
  4209   002F12  5C10               	subwf	memset@n^0,w,c
  4210   002F14  B0D8               	btfsc	status,0,c
  4211   002F16  EF8F  F017         	goto	u9311
  4212   002F1A  EF91  F017         	goto	u9310
  4213   002F1E                     u9311:
  4214   002F1E  EF93  F017         	goto	l10012
  4215   002F22                     u9310:
  4216   002F22  EFE4  F017         	goto	l2503
  4217   002F26                     l10012:
  4218   002F26  EE20 F003          	lfsr	2,3
  4219   002F2A  5016               	movf	memset@s^0,w,c
  4220   002F2C  26D9               	addwf	fsr2l,f,c
  4221   002F2E  5017               	movf	(memset@s+1)^0,w,c
  4222   002F30  22DA               	addwfc	fsr2h,f,c
  4223   002F32  C00E  FFDF         	movff	memset@c,indf2
  4224   002F36  5010               	movf	memset@n^0,w,c
  4225   002F38  2416               	addwf	memset@s^0,w,c
  4226   002F3A  6E12               	movwf	??_memset^0,c
  4227   002F3C  5011               	movf	(memset@n+1)^0,w,c
  4228   002F3E  2017               	addwfc	(memset@s+1)^0,w,c
  4229   002F40  6E13               	movwf	(??_memset+1)^0,c
  4230   002F42  0EFC               	movlw	252
  4231   002F44  2412               	addwf	??_memset^0,w,c
  4232   002F46  6ED9               	movwf	fsr2l,c
  4233   002F48  0EFF               	movlw	255
  4234   002F4A  2013               	addwfc	(??_memset+1)^0,w,c
  4235   002F4C  6EDA               	movwf	fsr2h,c
  4236   002F4E  C00E  FFDF         	movff	memset@c,indf2
  4237   002F52  5011               	movf	(memset@n+1)^0,w,c
  4238   002F54  E107               	bnz	u9321
  4239   002F56  0E09               	movlw	9
  4240   002F58  5C10               	subwf	memset@n^0,w,c
  4241   002F5A  B0D8               	btfsc	status,0,c
  4242   002F5C  EFB2  F017         	goto	u9321
  4243   002F60  EFB4  F017         	goto	u9320
  4244   002F64                     u9321:
  4245   002F64  EFB6  F017         	goto	l10018
  4246   002F68                     u9320:
  4247   002F68  EFE4  F017         	goto	l2503
  4248   002F6C                     l10018:
  4249   002F6C  C016  F012         	movff	memset@s,??_memset
  4250   002F70  C017  F013         	movff	memset@s+1,??_memset+1
  4251   002F74  1E12               	comf	??_memset^0,f,c
  4252   002F76  1E13               	comf	(??_memset+1)^0,f,c
  4253   002F78  4A12               	infsnz	??_memset^0,f,c
  4254   002F7A  2A13               	incf	(??_memset+1)^0,f,c
  4255   002F7C  0E03               	movlw	3
  4256   002F7E  1412               	andwf	??_memset^0,w,c
  4257   002F80  6E14               	movwf	memset@k^0,c
  4258   002F82  6A15               	clrf	(memset@k+1)^0,c
  4259   002F84  5014               	movf	memset@k^0,w,c
  4260   002F86  2616               	addwf	memset@s^0,f,c
  4261   002F88  5015               	movf	(memset@k+1)^0,w,c
  4262   002F8A  2217               	addwfc	(memset@s+1)^0,f,c
  4263   002F8C  5014               	movf	memset@k^0,w,c
  4264   002F8E  5E10               	subwf	memset@n^0,f,c
  4265   002F90  5015               	movf	(memset@k+1)^0,w,c
  4266   002F92  5A11               	subwfb	(memset@n+1)^0,f,c
  4267   002F94  0EFC               	movlw	252
  4268   002F96  1610               	andwf	memset@n^0,f,c
  4269   002F98  0EFF               	movlw	255
  4270   002F9A  1611               	andwf	(memset@n+1)^0,f,c
  4271   002F9C  EFDB  F017         	goto	l10026
  4272   002FA0                     l10020:
  4273   002FA0  C016  FFD9         	movff	memset@s,fsr2l
  4274   002FA4  C017  FFDA         	movff	memset@s+1,fsr2h
  4275   002FA8  C00E  FFDF         	movff	memset@c,indf2
  4276   002FAC  0610               	decf	memset@n^0,f,c
  4277   002FAE  A0D8               	btfss	status,0,c
  4278   002FB0  0611               	decf	(memset@n+1)^0,f,c
  4279   002FB2  4A16               	infsnz	memset@s^0,f,c
  4280   002FB4  2A17               	incf	(memset@s+1)^0,f,c
  4281   002FB6                     l10026:
  4282   002FB6  5010               	movf	memset@n^0,w,c
  4283   002FB8  1011               	iorwf	(memset@n+1)^0,w,c
  4284   002FBA  A4D8               	btfss	status,2,c
  4285   002FBC  EFE2  F017         	goto	u9331
  4286   002FC0  EFE4  F017         	goto	u9330
  4287   002FC4                     u9331:
  4288   002FC4  EFD0  F017         	goto	l10020
  4289   002FC8                     u9330:
  4290   002FC8                     l2503:
  4291   002FC8  0012               	return		;funcret
  4292   002FCA                     __end_of_memset:
  4293                           	callstack 0
  4294                           
  4295 ;; *************** function _application_intialize *****************
  4296 ;; Defined at:
  4297 ;;		line 150 in file "application.c"
  4298 ;; Parameters:    Size  Location     Type
  4299 ;;		None
  4300 ;; Auto vars:     Size  Location     Type
  4301 ;;		None
  4302 ;; Return value:  Size  Location     Type
  4303 ;;                  1    wreg      void 
  4304 ;; Registers used:
  4305 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4306 ;; Tracked objects:
  4307 ;;		On entry : 0/0
  4308 ;;		On exit  : 0/0
  4309 ;;		Unchanged: 0/0
  4310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4315 ;;Total ram usage:        0 bytes
  4316 ;; Hardware stack levels used: 1
  4317 ;; Hardware stack levels required when called: 9
  4318 ;; This function calls:
  4319 ;;		_ecu_layer_intialize
  4320 ;; This function is called by:
  4321 ;;		_main
  4322 ;; This function uses a non-reentrant model
  4323 ;;
  4324                           
  4325                           	psect	text19
  4326   004A34                     __ptext19:
  4327                           	callstack 0
  4328   004A34                     _application_intialize:
  4329                           	callstack 21
  4330   004A34                     
  4331                           ;application.c: 151:  ecu_layer_intialize();
  4332   004A34  EC52  F023         	call	_ecu_layer_intialize	;wreg free
  4333   004A38  0012               	return		;funcret
  4334   004A3A                     __end_of_application_intialize:
  4335                           	callstack 0
  4336                           
  4337 ;; *************** function _ecu_layer_intialize *****************
  4338 ;; Defined at:
  4339 ;;		line 195 in file "ECU_Layer/ecu_layer_init.c"
  4340 ;; Parameters:    Size  Location     Type
  4341 ;;		None
  4342 ;; Auto vars:     Size  Location     Type
  4343 ;;  ret             1    0        unsigned char 
  4344 ;; Return value:  Size  Location     Type
  4345 ;;                  1    wreg      void 
  4346 ;; Registers used:
  4347 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4348 ;; Tracked objects:
  4349 ;;		On entry : 0/0
  4350 ;;		On exit  : 0/0
  4351 ;;		Unchanged: 0/0
  4352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4357 ;;Total ram usage:        0 bytes
  4358 ;; Hardware stack levels used: 1
  4359 ;; Hardware stack levels required when called: 8
  4360 ;; This function calls:
  4361 ;;		_ADC_Init
  4362 ;;		_EUSART_ASYNC_Init
  4363 ;;		_dc_motor_initialize
  4364 ;;		_lcd_8bit_initialize
  4365 ;;		_usart_model_init
  4366 ;; This function is called by:
  4367 ;;		_application_intialize
  4368 ;; This function uses a non-reentrant model
  4369 ;;
  4370                           
  4371                           	psect	text20
  4372   0046A4                     __ptext20:
  4373                           	callstack 0
  4374   0046A4                     _ecu_layer_intialize:
  4375                           	callstack 21
  4376   0046A4                     
  4377                           ;ECU_Layer/ecu_layer_init.c: 198:     usart_model_init();
  4378   0046A4  ECF0  F023         	call	_usart_model_init	;wreg free
  4379   0046A8  0EFB               	movlw	low _dc_motor1
  4380   0046AA  6E19               	movwf	dc_motor_initialize@_motor^0,c
  4381   0046AC  0E00               	movlw	high _dc_motor1
  4382   0046AE  6E1A               	movwf	(dc_motor_initialize@_motor+1)^0,c
  4383   0046B0  EC0E  F024         	call	_dc_motor_initialize	;wreg free
  4384   0046B4  0EF9               	movlw	low _dc_motor2
  4385   0046B6  6E19               	movwf	dc_motor_initialize@_motor^0,c
  4386   0046B8  0E00               	movlw	high _dc_motor2
  4387   0046BA  6E1A               	movwf	(dc_motor_initialize@_motor+1)^0,c
  4388   0046BC  EC0E  F024         	call	_dc_motor_initialize	;wreg free
  4389   0046C0  0ECA               	movlw	low _usart_obj
  4390   0046C2  6E59               	movwf	EUSART_ASYNC_Init@_eusart^0,c
  4391   0046C4  0E00               	movlw	high _usart_obj
  4392   0046C6  6E5A               	movwf	(EUSART_ASYNC_Init@_eusart+1)^0,c
  4393   0046C8  EC7D  F022         	call	_EUSART_ASYNC_Init	;wreg free
  4394   0046CC  0EEF               	movlw	low _lcd_2
  4395   0046CE  6E21               	movwf	lcd_8bit_initialize@lcd^0,c
  4396   0046D0  0E00               	movlw	high _lcd_2
  4397   0046D2  6E22               	movwf	(lcd_8bit_initialize@lcd+1)^0,c
  4398   0046D4  ECC6  F019         	call	_lcd_8bit_initialize	;wreg free
  4399   0046D8  0E8A               	movlw	low _adc_1
  4400   0046DA  6E0F               	movwf	ADC_Init@_adc^0,c
  4401   0046DC  0E01               	movlw	high _adc_1
  4402   0046DE  6E10               	movwf	(ADC_Init@_adc+1)^0,c
  4403   0046E0  EC4A  F01E         	call	_ADC_Init	;wreg free
  4404   0046E4  0012               	return		;funcret
  4405   0046E6                     __end_of_ecu_layer_intialize:
  4406                           	callstack 0
  4407                           
  4408 ;; *************** function _usart_model_init *****************
  4409 ;; Defined at:
  4410 ;;		line 95 in file "ECU_Layer/ecu_layer_init.c"
  4411 ;; Parameters:    Size  Location     Type
  4412 ;;		None
  4413 ;; Auto vars:     Size  Location     Type
  4414 ;;		None
  4415 ;; Return value:  Size  Location     Type
  4416 ;;                  1    wreg      void 
  4417 ;; Registers used:
  4418 ;;		wreg, status,2, status,0
  4419 ;; Tracked objects:
  4420 ;;		On entry : 0/0
  4421 ;;		On exit  : 0/0
  4422 ;;		Unchanged: 0/0
  4423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4428 ;;Total ram usage:        0 bytes
  4429 ;; Hardware stack levels used: 1
  4430 ;; Hardware stack levels required when called: 4
  4431 ;; This function calls:
  4432 ;;		Nothing
  4433 ;; This function is called by:
  4434 ;;		_ecu_layer_intialize
  4435 ;; This function uses a non-reentrant model
  4436 ;;
  4437                           
  4438                           	psect	text21
  4439   0047E0                     __ptext21:
  4440                           	callstack 0
  4441   0047E0                     _usart_model_init:
  4442                           	callstack 24
  4443   0047E0                     
  4444                           ;ECU_Layer/ecu_layer_init.c: 97:     usart_obj.baudrate=9600;
  4445   0047E0  0E25               	movlw	37
  4446   0047E2  0100               	movlb	0	; () banked
  4447   0047E4  6FCB               	movwf	(_usart_obj+1)& (0+255),b
  4448   0047E6  0E80               	movlw	128
  4449   0047E8  6FCA               	movwf	_usart_obj& (0+255),b
  4450                           
  4451                           ;ECU_Layer/ecu_layer_init.c: 98:     usart_obj.baudrate_gen_config =BAUDRATE_ASYN_8BIT_L
      +                          OW_SPEED;
  4452   0047EA  0E00               	movlw	0
  4453   0047EC  6FCC               	movwf	(_usart_obj+2)& (0+255),b
  4454   0047EE                     
  4455                           ; BSR set to: 0
  4456                           ;ECU_Layer/ecu_layer_init.c: 100:     usart_obj.usart_tx_cfg.usart_tx_enable=1;
  4457   0047EE  8BCD               	bsf	(_usart_obj+3)& (0+255),5,b
  4458   0047F0                     
  4459                           ; BSR set to: 0
  4460                           ;ECU_Layer/ecu_layer_init.c: 101:     usart_obj.usart_tx_cfg.usart_tx_interrupt_enable=0
      +                          ,
  4461   0047F0  9DCD               	bcf	(_usart_obj+3)& (0+255),6,b
  4462   0047F2                     
  4463                           ; BSR set to: 0
  4464   0047F2  9FCD               	bcf	(_usart_obj+3)& (0+255),7,b
  4465   0047F4                     
  4466                           ; BSR set to: 0
  4467                           ;ECU_Layer/ecu_layer_init.c: 104:     usart_obj.usart_rx_cfg.usart_rx_enable=1;
  4468   0047F4  8BCF               	bsf	(_usart_obj+5)& (0+255),5,b
  4469   0047F6                     
  4470                           ; BSR set to: 0
  4471                           ;ECU_Layer/ecu_layer_init.c: 105:     usart_obj.usart_rx_cfg.usart_rx_interrupt_enable=0
      +                          ,
  4472   0047F6  9DCF               	bcf	(_usart_obj+5)& (0+255),6,b
  4473   0047F8                     
  4474                           ; BSR set to: 0
  4475   0047F8  9FCF               	bcf	(_usart_obj+5)& (0+255),7,b
  4476   0047FA                     
  4477                           ; BSR set to: 0
  4478                           ;ECU_Layer/ecu_layer_init.c: 108:     usart_obj.EUSART_TxDefaultInterruptHandler = ((voi
      +                          d*)0);
  4479   0047FA  0E00               	movlw	0
  4480   0047FC  6FD2               	movwf	(_usart_obj+8)& (0+255),b
  4481   0047FE  0E00               	movlw	0
  4482   004800  6FD3               	movwf	(_usart_obj+9)& (0+255),b
  4483   004802                     
  4484                           ; BSR set to: 0
  4485                           ;ECU_Layer/ecu_layer_init.c: 109:     usart_obj.EUSART_RxDefaultInterruptHandler = ((voi
      +                          d*)0);
  4486   004802  0E00               	movlw	0
  4487   004804  6FD4               	movwf	(_usart_obj+10)& (0+255),b
  4488   004806  0E00               	movlw	0
  4489   004808  6FD5               	movwf	(_usart_obj+11)& (0+255),b
  4490   00480A                     
  4491                           ; BSR set to: 0
  4492                           ;ECU_Layer/ecu_layer_init.c: 110:     usart_obj.EUSART_FramingErrorHandler = ((void*)0);
  4493   00480A  0E00               	movlw	0
  4494   00480C  6FD6               	movwf	(_usart_obj+12)& (0+255),b
  4495   00480E  0E00               	movlw	0
  4496   004810  6FD7               	movwf	(_usart_obj+13)& (0+255),b
  4497   004812                     
  4498                           ; BSR set to: 0
  4499                           ;ECU_Layer/ecu_layer_init.c: 111:     usart_obj.EUSART_OverrunErrorHandler = ((void*)0);
  4500   004812  0E00               	movlw	0
  4501   004814  6FD8               	movwf	(_usart_obj+14)& (0+255),b
  4502   004816  0E00               	movlw	0
  4503   004818  6FD9               	movwf	(_usart_obj+15)& (0+255),b
  4504   00481A                     
  4505                           ; BSR set to: 0
  4506   00481A  0012               	return		;funcret
  4507   00481C                     __end_of_usart_model_init:
  4508                           	callstack 0
  4509                           
  4510 ;; *************** function _lcd_8bit_initialize *****************
  4511 ;; Defined at:
  4512 ;;		line 160 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  4513 ;; Parameters:    Size  Location     Type
  4514 ;;  lcd             2   32[COMRAM] PTR const struct .
  4515 ;;		 -> lcd_2(10), 
  4516 ;; Auto vars:     Size  Location     Type
  4517 ;;  ret             1   37[COMRAM] unsigned char 
  4518 ;;  l_data_pins_    1   36[COMRAM] unsigned char 
  4519 ;; Return value:  Size  Location     Type
  4520 ;;                  1    wreg      unsigned char 
  4521 ;; Registers used:
  4522 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4523 ;; Tracked objects:
  4524 ;;		On entry : 0/0
  4525 ;;		On exit  : 0/0
  4526 ;;		Unchanged: 0/0
  4527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4528 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4529 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4530 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4531 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4532 ;;Total ram usage:        6 bytes
  4533 ;; Hardware stack levels used: 1
  4534 ;; Hardware stack levels required when called: 7
  4535 ;; This function calls:
  4536 ;;		_gpio_pin_intialize
  4537 ;;		_lcd_8bit_send_command
  4538 ;; This function is called by:
  4539 ;;		_ecu_layer_intialize
  4540 ;; This function uses a non-reentrant model
  4541 ;;
  4542                           
  4543                           	psect	text22
  4544   00338C                     __ptext22:
  4545                           	callstack 0
  4546   00338C                     _lcd_8bit_initialize:
  4547                           	callstack 21
  4548   00338C                     
  4549                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 162:     uint8 l_data_pins_counter= 0;
  4550   00338C  0E00               	movlw	0
  4551   00338E  6E25               	movwf	lcd_8bit_initialize@l_data_pins_counter^0,c
  4552   003390                     
  4553                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 163:     if(((void*)0) == lcd){
  4554   003390  5021               	movf	lcd_8bit_initialize@lcd^0,w,c
  4555   003392  1022               	iorwf	(lcd_8bit_initialize@lcd+1)^0,w,c
  4556   003394  A4D8               	btfss	status,2,c
  4557   003396  EFCF  F019         	goto	u6221
  4558   00339A  EFD1  F019         	goto	u6220
  4559   00339E                     u6221:
  4560   00339E  EFD5  F019         	goto	l7314
  4561   0033A2                     u6220:
  4562   0033A2                     
  4563                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 164:         ret=(Std_ReturnType)0x01;
  4564   0033A2  0E01               	movlw	1
  4565   0033A4  6E26               	movwf	lcd_8bit_initialize@ret^0,c
  4566                           
  4567                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 165:     }
  4568   0033A6  EF5A  F01A         	goto	l7350
  4569   0033AA                     l7314:
  4570                           
  4571                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 167:         ret=gpio_pin_intialize(&(lcd->lcd_rs));
  4572   0033AA  C021  F015         	movff	lcd_8bit_initialize@lcd,gpio_pin_intialize@_pin_config
  4573   0033AE  C022  F016         	movff	lcd_8bit_initialize@lcd+1,gpio_pin_intialize@_pin_config+1
  4574   0033B2  ECF9  F021         	call	_gpio_pin_intialize	;wreg free
  4575   0033B6  6E26               	movwf	lcd_8bit_initialize@ret^0,c
  4576                           
  4577                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 168:         ret=gpio_pin_intialize(&(lcd->lcd_en));
  4578   0033B8  0E01               	movlw	1
  4579   0033BA  2421               	addwf	lcd_8bit_initialize@lcd^0,w,c
  4580   0033BC  6E15               	movwf	gpio_pin_intialize@_pin_config^0,c
  4581   0033BE  0E00               	movlw	0
  4582   0033C0  2022               	addwfc	(lcd_8bit_initialize@lcd+1)^0,w,c
  4583   0033C2  6E16               	movwf	(gpio_pin_intialize@_pin_config+1)^0,c
  4584   0033C4  ECF9  F021         	call	_gpio_pin_intialize	;wreg free
  4585   0033C8  6E26               	movwf	lcd_8bit_initialize@ret^0,c
  4586   0033CA                     
  4587                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 170:         for(l_data_pins_counter=0;l_data_pins_cou
      +                          nter<8;++l_data_pins_counter){
  4588   0033CA  0E00               	movlw	0
  4589   0033CC  6E25               	movwf	lcd_8bit_initialize@l_data_pins_counter^0,c
  4590   0033CE                     l7322:
  4591   0033CE  5025               	movf	lcd_8bit_initialize@l_data_pins_counter^0,w,c
  4592   0033D0  2421               	addwf	lcd_8bit_initialize@lcd^0,w,c
  4593   0033D2  6E23               	movwf	??_lcd_8bit_initialize^0,c
  4594   0033D4  0E00               	movlw	0
  4595   0033D6  2022               	addwfc	(lcd_8bit_initialize@lcd+1)^0,w,c
  4596   0033D8  6E24               	movwf	(??_lcd_8bit_initialize+1)^0,c
  4597   0033DA  0E02               	movlw	2
  4598   0033DC  2423               	addwf	??_lcd_8bit_initialize^0,w,c
  4599   0033DE  6E15               	movwf	gpio_pin_intialize@_pin_config^0,c
  4600   0033E0  0E00               	movlw	0
  4601   0033E2  2024               	addwfc	(??_lcd_8bit_initialize+1)^0,w,c
  4602   0033E4  6E16               	movwf	(gpio_pin_intialize@_pin_config+1)^0,c
  4603   0033E6  ECF9  F021         	call	_gpio_pin_intialize	;wreg free
  4604   0033EA                     
  4605                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 173:         }
  4606   0033EA  2A25               	incf	lcd_8bit_initialize@l_data_pins_counter^0,f,c
  4607   0033EC  0E07               	movlw	7
  4608   0033EE  6425               	cpfsgt	lcd_8bit_initialize@l_data_pins_counter^0,c
  4609   0033F0  EFFC  F019         	goto	u6231
  4610   0033F4  EFFE  F019         	goto	u6230
  4611   0033F8                     u6231:
  4612   0033F8  EFE7  F019         	goto	l7322
  4613   0033FC                     u6230:
  4614   0033FC                     
  4615                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 176:          _delay((unsigned long)((20)*(4000000UL/4
      +                          000.0)));
  4616   0033FC  0E1A               	movlw	26
  4617   0033FE  6E23               	movwf	??_lcd_8bit_initialize^0,c
  4618   003400  0EF8               	movlw	248
  4619   003402                     u9487:
  4620   003402  2EE8               	decfsz	wreg,f,c
  4621   003404  D7FE               	bra	u9487
  4622   003406  2E23               	decfsz	??_lcd_8bit_initialize^0,f,c
  4623   003408  D7FC               	bra	u9487
  4624   00340A  D000               	nop2	
  4625   00340C  C021  F018         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  4626   003410  C022  F019         	movff	lcd_8bit_initialize@lcd+1,lcd_8bit_send_command@lcd+1
  4627   003414  0E38               	movlw	56
  4628   003416  6E1A               	movwf	lcd_8bit_send_command@command^0,c
  4629   003418  EC3D  F020         	call	_lcd_8bit_send_command	;wreg free
  4630   00341C                     
  4631                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 179:         _delay((unsigned long)((5)*(4000000UL/400
      +                          0.0)));
  4632   00341C  0E07               	movlw	7
  4633   00341E  6E23               	movwf	??_lcd_8bit_initialize^0,c
  4634   003420  0E7D               	movlw	125
  4635   003422                     u9497:
  4636   003422  2EE8               	decfsz	wreg,f,c
  4637   003424  D7FE               	bra	u9497
  4638   003426  2E23               	decfsz	??_lcd_8bit_initialize^0,f,c
  4639   003428  D7FC               	bra	u9497
  4640   00342A  F000               	nop	
  4641   00342C  C021  F018         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  4642   003430  C022  F019         	movff	lcd_8bit_initialize@lcd+1,lcd_8bit_send_command@lcd+1
  4643   003434  0E38               	movlw	56
  4644   003436  6E1A               	movwf	lcd_8bit_send_command@command^0,c
  4645   003438  EC3D  F020         	call	_lcd_8bit_send_command	;wreg free
  4646   00343C                     
  4647                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 182:          _delay((unsigned long)((150)*(4000000UL/
      +                          4000000.0)));
  4648   00343C  0E32               	movlw	50
  4649   00343E                     u9507:
  4650   00343E  2EE8               	decfsz	wreg,f,c
  4651   003440  D7FE               	bra	u9507
  4652   003442  C021  F018         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  4653   003446  C022  F019         	movff	lcd_8bit_initialize@lcd+1,lcd_8bit_send_command@lcd+1
  4654   00344A  0E38               	movlw	56
  4655   00344C  6E1A               	movwf	lcd_8bit_send_command@command^0,c
  4656   00344E  EC3D  F020         	call	_lcd_8bit_send_command	;wreg free
  4657   003452  C021  F018         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  4658   003456  C022  F019         	movff	lcd_8bit_initialize@lcd+1,lcd_8bit_send_command@lcd+1
  4659   00345A  0E01               	movlw	1
  4660   00345C  6E1A               	movwf	lcd_8bit_send_command@command^0,c
  4661   00345E  EC3D  F020         	call	_lcd_8bit_send_command	;wreg free
  4662   003462  C021  F018         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  4663   003466  C022  F019         	movff	lcd_8bit_initialize@lcd+1,lcd_8bit_send_command@lcd+1
  4664   00346A  0E02               	movlw	2
  4665   00346C  6E1A               	movwf	lcd_8bit_send_command@command^0,c
  4666   00346E  EC3D  F020         	call	_lcd_8bit_send_command	;wreg free
  4667   003472  C021  F018         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  4668   003476  C022  F019         	movff	lcd_8bit_initialize@lcd+1,lcd_8bit_send_command@lcd+1
  4669   00347A  0E06               	movlw	6
  4670   00347C  6E1A               	movwf	lcd_8bit_send_command@command^0,c
  4671   00347E  EC3D  F020         	call	_lcd_8bit_send_command	;wreg free
  4672   003482  C021  F018         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  4673   003486  C022  F019         	movff	lcd_8bit_initialize@lcd+1,lcd_8bit_send_command@lcd+1
  4674   00348A  0E0C               	movlw	12
  4675   00348C  6E1A               	movwf	lcd_8bit_send_command@command^0,c
  4676   00348E  EC3D  F020         	call	_lcd_8bit_send_command	;wreg free
  4677   003492  C021  F018         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  4678   003496  C022  F019         	movff	lcd_8bit_initialize@lcd+1,lcd_8bit_send_command@lcd+1
  4679   00349A  0E38               	movlw	56
  4680   00349C  6E1A               	movwf	lcd_8bit_send_command@command^0,c
  4681   00349E  EC3D  F020         	call	_lcd_8bit_send_command	;wreg free
  4682   0034A2                     
  4683                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 191:         ret=lcd_8bit_send_command(lcd,0x80);
  4684   0034A2  C021  F018         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  4685   0034A6  C022  F019         	movff	lcd_8bit_initialize@lcd+1,lcd_8bit_send_command@lcd+1
  4686   0034AA  0E80               	movlw	128
  4687   0034AC  6E1A               	movwf	lcd_8bit_send_command@command^0,c
  4688   0034AE  EC3D  F020         	call	_lcd_8bit_send_command	;wreg free
  4689   0034B2  6E26               	movwf	lcd_8bit_initialize@ret^0,c
  4690   0034B4                     l7350:
  4691                           
  4692                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 196:     return ret;
  4693   0034B4  5026               	movf	lcd_8bit_initialize@ret^0,w,c
  4694   0034B6  0012               	return		;funcret
  4695   0034B8                     __end_of_lcd_8bit_initialize:
  4696                           	callstack 0
  4697                           
  4698 ;; *************** function _lcd_8bit_send_command *****************
  4699 ;; Defined at:
  4700 ;;		line 200 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  4701 ;; Parameters:    Size  Location     Type
  4702 ;;  lcd             2   23[COMRAM] PTR const struct .
  4703 ;;		 -> lcd_2(10), 
  4704 ;;  command         1   25[COMRAM] unsigned char 
  4705 ;; Auto vars:     Size  Location     Type
  4706 ;;  l_pins_count    1   31[COMRAM] unsigned char 
  4707 ;;  ret             1   30[COMRAM] unsigned char 
  4708 ;; Return value:  Size  Location     Type
  4709 ;;                  1    wreg      unsigned char 
  4710 ;; Registers used:
  4711 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4712 ;; Tracked objects:
  4713 ;;		On entry : 0/0
  4714 ;;		On exit  : 0/0
  4715 ;;		Unchanged: 0/0
  4716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4717 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4718 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4719 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4720 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4721 ;;Total ram usage:        9 bytes
  4722 ;; Hardware stack levels used: 1
  4723 ;; Hardware stack levels required when called: 6
  4724 ;; This function calls:
  4725 ;;		_gpio_pin_write_logic
  4726 ;;		_lcd_8bit_send_enable_signal
  4727 ;; This function is called by:
  4728 ;;		_lcd_8bit_initialize
  4729 ;;		_lcd_8bit_set_cursor
  4730 ;;		_main
  4731 ;;		_lcd_8bit_send_custom_char
  4732 ;; This function uses a non-reentrant model
  4733 ;;
  4734                           
  4735                           	psect	text23
  4736   00407A                     __ptext23:
  4737                           	callstack 0
  4738   00407A                     _lcd_8bit_send_command:
  4739                           	callstack 22
  4740   00407A                     
  4741                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 202:     uint8 l_pins_counter= 0;
  4742   00407A  0E00               	movlw	0
  4743   00407C  6E20               	movwf	lcd_8bit_send_command@l_pins_counter^0,c
  4744   00407E                     
  4745                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 203:     if(((void*)0) == lcd){
  4746   00407E  5018               	movf	lcd_8bit_send_command@lcd^0,w,c
  4747   004080  1019               	iorwf	(lcd_8bit_send_command@lcd+1)^0,w,c
  4748   004082  A4D8               	btfss	status,2,c
  4749   004084  EF46  F020         	goto	u6001
  4750   004088  EF48  F020         	goto	u6000
  4751   00408C                     u6001:
  4752   00408C  EF4C  F020         	goto	l7128
  4753   004090                     u6000:
  4754   004090                     
  4755                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 204:         ret=(Std_ReturnType)0x01;
  4756   004090  0E01               	movlw	1
  4757   004092  6E1F               	movwf	lcd_8bit_send_command@ret^0,c
  4758                           
  4759                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 205:     }
  4760   004094  EF83  F020         	goto	l7144
  4761   004098                     l7128:
  4762   004098  C018  F00C         	movff	lcd_8bit_send_command@lcd,gpio_pin_write_logic@_pin_config
  4763   00409C  C019  F00D         	movff	lcd_8bit_send_command@lcd+1,gpio_pin_write_logic@_pin_config+1
  4764   0040A0  0E00               	movlw	0
  4765   0040A2  6E0E               	movwf	gpio_pin_write_logic@logic^0,c
  4766   0040A4  EC5C  F01A         	call	_gpio_pin_write_logic	;wreg free
  4767   0040A8                     
  4768                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 208:         for(l_pins_counter=0;l_pins_counter<8;++l
      +                          _pins_counter){
  4769   0040A8  0E00               	movlw	0
  4770   0040AA  6E20               	movwf	lcd_8bit_send_command@l_pins_counter^0,c
  4771   0040AC                     l7136:
  4772   0040AC  5020               	movf	lcd_8bit_send_command@l_pins_counter^0,w,c
  4773   0040AE  2418               	addwf	lcd_8bit_send_command@lcd^0,w,c
  4774   0040B0  6E1B               	movwf	??_lcd_8bit_send_command^0,c
  4775   0040B2  0E00               	movlw	0
  4776   0040B4  2019               	addwfc	(lcd_8bit_send_command@lcd+1)^0,w,c
  4777   0040B6  6E1C               	movwf	(??_lcd_8bit_send_command+1)^0,c
  4778   0040B8  0E02               	movlw	2
  4779   0040BA  241B               	addwf	??_lcd_8bit_send_command^0,w,c
  4780   0040BC  6E0C               	movwf	gpio_pin_write_logic@_pin_config^0,c
  4781   0040BE  0E00               	movlw	0
  4782   0040C0  201C               	addwfc	(??_lcd_8bit_send_command+1)^0,w,c
  4783   0040C2  6E0D               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  4784   0040C4  C020  F01D         	movff	lcd_8bit_send_command@l_pins_counter,??_lcd_8bit_send_command+2
  4785   0040C8  C01A  F01E         	movff	lcd_8bit_send_command@command,??_lcd_8bit_send_command+3
  4786   0040CC  2A1D               	incf	(??_lcd_8bit_send_command+2)^0,f,c
  4787   0040CE  EF6B  F020         	goto	u6014
  4788   0040D2                     u6015:
  4789   0040D2  90D8               	bcf	status,0,c
  4790   0040D4  321E               	rrcf	(??_lcd_8bit_send_command+3)^0,f,c
  4791   0040D6                     u6014:
  4792   0040D6  2E1D               	decfsz	(??_lcd_8bit_send_command+2)^0,f,c
  4793   0040D8  EF69  F020         	goto	u6015
  4794   0040DC  501E               	movf	(??_lcd_8bit_send_command+3)^0,w,c
  4795   0040DE  0B01               	andlw	1
  4796   0040E0  6E0E               	movwf	gpio_pin_write_logic@logic^0,c
  4797   0040E2  EC5C  F01A         	call	_gpio_pin_write_logic	;wreg free
  4798   0040E6                     
  4799                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 211:         }
  4800   0040E6  2A20               	incf	lcd_8bit_send_command@l_pins_counter^0,f,c
  4801   0040E8  0E07               	movlw	7
  4802   0040EA  6420               	cpfsgt	lcd_8bit_send_command@l_pins_counter^0,c
  4803   0040EC  EF7A  F020         	goto	u6021
  4804   0040F0  EF7C  F020         	goto	u6020
  4805   0040F4                     u6021:
  4806   0040F4  EF56  F020         	goto	l7136
  4807   0040F8                     u6020:
  4808   0040F8                     
  4809                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 212:         ret=lcd_8bit_send_enable_signal(lcd);
  4810   0040F8  C018  F015         	movff	lcd_8bit_send_command@lcd,lcd_8bit_send_enable_signal@lcd
  4811   0040FC  C019  F016         	movff	lcd_8bit_send_command@lcd+1,lcd_8bit_send_enable_signal@lcd+1
  4812   004100  EC44  F024         	call	_lcd_8bit_send_enable_signal	;wreg free
  4813   004104  6E1F               	movwf	lcd_8bit_send_command@ret^0,c
  4814   004106                     l7144:
  4815                           
  4816                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 218:     return ret;
  4817   004106  501F               	movf	lcd_8bit_send_command@ret^0,w,c
  4818   004108  0012               	return		;funcret
  4819   00410A                     __end_of_lcd_8bit_send_command:
  4820                           	callstack 0
  4821                           
  4822 ;; *************** function _lcd_8bit_send_enable_signal *****************
  4823 ;; Defined at:
  4824 ;;		line 401 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  4825 ;; Parameters:    Size  Location     Type
  4826 ;;  lcd             2   20[COMRAM] PTR const struct .
  4827 ;;		 -> lcd_2(10), 
  4828 ;; Auto vars:     Size  Location     Type
  4829 ;;  ret             1   22[COMRAM] unsigned char 
  4830 ;; Return value:  Size  Location     Type
  4831 ;;                  1    wreg      unsigned char 
  4832 ;; Registers used:
  4833 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4834 ;; Tracked objects:
  4835 ;;		On entry : 0/0
  4836 ;;		On exit  : 0/0
  4837 ;;		Unchanged: 0/0
  4838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4839 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4840 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4842 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4843 ;;Total ram usage:        3 bytes
  4844 ;; Hardware stack levels used: 1
  4845 ;; Hardware stack levels required when called: 5
  4846 ;; This function calls:
  4847 ;;		_gpio_pin_write_logic
  4848 ;; This function is called by:
  4849 ;;		_lcd_8bit_send_command
  4850 ;;		_lcd_8bit_send_char_data
  4851 ;; This function uses a non-reentrant model
  4852 ;;
  4853                           
  4854                           	psect	text24
  4855   004888                     __ptext24:
  4856                           	callstack 0
  4857   004888                     _lcd_8bit_send_enable_signal:
  4858                           	callstack 22
  4859   004888  0E01               	movlw	1
  4860   00488A  2415               	addwf	lcd_8bit_send_enable_signal@lcd^0,w,c
  4861   00488C  6E0C               	movwf	gpio_pin_write_logic@_pin_config^0,c
  4862   00488E  0E00               	movlw	0
  4863   004890  2016               	addwfc	(lcd_8bit_send_enable_signal@lcd+1)^0,w,c
  4864   004892  6E0D               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  4865   004894  0E01               	movlw	1
  4866   004896  6E0E               	movwf	gpio_pin_write_logic@logic^0,c
  4867   004898  EC5C  F01A         	call	_gpio_pin_write_logic	;wreg free
  4868   00489C                     
  4869                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 405:     _delay((unsigned long)((5)*(4000000UL/4000000
      +                          .0)));
  4870   00489C  D000               	nop2		;2 cycle nop
  4871   00489E  D000               	nop2		;2 cycle nop
  4872   0048A0  F000               	nop	
  4873   0048A2                     
  4874                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 406:     ret=gpio_pin_write_logic(&(lcd->lcd_en),GPIO_
      +                          LOW);
  4875   0048A2  0E01               	movlw	1
  4876   0048A4  2415               	addwf	lcd_8bit_send_enable_signal@lcd^0,w,c
  4877   0048A6  6E0C               	movwf	gpio_pin_write_logic@_pin_config^0,c
  4878   0048A8  0E00               	movlw	0
  4879   0048AA  2016               	addwfc	(lcd_8bit_send_enable_signal@lcd+1)^0,w,c
  4880   0048AC  6E0D               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  4881   0048AE  0E00               	movlw	0
  4882   0048B0  6E0E               	movwf	gpio_pin_write_logic@logic^0,c
  4883   0048B2  EC5C  F01A         	call	_gpio_pin_write_logic	;wreg free
  4884   0048B6  6E17               	movwf	lcd_8bit_send_enable_signal@ret^0,c
  4885                           
  4886                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 408:     return ret;
  4887   0048B8  5017               	movf	lcd_8bit_send_enable_signal@ret^0,w,c
  4888   0048BA  0012               	return		;funcret
  4889   0048BC                     __end_of_lcd_8bit_send_enable_signal:
  4890                           	callstack 0
  4891                           
  4892 ;; *************** function _dc_motor_initialize *****************
  4893 ;; Defined at:
  4894 ;;		line 18 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
  4895 ;; Parameters:    Size  Location     Type
  4896 ;;  _motor          2   24[COMRAM] PTR const struct .
  4897 ;;		 -> dc_motor2(2), dc_motor1(2), 
  4898 ;; Auto vars:     Size  Location     Type
  4899 ;;  ret             1    0        unsigned char 
  4900 ;; Return value:  Size  Location     Type
  4901 ;;                  1    wreg      unsigned char 
  4902 ;; Registers used:
  4903 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4904 ;; Tracked objects:
  4905 ;;		On entry : 0/0
  4906 ;;		On exit  : 0/0
  4907 ;;		Unchanged: 0/0
  4908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4909 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4912 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4913 ;;Total ram usage:        2 bytes
  4914 ;; Hardware stack levels used: 1
  4915 ;; Hardware stack levels required when called: 6
  4916 ;; This function calls:
  4917 ;;		_gpio_pin_intialize
  4918 ;; This function is called by:
  4919 ;;		_ecu_layer_intialize
  4920 ;; This function uses a non-reentrant model
  4921 ;;
  4922                           
  4923                           	psect	text25
  4924   00481C                     __ptext25:
  4925                           	callstack 0
  4926   00481C                     _dc_motor_initialize:
  4927                           	callstack 22
  4928   00481C                     
  4929                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 20:     if(((void*)0)== _motor){
  4930   00481C  5019               	movf	dc_motor_initialize@_motor^0,w,c
  4931   00481E  101A               	iorwf	(dc_motor_initialize@_motor+1)^0,w,c
  4932   004820  A4D8               	btfss	status,2,c
  4933   004822  EF15  F024         	goto	u6241
  4934   004826  EF17  F024         	goto	u6240
  4935   00482A                     u6241:
  4936   00482A  EF19  F024         	goto	l7360
  4937   00482E                     u6240:
  4938   00482E                     
  4939                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 22:     }
  4940   00482E  EF27  F024         	goto	l7362
  4941   004832                     l7360:
  4942                           
  4943                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 25:         gpio_pin_intialize(&(_motor->dc_motor_pi
      +                          n[0x00U]));
  4944   004832  C019  F015         	movff	dc_motor_initialize@_motor,gpio_pin_intialize@_pin_config
  4945   004836  C01A  F016         	movff	dc_motor_initialize@_motor+1,gpio_pin_intialize@_pin_config+1
  4946   00483A  ECF9  F021         	call	_gpio_pin_intialize	;wreg free
  4947                           
  4948                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 26:         gpio_pin_intialize(&(_motor->dc_motor_pi
      +                          n[0x01U]));
  4949   00483E  0E01               	movlw	1
  4950   004840  2419               	addwf	dc_motor_initialize@_motor^0,w,c
  4951   004842  6E15               	movwf	gpio_pin_intialize@_pin_config^0,c
  4952   004844  0E00               	movlw	0
  4953   004846  201A               	addwfc	(dc_motor_initialize@_motor+1)^0,w,c
  4954   004848  6E16               	movwf	(gpio_pin_intialize@_pin_config+1)^0,c
  4955   00484A  ECF9  F021         	call	_gpio_pin_intialize	;wreg free
  4956   00484E                     l7362:
  4957                           
  4958                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 29:     return ret;
  4959   00484E  0E01               	movlw	1
  4960   004850  0012               	return		;funcret
  4961   004852                     __end_of_dc_motor_initialize:
  4962                           	callstack 0
  4963                           
  4964 ;; *************** function _gpio_pin_intialize *****************
  4965 ;; Defined at:
  4966 ;;		line 153 in file "MCAL_Layer/GPIO/hal_gpio.c"
  4967 ;; Parameters:    Size  Location     Type
  4968 ;;  _pin_config     2   20[COMRAM] PTR const struct .
  4969 ;;		 -> dc_motor2.dc_motor_pin(2), dc_motor2(2), dc_motor1.dc_motor_pin(2), dc_motor1(2), 
  4970 ;;		 -> lcd_2.lcd_data(8), relay_initialize@pin_obj(1), lcd_2(10), led_initialize@pin_obj(1), 
  4971 ;; Auto vars:     Size  Location     Type
  4972 ;;  ret             1   23[COMRAM] unsigned char 
  4973 ;; Return value:  Size  Location     Type
  4974 ;;                  1    wreg      unsigned char 
  4975 ;; Registers used:
  4976 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4977 ;; Tracked objects:
  4978 ;;		On entry : 0/0
  4979 ;;		On exit  : 0/0
  4980 ;;		Unchanged: 0/0
  4981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4982 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4983 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4984 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4985 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4986 ;;Total ram usage:        4 bytes
  4987 ;; Hardware stack levels used: 1
  4988 ;; Hardware stack levels required when called: 5
  4989 ;; This function calls:
  4990 ;;		_gpio_pin_direction_intialize
  4991 ;;		_gpio_pin_write_logic
  4992 ;; This function is called by:
  4993 ;;		_lcd_8bit_initialize
  4994 ;;		_dc_motor_initialize
  4995 ;;		_seven_segment_initialize
  4996 ;;		_lcd_4bit_initialize
  4997 ;;		_keypad_initialize
  4998 ;;		_led_initialize
  4999 ;;		_relay_initialize
  5000 ;;		_CCP_Init
  5001 ;; This function uses a non-reentrant model
  5002 ;;
  5003                           
  5004                           	psect	text26
  5005   0043F2                     __ptext26:
  5006                           	callstack 0
  5007   0043F2                     _gpio_pin_intialize:
  5008                           	callstack 22
  5009   0043F2                     
  5010                           ;MCAL_Layer/GPIO/hal_gpio.c: 155:     if(((void*)0)==_pin_config || _pin_config->pin >8 
      +                          -1){
  5011   0043F2  5015               	movf	gpio_pin_intialize@_pin_config^0,w,c
  5012   0043F4  1016               	iorwf	(gpio_pin_intialize@_pin_config+1)^0,w,c
  5013   0043F6  B4D8               	btfsc	status,2,c
  5014   0043F8  EF00  F022         	goto	u5981
  5015   0043FC  EF02  F022         	goto	u5980
  5016   004400                     u5981:
  5017   004400  EF13  F022         	goto	l7114
  5018   004404                     u5980:
  5019   004404  C015  FFD9         	movff	gpio_pin_intialize@_pin_config,fsr2l
  5020   004408  C016  FFDA         	movff	gpio_pin_intialize@_pin_config+1,fsr2h
  5021   00440C  30DF               	rrcf	223,w,c
  5022   00440E  32E8               	rrcf	wreg,f,c
  5023   004410  32E8               	rrcf	wreg,f,c
  5024   004412  0B07               	andlw	7
  5025   004414  6E17               	movwf	??_gpio_pin_intialize^0,c
  5026   004416  0E07               	movlw	7
  5027   004418  6417               	cpfsgt	??_gpio_pin_intialize^0,c
  5028   00441A  EF11  F022         	goto	u5991
  5029   00441E  EF13  F022         	goto	u5990
  5030   004422                     u5991:
  5031   004422  EF17  F022         	goto	l7116
  5032   004426                     u5990:
  5033   004426                     l7114:
  5034                           
  5035                           ;MCAL_Layer/GPIO/hal_gpio.c: 156:         ret=(Std_ReturnType)0x01;
  5036   004426  0E01               	movlw	1
  5037   004428  6E18               	movwf	gpio_pin_intialize@ret^0,c
  5038                           
  5039                           ;MCAL_Layer/GPIO/hal_gpio.c: 157:     }
  5040   00442A  EF2D  F022         	goto	l7118
  5041   00442E                     l7116:
  5042                           
  5043                           ;MCAL_Layer/GPIO/hal_gpio.c: 159:          ret=gpio_pin_direction_intialize(_pin_config)
      +                          ;
  5044   00442E  C015  F00C         	movff	gpio_pin_intialize@_pin_config,gpio_pin_direction_intialize@_pin_config
  5045   004432  C016  F00D         	movff	gpio_pin_intialize@_pin_config+1,gpio_pin_direction_intialize@_pin_config+1
  5046   004436  EC92  F018         	call	_gpio_pin_direction_intialize	;wreg free
  5047   00443A  6E18               	movwf	gpio_pin_intialize@ret^0,c
  5048                           
  5049                           ;MCAL_Layer/GPIO/hal_gpio.c: 160:          ret=gpio_pin_write_logic(_pin_config,_pin_con
      +                          fig->logic);
  5050   00443C  C015  F00C         	movff	gpio_pin_intialize@_pin_config,gpio_pin_write_logic@_pin_config
  5051   004440  C016  F00D         	movff	gpio_pin_intialize@_pin_config+1,gpio_pin_write_logic@_pin_config+1
  5052   004444  C015  FFD9         	movff	gpio_pin_intialize@_pin_config,fsr2l
  5053   004448  C016  FFDA         	movff	gpio_pin_intialize@_pin_config+1,fsr2h
  5054   00444C  0E00               	movlw	0
  5055   00444E  BEDF               	btfsc	indf2,7,c
  5056   004450  0E01               	movlw	1
  5057   004452  6E0E               	movwf	gpio_pin_write_logic@logic^0,c
  5058   004454  EC5C  F01A         	call	_gpio_pin_write_logic	;wreg free
  5059   004458  6E18               	movwf	gpio_pin_intialize@ret^0,c
  5060   00445A                     l7118:
  5061                           
  5062                           ;MCAL_Layer/GPIO/hal_gpio.c: 164:      return ret;
  5063   00445A  5018               	movf	gpio_pin_intialize@ret^0,w,c
  5064   00445C  0012               	return		;funcret
  5065   00445E                     __end_of_gpio_pin_intialize:
  5066                           	callstack 0
  5067                           
  5068 ;; *************** function _gpio_pin_write_logic *****************
  5069 ;; Defined at:
  5070 ;;		line 77 in file "MCAL_Layer/GPIO/hal_gpio.c"
  5071 ;; Parameters:    Size  Location     Type
  5072 ;;  _pin_config     2   11[COMRAM] PTR const struct .
  5073 ;;		 -> dc_motor2.dc_motor_pin(2), dc_motor2(2), dc_motor1.dc_motor_pin(2), dc_motor1(2), 
  5074 ;;		 -> lcd_2.lcd_data(8), relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), relay_initialize@pin_obj(1), 
  5075 ;;		 -> lcd_2(10), led_turn_off@pin_obj(1), led_turn_on@pin_obj(1), led_initialize@pin_obj(1), 
  5076 ;;  logic           1   13[COMRAM] enum E2968
  5077 ;; Auto vars:     Size  Location     Type
  5078 ;;  ret             1    0        unsigned char 
  5079 ;; Return value:  Size  Location     Type
  5080 ;;                  1    wreg      unsigned char 
  5081 ;; Registers used:
  5082 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5083 ;; Tracked objects:
  5084 ;;		On entry : 0/0
  5085 ;;		On exit  : 0/0
  5086 ;;		Unchanged: 0/0
  5087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5088 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5090 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5091 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5092 ;;Total ram usage:        9 bytes
  5093 ;; Hardware stack levels used: 1
  5094 ;; Hardware stack levels required when called: 4
  5095 ;; This function calls:
  5096 ;;		Nothing
  5097 ;; This function is called by:
  5098 ;;		_lcd_8bit_send_command
  5099 ;;		_lcd_8bit_send_char_data
  5100 ;;		_lcd_8bit_send_enable_signal
  5101 ;;		_dc_motor_move_right
  5102 ;;		_dc_motor_stop
  5103 ;;		_gpio_pin_intialize
  5104 ;;		_seven_segment_write_number
  5105 ;;		_lcd_4bit_send_command
  5106 ;;		_lcd_4bit_send_char_data
  5107 ;;		_lcd_send_4bits
  5108 ;;		_lcd_4bit_send_enable_signal
  5109 ;;		_dc_motor_move_left
  5110 ;;		_keypad_get_value
  5111 ;;		_led_turn_on
  5112 ;;		_led_turn_off
  5113 ;;		_relay_turn_on
  5114 ;;		_relay_turn_off
  5115 ;; This function uses a non-reentrant model
  5116 ;;
  5117                           
  5118                           	psect	text27
  5119   0034B8                     __ptext27:
  5120                           	callstack 0
  5121   0034B8                     _gpio_pin_write_logic:
  5122                           	callstack 22
  5123   0034B8                     
  5124                           ;MCAL_Layer/GPIO/hal_gpio.c: 79:     if(((void*)0)==_pin_config || _pin_config->pin >8 -
      +                          1){
  5125   0034B8  500C               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  5126   0034BA  100D               	iorwf	(gpio_pin_write_logic@_pin_config+1)^0,w,c
  5127   0034BC  B4D8               	btfsc	status,2,c
  5128   0034BE  EF63  F01A         	goto	u4841
  5129   0034C2  EF65  F01A         	goto	u4840
  5130   0034C6                     u4841:
  5131   0034C6  EF76  F01A         	goto	l6478
  5132   0034CA                     u4840:
  5133   0034CA  C00C  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  5134   0034CE  C00D  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  5135   0034D2  30DF               	rrcf	223,w,c
  5136   0034D4  32E8               	rrcf	wreg,f,c
  5137   0034D6  32E8               	rrcf	wreg,f,c
  5138   0034D8  0B07               	andlw	7
  5139   0034DA  6E0F               	movwf	??_gpio_pin_write_logic^0,c
  5140   0034DC  0E07               	movlw	7
  5141   0034DE  640F               	cpfsgt	??_gpio_pin_write_logic^0,c
  5142   0034E0  EF74  F01A         	goto	u4851
  5143   0034E4  EF76  F01A         	goto	u4850
  5144   0034E8                     u4851:
  5145   0034E8  EFD7  F01A         	goto	l6486
  5146   0034EC                     u4850:
  5147   0034EC                     l6478:
  5148                           
  5149                           ;MCAL_Layer/GPIO/hal_gpio.c: 81:     }
  5150   0034EC  EFEC  F01A         	goto	l6488
  5151   0034F0                     l6480:
  5152                           
  5153                           ;MCAL_Layer/GPIO/hal_gpio.c: 85:                 (*lat_registers[_pin_config->port] |= (
      +                          (uint8)1<<_pin_config->pin));
  5154   0034F0  C00C  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  5155   0034F4  C00D  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  5156   0034F8  30DF               	rrcf	223,w,c
  5157   0034FA  32E8               	rrcf	wreg,f,c
  5158   0034FC  32E8               	rrcf	wreg,f,c
  5159   0034FE  0B07               	andlw	7
  5160   003500  6E0F               	movwf	??_gpio_pin_write_logic^0,c
  5161   003502  0E01               	movlw	1
  5162   003504  6E10               	movwf	(??_gpio_pin_write_logic+1)^0,c
  5163   003506  2A0F               	incf	??_gpio_pin_write_logic^0,f,c
  5164   003508  EF88  F01A         	goto	u4864
  5165   00350C                     u4865:
  5166   00350C  90D8               	bcf	status,0,c
  5167   00350E  3610               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  5168   003510                     u4864:
  5169   003510  2E0F               	decfsz	??_gpio_pin_write_logic^0,f,c
  5170   003512  EF86  F01A         	goto	u4865
  5171   003516  C00C  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  5172   00351A  C00D  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  5173   00351E  50DF               	movf	223,w,c
  5174   003520  0B07               	andlw	7
  5175   003522  6E11               	movwf	(??_gpio_pin_write_logic+2)^0,c
  5176   003524  5011               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  5177   003526  0D02               	mullw	2
  5178   003528  0E70               	movlw	low _lat_registers
  5179   00352A  24F3               	addwf	243,w,c
  5180   00352C  6ED9               	movwf	fsr2l,c
  5181   00352E  0E01               	movlw	high _lat_registers
  5182   003530  20F4               	addwfc	prodh,w,c
  5183   003532  6EDA               	movwf	fsr2h,c
  5184   003534  CFDE F012          	movff	postinc2,??_gpio_pin_write_logic+3
  5185   003538  CFDD F013          	movff	postdec2,??_gpio_pin_write_logic+4
  5186   00353C  C012  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  5187   003540  C013  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  5188   003544  5010               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  5189   003546  12DF               	iorwf	indf2,f,c
  5190                           
  5191                           ;MCAL_Layer/GPIO/hal_gpio.c: 87:                 break;
  5192   003548  EFEC  F01A         	goto	l6488
  5193   00354C                     l6482:
  5194                           
  5195                           ;MCAL_Layer/GPIO/hal_gpio.c: 89:                 (*lat_registers[_pin_config->port] &= ~
      +                           ((uint8)1<<_pin_config->pin)) ;
  5196   00354C  C00C  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  5197   003550  C00D  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  5198   003554  30DF               	rrcf	223,w,c
  5199   003556  32E8               	rrcf	wreg,f,c
  5200   003558  32E8               	rrcf	wreg,f,c
  5201   00355A  0B07               	andlw	7
  5202   00355C  6E0F               	movwf	??_gpio_pin_write_logic^0,c
  5203   00355E  0E01               	movlw	1
  5204   003560  6E10               	movwf	(??_gpio_pin_write_logic+1)^0,c
  5205   003562  2A0F               	incf	??_gpio_pin_write_logic^0,f,c
  5206   003564  EFB6  F01A         	goto	u4874
  5207   003568                     u4875:
  5208   003568  90D8               	bcf	status,0,c
  5209   00356A  3610               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  5210   00356C                     u4874:
  5211   00356C  2E0F               	decfsz	??_gpio_pin_write_logic^0,f,c
  5212   00356E  EFB4  F01A         	goto	u4875
  5213   003572  5010               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  5214   003574  0AFF               	xorlw	255
  5215   003576  6E11               	movwf	(??_gpio_pin_write_logic+2)^0,c
  5216   003578  C00C  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  5217   00357C  C00D  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  5218   003580  50DF               	movf	223,w,c
  5219   003582  0B07               	andlw	7
  5220   003584  6E12               	movwf	(??_gpio_pin_write_logic+3)^0,c
  5221   003586  5012               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  5222   003588  0D02               	mullw	2
  5223   00358A  0E70               	movlw	low _lat_registers
  5224   00358C  24F3               	addwf	243,w,c
  5225   00358E  6ED9               	movwf	fsr2l,c
  5226   003590  0E01               	movlw	high _lat_registers
  5227   003592  20F4               	addwfc	prodh,w,c
  5228   003594  6EDA               	movwf	fsr2h,c
  5229   003596  CFDE F013          	movff	postinc2,??_gpio_pin_write_logic+4
  5230   00359A  CFDD F014          	movff	postdec2,??_gpio_pin_write_logic+5
  5231   00359E  C013  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  5232   0035A2  C014  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  5233   0035A6  5011               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  5234   0035A8  16DF               	andwf	indf2,f,c
  5235                           
  5236                           ;MCAL_Layer/GPIO/hal_gpio.c: 91:                 break;
  5237   0035AA  EFEC  F01A         	goto	l6488
  5238   0035AE                     l6486:
  5239   0035AE  500E               	movf	gpio_pin_write_logic@logic^0,w,c
  5240   0035B0  6E0F               	movwf	??_gpio_pin_write_logic^0,c
  5241   0035B2  6A10               	clrf	(??_gpio_pin_write_logic+1)^0,c
  5242                           
  5243                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5244                           ; Switch size 1, requested type "simple"
  5245                           ; Number of cases is 1, Range of values is 0 to 0
  5246                           ; switch strategies available:
  5247                           ; Name         Instructions Cycles
  5248                           ; simple_byte            4     3 (average)
  5249                           ;	Chosen strategy is simple_byte
  5250   0035B4  5010               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  5251   0035B6  0A00               	xorlw	0	; case 0
  5252   0035B8  B4D8               	btfsc	status,2,c
  5253   0035BA  EFE1  F01A         	goto	l10302
  5254   0035BE  EF76  F01A         	goto	l6478
  5255   0035C2                     l10302:
  5256                           
  5257                           ; Switch size 1, requested type "simple"
  5258                           ; Number of cases is 2, Range of values is 0 to 1
  5259                           ; switch strategies available:
  5260                           ; Name         Instructions Cycles
  5261                           ; simple_byte            7     4 (average)
  5262                           ;	Chosen strategy is simple_byte
  5263   0035C2  500F               	movf	??_gpio_pin_write_logic^0,w,c
  5264   0035C4  0A00               	xorlw	0	; case 0
  5265   0035C6  B4D8               	btfsc	status,2,c
  5266   0035C8  EFA6  F01A         	goto	l6482
  5267   0035CC  0A01               	xorlw	1	; case 1
  5268   0035CE  B4D8               	btfsc	status,2,c
  5269   0035D0  EF78  F01A         	goto	l6480
  5270   0035D4  EF76  F01A         	goto	l6478
  5271   0035D8                     l6488:
  5272                           
  5273                           ;MCAL_Layer/GPIO/hal_gpio.c: 96:      return ret;
  5274   0035D8  0E01               	movlw	1
  5275   0035DA  0012               	return		;funcret
  5276   0035DC                     __end_of_gpio_pin_write_logic:
  5277                           	callstack 0
  5278                           
  5279 ;; *************** function _gpio_pin_direction_intialize *****************
  5280 ;; Defined at:
  5281 ;;		line 24 in file "MCAL_Layer/GPIO/hal_gpio.c"
  5282 ;; Parameters:    Size  Location     Type
  5283 ;;  _pin_config     2   11[COMRAM] PTR const struct .
  5284 ;;		 -> dc_motor2.dc_motor_pin(2), dc_motor2(2), dc_motor1.dc_motor_pin(2), dc_motor1(2), 
  5285 ;;		 -> lcd_2.lcd_data(8), relay_initialize@pin_obj(1), lcd_2(10), led_initialize@pin_obj(1), 
  5286 ;; Auto vars:     Size  Location     Type
  5287 ;;  ret             1    0        unsigned char 
  5288 ;; Return value:  Size  Location     Type
  5289 ;;                  1    wreg      unsigned char 
  5290 ;; Registers used:
  5291 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5292 ;; Tracked objects:
  5293 ;;		On entry : 0/0
  5294 ;;		On exit  : 0/0
  5295 ;;		Unchanged: 0/0
  5296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5297 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5299 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5300 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5301 ;;Total ram usage:        8 bytes
  5302 ;; Hardware stack levels used: 1
  5303 ;; Hardware stack levels required when called: 4
  5304 ;; This function calls:
  5305 ;;		Nothing
  5306 ;; This function is called by:
  5307 ;;		_gpio_pin_intialize
  5308 ;;		_button_initialize
  5309 ;;		_keypad_initialize
  5310 ;;		_Interrupt_INTx_Pin_Init
  5311 ;;		_Interrupt_RBx_Pin_Init
  5312 ;; This function uses a non-reentrant model
  5313 ;;
  5314                           
  5315                           	psect	text28
  5316   003124                     __ptext28:
  5317                           	callstack 0
  5318   003124                     _gpio_pin_direction_intialize:
  5319                           	callstack 22
  5320   003124                     
  5321                           ;MCAL_Layer/GPIO/hal_gpio.c: 27:     if(((void*)0)==_pin_config || _pin_config->pin >8 -
      +                          1){
  5322   003124  500C               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  5323   003126  100D               	iorwf	(gpio_pin_direction_intialize@_pin_config+1)^0,w,c
  5324   003128  B4D8               	btfsc	status,2,c
  5325   00312A  EF99  F018         	goto	u5031
  5326   00312E  EF9B  F018         	goto	u5030
  5327   003132                     u5031:
  5328   003132  EFAC  F018         	goto	l6600
  5329   003136                     u5030:
  5330   003136  C00C  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  5331   00313A  C00D  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  5332   00313E  30DF               	rrcf	223,w,c
  5333   003140  32E8               	rrcf	wreg,f,c
  5334   003142  32E8               	rrcf	wreg,f,c
  5335   003144  0B07               	andlw	7
  5336   003146  6E0E               	movwf	??_gpio_pin_direction_intialize^0,c
  5337   003148  0E07               	movlw	7
  5338   00314A  640E               	cpfsgt	??_gpio_pin_direction_intialize^0,c
  5339   00314C  EFAA  F018         	goto	u5041
  5340   003150  EFAC  F018         	goto	u5040
  5341   003154                     u5041:
  5342   003154  EF0D  F019         	goto	l6608
  5343   003158                     u5040:
  5344   003158                     l6600:
  5345                           
  5346                           ;MCAL_Layer/GPIO/hal_gpio.c: 29:     }
  5347   003158  EF2E  F019         	goto	l6610
  5348   00315C                     l6602:
  5349                           
  5350                           ;MCAL_Layer/GPIO/hal_gpio.c: 33:            (*tris_registers[_pin_config->port] &= ~ ((u
      +                          int8)1<<_pin_config->pin)) ;
  5351   00315C  C00C  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  5352   003160  C00D  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  5353   003164  30DF               	rrcf	223,w,c
  5354   003166  32E8               	rrcf	wreg,f,c
  5355   003168  32E8               	rrcf	wreg,f,c
  5356   00316A  0B07               	andlw	7
  5357   00316C  6E0E               	movwf	??_gpio_pin_direction_intialize^0,c
  5358   00316E  0E01               	movlw	1
  5359   003170  6E0F               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  5360   003172  2A0E               	incf	??_gpio_pin_direction_intialize^0,f,c
  5361   003174  EFBE  F018         	goto	u5054
  5362   003178                     u5055:
  5363   003178  90D8               	bcf	status,0,c
  5364   00317A  360F               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  5365   00317C                     u5054:
  5366   00317C  2E0E               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  5367   00317E  EFBC  F018         	goto	u5055
  5368   003182  500F               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  5369   003184  0AFF               	xorlw	255
  5370   003186  6E10               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  5371   003188  C00C  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  5372   00318C  C00D  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  5373   003190  50DF               	movf	223,w,c
  5374   003192  0B07               	andlw	7
  5375   003194  6E11               	movwf	(??_gpio_pin_direction_intialize+3)^0,c
  5376   003196  5011               	movf	(??_gpio_pin_direction_intialize+3)^0,w,c
  5377   003198  0D02               	mullw	2
  5378   00319A  0E7A               	movlw	low _tris_registers
  5379   00319C  24F3               	addwf	243,w,c
  5380   00319E  6ED9               	movwf	fsr2l,c
  5381   0031A0  0E01               	movlw	high _tris_registers
  5382   0031A2  20F4               	addwfc	prodh,w,c
  5383   0031A4  6EDA               	movwf	fsr2h,c
  5384   0031A6  CFDE F012          	movff	postinc2,??_gpio_pin_direction_intialize+4
  5385   0031AA  CFDD F013          	movff	postdec2,??_gpio_pin_direction_intialize+5
  5386   0031AE  C012  FFD9         	movff	??_gpio_pin_direction_intialize+4,fsr2l
  5387   0031B2  C013  FFDA         	movff	??_gpio_pin_direction_intialize+5,fsr2h
  5388   0031B6  5010               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  5389   0031B8  16DF               	andwf	indf2,f,c
  5390                           
  5391                           ;MCAL_Layer/GPIO/hal_gpio.c: 34:                 break;
  5392   0031BA  EF2E  F019         	goto	l6610
  5393   0031BE                     l6604:
  5394                           
  5395                           ;MCAL_Layer/GPIO/hal_gpio.c: 36:             (*tris_registers[_pin_config->port] |= ((ui
      +                          nt8)1<<_pin_config->pin));
  5396   0031BE  C00C  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  5397   0031C2  C00D  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  5398   0031C6  30DF               	rrcf	223,w,c
  5399   0031C8  32E8               	rrcf	wreg,f,c
  5400   0031CA  32E8               	rrcf	wreg,f,c
  5401   0031CC  0B07               	andlw	7
  5402   0031CE  6E0E               	movwf	??_gpio_pin_direction_intialize^0,c
  5403   0031D0  0E01               	movlw	1
  5404   0031D2  6E0F               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  5405   0031D4  2A0E               	incf	??_gpio_pin_direction_intialize^0,f,c
  5406   0031D6  EFEF  F018         	goto	u5064
  5407   0031DA                     u5065:
  5408   0031DA  90D8               	bcf	status,0,c
  5409   0031DC  360F               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  5410   0031DE                     u5064:
  5411   0031DE  2E0E               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  5412   0031E0  EFED  F018         	goto	u5065
  5413   0031E4  C00C  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  5414   0031E8  C00D  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  5415   0031EC  50DF               	movf	223,w,c
  5416   0031EE  0B07               	andlw	7
  5417   0031F0  6E10               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  5418   0031F2  5010               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  5419   0031F4  0D02               	mullw	2
  5420   0031F6  0E7A               	movlw	low _tris_registers
  5421   0031F8  24F3               	addwf	243,w,c
  5422   0031FA  6ED9               	movwf	fsr2l,c
  5423   0031FC  0E01               	movlw	high _tris_registers
  5424   0031FE  20F4               	addwfc	prodh,w,c
  5425   003200  6EDA               	movwf	fsr2h,c
  5426   003202  CFDE F011          	movff	postinc2,??_gpio_pin_direction_intialize+3
  5427   003206  CFDD F012          	movff	postdec2,??_gpio_pin_direction_intialize+4
  5428   00320A  C011  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  5429   00320E  C012  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  5430   003212  500F               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  5431   003214  12DF               	iorwf	indf2,f,c
  5432                           
  5433                           ;MCAL_Layer/GPIO/hal_gpio.c: 37:                 break;
  5434   003216  EF2E  F019         	goto	l6610
  5435   00321A                     l6608:
  5436   00321A  C00C  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  5437   00321E  C00D  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  5438   003222  BCDF               	btfsc	indf2,6,c
  5439   003224  EF16  F019         	goto	u5071
  5440   003228  EF19  F019         	goto	u5070
  5441   00322C                     u5071:
  5442   00322C  0E01               	movlw	1
  5443   00322E  EF1A  F019         	goto	u5080
  5444   003232                     u5070:
  5445   003232  0E00               	movlw	0
  5446   003234                     u5080:
  5447   003234  6E0E               	movwf	??_gpio_pin_direction_intialize^0,c
  5448   003236  6A0F               	clrf	(??_gpio_pin_direction_intialize+1)^0,c
  5449                           
  5450                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5451                           ; Switch size 1, requested type "simple"
  5452                           ; Number of cases is 1, Range of values is 0 to 0
  5453                           ; switch strategies available:
  5454                           ; Name         Instructions Cycles
  5455                           ; simple_byte            4     3 (average)
  5456                           ;	Chosen strategy is simple_byte
  5457   003238  500F               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  5458   00323A  0A00               	xorlw	0	; case 0
  5459   00323C  B4D8               	btfsc	status,2,c
  5460   00323E  EF23  F019         	goto	l10304
  5461   003242  EFAC  F018         	goto	l6600
  5462   003246                     l10304:
  5463                           
  5464                           ; Switch size 1, requested type "simple"
  5465                           ; Number of cases is 2, Range of values is 0 to 1
  5466                           ; switch strategies available:
  5467                           ; Name         Instructions Cycles
  5468                           ; simple_byte            7     4 (average)
  5469                           ;	Chosen strategy is simple_byte
  5470   003246  500E               	movf	??_gpio_pin_direction_intialize^0,w,c
  5471   003248  0A00               	xorlw	0	; case 0
  5472   00324A  B4D8               	btfsc	status,2,c
  5473   00324C  EFAE  F018         	goto	l6602
  5474   003250  0A01               	xorlw	1	; case 1
  5475   003252  B4D8               	btfsc	status,2,c
  5476   003254  EFDF  F018         	goto	l6604
  5477   003258  EFAC  F018         	goto	l6600
  5478   00325C                     l6610:
  5479                           
  5480                           ;MCAL_Layer/GPIO/hal_gpio.c: 42:     return ret;
  5481   00325C  0E01               	movlw	1
  5482   00325E  0012               	return		;funcret
  5483   003260                     __end_of_gpio_pin_direction_intialize:
  5484                           	callstack 0
  5485                           
  5486 ;; *************** function _EUSART_ASYNC_Init *****************
  5487 ;; Defined at:
  5488 ;;		line 20 in file "MCAL_Layer/USART/hal_usart.c"
  5489 ;; Parameters:    Size  Location     Type
  5490 ;;  _eusart         2   88[COMRAM] PTR const struct .
  5491 ;;		 -> usart_obj(16), 
  5492 ;; Auto vars:     Size  Location     Type
  5493 ;;  ret             1    0        unsigned char 
  5494 ;; Return value:  Size  Location     Type
  5495 ;;                  1    wreg      unsigned char 
  5496 ;; Registers used:
  5497 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5498 ;; Tracked objects:
  5499 ;;		On entry : 0/0
  5500 ;;		On exit  : 0/0
  5501 ;;		Unchanged: 0/0
  5502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5503 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5506 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5507 ;;Total ram usage:        2 bytes
  5508 ;; Hardware stack levels used: 1
  5509 ;; Hardware stack levels required when called: 6
  5510 ;; This function calls:
  5511 ;;		_EUSART_ASYNC_RX_Init
  5512 ;;		_EUSART_ASYNC_TX_Init
  5513 ;;		_EUSART_Baud_Rate_Calculation
  5514 ;; This function is called by:
  5515 ;;		_ecu_layer_intialize
  5516 ;; This function uses a non-reentrant model
  5517 ;;
  5518                           
  5519                           	psect	text29
  5520   0044FA                     __ptext29:
  5521                           	callstack 0
  5522   0044FA                     _EUSART_ASYNC_Init:
  5523                           	callstack 22
  5524   0044FA                     
  5525                           ;MCAL_Layer/USART/hal_usart.c: 23:     if(((void*)0) == _eusart){
  5526   0044FA  5059               	movf	EUSART_ASYNC_Init@_eusart^0,w,c
  5527   0044FC  105A               	iorwf	(EUSART_ASYNC_Init@_eusart+1)^0,w,c
  5528   0044FE  A4D8               	btfss	status,2,c
  5529   004500  EF84  F022         	goto	u6291
  5530   004504  EF86  F022         	goto	u6290
  5531   004508                     u6291:
  5532   004508  EF88  F022         	goto	l7426
  5533   00450C                     u6290:
  5534   00450C                     l7424:
  5535                           
  5536                           ;MCAL_Layer/USART/hal_usart.c: 25:     }
  5537   00450C  EFA0  F022         	goto	l7438
  5538   004510                     l7426:
  5539                           
  5540                           ;MCAL_Layer/USART/hal_usart.c: 27:         EUSART_Baud_Rate_Calculation(_eusart);
  5541   004510  C059  F04D         	movff	EUSART_ASYNC_Init@_eusart,EUSART_Baud_Rate_Calculation@_eusart
  5542   004514  C05A  F04E         	movff	EUSART_ASYNC_Init@_eusart+1,EUSART_Baud_Rate_Calculation@_eusart+1
  5543   004518  ECC9  F00A         	call	_EUSART_Baud_Rate_Calculation	;wreg free
  5544   00451C                     
  5545                           ;MCAL_Layer/USART/hal_usart.c: 28:         RCSTAbits.SPEN=0;
  5546   00451C  9EAB               	bcf	171,7,c	;volatile
  5547   00451E                     
  5548                           ;MCAL_Layer/USART/hal_usart.c: 29:         TRISCbits.RC6=1;
  5549   00451E  8C94               	bsf	148,6,c	;volatile
  5550   004520                     
  5551                           ;MCAL_Layer/USART/hal_usart.c: 30:         TRISCbits.RC7=1;
  5552   004520  8E94               	bsf	148,7,c	;volatile
  5553                           
  5554                           ;MCAL_Layer/USART/hal_usart.c: 31:         EUSART_ASYNC_TX_Init(_eusart);
  5555   004522  C059  F00C         	movff	EUSART_ASYNC_Init@_eusart,EUSART_ASYNC_TX_Init@_eusart
  5556   004526  C05A  F00D         	movff	EUSART_ASYNC_Init@_eusart+1,EUSART_ASYNC_TX_Init@_eusart+1
  5557   00452A  EC5B  F01C         	call	_EUSART_ASYNC_TX_Init	;wreg free
  5558                           
  5559                           ;MCAL_Layer/USART/hal_usart.c: 32:         EUSART_ASYNC_RX_Init(_eusart);
  5560   00452E  C059  F00C         	movff	EUSART_ASYNC_Init@_eusart,EUSART_ASYNC_RX_Init@_eusart
  5561   004532  C05A  F00D         	movff	EUSART_ASYNC_Init@_eusart+1,EUSART_ASYNC_RX_Init@_eusart+1
  5562   004536  EC71  F01B         	call	_EUSART_ASYNC_RX_Init	;wreg free
  5563   00453A                     
  5564                           ;MCAL_Layer/USART/hal_usart.c: 33:         RCSTAbits.SPEN=1;
  5565   00453A  8EAB               	bsf	171,7,c	;volatile
  5566   00453C  EF86  F022         	goto	l7424
  5567   004540                     l7438:
  5568                           
  5569                           ;MCAL_Layer/USART/hal_usart.c: 36:     return ret;
  5570   004540  0E01               	movlw	1
  5571   004542  0012               	return		;funcret
  5572   004544                     __end_of_EUSART_ASYNC_Init:
  5573                           	callstack 0
  5574                           
  5575 ;; *************** function _EUSART_Baud_Rate_Calculation *****************
  5576 ;; Defined at:
  5577 ;;		line 121 in file "MCAL_Layer/USART/hal_usart.c"
  5578 ;; Parameters:    Size  Location     Type
  5579 ;;  _eusart         2   76[COMRAM] PTR const struct .
  5580 ;;		 -> usart_obj(16), 
  5581 ;; Auto vars:     Size  Location     Type
  5582 ;;  Baud_Rate_Te    4   80[COMRAM] float 
  5583 ;; Return value:  Size  Location     Type
  5584 ;;                  1    wreg      void 
  5585 ;; Registers used:
  5586 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5587 ;; Tracked objects:
  5588 ;;		On entry : 0/0
  5589 ;;		On exit  : 0/0
  5590 ;;		Unchanged: 0/0
  5591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5592 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5593 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5594 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5595 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5596 ;;Total ram usage:       12 bytes
  5597 ;; Hardware stack levels used: 1
  5598 ;; Hardware stack levels required when called: 5
  5599 ;; This function calls:
  5600 ;;		___fladd
  5601 ;;		___fldiv
  5602 ;;		___fltol
  5603 ;;		___xxtofl
  5604 ;; This function is called by:
  5605 ;;		_EUSART_ASYNC_Init
  5606 ;; This function uses a non-reentrant model
  5607 ;;
  5608                           
  5609                           	psect	text30
  5610   001592                     __ptext30:
  5611                           	callstack 0
  5612   001592                     _EUSART_Baud_Rate_Calculation:
  5613                           	callstack 22
  5614   001592                     
  5615                           ;MCAL_Layer/USART/hal_usart.c: 122:     float Baud_Rate_Temp=0;
  5616   001592  0E00               	movlw	0
  5617   001594  6E51               	movwf	EUSART_Baud_Rate_Calculation@Baud_Rate_Temp^0,c
  5618   001596  0E00               	movlw	0
  5619   001598  6E52               	movwf	(EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+1)^0,c
  5620   00159A  0E00               	movlw	0
  5621   00159C  6E53               	movwf	(EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+2)^0,c
  5622   00159E  0E00               	movlw	0
  5623   0015A0  6E54               	movwf	(EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+3)^0,c
  5624                           
  5625                           ;MCAL_Layer/USART/hal_usart.c: 123:     switch(_eusart->baudrate_gen_config){
  5626   0015A2  EFF9  F00C         	goto	l7222
  5627   0015A6                     l1680:
  5628                           
  5629                           ;MCAL_Layer/USART/hal_usart.c: 125:             TXSTAbits.SYNC= 0;
  5630   0015A6  98AC               	bcf	172,4,c	;volatile
  5631                           
  5632                           ;MCAL_Layer/USART/hal_usart.c: 126:             TXSTAbits.BRGH= 0;
  5633   0015A8  94AC               	bcf	172,2,c	;volatile
  5634                           
  5635                           ;MCAL_Layer/USART/hal_usart.c: 127:             BAUDCONbits.BRG16 = 0;
  5636   0015AA  96B8               	bcf	184,3,c	;volatile
  5637   0015AC                     
  5638                           ;MCAL_Layer/USART/hal_usart.c: 128:             Baud_Rate_Temp=((4000000UL / (float)_eus
      +                          art->baudrate) /64) - 1;
  5639   0015AC  C04D  FFD9         	movff	EUSART_Baud_Rate_Calculation@_eusart,fsr2l
  5640   0015B0  C04E  FFDA         	movff	EUSART_Baud_Rate_Calculation@_eusart+1,fsr2h
  5641   0015B4  CFDE F04F          	movff	postinc2,??_EUSART_Baud_Rate_Calculation
  5642   0015B8  CFDD F050          	movff	postdec2,??_EUSART_Baud_Rate_Calculation+1
  5643   0015BC  C04F  F00C         	movff	??_EUSART_Baud_Rate_Calculation,___xxtofl@val
  5644   0015C0  C050  F00D         	movff	??_EUSART_Baud_Rate_Calculation+1,___xxtofl@val+1
  5645   0015C4  6A0E               	clrf	(___xxtofl@val+2)^0,c
  5646   0015C6  6A0F               	clrf	(___xxtofl@val+3)^0,c
  5647   0015C8  0E00               	movlw	0
  5648   0015CA  EC85  F015         	call	___xxtofl
  5649   0015CE  C00C  F01E         	movff	?___xxtofl,___fldiv@a
  5650   0015D2  C00D  F01F         	movff	?___xxtofl+1,___fldiv@a+1
  5651   0015D6  C00E  F020         	movff	?___xxtofl+2,___fldiv@a+2
  5652   0015DA  C00F  F021         	movff	?___xxtofl+3,___fldiv@a+3
  5653   0015DE  0E00               	movlw	0
  5654   0015E0  6E1A               	movwf	___fldiv@b^0,c
  5655   0015E2  0E24               	movlw	36
  5656   0015E4  6E1B               	movwf	(___fldiv@b+1)^0,c
  5657   0015E6  0E74               	movlw	116
  5658   0015E8  6E1C               	movwf	(___fldiv@b+2)^0,c
  5659   0015EA  0E4A               	movlw	74
  5660   0015EC  6E1D               	movwf	(___fldiv@b+3)^0,c
  5661   0015EE  ECB8  F013         	call	___fldiv	;wreg free
  5662   0015F2  C01A  F055         	movff	?___fldiv,_EUSART_Baud_Rate_Calculation$5785
  5663   0015F6  C01B  F056         	movff	?___fldiv+1,_EUSART_Baud_Rate_Calculation$5785+1
  5664   0015FA  C01C  F057         	movff	?___fldiv+2,_EUSART_Baud_Rate_Calculation$5785+2
  5665   0015FE  C01D  F058         	movff	?___fldiv+3,_EUSART_Baud_Rate_Calculation$5785+3
  5666   001602                     
  5667                           ;MCAL_Layer/USART/hal_usart.c: 128:             Baud_Rate_Temp=((4000000UL / (float)_eus
      +                          art->baudrate) /64) - 1;
  5668   001602  0E00               	movlw	0
  5669   001604  6E1E               	movwf	___fldiv@a^0,c
  5670   001606  0E00               	movlw	0
  5671   001608  6E1F               	movwf	(___fldiv@a+1)^0,c
  5672   00160A  0E80               	movlw	128
  5673   00160C  6E20               	movwf	(___fldiv@a+2)^0,c
  5674   00160E  0E42               	movlw	66
  5675   001610  6E21               	movwf	(___fldiv@a+3)^0,c
  5676   001612  C055  F01A         	movff	_EUSART_Baud_Rate_Calculation$5785,___fldiv@b
  5677   001616  C056  F01B         	movff	_EUSART_Baud_Rate_Calculation$5785+1,___fldiv@b+1
  5678   00161A  C057  F01C         	movff	_EUSART_Baud_Rate_Calculation$5785+2,___fldiv@b+2
  5679   00161E  C058  F01D         	movff	_EUSART_Baud_Rate_Calculation$5785+3,___fldiv@b+3
  5680   001622  ECB8  F013         	call	___fldiv	;wreg free
  5681   001626  C01A  F033         	movff	?___fldiv,___fladd@b
  5682   00162A  C01B  F034         	movff	?___fldiv+1,___fladd@b+1
  5683   00162E  C01C  F035         	movff	?___fldiv+2,___fladd@b+2
  5684   001632  C01D  F036         	movff	?___fldiv+3,___fladd@b+3
  5685   001636  0E00               	movlw	0
  5686   001638  6E37               	movwf	___fladd@a^0,c
  5687   00163A  0E00               	movlw	0
  5688   00163C  6E38               	movwf	(___fladd@a+1)^0,c
  5689   00163E  0E80               	movlw	128
  5690   001640  6E39               	movwf	(___fladd@a+2)^0,c
  5691   001642  0EBF               	movlw	191
  5692   001644  6E3A               	movwf	(___fladd@a+3)^0,c
  5693   001646  EC40  F00D         	call	___fladd	;wreg free
  5694   00164A  C033  F051         	movff	?___fladd,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp
  5695   00164E  C034  F052         	movff	?___fladd+1,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+1
  5696   001652  C035  F053         	movff	?___fladd+2,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+2
  5697   001656  C036  F054         	movff	?___fladd+3,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+3
  5698                           
  5699                           ;MCAL_Layer/USART/hal_usart.c: 129:             break;
  5700   00165A  EF24  F00D         	goto	l7224
  5701   00165E                     l1682:
  5702                           
  5703                           ;MCAL_Layer/USART/hal_usart.c: 131:             TXSTAbits.SYNC= 0;
  5704   00165E  98AC               	bcf	172,4,c	;volatile
  5705                           
  5706                           ;MCAL_Layer/USART/hal_usart.c: 132:             TXSTAbits.BRGH= 1;
  5707   001660  84AC               	bsf	172,2,c	;volatile
  5708                           
  5709                           ;MCAL_Layer/USART/hal_usart.c: 133:             BAUDCONbits.BRG16 = 0;
  5710   001662  96B8               	bcf	184,3,c	;volatile
  5711   001664                     
  5712                           ;MCAL_Layer/USART/hal_usart.c: 134:             Baud_Rate_Temp=((4000000UL / (float)_eus
      +                          art->baudrate) /16) - 1;
  5713   001664  C04D  FFD9         	movff	EUSART_Baud_Rate_Calculation@_eusart,fsr2l
  5714   001668  C04E  FFDA         	movff	EUSART_Baud_Rate_Calculation@_eusart+1,fsr2h
  5715   00166C  CFDE F04F          	movff	postinc2,??_EUSART_Baud_Rate_Calculation
  5716   001670  CFDD F050          	movff	postdec2,??_EUSART_Baud_Rate_Calculation+1
  5717   001674  C04F  F00C         	movff	??_EUSART_Baud_Rate_Calculation,___xxtofl@val
  5718   001678  C050  F00D         	movff	??_EUSART_Baud_Rate_Calculation+1,___xxtofl@val+1
  5719   00167C  6A0E               	clrf	(___xxtofl@val+2)^0,c
  5720   00167E  6A0F               	clrf	(___xxtofl@val+3)^0,c
  5721   001680  0E00               	movlw	0
  5722   001682  EC85  F015         	call	___xxtofl
  5723   001686  C00C  F01E         	movff	?___xxtofl,___fldiv@a
  5724   00168A  C00D  F01F         	movff	?___xxtofl+1,___fldiv@a+1
  5725   00168E  C00E  F020         	movff	?___xxtofl+2,___fldiv@a+2
  5726   001692  C00F  F021         	movff	?___xxtofl+3,___fldiv@a+3
  5727   001696  0E00               	movlw	0
  5728   001698  6E1A               	movwf	___fldiv@b^0,c
  5729   00169A  0E24               	movlw	36
  5730   00169C  6E1B               	movwf	(___fldiv@b+1)^0,c
  5731   00169E  0E74               	movlw	116
  5732   0016A0  6E1C               	movwf	(___fldiv@b+2)^0,c
  5733   0016A2  0E4A               	movlw	74
  5734   0016A4  6E1D               	movwf	(___fldiv@b+3)^0,c
  5735   0016A6  ECB8  F013         	call	___fldiv	;wreg free
  5736   0016AA  C01A  F055         	movff	?___fldiv,_EUSART_Baud_Rate_Calculation$5785
  5737   0016AE  C01B  F056         	movff	?___fldiv+1,_EUSART_Baud_Rate_Calculation$5785+1
  5738   0016B2  C01C  F057         	movff	?___fldiv+2,_EUSART_Baud_Rate_Calculation$5785+2
  5739   0016B6  C01D  F058         	movff	?___fldiv+3,_EUSART_Baud_Rate_Calculation$5785+3
  5740   0016BA                     
  5741                           ;MCAL_Layer/USART/hal_usart.c: 134:             Baud_Rate_Temp=((4000000UL / (float)_eus
      +                          art->baudrate) /16) - 1;
  5742   0016BA  0E00               	movlw	0
  5743   0016BC  6E1E               	movwf	___fldiv@a^0,c
  5744   0016BE  0E00               	movlw	0
  5745   0016C0  6E1F               	movwf	(___fldiv@a+1)^0,c
  5746   0016C2  0E80               	movlw	128
  5747   0016C4  6E20               	movwf	(___fldiv@a+2)^0,c
  5748   0016C6  0E41               	movlw	65
  5749   0016C8  6E21               	movwf	(___fldiv@a+3)^0,c
  5750   0016CA  C055  F01A         	movff	_EUSART_Baud_Rate_Calculation$5785,___fldiv@b
  5751   0016CE  C056  F01B         	movff	_EUSART_Baud_Rate_Calculation$5785+1,___fldiv@b+1
  5752   0016D2  C057  F01C         	movff	_EUSART_Baud_Rate_Calculation$5785+2,___fldiv@b+2
  5753   0016D6  C058  F01D         	movff	_EUSART_Baud_Rate_Calculation$5785+3,___fldiv@b+3
  5754   0016DA  ECB8  F013         	call	___fldiv	;wreg free
  5755   0016DE  C01A  F033         	movff	?___fldiv,___fladd@b
  5756   0016E2  C01B  F034         	movff	?___fldiv+1,___fladd@b+1
  5757   0016E6  C01C  F035         	movff	?___fldiv+2,___fladd@b+2
  5758   0016EA  C01D  F036         	movff	?___fldiv+3,___fladd@b+3
  5759   0016EE  0E00               	movlw	0
  5760   0016F0  6E37               	movwf	___fladd@a^0,c
  5761   0016F2  0E00               	movlw	0
  5762   0016F4  6E38               	movwf	(___fladd@a+1)^0,c
  5763   0016F6  0E80               	movlw	128
  5764   0016F8  6E39               	movwf	(___fladd@a+2)^0,c
  5765   0016FA  0EBF               	movlw	191
  5766   0016FC  6E3A               	movwf	(___fladd@a+3)^0,c
  5767   0016FE  EC40  F00D         	call	___fladd	;wreg free
  5768   001702  C033  F051         	movff	?___fladd,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp
  5769   001706  C034  F052         	movff	?___fladd+1,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+1
  5770   00170A  C035  F053         	movff	?___fladd+2,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+2
  5771   00170E  C036  F054         	movff	?___fladd+3,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+3
  5772                           
  5773                           ;MCAL_Layer/USART/hal_usart.c: 135:             break;
  5774   001712  EF24  F00D         	goto	l7224
  5775   001716                     l1683:
  5776                           
  5777                           ;MCAL_Layer/USART/hal_usart.c: 137:             TXSTAbits.SYNC= 0;
  5778   001716  98AC               	bcf	172,4,c	;volatile
  5779                           
  5780                           ;MCAL_Layer/USART/hal_usart.c: 138:             TXSTAbits.BRGH= 0;
  5781   001718  94AC               	bcf	172,2,c	;volatile
  5782                           
  5783                           ;MCAL_Layer/USART/hal_usart.c: 139:             BAUDCONbits.BRG16 = 1;
  5784   00171A  86B8               	bsf	184,3,c	;volatile
  5785   00171C                     
  5786                           ;MCAL_Layer/USART/hal_usart.c: 140:             Baud_Rate_Temp=((4000000UL / (float)_eus
      +                          art->baudrate) /16) - 1;
  5787   00171C  C04D  FFD9         	movff	EUSART_Baud_Rate_Calculation@_eusart,fsr2l
  5788   001720  C04E  FFDA         	movff	EUSART_Baud_Rate_Calculation@_eusart+1,fsr2h
  5789   001724  CFDE F04F          	movff	postinc2,??_EUSART_Baud_Rate_Calculation
  5790   001728  CFDD F050          	movff	postdec2,??_EUSART_Baud_Rate_Calculation+1
  5791   00172C  C04F  F00C         	movff	??_EUSART_Baud_Rate_Calculation,___xxtofl@val
  5792   001730  C050  F00D         	movff	??_EUSART_Baud_Rate_Calculation+1,___xxtofl@val+1
  5793   001734  6A0E               	clrf	(___xxtofl@val+2)^0,c
  5794   001736  6A0F               	clrf	(___xxtofl@val+3)^0,c
  5795   001738  0E00               	movlw	0
  5796   00173A  EC85  F015         	call	___xxtofl
  5797   00173E  C00C  F01E         	movff	?___xxtofl,___fldiv@a
  5798   001742  C00D  F01F         	movff	?___xxtofl+1,___fldiv@a+1
  5799   001746  C00E  F020         	movff	?___xxtofl+2,___fldiv@a+2
  5800   00174A  C00F  F021         	movff	?___xxtofl+3,___fldiv@a+3
  5801   00174E  0E00               	movlw	0
  5802   001750  6E1A               	movwf	___fldiv@b^0,c
  5803   001752  0E24               	movlw	36
  5804   001754  6E1B               	movwf	(___fldiv@b+1)^0,c
  5805   001756  0E74               	movlw	116
  5806   001758  6E1C               	movwf	(___fldiv@b+2)^0,c
  5807   00175A  0E4A               	movlw	74
  5808   00175C  6E1D               	movwf	(___fldiv@b+3)^0,c
  5809   00175E  ECB8  F013         	call	___fldiv	;wreg free
  5810   001762  C01A  F055         	movff	?___fldiv,_EUSART_Baud_Rate_Calculation$5785
  5811   001766  C01B  F056         	movff	?___fldiv+1,_EUSART_Baud_Rate_Calculation$5785+1
  5812   00176A  C01C  F057         	movff	?___fldiv+2,_EUSART_Baud_Rate_Calculation$5785+2
  5813   00176E  C01D  F058         	movff	?___fldiv+3,_EUSART_Baud_Rate_Calculation$5785+3
  5814   001772                     
  5815                           ;MCAL_Layer/USART/hal_usart.c: 140:             Baud_Rate_Temp=((4000000UL / (float)_eus
      +                          art->baudrate) /16) - 1;
  5816   001772  0E00               	movlw	0
  5817   001774  6E1E               	movwf	___fldiv@a^0,c
  5818   001776  0E00               	movlw	0
  5819   001778  6E1F               	movwf	(___fldiv@a+1)^0,c
  5820   00177A  0E80               	movlw	128
  5821   00177C  6E20               	movwf	(___fldiv@a+2)^0,c
  5822   00177E  0E41               	movlw	65
  5823   001780  6E21               	movwf	(___fldiv@a+3)^0,c
  5824   001782  C055  F01A         	movff	_EUSART_Baud_Rate_Calculation$5785,___fldiv@b
  5825   001786  C056  F01B         	movff	_EUSART_Baud_Rate_Calculation$5785+1,___fldiv@b+1
  5826   00178A  C057  F01C         	movff	_EUSART_Baud_Rate_Calculation$5785+2,___fldiv@b+2
  5827   00178E  C058  F01D         	movff	_EUSART_Baud_Rate_Calculation$5785+3,___fldiv@b+3
  5828   001792  ECB8  F013         	call	___fldiv	;wreg free
  5829   001796  C01A  F033         	movff	?___fldiv,___fladd@b
  5830   00179A  C01B  F034         	movff	?___fldiv+1,___fladd@b+1
  5831   00179E  C01C  F035         	movff	?___fldiv+2,___fladd@b+2
  5832   0017A2  C01D  F036         	movff	?___fldiv+3,___fladd@b+3
  5833   0017A6  0E00               	movlw	0
  5834   0017A8  6E37               	movwf	___fladd@a^0,c
  5835   0017AA  0E00               	movlw	0
  5836   0017AC  6E38               	movwf	(___fladd@a+1)^0,c
  5837   0017AE  0E80               	movlw	128
  5838   0017B0  6E39               	movwf	(___fladd@a+2)^0,c
  5839   0017B2  0EBF               	movlw	191
  5840   0017B4  6E3A               	movwf	(___fladd@a+3)^0,c
  5841   0017B6  EC40  F00D         	call	___fladd	;wreg free
  5842   0017BA  C033  F051         	movff	?___fladd,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp
  5843   0017BE  C034  F052         	movff	?___fladd+1,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+1
  5844   0017C2  C035  F053         	movff	?___fladd+2,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+2
  5845   0017C6  C036  F054         	movff	?___fladd+3,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+3
  5846                           
  5847                           ;MCAL_Layer/USART/hal_usart.c: 141:             break;
  5848   0017CA  EF24  F00D         	goto	l7224
  5849   0017CE                     l1684:
  5850                           
  5851                           ;MCAL_Layer/USART/hal_usart.c: 143:             TXSTAbits.SYNC= 0;
  5852   0017CE  98AC               	bcf	172,4,c	;volatile
  5853                           
  5854                           ;MCAL_Layer/USART/hal_usart.c: 144:             TXSTAbits.BRGH= 1;
  5855   0017D0  84AC               	bsf	172,2,c	;volatile
  5856                           
  5857                           ;MCAL_Layer/USART/hal_usart.c: 145:             BAUDCONbits.BRG16 = 1;
  5858   0017D2  86B8               	bsf	184,3,c	;volatile
  5859   0017D4                     
  5860                           ;MCAL_Layer/USART/hal_usart.c: 146:             Baud_Rate_Temp=((4000000UL / (float)_eus
      +                          art->baudrate) /4) - 1;
  5861   0017D4  C04D  FFD9         	movff	EUSART_Baud_Rate_Calculation@_eusart,fsr2l
  5862   0017D8  C04E  FFDA         	movff	EUSART_Baud_Rate_Calculation@_eusart+1,fsr2h
  5863   0017DC  CFDE F04F          	movff	postinc2,??_EUSART_Baud_Rate_Calculation
  5864   0017E0  CFDD F050          	movff	postdec2,??_EUSART_Baud_Rate_Calculation+1
  5865   0017E4  C04F  F00C         	movff	??_EUSART_Baud_Rate_Calculation,___xxtofl@val
  5866   0017E8  C050  F00D         	movff	??_EUSART_Baud_Rate_Calculation+1,___xxtofl@val+1
  5867   0017EC  6A0E               	clrf	(___xxtofl@val+2)^0,c
  5868   0017EE  6A0F               	clrf	(___xxtofl@val+3)^0,c
  5869   0017F0  0E00               	movlw	0
  5870   0017F2  EC85  F015         	call	___xxtofl
  5871   0017F6  C00C  F01E         	movff	?___xxtofl,___fldiv@a
  5872   0017FA  C00D  F01F         	movff	?___xxtofl+1,___fldiv@a+1
  5873   0017FE  C00E  F020         	movff	?___xxtofl+2,___fldiv@a+2
  5874   001802  C00F  F021         	movff	?___xxtofl+3,___fldiv@a+3
  5875   001806  0E00               	movlw	0
  5876   001808  6E1A               	movwf	___fldiv@b^0,c
  5877   00180A  0E24               	movlw	36
  5878   00180C  6E1B               	movwf	(___fldiv@b+1)^0,c
  5879   00180E  0E74               	movlw	116
  5880   001810  6E1C               	movwf	(___fldiv@b+2)^0,c
  5881   001812  0E4A               	movlw	74
  5882   001814  6E1D               	movwf	(___fldiv@b+3)^0,c
  5883   001816  ECB8  F013         	call	___fldiv	;wreg free
  5884   00181A  C01A  F055         	movff	?___fldiv,_EUSART_Baud_Rate_Calculation$5785
  5885   00181E  C01B  F056         	movff	?___fldiv+1,_EUSART_Baud_Rate_Calculation$5785+1
  5886   001822  C01C  F057         	movff	?___fldiv+2,_EUSART_Baud_Rate_Calculation$5785+2
  5887   001826  C01D  F058         	movff	?___fldiv+3,_EUSART_Baud_Rate_Calculation$5785+3
  5888   00182A                     
  5889                           ;MCAL_Layer/USART/hal_usart.c: 146:             Baud_Rate_Temp=((4000000UL / (float)_eus
      +                          art->baudrate) /4) - 1;
  5890   00182A  0E00               	movlw	0
  5891   00182C  6E1E               	movwf	___fldiv@a^0,c
  5892   00182E  0E00               	movlw	0
  5893   001830  6E1F               	movwf	(___fldiv@a+1)^0,c
  5894   001832  0E80               	movlw	128
  5895   001834  6E20               	movwf	(___fldiv@a+2)^0,c
  5896   001836  0E40               	movlw	64
  5897   001838  6E21               	movwf	(___fldiv@a+3)^0,c
  5898   00183A  C055  F01A         	movff	_EUSART_Baud_Rate_Calculation$5785,___fldiv@b
  5899   00183E  C056  F01B         	movff	_EUSART_Baud_Rate_Calculation$5785+1,___fldiv@b+1
  5900   001842  C057  F01C         	movff	_EUSART_Baud_Rate_Calculation$5785+2,___fldiv@b+2
  5901   001846  C058  F01D         	movff	_EUSART_Baud_Rate_Calculation$5785+3,___fldiv@b+3
  5902   00184A  ECB8  F013         	call	___fldiv	;wreg free
  5903   00184E  C01A  F033         	movff	?___fldiv,___fladd@b
  5904   001852  C01B  F034         	movff	?___fldiv+1,___fladd@b+1
  5905   001856  C01C  F035         	movff	?___fldiv+2,___fladd@b+2
  5906   00185A  C01D  F036         	movff	?___fldiv+3,___fladd@b+3
  5907   00185E  0E00               	movlw	0
  5908   001860  6E37               	movwf	___fladd@a^0,c
  5909   001862  0E00               	movlw	0
  5910   001864  6E38               	movwf	(___fladd@a+1)^0,c
  5911   001866  0E80               	movlw	128
  5912   001868  6E39               	movwf	(___fladd@a+2)^0,c
  5913   00186A  0EBF               	movlw	191
  5914   00186C  6E3A               	movwf	(___fladd@a+3)^0,c
  5915   00186E  EC40  F00D         	call	___fladd	;wreg free
  5916   001872  C033  F051         	movff	?___fladd,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp
  5917   001876  C034  F052         	movff	?___fladd+1,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+1
  5918   00187A  C035  F053         	movff	?___fladd+2,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+2
  5919   00187E  C036  F054         	movff	?___fladd+3,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+3
  5920                           
  5921                           ;MCAL_Layer/USART/hal_usart.c: 147:             break;
  5922   001882  EF24  F00D         	goto	l7224
  5923   001886                     l1685:
  5924                           
  5925                           ;MCAL_Layer/USART/hal_usart.c: 149:             TXSTAbits.SYNC= 1;
  5926   001886  88AC               	bsf	172,4,c	;volatile
  5927                           
  5928                           ;MCAL_Layer/USART/hal_usart.c: 150:             BAUDCONbits.BRG16 = 0;
  5929   001888  96B8               	bcf	184,3,c	;volatile
  5930   00188A                     
  5931                           ;MCAL_Layer/USART/hal_usart.c: 151:             Baud_Rate_Temp=((4000000UL / (float)_eus
      +                          art->baudrate) /4) - 1;
  5932   00188A  C04D  FFD9         	movff	EUSART_Baud_Rate_Calculation@_eusart,fsr2l
  5933   00188E  C04E  FFDA         	movff	EUSART_Baud_Rate_Calculation@_eusart+1,fsr2h
  5934   001892  CFDE F04F          	movff	postinc2,??_EUSART_Baud_Rate_Calculation
  5935   001896  CFDD F050          	movff	postdec2,??_EUSART_Baud_Rate_Calculation+1
  5936   00189A  C04F  F00C         	movff	??_EUSART_Baud_Rate_Calculation,___xxtofl@val
  5937   00189E  C050  F00D         	movff	??_EUSART_Baud_Rate_Calculation+1,___xxtofl@val+1
  5938   0018A2  6A0E               	clrf	(___xxtofl@val+2)^0,c
  5939   0018A4  6A0F               	clrf	(___xxtofl@val+3)^0,c
  5940   0018A6  0E00               	movlw	0
  5941   0018A8  EC85  F015         	call	___xxtofl
  5942   0018AC  C00C  F01E         	movff	?___xxtofl,___fldiv@a
  5943   0018B0  C00D  F01F         	movff	?___xxtofl+1,___fldiv@a+1
  5944   0018B4  C00E  F020         	movff	?___xxtofl+2,___fldiv@a+2
  5945   0018B8  C00F  F021         	movff	?___xxtofl+3,___fldiv@a+3
  5946   0018BC  0E00               	movlw	0
  5947   0018BE  6E1A               	movwf	___fldiv@b^0,c
  5948   0018C0  0E24               	movlw	36
  5949   0018C2  6E1B               	movwf	(___fldiv@b+1)^0,c
  5950   0018C4  0E74               	movlw	116
  5951   0018C6  6E1C               	movwf	(___fldiv@b+2)^0,c
  5952   0018C8  0E4A               	movlw	74
  5953   0018CA  6E1D               	movwf	(___fldiv@b+3)^0,c
  5954   0018CC  ECB8  F013         	call	___fldiv	;wreg free
  5955   0018D0  C01A  F055         	movff	?___fldiv,_EUSART_Baud_Rate_Calculation$5785
  5956   0018D4  C01B  F056         	movff	?___fldiv+1,_EUSART_Baud_Rate_Calculation$5785+1
  5957   0018D8  C01C  F057         	movff	?___fldiv+2,_EUSART_Baud_Rate_Calculation$5785+2
  5958   0018DC  C01D  F058         	movff	?___fldiv+3,_EUSART_Baud_Rate_Calculation$5785+3
  5959   0018E0                     
  5960                           ;MCAL_Layer/USART/hal_usart.c: 151:             Baud_Rate_Temp=((4000000UL / (float)_eus
      +                          art->baudrate) /4) - 1;
  5961   0018E0  0E00               	movlw	0
  5962   0018E2  6E1E               	movwf	___fldiv@a^0,c
  5963   0018E4  0E00               	movlw	0
  5964   0018E6  6E1F               	movwf	(___fldiv@a+1)^0,c
  5965   0018E8  0E80               	movlw	128
  5966   0018EA  6E20               	movwf	(___fldiv@a+2)^0,c
  5967   0018EC  0E40               	movlw	64
  5968   0018EE  6E21               	movwf	(___fldiv@a+3)^0,c
  5969   0018F0  C055  F01A         	movff	_EUSART_Baud_Rate_Calculation$5785,___fldiv@b
  5970   0018F4  C056  F01B         	movff	_EUSART_Baud_Rate_Calculation$5785+1,___fldiv@b+1
  5971   0018F8  C057  F01C         	movff	_EUSART_Baud_Rate_Calculation$5785+2,___fldiv@b+2
  5972   0018FC  C058  F01D         	movff	_EUSART_Baud_Rate_Calculation$5785+3,___fldiv@b+3
  5973   001900  ECB8  F013         	call	___fldiv	;wreg free
  5974   001904  C01A  F033         	movff	?___fldiv,___fladd@b
  5975   001908  C01B  F034         	movff	?___fldiv+1,___fladd@b+1
  5976   00190C  C01C  F035         	movff	?___fldiv+2,___fladd@b+2
  5977   001910  C01D  F036         	movff	?___fldiv+3,___fladd@b+3
  5978   001914  0E00               	movlw	0
  5979   001916  6E37               	movwf	___fladd@a^0,c
  5980   001918  0E00               	movlw	0
  5981   00191A  6E38               	movwf	(___fladd@a+1)^0,c
  5982   00191C  0E80               	movlw	128
  5983   00191E  6E39               	movwf	(___fladd@a+2)^0,c
  5984   001920  0EBF               	movlw	191
  5985   001922  6E3A               	movwf	(___fladd@a+3)^0,c
  5986   001924  EC40  F00D         	call	___fladd	;wreg free
  5987   001928  C033  F051         	movff	?___fladd,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp
  5988   00192C  C034  F052         	movff	?___fladd+1,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+1
  5989   001930  C035  F053         	movff	?___fladd+2,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+2
  5990   001934  C036  F054         	movff	?___fladd+3,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+3
  5991                           
  5992                           ;MCAL_Layer/USART/hal_usart.c: 152:             break;
  5993   001938  EF24  F00D         	goto	l7224
  5994   00193C                     l1686:
  5995                           
  5996                           ;MCAL_Layer/USART/hal_usart.c: 154:             TXSTAbits.SYNC= 1;
  5997   00193C  88AC               	bsf	172,4,c	;volatile
  5998                           
  5999                           ;MCAL_Layer/USART/hal_usart.c: 155:             BAUDCONbits.BRG16 = 1;
  6000   00193E  86B8               	bsf	184,3,c	;volatile
  6001   001940                     
  6002                           ;MCAL_Layer/USART/hal_usart.c: 156:             Baud_Rate_Temp=((4000000UL / (float)_eus
      +                          art->baudrate) /4) - 1;
  6003   001940  C04D  FFD9         	movff	EUSART_Baud_Rate_Calculation@_eusart,fsr2l
  6004   001944  C04E  FFDA         	movff	EUSART_Baud_Rate_Calculation@_eusart+1,fsr2h
  6005   001948  CFDE F04F          	movff	postinc2,??_EUSART_Baud_Rate_Calculation
  6006   00194C  CFDD F050          	movff	postdec2,??_EUSART_Baud_Rate_Calculation+1
  6007   001950  C04F  F00C         	movff	??_EUSART_Baud_Rate_Calculation,___xxtofl@val
  6008   001954  C050  F00D         	movff	??_EUSART_Baud_Rate_Calculation+1,___xxtofl@val+1
  6009   001958  6A0E               	clrf	(___xxtofl@val+2)^0,c
  6010   00195A  6A0F               	clrf	(___xxtofl@val+3)^0,c
  6011   00195C  0E00               	movlw	0
  6012   00195E  EC85  F015         	call	___xxtofl
  6013   001962  C00C  F01E         	movff	?___xxtofl,___fldiv@a
  6014   001966  C00D  F01F         	movff	?___xxtofl+1,___fldiv@a+1
  6015   00196A  C00E  F020         	movff	?___xxtofl+2,___fldiv@a+2
  6016   00196E  C00F  F021         	movff	?___xxtofl+3,___fldiv@a+3
  6017   001972  0E00               	movlw	0
  6018   001974  6E1A               	movwf	___fldiv@b^0,c
  6019   001976  0E24               	movlw	36
  6020   001978  6E1B               	movwf	(___fldiv@b+1)^0,c
  6021   00197A  0E74               	movlw	116
  6022   00197C  6E1C               	movwf	(___fldiv@b+2)^0,c
  6023   00197E  0E4A               	movlw	74
  6024   001980  6E1D               	movwf	(___fldiv@b+3)^0,c
  6025   001982  ECB8  F013         	call	___fldiv	;wreg free
  6026   001986  C01A  F055         	movff	?___fldiv,_EUSART_Baud_Rate_Calculation$5785
  6027   00198A  C01B  F056         	movff	?___fldiv+1,_EUSART_Baud_Rate_Calculation$5785+1
  6028   00198E  C01C  F057         	movff	?___fldiv+2,_EUSART_Baud_Rate_Calculation$5785+2
  6029   001992  C01D  F058         	movff	?___fldiv+3,_EUSART_Baud_Rate_Calculation$5785+3
  6030   001996                     
  6031                           ;MCAL_Layer/USART/hal_usart.c: 156:             Baud_Rate_Temp=((4000000UL / (float)_eus
      +                          art->baudrate) /4) - 1;
  6032   001996  0E00               	movlw	0
  6033   001998  6E1E               	movwf	___fldiv@a^0,c
  6034   00199A  0E00               	movlw	0
  6035   00199C  6E1F               	movwf	(___fldiv@a+1)^0,c
  6036   00199E  0E80               	movlw	128
  6037   0019A0  6E20               	movwf	(___fldiv@a+2)^0,c
  6038   0019A2  0E40               	movlw	64
  6039   0019A4  6E21               	movwf	(___fldiv@a+3)^0,c
  6040   0019A6  C055  F01A         	movff	_EUSART_Baud_Rate_Calculation$5785,___fldiv@b
  6041   0019AA  C056  F01B         	movff	_EUSART_Baud_Rate_Calculation$5785+1,___fldiv@b+1
  6042   0019AE  C057  F01C         	movff	_EUSART_Baud_Rate_Calculation$5785+2,___fldiv@b+2
  6043   0019B2  C058  F01D         	movff	_EUSART_Baud_Rate_Calculation$5785+3,___fldiv@b+3
  6044   0019B6  ECB8  F013         	call	___fldiv	;wreg free
  6045   0019BA  C01A  F033         	movff	?___fldiv,___fladd@b
  6046   0019BE  C01B  F034         	movff	?___fldiv+1,___fladd@b+1
  6047   0019C2  C01C  F035         	movff	?___fldiv+2,___fladd@b+2
  6048   0019C6  C01D  F036         	movff	?___fldiv+3,___fladd@b+3
  6049   0019CA  0E00               	movlw	0
  6050   0019CC  6E37               	movwf	___fladd@a^0,c
  6051   0019CE  0E00               	movlw	0
  6052   0019D0  6E38               	movwf	(___fladd@a+1)^0,c
  6053   0019D2  0E80               	movlw	128
  6054   0019D4  6E39               	movwf	(___fladd@a+2)^0,c
  6055   0019D6  0EBF               	movlw	191
  6056   0019D8  6E3A               	movwf	(___fladd@a+3)^0,c
  6057   0019DA  EC40  F00D         	call	___fladd	;wreg free
  6058   0019DE  C033  F051         	movff	?___fladd,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp
  6059   0019E2  C034  F052         	movff	?___fladd+1,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+1
  6060   0019E6  C035  F053         	movff	?___fladd+2,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+2
  6061   0019EA  C036  F054         	movff	?___fladd+3,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+3
  6062                           
  6063                           ;MCAL_Layer/USART/hal_usart.c: 157:             break;
  6064   0019EE  EF24  F00D         	goto	l7224
  6065   0019F2                     l7222:
  6066   0019F2  EE20 F002          	lfsr	2,2
  6067   0019F6  504D               	movf	EUSART_Baud_Rate_Calculation@_eusart^0,w,c
  6068   0019F8  26D9               	addwf	fsr2l,f,c
  6069   0019FA  504E               	movf	(EUSART_Baud_Rate_Calculation@_eusart+1)^0,w,c
  6070   0019FC  22DA               	addwfc	fsr2h,f,c
  6071   0019FE  50DF               	movf	indf2,w,c
  6072   001A00  6E4F               	movwf	??_EUSART_Baud_Rate_Calculation^0,c
  6073   001A02  6A50               	clrf	(??_EUSART_Baud_Rate_Calculation+1)^0,c
  6074                           
  6075                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6076                           ; Switch size 1, requested type "simple"
  6077                           ; Number of cases is 1, Range of values is 0 to 0
  6078                           ; switch strategies available:
  6079                           ; Name         Instructions Cycles
  6080                           ; simple_byte            4     3 (average)
  6081                           ;	Chosen strategy is simple_byte
  6082   001A04  5050               	movf	(??_EUSART_Baud_Rate_Calculation+1)^0,w,c
  6083   001A06  0A00               	xorlw	0	; case 0
  6084   001A08  B4D8               	btfsc	status,2,c
  6085   001A0A  EF09  F00D         	goto	l10306
  6086   001A0E  EF24  F00D         	goto	l7224
  6087   001A12                     l10306:
  6088                           
  6089                           ; Switch size 1, requested type "simple"
  6090                           ; Number of cases is 6, Range of values is 0 to 5
  6091                           ; switch strategies available:
  6092                           ; Name         Instructions Cycles
  6093                           ; simple_byte           19    10 (average)
  6094                           ;	Chosen strategy is simple_byte
  6095   001A12  504F               	movf	??_EUSART_Baud_Rate_Calculation^0,w,c
  6096   001A14  0A00               	xorlw	0	; case 0
  6097   001A16  B4D8               	btfsc	status,2,c
  6098   001A18  EFD3  F00A         	goto	l1680
  6099   001A1C  0A01               	xorlw	1	; case 1
  6100   001A1E  B4D8               	btfsc	status,2,c
  6101   001A20  EF2F  F00B         	goto	l1682
  6102   001A24  0A03               	xorlw	3	; case 2
  6103   001A26  B4D8               	btfsc	status,2,c
  6104   001A28  EF8B  F00B         	goto	l1683
  6105   001A2C  0A01               	xorlw	1	; case 3
  6106   001A2E  B4D8               	btfsc	status,2,c
  6107   001A30  EFE7  F00B         	goto	l1684
  6108   001A34  0A07               	xorlw	7	; case 4
  6109   001A36  B4D8               	btfsc	status,2,c
  6110   001A38  EF43  F00C         	goto	l1685
  6111   001A3C  0A01               	xorlw	1	; case 5
  6112   001A3E  B4D8               	btfsc	status,2,c
  6113   001A40  EF9E  F00C         	goto	l1686
  6114   001A44  EF24  F00D         	goto	l7224
  6115   001A48                     l7224:
  6116                           
  6117                           ;MCAL_Layer/USART/hal_usart.c: 160:     SPBRG= (uint8)((uint32)Baud_Rate_Temp);
  6118   001A48  C051  F043         	movff	EUSART_Baud_Rate_Calculation@Baud_Rate_Temp,___fltol@f1
  6119   001A4C  C052  F044         	movff	EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+1,___fltol@f1+1
  6120   001A50  C053  F045         	movff	EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+2,___fltol@f1+2
  6121   001A54  C054  F046         	movff	EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+3,___fltol@f1+3
  6122   001A58  ECEE  F01A         	call	___fltol	;wreg free
  6123   001A5C  5043               	movf	?___fltol^0,w,c
  6124   001A5E  6EAF               	movwf	175,c	;volatile
  6125                           
  6126                           ;MCAL_Layer/USART/hal_usart.c: 161:     SPBRGH= (uint8)(((uint32)Baud_Rate_Temp) >> 8);
  6127   001A60  C051  F043         	movff	EUSART_Baud_Rate_Calculation@Baud_Rate_Temp,___fltol@f1
  6128   001A64  C052  F044         	movff	EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+1,___fltol@f1+1
  6129   001A68  C053  F045         	movff	EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+2,___fltol@f1+2
  6130   001A6C  C054  F046         	movff	EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+3,___fltol@f1+3
  6131   001A70  ECEE  F01A         	call	___fltol	;wreg free
  6132   001A74  C044  F043         	movff	?___fltol+1,?___fltol
  6133   001A78  6A44               	clrf	(?___fltol+1)^0,c
  6134   001A7A  5043               	movf	?___fltol^0,w,c
  6135   001A7C  6EB0               	movwf	176,c	;volatile
  6136   001A7E  0012               	return		;funcret
  6137   001A80                     __end_of_EUSART_Baud_Rate_Calculation:
  6138                           	callstack 0
  6139                           
  6140 ;; *************** function _EUSART_ASYNC_TX_Init *****************
  6141 ;; Defined at:
  6142 ;;		line 164 in file "MCAL_Layer/USART/hal_usart.c"
  6143 ;; Parameters:    Size  Location     Type
  6144 ;;  _eusart         2   11[COMRAM] PTR const struct .
  6145 ;;		 -> usart_obj(16), 
  6146 ;; Auto vars:     Size  Location     Type
  6147 ;;		None
  6148 ;; Return value:  Size  Location     Type
  6149 ;;                  1    wreg      void 
  6150 ;; Registers used:
  6151 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6152 ;; Tracked objects:
  6153 ;;		On entry : 0/0
  6154 ;;		On exit  : 0/0
  6155 ;;		Unchanged: 0/0
  6156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6157 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6160 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6161 ;;Total ram usage:        2 bytes
  6162 ;; Hardware stack levels used: 1
  6163 ;; Hardware stack levels required when called: 4
  6164 ;; This function calls:
  6165 ;;		Nothing
  6166 ;; This function is called by:
  6167 ;;		_EUSART_ASYNC_Init
  6168 ;; This function uses a non-reentrant model
  6169 ;;
  6170                           
  6171                           	psect	text31
  6172   0038B6                     __ptext31:
  6173                           	callstack 0
  6174   0038B6                     _EUSART_ASYNC_TX_Init:
  6175                           	callstack 23
  6176   0038B6                     
  6177                           ;MCAL_Layer/USART/hal_usart.c: 166:    if(1 == _eusart->usart_tx_cfg.usart_tx_enable) {
  6178   0038B6  EE20 F003          	lfsr	2,3
  6179   0038BA  500C               	movf	EUSART_ASYNC_TX_Init@_eusart^0,w,c
  6180   0038BC  26D9               	addwf	fsr2l,f,c
  6181   0038BE  500D               	movf	(EUSART_ASYNC_TX_Init@_eusart+1)^0,w,c
  6182   0038C0  22DA               	addwfc	fsr2h,f,c
  6183   0038C2  AADF               	btfss	indf2,5,c
  6184   0038C4  EF66  F01C         	goto	u6071
  6185   0038C8  EF68  F01C         	goto	u6070
  6186   0038CC                     u6071:
  6187   0038CC  EFB6  F01C         	goto	l7250
  6188   0038D0                     u6070:
  6189   0038D0                     
  6190                           ;MCAL_Layer/USART/hal_usart.c: 167:        TXSTAbits.TXEN=1;
  6191   0038D0  8AAC               	bsf	172,5,c	;volatile
  6192   0038D2                     
  6193                           ;MCAL_Layer/USART/hal_usart.c: 168:         EUSART_TxInterruptHandler=_eusart->EUSART_Tx
      +                          DefaultInterruptHandler;
  6194   0038D2  EE20 F008          	lfsr	2,8
  6195   0038D6  500C               	movf	EUSART_ASYNC_TX_Init@_eusart^0,w,c
  6196   0038D8  26D9               	addwf	fsr2l,f,c
  6197   0038DA  500D               	movf	(EUSART_ASYNC_TX_Init@_eusart+1)^0,w,c
  6198   0038DC  22DA               	addwfc	fsr2h,f,c
  6199   0038DE  CFDE F090          	movff	postinc2,_EUSART_TxInterruptHandler
  6200   0038E2  CFDD F091          	movff	postdec2,_EUSART_TxInterruptHandler+1
  6201                           
  6202                           ;MCAL_Layer/USART/hal_usart.c: 170:        if(1 == _eusart->usart_tx_cfg.usart_tx_interr
      +                          upt_enable){
  6203   0038E6  EE20 F003          	lfsr	2,3
  6204   0038EA  500C               	movf	EUSART_ASYNC_TX_Init@_eusart^0,w,c
  6205   0038EC  26D9               	addwf	fsr2l,f,c
  6206   0038EE  500D               	movf	(EUSART_ASYNC_TX_Init@_eusart+1)^0,w,c
  6207   0038F0  22DA               	addwfc	fsr2h,f,c
  6208   0038F2  ACDF               	btfss	indf2,6,c
  6209   0038F4  EF7E  F01C         	goto	u6081
  6210   0038F8  EF80  F01C         	goto	u6080
  6211   0038FC                     u6081:
  6212   0038FC  EF86  F01C         	goto	l7238
  6213   003900                     u6080:
  6214   003900                     
  6215                           ;MCAL_Layer/USART/hal_usart.c: 171:             PIE1bits.TXIE=1;
  6216   003900  889D               	bsf	157,4,c	;volatile
  6217                           
  6218                           ;MCAL_Layer/USART/hal_usart.c: 174:     (PIE1bits.TXIE=1);
  6219   003902  889D               	bsf	157,4,c	;volatile
  6220                           
  6221                           ;MCAL_Layer/USART/hal_usart.c: 187:         (INTCONbits.GIE=1);
  6222   003904  8EF2               	bsf	242,7,c	;volatile
  6223                           
  6224                           ;MCAL_Layer/USART/hal_usart.c: 188:         (INTCONbits.PEIE=1);
  6225   003906  8CF2               	bsf	242,6,c	;volatile
  6226                           
  6227                           ;MCAL_Layer/USART/hal_usart.c: 191:        }
  6228   003908  EF94  F01C         	goto	l7242
  6229   00390C                     l7238:
  6230   00390C  EE20 F003          	lfsr	2,3
  6231   003910  500C               	movf	EUSART_ASYNC_TX_Init@_eusart^0,w,c
  6232   003912  26D9               	addwf	fsr2l,f,c
  6233   003914  500D               	movf	(EUSART_ASYNC_TX_Init@_eusart+1)^0,w,c
  6234   003916  22DA               	addwfc	fsr2h,f,c
  6235   003918  BCDF               	btfsc	indf2,6,c
  6236   00391A  EF91  F01C         	goto	u6091
  6237   00391E  EF93  F01C         	goto	u6090
  6238   003922                     u6091:
  6239   003922  EF94  F01C         	goto	l7242
  6240   003926                     u6090:
  6241   003926                     
  6242                           ;MCAL_Layer/USART/hal_usart.c: 193:           PIE1bits.TXIE=0;
  6243   003926  989D               	bcf	157,4,c	;volatile
  6244   003928                     l7242:
  6245                           
  6246                           ;MCAL_Layer/USART/hal_usart.c: 197:        if( 1 ==_eusart->usart_tx_cfg.usart_tx_9bit_e
      +                          nable){
  6247   003928  EE20 F003          	lfsr	2,3
  6248   00392C  500C               	movf	EUSART_ASYNC_TX_Init@_eusart^0,w,c
  6249   00392E  26D9               	addwf	fsr2l,f,c
  6250   003930  500D               	movf	(EUSART_ASYNC_TX_Init@_eusart+1)^0,w,c
  6251   003932  22DA               	addwfc	fsr2h,f,c
  6252   003934  AEDF               	btfss	indf2,7,c
  6253   003936  EF9F  F01C         	goto	u6101
  6254   00393A  EFA1  F01C         	goto	u6100
  6255   00393E                     u6101:
  6256   00393E  EFA4  F01C         	goto	l7246
  6257   003942                     u6100:
  6258   003942                     
  6259                           ;MCAL_Layer/USART/hal_usart.c: 198:            TXSTAbits.TX9=1;
  6260   003942  8CAC               	bsf	172,6,c	;volatile
  6261                           
  6262                           ;MCAL_Layer/USART/hal_usart.c: 199:        }
  6263   003944  EFC4  F01C         	goto	l1703
  6264   003948                     l7246:
  6265   003948  EE20 F003          	lfsr	2,3
  6266   00394C  500C               	movf	EUSART_ASYNC_TX_Init@_eusart^0,w,c
  6267   00394E  26D9               	addwf	fsr2l,f,c
  6268   003950  500D               	movf	(EUSART_ASYNC_TX_Init@_eusart+1)^0,w,c
  6269   003952  22DA               	addwfc	fsr2h,f,c
  6270   003954  BEDF               	btfsc	indf2,7,c
  6271   003956  EFAF  F01C         	goto	u6111
  6272   00395A  EFB1  F01C         	goto	u6110
  6273   00395E                     u6111:
  6274   00395E  EFB4  F01C         	goto	l1697
  6275   003962                     u6110:
  6276   003962                     
  6277                           ;MCAL_Layer/USART/hal_usart.c: 201:            TXSTAbits.TX9=0;
  6278   003962  9CAC               	bcf	172,6,c	;volatile
  6279                           
  6280                           ;MCAL_Layer/USART/hal_usart.c: 202:        }
  6281   003964  EFC4  F01C         	goto	l1703
  6282   003968                     l1697:
  6283                           
  6284                           ;MCAL_Layer/USART/hal_usart.c: 204:    }
  6285   003968  EFC4  F01C         	goto	l1703
  6286   00396C                     l7250:
  6287   00396C  EE20 F003          	lfsr	2,3
  6288   003970  500C               	movf	EUSART_ASYNC_TX_Init@_eusart^0,w,c
  6289   003972  26D9               	addwf	fsr2l,f,c
  6290   003974  500D               	movf	(EUSART_ASYNC_TX_Init@_eusart+1)^0,w,c
  6291   003976  22DA               	addwfc	fsr2h,f,c
  6292   003978  BADF               	btfsc	indf2,5,c
  6293   00397A  EFC1  F01C         	goto	u6121
  6294   00397E  EFC3  F01C         	goto	u6120
  6295   003982                     u6121:
  6296   003982  EFC4  F01C         	goto	l1703
  6297   003986                     u6120:
  6298   003986                     
  6299                           ;MCAL_Layer/USART/hal_usart.c: 206:        TXSTAbits.TXEN=0;
  6300   003986  9AAC               	bcf	172,5,c	;volatile
  6301   003988                     l1703:
  6302   003988  0012               	return		;funcret
  6303   00398A                     __end_of_EUSART_ASYNC_TX_Init:
  6304                           	callstack 0
  6305                           
  6306 ;; *************** function _EUSART_ASYNC_RX_Init *****************
  6307 ;; Defined at:
  6308 ;;		line 211 in file "MCAL_Layer/USART/hal_usart.c"
  6309 ;; Parameters:    Size  Location     Type
  6310 ;;  _eusart         2   11[COMRAM] PTR const struct .
  6311 ;;		 -> usart_obj(16), 
  6312 ;; Auto vars:     Size  Location     Type
  6313 ;;		None
  6314 ;; Return value:  Size  Location     Type
  6315 ;;                  1    wreg      void 
  6316 ;; Registers used:
  6317 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6318 ;; Tracked objects:
  6319 ;;		On entry : 0/0
  6320 ;;		On exit  : 0/0
  6321 ;;		Unchanged: 0/0
  6322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6323 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6326 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6327 ;;Total ram usage:        2 bytes
  6328 ;; Hardware stack levels used: 1
  6329 ;; Hardware stack levels required when called: 4
  6330 ;; This function calls:
  6331 ;;		Nothing
  6332 ;; This function is called by:
  6333 ;;		_EUSART_ASYNC_Init
  6334 ;; This function uses a non-reentrant model
  6335 ;;
  6336                           
  6337                           	psect	text32
  6338   0036E2                     __ptext32:
  6339                           	callstack 0
  6340   0036E2                     _EUSART_ASYNC_RX_Init:
  6341                           	callstack 23
  6342   0036E2                     
  6343                           ;MCAL_Layer/USART/hal_usart.c: 213:     if(1 == _eusart->usart_rx_cfg.usart_rx_enable) {
  6344   0036E2  EE20 F005          	lfsr	2,5
  6345   0036E6  500C               	movf	EUSART_ASYNC_RX_Init@_eusart^0,w,c
  6346   0036E8  26D9               	addwf	fsr2l,f,c
  6347   0036EA  500D               	movf	(EUSART_ASYNC_RX_Init@_eusart+1)^0,w,c
  6348   0036EC  22DA               	addwfc	fsr2h,f,c
  6349   0036EE  AADF               	btfss	indf2,5,c
  6350   0036F0  EF7C  F01B         	goto	u6131
  6351   0036F4  EF7E  F01B         	goto	u6130
  6352   0036F8                     u6131:
  6353   0036F8  EFE0  F01B         	goto	l7274
  6354   0036FC                     u6130:
  6355   0036FC                     
  6356                           ;MCAL_Layer/USART/hal_usart.c: 214:        RCSTAbits.CREN=1;
  6357   0036FC  88AB               	bsf	171,4,c	;volatile
  6358   0036FE                     
  6359                           ;MCAL_Layer/USART/hal_usart.c: 215:        EUSART_RxInterruptHandler=_eusart->EUSART_RxD
      +                          efaultInterruptHandler;
  6360   0036FE  EE20 F00A          	lfsr	2,10
  6361   003702  500C               	movf	EUSART_ASYNC_RX_Init@_eusart^0,w,c
  6362   003704  26D9               	addwf	fsr2l,f,c
  6363   003706  500D               	movf	(EUSART_ASYNC_RX_Init@_eusart+1)^0,w,c
  6364   003708  22DA               	addwfc	fsr2h,f,c
  6365   00370A  CFDE F08E          	movff	postinc2,_EUSART_RxInterruptHandler
  6366   00370E  CFDD F08F          	movff	postdec2,_EUSART_RxInterruptHandler+1
  6367                           
  6368                           ;MCAL_Layer/USART/hal_usart.c: 216:        EUSART_FramingErrorHandler=_eusart->EUSART_Fr
      +                          amingErrorHandler;
  6369   003712  EE20 F00C          	lfsr	2,12
  6370   003716  500C               	movf	EUSART_ASYNC_RX_Init@_eusart^0,w,c
  6371   003718  26D9               	addwf	fsr2l,f,c
  6372   00371A  500D               	movf	(EUSART_ASYNC_RX_Init@_eusart+1)^0,w,c
  6373   00371C  22DA               	addwfc	fsr2h,f,c
  6374   00371E  CFDE F08C          	movff	postinc2,_EUSART_FramingErrorHandler
  6375   003722  CFDD F08D          	movff	postdec2,_EUSART_FramingErrorHandler+1
  6376                           
  6377                           ;MCAL_Layer/USART/hal_usart.c: 217:        EUSART_OverrunErrorHandler=_eusart->EUSART_Ov
      +                          errunErrorHandler;
  6378   003726  EE20 F00E          	lfsr	2,14
  6379   00372A  500C               	movf	EUSART_ASYNC_RX_Init@_eusart^0,w,c
  6380   00372C  26D9               	addwf	fsr2l,f,c
  6381   00372E  500D               	movf	(EUSART_ASYNC_RX_Init@_eusart+1)^0,w,c
  6382   003730  22DA               	addwfc	fsr2h,f,c
  6383   003732  CFDE F08A          	movff	postinc2,_EUSART_OverrunErrorHandler
  6384   003736  CFDD F08B          	movff	postdec2,_EUSART_OverrunErrorHandler+1
  6385                           
  6386                           ;MCAL_Layer/USART/hal_usart.c: 219:        if(1 == _eusart->usart_rx_cfg.usart_rx_interr
      +                          upt_enable){
  6387   00373A  EE20 F005          	lfsr	2,5
  6388   00373E  500C               	movf	EUSART_ASYNC_RX_Init@_eusart^0,w,c
  6389   003740  26D9               	addwf	fsr2l,f,c
  6390   003742  500D               	movf	(EUSART_ASYNC_RX_Init@_eusart+1)^0,w,c
  6391   003744  22DA               	addwfc	fsr2h,f,c
  6392   003746  ACDF               	btfss	indf2,6,c
  6393   003748  EFA8  F01B         	goto	u6141
  6394   00374C  EFAA  F01B         	goto	u6140
  6395   003750                     u6141:
  6396   003750  EFB0  F01B         	goto	l7262
  6397   003754                     u6140:
  6398   003754                     
  6399                           ;MCAL_Layer/USART/hal_usart.c: 220:           PIE1bits.RCIE=1;
  6400   003754  8A9D               	bsf	157,5,c	;volatile
  6401                           
  6402                           ;MCAL_Layer/USART/hal_usart.c: 223:     (PIE1bits.RCIE=1);
  6403   003756  8A9D               	bsf	157,5,c	;volatile
  6404                           
  6405                           ;MCAL_Layer/USART/hal_usart.c: 236:         (INTCONbits.GIE=1);
  6406   003758  8EF2               	bsf	242,7,c	;volatile
  6407                           
  6408                           ;MCAL_Layer/USART/hal_usart.c: 237:         (INTCONbits.PEIE=1);
  6409   00375A  8CF2               	bsf	242,6,c	;volatile
  6410                           
  6411                           ;MCAL_Layer/USART/hal_usart.c: 240:        }
  6412   00375C  EFBE  F01B         	goto	l7266
  6413   003760                     l7262:
  6414   003760  EE20 F005          	lfsr	2,5
  6415   003764  500C               	movf	EUSART_ASYNC_RX_Init@_eusart^0,w,c
  6416   003766  26D9               	addwf	fsr2l,f,c
  6417   003768  500D               	movf	(EUSART_ASYNC_RX_Init@_eusart+1)^0,w,c
  6418   00376A  22DA               	addwfc	fsr2h,f,c
  6419   00376C  BCDF               	btfsc	indf2,6,c
  6420   00376E  EFBB  F01B         	goto	u6151
  6421   003772  EFBD  F01B         	goto	u6150
  6422   003776                     u6151:
  6423   003776  EFBE  F01B         	goto	l7266
  6424   00377A                     u6150:
  6425   00377A                     
  6426                           ;MCAL_Layer/USART/hal_usart.c: 242:           PIE1bits.RCIE=0;
  6427   00377A  9A9D               	bcf	157,5,c	;volatile
  6428   00377C                     l7266:
  6429                           
  6430                           ;MCAL_Layer/USART/hal_usart.c: 246:        if( 1 ==_eusart->usart_rx_cfg.usart_rx_9bit_e
      +                          nable){
  6431   00377C  EE20 F005          	lfsr	2,5
  6432   003780  500C               	movf	EUSART_ASYNC_RX_Init@_eusart^0,w,c
  6433   003782  26D9               	addwf	fsr2l,f,c
  6434   003784  500D               	movf	(EUSART_ASYNC_RX_Init@_eusart+1)^0,w,c
  6435   003786  22DA               	addwfc	fsr2h,f,c
  6436   003788  AEDF               	btfss	indf2,7,c
  6437   00378A  EFC9  F01B         	goto	u6161
  6438   00378E  EFCB  F01B         	goto	u6160
  6439   003792                     u6161:
  6440   003792  EFCE  F01B         	goto	l7270
  6441   003796                     u6160:
  6442   003796                     
  6443                           ;MCAL_Layer/USART/hal_usart.c: 247:          RCSTAbits.RC9=1;
  6444   003796  8CAB               	bsf	171,6,c	;volatile
  6445                           
  6446                           ;MCAL_Layer/USART/hal_usart.c: 248:        }
  6447   003798  EFEE  F01B         	goto	l1718
  6448   00379C                     l7270:
  6449   00379C  EE20 F005          	lfsr	2,5
  6450   0037A0  500C               	movf	EUSART_ASYNC_RX_Init@_eusart^0,w,c
  6451   0037A2  26D9               	addwf	fsr2l,f,c
  6452   0037A4  500D               	movf	(EUSART_ASYNC_RX_Init@_eusart+1)^0,w,c
  6453   0037A6  22DA               	addwfc	fsr2h,f,c
  6454   0037A8  BEDF               	btfsc	indf2,7,c
  6455   0037AA  EFD9  F01B         	goto	u6171
  6456   0037AE  EFDB  F01B         	goto	u6170
  6457   0037B2                     u6171:
  6458   0037B2  EFDE  F01B         	goto	l1712
  6459   0037B6                     u6170:
  6460   0037B6                     
  6461                           ;MCAL_Layer/USART/hal_usart.c: 250:          RCSTAbits.RC9=0;
  6462   0037B6  9CAB               	bcf	171,6,c	;volatile
  6463                           
  6464                           ;MCAL_Layer/USART/hal_usart.c: 251:        }
  6465   0037B8  EFEE  F01B         	goto	l1718
  6466   0037BC                     l1712:
  6467                           
  6468                           ;MCAL_Layer/USART/hal_usart.c: 253:    }
  6469   0037BC  EFEE  F01B         	goto	l1718
  6470   0037C0                     l7274:
  6471   0037C0  EE20 F005          	lfsr	2,5
  6472   0037C4  500C               	movf	EUSART_ASYNC_RX_Init@_eusart^0,w,c
  6473   0037C6  26D9               	addwf	fsr2l,f,c
  6474   0037C8  500D               	movf	(EUSART_ASYNC_RX_Init@_eusart+1)^0,w,c
  6475   0037CA  22DA               	addwfc	fsr2h,f,c
  6476   0037CC  BADF               	btfsc	indf2,5,c
  6477   0037CE  EFEB  F01B         	goto	u6181
  6478   0037D2  EFED  F01B         	goto	u6180
  6479   0037D6                     u6181:
  6480   0037D6  EFEE  F01B         	goto	l1718
  6481   0037DA                     u6180:
  6482   0037DA                     
  6483                           ;MCAL_Layer/USART/hal_usart.c: 255:        RCSTAbits.CREN=0;
  6484   0037DA  98AB               	bcf	171,4,c	;volatile
  6485   0037DC                     l1718:
  6486   0037DC  0012               	return		;funcret
  6487   0037DE                     __end_of_EUSART_ASYNC_RX_Init:
  6488                           	callstack 0
  6489                           
  6490 ;; *************** function _ADC_Init *****************
  6491 ;; Defined at:
  6492 ;;		line 21 in file "MCAL_Layer/ADC/hal_adc.c"
  6493 ;; Parameters:    Size  Location     Type
  6494 ;;  _adc            2   14[COMRAM] PTR const struct .
  6495 ;;		 -> adc_1(7), 
  6496 ;; Auto vars:     Size  Location     Type
  6497 ;;  ret             1    0        unsigned char 
  6498 ;; Return value:  Size  Location     Type
  6499 ;;                  1    wreg      unsigned char 
  6500 ;; Registers used:
  6501 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6502 ;; Tracked objects:
  6503 ;;		On entry : 0/0
  6504 ;;		On exit  : 0/0
  6505 ;;		Unchanged: 0/0
  6506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6507 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6509 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6510 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6511 ;;Total ram usage:        3 bytes
  6512 ;; Hardware stack levels used: 1
  6513 ;; Hardware stack levels required when called: 5
  6514 ;; This function calls:
  6515 ;;		_adc_input_channel_port_configure
  6516 ;;		_configure_voltage_reference
  6517 ;;		_select_result_format
  6518 ;; This function is called by:
  6519 ;;		_ecu_layer_intialize
  6520 ;; This function uses a non-reentrant model
  6521 ;;
  6522                           
  6523                           	psect	text33
  6524   003C94                     __ptext33:
  6525                           	callstack 0
  6526   003C94                     _ADC_Init:
  6527                           	callstack 23
  6528   003C94                     
  6529                           ;MCAL_Layer/ADC/hal_adc.c: 24:     if(((void*)0)== _adc){
  6530   003C94  500F               	movf	ADC_Init@_adc^0,w,c
  6531   003C96  1010               	iorwf	(ADC_Init@_adc+1)^0,w,c
  6532   003C98  A4D8               	btfss	status,2,c
  6533   003C9A  EF51  F01E         	goto	u6301
  6534   003C9E  EF53  F01E         	goto	u6300
  6535   003CA2                     u6301:
  6536   003CA2  EF55  F01E         	goto	l511
  6537   003CA6                     u6300:
  6538   003CA6                     l7446:
  6539                           
  6540                           ;MCAL_Layer/ADC/hal_adc.c: 26:     }
  6541   003CA6  EFA6  F01E         	goto	l7470
  6542   003CAA                     l511:
  6543                           
  6544                           ;MCAL_Layer/ADC/hal_adc.c: 29:         (ADCON0bits.ADON=0);
  6545   003CAA  90C2               	bcf	194,0,c	;volatile
  6546   003CAC                     
  6547                           ;MCAL_Layer/ADC/hal_adc.c: 32:         ADCON2bits.ACQT=_adc->acquisition_time;
  6548   003CAC  EE20 F003          	lfsr	2,3
  6549   003CB0  500F               	movf	ADC_Init@_adc^0,w,c
  6550   003CB2  26D9               	addwf	fsr2l,f,c
  6551   003CB4  5010               	movf	(ADC_Init@_adc+1)^0,w,c
  6552   003CB6  22DA               	addwfc	fsr2h,f,c
  6553   003CB8  50DF               	movf	indf2,w,c
  6554   003CBA  6E11               	movwf	??_ADC_Init^0,c
  6555   003CBC  4611               	rlncf	??_ADC_Init^0,f,c
  6556   003CBE  4611               	rlncf	??_ADC_Init^0,f,c
  6557   003CC0  4611               	rlncf	??_ADC_Init^0,f,c
  6558   003CC2  50C0               	movf	192,w,c	;volatile
  6559   003CC4  1811               	xorwf	??_ADC_Init^0,w,c
  6560   003CC6  0BC7               	andlw	-57
  6561   003CC8  1811               	xorwf	??_ADC_Init^0,w,c
  6562   003CCA  6EC0               	movwf	192,c	;volatile
  6563                           
  6564                           ;MCAL_Layer/ADC/hal_adc.c: 34:         ADCON2bits.ADCS=_adc->conversion_clock;
  6565   003CCC  EE20 F004          	lfsr	2,4
  6566   003CD0  500F               	movf	ADC_Init@_adc^0,w,c
  6567   003CD2  26D9               	addwf	fsr2l,f,c
  6568   003CD4  5010               	movf	(ADC_Init@_adc+1)^0,w,c
  6569   003CD6  22DA               	addwfc	fsr2h,f,c
  6570   003CD8  50DF               	movf	indf2,w,c
  6571   003CDA  6E11               	movwf	??_ADC_Init^0,c
  6572   003CDC  50C0               	movf	192,w,c	;volatile
  6573   003CDE  1811               	xorwf	??_ADC_Init^0,w,c
  6574   003CE0  0BF8               	andlw	-8
  6575   003CE2  1811               	xorwf	??_ADC_Init^0,w,c
  6576   003CE4  6EC0               	movwf	192,c	;volatile
  6577                           
  6578                           ;MCAL_Layer/ADC/hal_adc.c: 36:         ADCON0bits.CHS=_adc->channel_select;
  6579   003CE6  EE20 F005          	lfsr	2,5
  6580   003CEA  500F               	movf	ADC_Init@_adc^0,w,c
  6581   003CEC  26D9               	addwf	fsr2l,f,c
  6582   003CEE  5010               	movf	(ADC_Init@_adc+1)^0,w,c
  6583   003CF0  22DA               	addwfc	fsr2h,f,c
  6584   003CF2  50DF               	movf	indf2,w,c
  6585   003CF4  6E11               	movwf	??_ADC_Init^0,c
  6586   003CF6  4611               	rlncf	??_ADC_Init^0,f,c
  6587   003CF8  4611               	rlncf	??_ADC_Init^0,f,c
  6588   003CFA  50C2               	movf	194,w,c	;volatile
  6589   003CFC  1811               	xorwf	??_ADC_Init^0,w,c
  6590   003CFE  0BC3               	andlw	-61
  6591   003D00  1811               	xorwf	??_ADC_Init^0,w,c
  6592   003D02  6EC2               	movwf	194,c	;volatile
  6593   003D04                     
  6594                           ;MCAL_Layer/ADC/hal_adc.c: 37:         adc_input_channel_port_configure(_adc->channel_se
      +                          lect);
  6595   003D04  EE20 F005          	lfsr	2,5
  6596   003D08  500F               	movf	ADC_Init@_adc^0,w,c
  6597   003D0A  26D9               	addwf	fsr2l,f,c
  6598   003D0C  5010               	movf	(ADC_Init@_adc+1)^0,w,c
  6599   003D0E  22DA               	addwfc	fsr2h,f,c
  6600   003D10  50DF               	movf	indf2,w,c
  6601   003D12  ECEF  F01B         	call	_adc_input_channel_port_configure
  6602   003D16                     
  6603                           ;MCAL_Layer/ADC/hal_adc.c: 41:         (PIE1bits.ADIE=1);
  6604   003D16  8C9D               	bsf	157,6,c	;volatile
  6605   003D18                     
  6606                           ;MCAL_Layer/ADC/hal_adc.c: 42:         (PIR1bits.ADIF=0);
  6607   003D18  9C9E               	bcf	158,6,c	;volatile
  6608   003D1A                     
  6609                           ;MCAL_Layer/ADC/hal_adc.c: 55:         (INTCONbits.GIE=1);
  6610   003D1A  8EF2               	bsf	242,7,c	;volatile
  6611   003D1C                     
  6612                           ;MCAL_Layer/ADC/hal_adc.c: 56:         (INTCONbits.PEIE=1);
  6613   003D1C  8CF2               	bsf	242,6,c	;volatile
  6614   003D1E                     
  6615                           ;MCAL_Layer/ADC/hal_adc.c: 58:         ADC_Interrupt_Handler=_adc->ADC_InterruptHandler;
  6616   003D1E  C00F  FFD9         	movff	ADC_Init@_adc,fsr2l
  6617   003D22  C010  FFDA         	movff	ADC_Init@_adc+1,fsr2h
  6618   003D26  CFDE F0C2          	movff	postinc2,_ADC_Interrupt_Handler
  6619   003D2A  CFDD F0C3          	movff	postdec2,_ADC_Interrupt_Handler+1
  6620   003D2E                     
  6621                           ;MCAL_Layer/ADC/hal_adc.c: 61:         select_result_format(_adc) ;
  6622   003D2E  C00F  F00C         	movff	ADC_Init@_adc,select_result_format@_adc
  6623   003D32  C010  F00D         	movff	ADC_Init@_adc+1,select_result_format@_adc+1
  6624   003D36  EC0E  F023         	call	_select_result_format	;wreg free
  6625   003D3A                     
  6626                           ;MCAL_Layer/ADC/hal_adc.c: 63:         configure_voltage_reference(_adc);
  6627   003D3A  C00F  F00C         	movff	ADC_Init@_adc,configure_voltage_reference@_adc
  6628   003D3E  C010  F00D         	movff	ADC_Init@_adc+1,configure_voltage_reference@_adc+1
  6629   003D42  ECA2  F022         	call	_configure_voltage_reference	;wreg free
  6630   003D46                     
  6631                           ;MCAL_Layer/ADC/hal_adc.c: 65:         (ADCON0bits.ADON=1);
  6632   003D46  80C2               	bsf	194,0,c	;volatile
  6633   003D48  EF53  F01E         	goto	l7446
  6634   003D4C                     l7470:
  6635                           
  6636                           ;MCAL_Layer/ADC/hal_adc.c: 71:     return ret;
  6637   003D4C  0E01               	movlw	1
  6638   003D4E  0012               	return		;funcret
  6639   003D50                     __end_of_ADC_Init:
  6640                           	callstack 0
  6641                           
  6642 ;; *************** function _select_result_format *****************
  6643 ;; Defined at:
  6644 ;;		line 271 in file "MCAL_Layer/ADC/hal_adc.c"
  6645 ;; Parameters:    Size  Location     Type
  6646 ;;  _adc            2   11[COMRAM] PTR const struct .
  6647 ;;		 -> adc_1(7), 
  6648 ;; Auto vars:     Size  Location     Type
  6649 ;;		None
  6650 ;; Return value:  Size  Location     Type
  6651 ;;                  1    wreg      void 
  6652 ;; Registers used:
  6653 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6654 ;; Tracked objects:
  6655 ;;		On entry : 0/0
  6656 ;;		On exit  : 0/0
  6657 ;;		Unchanged: 0/0
  6658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6659 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6662 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6663 ;;Total ram usage:        2 bytes
  6664 ;; Hardware stack levels used: 1
  6665 ;; Hardware stack levels required when called: 4
  6666 ;; This function calls:
  6667 ;;		Nothing
  6668 ;; This function is called by:
  6669 ;;		_ADC_Init
  6670 ;; This function uses a non-reentrant model
  6671 ;;
  6672                           
  6673                           	psect	text34
  6674   00461C                     __ptext34:
  6675                           	callstack 0
  6676   00461C                     _select_result_format:
  6677                           	callstack 23
  6678   00461C                     
  6679                           ;MCAL_Layer/ADC/hal_adc.c: 272:     if(0x01U == _adc->adc_result_format){
  6680   00461C  EE20 F006          	lfsr	2,6
  6681   004620  500C               	movf	select_result_format@_adc^0,w,c
  6682   004622  26D9               	addwf	fsr2l,f,c
  6683   004624  500D               	movf	(select_result_format@_adc+1)^0,w,c
  6684   004626  22DA               	addwfc	fsr2h,f,c
  6685   004628  A2DF               	btfss	indf2,1,c
  6686   00462A  EF19  F023         	goto	u6031
  6687   00462E  EF1B  F023         	goto	u6030
  6688   004632                     u6031:
  6689   004632  EF1E  F023         	goto	l7188
  6690   004636                     u6030:
  6691   004636                     
  6692                           ;MCAL_Layer/ADC/hal_adc.c: 273:         (ADCON2bits.ADFM=1);
  6693   004636  8EC0               	bsf	192,7,c	;volatile
  6694                           
  6695                           ;MCAL_Layer/ADC/hal_adc.c: 274:     }
  6696   004638  EF2F  F023         	goto	l586
  6697   00463C                     l7188:
  6698   00463C  EE20 F006          	lfsr	2,6
  6699   004640  500C               	movf	select_result_format@_adc^0,w,c
  6700   004642  26D9               	addwf	fsr2l,f,c
  6701   004644  500D               	movf	(select_result_format@_adc+1)^0,w,c
  6702   004646  22DA               	addwfc	fsr2h,f,c
  6703   004648  B2DF               	btfsc	indf2,1,c
  6704   00464A  EF29  F023         	goto	u6041
  6705   00464E  EF2B  F023         	goto	u6040
  6706   004652                     u6041:
  6707   004652  EF2E  F023         	goto	l584
  6708   004656                     u6040:
  6709   004656                     
  6710                           ;MCAL_Layer/ADC/hal_adc.c: 276:         (ADCON2bits.ADFM=0);
  6711   004656  9EC0               	bcf	192,7,c	;volatile
  6712                           
  6713                           ;MCAL_Layer/ADC/hal_adc.c: 277:     }
  6714   004658  EF2F  F023         	goto	l586
  6715   00465C                     l584:
  6716                           
  6717                           ;MCAL_Layer/ADC/hal_adc.c: 279:         (ADCON2bits.ADFM=1);
  6718   00465C  8EC0               	bsf	192,7,c	;volatile
  6719   00465E                     l586:
  6720   00465E  0012               	return		;funcret
  6721   004660                     __end_of_select_result_format:
  6722                           	callstack 0
  6723                           
  6724 ;; *************** function _configure_voltage_reference *****************
  6725 ;; Defined at:
  6726 ;;		line 283 in file "MCAL_Layer/ADC/hal_adc.c"
  6727 ;; Parameters:    Size  Location     Type
  6728 ;;  _adc            2   11[COMRAM] PTR const struct .
  6729 ;;		 -> adc_1(7), 
  6730 ;; Auto vars:     Size  Location     Type
  6731 ;;		None
  6732 ;; Return value:  Size  Location     Type
  6733 ;;                  1    wreg      void 
  6734 ;; Registers used:
  6735 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6736 ;; Tracked objects:
  6737 ;;		On entry : 0/0
  6738 ;;		On exit  : 0/0
  6739 ;;		Unchanged: 0/0
  6740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6741 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6744 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6745 ;;Total ram usage:        2 bytes
  6746 ;; Hardware stack levels used: 1
  6747 ;; Hardware stack levels required when called: 4
  6748 ;; This function calls:
  6749 ;;		Nothing
  6750 ;; This function is called by:
  6751 ;;		_ADC_Init
  6752 ;; This function uses a non-reentrant model
  6753 ;;
  6754                           
  6755                           	psect	text35
  6756   004544                     __ptext35:
  6757                           	callstack 0
  6758   004544                     _configure_voltage_reference:
  6759                           	callstack 23
  6760   004544                     
  6761                           ;MCAL_Layer/ADC/hal_adc.c: 284:     if(0x01U == _adc->voltage_reference){
  6762   004544  EE20 F006          	lfsr	2,6
  6763   004548  500C               	movf	configure_voltage_reference@_adc^0,w,c
  6764   00454A  26D9               	addwf	fsr2l,f,c
  6765   00454C  500D               	movf	(configure_voltage_reference@_adc+1)^0,w,c
  6766   00454E  22DA               	addwfc	fsr2h,f,c
  6767   004550  A0DF               	btfss	indf2,0,c
  6768   004552  EFAD  F022         	goto	u6051
  6769   004556  EFAF  F022         	goto	u6050
  6770   00455A                     u6051:
  6771   00455A  EFB3  F022         	goto	l7194
  6772   00455E                     u6050:
  6773   00455E  8AC1               	bsf	193,5,c	;volatile
  6774   004560  88C1               	bsf	193,4,c	;volatile
  6775   004562  EFC6  F022         	goto	l599
  6776   004566                     l7194:
  6777   004566  EE20 F006          	lfsr	2,6
  6778   00456A  500C               	movf	configure_voltage_reference@_adc^0,w,c
  6779   00456C  26D9               	addwf	fsr2l,f,c
  6780   00456E  500D               	movf	(configure_voltage_reference@_adc+1)^0,w,c
  6781   004570  22DA               	addwfc	fsr2h,f,c
  6782   004572  B0DF               	btfsc	indf2,0,c
  6783   004574  EFBE  F022         	goto	u6061
  6784   004578  EFC0  F022         	goto	u6060
  6785   00457C                     u6061:
  6786   00457C  EFC4  F022         	goto	l597
  6787   004580                     u6060:
  6788   004580  9AC1               	bcf	193,5,c	;volatile
  6789   004582  98C1               	bcf	193,4,c	;volatile
  6790   004584  EFC6  F022         	goto	l599
  6791   004588                     l597:
  6792   004588  9AC1               	bcf	193,5,c	;volatile
  6793   00458A  98C1               	bcf	193,4,c	;volatile
  6794   00458C                     l599:
  6795   00458C  0012               	return		;funcret
  6796   00458E                     __end_of_configure_voltage_reference:
  6797                           	callstack 0
  6798                           
  6799 ;; *************** function ___lwdiv *****************
  6800 ;; Defined at:
  6801 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwdiv.c"
  6802 ;; Parameters:    Size  Location     Type
  6803 ;;  dividend        2   11[COMRAM] unsigned int 
  6804 ;;  divisor         2   13[COMRAM] unsigned int 
  6805 ;; Auto vars:     Size  Location     Type
  6806 ;;  quotient        2   15[COMRAM] unsigned int 
  6807 ;;  counter         1   17[COMRAM] unsigned char 
  6808 ;; Return value:  Size  Location     Type
  6809 ;;                  2   11[COMRAM] unsigned int 
  6810 ;; Registers used:
  6811 ;;		wreg, status,2, status,0
  6812 ;; Tracked objects:
  6813 ;;		On entry : 0/0
  6814 ;;		On exit  : 0/0
  6815 ;;		Unchanged: 0/0
  6816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6817 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6818 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6820 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6821 ;;Total ram usage:        7 bytes
  6822 ;; Hardware stack levels used: 1
  6823 ;; Hardware stack levels required when called: 4
  6824 ;; This function calls:
  6825 ;;		Nothing
  6826 ;; This function is called by:
  6827 ;;		_main
  6828 ;; This function uses a non-reentrant model
  6829 ;;
  6830                           
  6831                           	psect	text36
  6832   004298                     __ptext36:
  6833                           	callstack 0
  6834   004298                     ___lwdiv:
  6835                           	callstack 26
  6836   004298  0E00               	movlw	0
  6837   00429A  6E11               	movwf	(___lwdiv@quotient+1)^0,c
  6838   00429C  0E00               	movlw	0
  6839   00429E  6E10               	movwf	___lwdiv@quotient^0,c
  6840   0042A0  500E               	movf	___lwdiv@divisor^0,w,c
  6841   0042A2  100F               	iorwf	(___lwdiv@divisor+1)^0,w,c
  6842   0042A4  B4D8               	btfsc	status,2,c
  6843   0042A6  EF57  F021         	goto	u7231
  6844   0042AA  EF59  F021         	goto	u7230
  6845   0042AE                     u7231:
  6846   0042AE  EF81  F021         	goto	l2319
  6847   0042B2                     u7230:
  6848   0042B2  0E01               	movlw	1
  6849   0042B4  6E12               	movwf	___lwdiv@counter^0,c
  6850   0042B6  EF61  F021         	goto	l8332
  6851   0042BA                     l8330:
  6852   0042BA  90D8               	bcf	status,0,c
  6853   0042BC  360E               	rlcf	___lwdiv@divisor^0,f,c
  6854   0042BE  360F               	rlcf	(___lwdiv@divisor+1)^0,f,c
  6855   0042C0  2A12               	incf	___lwdiv@counter^0,f,c
  6856   0042C2                     l8332:
  6857   0042C2  AE0F               	btfss	(___lwdiv@divisor+1)^0,7,c
  6858   0042C4  EF66  F021         	goto	u7241
  6859   0042C8  EF68  F021         	goto	u7240
  6860   0042CC                     u7241:
  6861   0042CC  EF5D  F021         	goto	l8330
  6862   0042D0                     u7240:
  6863   0042D0                     l8334:
  6864   0042D0  90D8               	bcf	status,0,c
  6865   0042D2  3610               	rlcf	___lwdiv@quotient^0,f,c
  6866   0042D4  3611               	rlcf	(___lwdiv@quotient+1)^0,f,c
  6867   0042D6  500E               	movf	___lwdiv@divisor^0,w,c
  6868   0042D8  5C0C               	subwf	___lwdiv@dividend^0,w,c
  6869   0042DA  500F               	movf	(___lwdiv@divisor+1)^0,w,c
  6870   0042DC  580D               	subwfb	(___lwdiv@dividend+1)^0,w,c
  6871   0042DE  A0D8               	btfss	status,0,c
  6872   0042E0  EF74  F021         	goto	u7251
  6873   0042E4  EF76  F021         	goto	u7250
  6874   0042E8                     u7251:
  6875   0042E8  EF7B  F021         	goto	l8342
  6876   0042EC                     u7250:
  6877   0042EC  500E               	movf	___lwdiv@divisor^0,w,c
  6878   0042EE  5E0C               	subwf	___lwdiv@dividend^0,f,c
  6879   0042F0  500F               	movf	(___lwdiv@divisor+1)^0,w,c
  6880   0042F2  5A0D               	subwfb	(___lwdiv@dividend+1)^0,f,c
  6881   0042F4  8010               	bsf	___lwdiv@quotient^0,0,c
  6882   0042F6                     l8342:
  6883   0042F6  90D8               	bcf	status,0,c
  6884   0042F8  320F               	rrcf	(___lwdiv@divisor+1)^0,f,c
  6885   0042FA  320E               	rrcf	___lwdiv@divisor^0,f,c
  6886   0042FC  2E12               	decfsz	___lwdiv@counter^0,f,c
  6887   0042FE  EF68  F021         	goto	l8334
  6888   004302                     l2319:
  6889   004302  C010  F00C         	movff	___lwdiv@quotient,?___lwdiv
  6890   004306  C011  F00D         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6891   00430A  0012               	return		;funcret
  6892   00430C                     __end_of___lwdiv:
  6893                           	callstack 0
  6894                           
  6895 ;; *************** function ___flmul *****************
  6896 ;; Defined at:
  6897 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcmul.c"
  6898 ;; Parameters:    Size  Location     Type
  6899 ;;  b               4   25[COMRAM] unsigned int 
  6900 ;;  a               4   29[COMRAM] unsigned int 
  6901 ;; Auto vars:     Size  Location     Type
  6902 ;;  prod            4   44[COMRAM] struct .
  6903 ;;  grs             4   38[COMRAM] unsigned long 
  6904 ;;  temp            2   48[COMRAM] struct .
  6905 ;;  bexp            1   43[COMRAM] unsigned char 
  6906 ;;  aexp            1   42[COMRAM] unsigned char 
  6907 ;;  sign            1   37[COMRAM] unsigned char 
  6908 ;; Return value:  Size  Location     Type
  6909 ;;                  4   25[COMRAM] unsigned char 
  6910 ;; Registers used:
  6911 ;;		wreg, status,2, status,0, prodl, prodh
  6912 ;; Tracked objects:
  6913 ;;		On entry : 0/0
  6914 ;;		On exit  : 0/0
  6915 ;;		Unchanged: 0/0
  6916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6917 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6918 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6919 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6920 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6921 ;;Total ram usage:       25 bytes
  6922 ;; Hardware stack levels used: 1
  6923 ;; Hardware stack levels required when called: 4
  6924 ;; This function calls:
  6925 ;;		Nothing
  6926 ;; This function is called by:
  6927 ;;		_main
  6928 ;; This function uses a non-reentrant model
  6929 ;;
  6930                           
  6931                           	psect	text37
  6932   001F40                     __ptext37:
  6933                           	callstack 0
  6934   001F40                     ___flmul:
  6935                           	callstack 26
  6936   001F40  501D               	movf	(___flmul@b+3)^0,w,c
  6937   001F42  0B80               	andlw	128
  6938   001F44  6E26               	movwf	___flmul@sign^0,c
  6939   001F46  501D               	movf	(___flmul@b+3)^0,w,c
  6940   001F48  241D               	addwf	(___flmul@b+3)^0,w,c
  6941   001F4A  6E2C               	movwf	___flmul@bexp^0,c
  6942   001F4C  AE1C               	btfss	(___flmul@b+2)^0,7,c
  6943   001F4E  EFAB  F00F         	goto	u7041
  6944   001F52  EFAD  F00F         	goto	u7040
  6945   001F56                     u7041:
  6946   001F56  EFAE  F00F         	goto	l8200
  6947   001F5A                     u7040:
  6948   001F5A  802C               	bsf	___flmul@bexp^0,0,c
  6949   001F5C                     l8200:
  6950   001F5C  502C               	movf	___flmul@bexp^0,w,c
  6951   001F5E  B4D8               	btfsc	status,2,c
  6952   001F60  EFB4  F00F         	goto	u7051
  6953   001F64  EFB6  F00F         	goto	u7050
  6954   001F68                     u7051:
  6955   001F68  EFC9  F00F         	goto	l8208
  6956   001F6C                     u7050:
  6957   001F6C  282C               	incf	___flmul@bexp^0,w,c
  6958   001F6E  A4D8               	btfss	status,2,c
  6959   001F70  EFBC  F00F         	goto	u7061
  6960   001F74  EFBE  F00F         	goto	u7060
  6961   001F78                     u7061:
  6962   001F78  EFC6  F00F         	goto	l8206
  6963   001F7C                     u7060:
  6964   001F7C  0E00               	movlw	0
  6965   001F7E  6E1A               	movwf	___flmul@b^0,c
  6966   001F80  0E00               	movlw	0
  6967   001F82  6E1B               	movwf	(___flmul@b+1)^0,c
  6968   001F84  0E00               	movlw	0
  6969   001F86  6E1C               	movwf	(___flmul@b+2)^0,c
  6970   001F88  0E00               	movlw	0
  6971   001F8A  6E1D               	movwf	(___flmul@b+3)^0,c
  6972   001F8C                     l8206:
  6973   001F8C  8E1C               	bsf	(___flmul@b+2)^0,7,c
  6974   001F8E  EFD1  F00F         	goto	l8210
  6975   001F92                     l8208:
  6976   001F92  0E00               	movlw	0
  6977   001F94  6E1A               	movwf	___flmul@b^0,c
  6978   001F96  0E00               	movlw	0
  6979   001F98  6E1B               	movwf	(___flmul@b+1)^0,c
  6980   001F9A  0E00               	movlw	0
  6981   001F9C  6E1C               	movwf	(___flmul@b+2)^0,c
  6982   001F9E  0E00               	movlw	0
  6983   001FA0  6E1D               	movwf	(___flmul@b+3)^0,c
  6984   001FA2                     l8210:
  6985   001FA2  5021               	movf	(___flmul@a+3)^0,w,c
  6986   001FA4  0B80               	andlw	128
  6987   001FA6  1A26               	xorwf	___flmul@sign^0,f,c
  6988   001FA8  5021               	movf	(___flmul@a+3)^0,w,c
  6989   001FAA  2421               	addwf	(___flmul@a+3)^0,w,c
  6990   001FAC  6E2B               	movwf	___flmul@aexp^0,c
  6991   001FAE  AE20               	btfss	(___flmul@a+2)^0,7,c
  6992   001FB0  EFDC  F00F         	goto	u7071
  6993   001FB4  EFDE  F00F         	goto	u7070
  6994   001FB8                     u7071:
  6995   001FB8  EFDF  F00F         	goto	l8218
  6996   001FBC                     u7070:
  6997   001FBC  802B               	bsf	___flmul@aexp^0,0,c
  6998   001FBE                     l8218:
  6999   001FBE  502B               	movf	___flmul@aexp^0,w,c
  7000   001FC0  B4D8               	btfsc	status,2,c
  7001   001FC2  EFE5  F00F         	goto	u7081
  7002   001FC6  EFE7  F00F         	goto	u7080
  7003   001FCA                     u7081:
  7004   001FCA  EFFA  F00F         	goto	l8226
  7005   001FCE                     u7080:
  7006   001FCE  282B               	incf	___flmul@aexp^0,w,c
  7007   001FD0  A4D8               	btfss	status,2,c
  7008   001FD2  EFED  F00F         	goto	u7091
  7009   001FD6  EFEF  F00F         	goto	u7090
  7010   001FDA                     u7091:
  7011   001FDA  EFF7  F00F         	goto	l8224
  7012   001FDE                     u7090:
  7013   001FDE  0E00               	movlw	0
  7014   001FE0  6E1E               	movwf	___flmul@a^0,c
  7015   001FE2  0E00               	movlw	0
  7016   001FE4  6E1F               	movwf	(___flmul@a+1)^0,c
  7017   001FE6  0E00               	movlw	0
  7018   001FE8  6E20               	movwf	(___flmul@a+2)^0,c
  7019   001FEA  0E00               	movlw	0
  7020   001FEC  6E21               	movwf	(___flmul@a+3)^0,c
  7021   001FEE                     l8224:
  7022   001FEE  8E20               	bsf	(___flmul@a+2)^0,7,c
  7023   001FF0  EF02  F010         	goto	l2442
  7024   001FF4                     l8226:
  7025   001FF4  0E00               	movlw	0
  7026   001FF6  6E1E               	movwf	___flmul@a^0,c
  7027   001FF8  0E00               	movlw	0
  7028   001FFA  6E1F               	movwf	(___flmul@a+1)^0,c
  7029   001FFC  0E00               	movlw	0
  7030   001FFE  6E20               	movwf	(___flmul@a+2)^0,c
  7031   002000  0E00               	movlw	0
  7032   002002  6E21               	movwf	(___flmul@a+3)^0,c
  7033   002004                     l2442:
  7034   002004  502B               	movf	___flmul@aexp^0,w,c
  7035   002006  B4D8               	btfsc	status,2,c
  7036   002008  EF08  F010         	goto	u7101
  7037   00200C  EF0A  F010         	goto	u7100
  7038   002010                     u7101:
  7039   002010  EF12  F010         	goto	l8230
  7040   002014                     u7100:
  7041   002014  502C               	movf	___flmul@bexp^0,w,c
  7042   002016  A4D8               	btfss	status,2,c
  7043   002018  EF10  F010         	goto	u7111
  7044   00201C  EF12  F010         	goto	u7110
  7045   002020                     u7111:
  7046   002020  EF1C  F010         	goto	l8234
  7047   002024                     u7110:
  7048   002024                     l8230:
  7049   002024  0E00               	movlw	0
  7050   002026  6E1A               	movwf	?___flmul^0,c
  7051   002028  0E00               	movlw	0
  7052   00202A  6E1B               	movwf	(?___flmul+1)^0,c
  7053   00202C  0E00               	movlw	0
  7054   00202E  6E1C               	movwf	(?___flmul+2)^0,c
  7055   002030  0E00               	movlw	0
  7056   002032  6E1D               	movwf	(?___flmul+3)^0,c
  7057   002034  EFB4  F011         	goto	l2446
  7058   002038                     l8234:
  7059   002038  5020               	movf	(___flmul@a+2)^0,w,c
  7060   00203A  021A               	mulwf	___flmul@b^0,c
  7061   00203C  CFF3 F031          	movff	prodl,___flmul@temp
  7062   002040  CFF4 F032          	movff	prodh,___flmul@temp+1
  7063   002044  5031               	movf	___flmul@temp^0,w,c
  7064   002046  6E27               	movwf	___flmul@grs^0,c
  7065   002048  6A28               	clrf	(___flmul@grs+1)^0,c
  7066   00204A  6A29               	clrf	(___flmul@grs+2)^0,c
  7067   00204C  6A2A               	clrf	(___flmul@grs+3)^0,c
  7068   00204E  5032               	movf	(___flmul@temp+1)^0,w,c
  7069   002050  6E2D               	movwf	___flmul@prod^0,c
  7070   002052  6A2E               	clrf	(___flmul@prod+1)^0,c
  7071   002054  6A2F               	clrf	(___flmul@prod+2)^0,c
  7072   002056  6A30               	clrf	(___flmul@prod+3)^0,c
  7073   002058  501F               	movf	(___flmul@a+1)^0,w,c
  7074   00205A  021B               	mulwf	(___flmul@b+1)^0,c
  7075   00205C  CFF3 F031          	movff	prodl,___flmul@temp
  7076   002060  CFF4 F032          	movff	prodh,___flmul@temp+1
  7077   002064  5031               	movf	___flmul@temp^0,w,c
  7078   002066  2627               	addwf	___flmul@grs^0,f,c
  7079   002068  0E00               	movlw	0
  7080   00206A  2228               	addwfc	(___flmul@grs+1)^0,f,c
  7081   00206C  2229               	addwfc	(___flmul@grs+2)^0,f,c
  7082   00206E  222A               	addwfc	(___flmul@grs+3)^0,f,c
  7083   002070  5032               	movf	(___flmul@temp+1)^0,w,c
  7084   002072  262D               	addwf	___flmul@prod^0,f,c
  7085   002074  0E00               	movlw	0
  7086   002076  222E               	addwfc	(___flmul@prod+1)^0,f,c
  7087   002078  222F               	addwfc	(___flmul@prod+2)^0,f,c
  7088   00207A  2230               	addwfc	(___flmul@prod+3)^0,f,c
  7089   00207C  501E               	movf	___flmul@a^0,w,c
  7090   00207E  021C               	mulwf	(___flmul@b+2)^0,c
  7091   002080  CFF3 F031          	movff	prodl,___flmul@temp
  7092   002084  CFF4 F032          	movff	prodh,___flmul@temp+1
  7093   002088  5031               	movf	___flmul@temp^0,w,c
  7094   00208A  2627               	addwf	___flmul@grs^0,f,c
  7095   00208C  0E00               	movlw	0
  7096   00208E  2228               	addwfc	(___flmul@grs+1)^0,f,c
  7097   002090  2229               	addwfc	(___flmul@grs+2)^0,f,c
  7098   002092  222A               	addwfc	(___flmul@grs+3)^0,f,c
  7099   002094  5032               	movf	(___flmul@temp+1)^0,w,c
  7100   002096  262D               	addwf	___flmul@prod^0,f,c
  7101   002098  0E00               	movlw	0
  7102   00209A  222E               	addwfc	(___flmul@prod+1)^0,f,c
  7103   00209C  222F               	addwfc	(___flmul@prod+2)^0,f,c
  7104   00209E  2230               	addwfc	(___flmul@prod+3)^0,f,c
  7105   0020A0  C029  F02A         	movff	___flmul@grs+2,___flmul@grs+3
  7106   0020A4  C028  F029         	movff	___flmul@grs+1,___flmul@grs+2
  7107   0020A8  C027  F028         	movff	___flmul@grs,___flmul@grs+1
  7108   0020AC  6A27               	clrf	___flmul@grs^0,c
  7109   0020AE  501E               	movf	___flmul@a^0,w,c
  7110   0020B0  021B               	mulwf	(___flmul@b+1)^0,c
  7111   0020B2  CFF3 F031          	movff	prodl,___flmul@temp
  7112   0020B6  CFF4 F032          	movff	prodh,___flmul@temp+1
  7113   0020BA  5031               	movf	___flmul@temp^0,w,c
  7114   0020BC  2627               	addwf	___flmul@grs^0,f,c
  7115   0020BE  5032               	movf	(___flmul@temp+1)^0,w,c
  7116   0020C0  2228               	addwfc	(___flmul@grs+1)^0,f,c
  7117   0020C2  0E00               	movlw	0
  7118   0020C4  2229               	addwfc	(___flmul@grs+2)^0,f,c
  7119   0020C6  0E00               	movlw	0
  7120   0020C8  222A               	addwfc	(___flmul@grs+3)^0,f,c
  7121   0020CA  501F               	movf	(___flmul@a+1)^0,w,c
  7122   0020CC  021A               	mulwf	___flmul@b^0,c
  7123   0020CE  CFF3 F031          	movff	prodl,___flmul@temp
  7124   0020D2  CFF4 F032          	movff	prodh,___flmul@temp+1
  7125   0020D6  5031               	movf	___flmul@temp^0,w,c
  7126   0020D8  2627               	addwf	___flmul@grs^0,f,c
  7127   0020DA  5032               	movf	(___flmul@temp+1)^0,w,c
  7128   0020DC  2228               	addwfc	(___flmul@grs+1)^0,f,c
  7129   0020DE  0E00               	movlw	0
  7130   0020E0  2229               	addwfc	(___flmul@grs+2)^0,f,c
  7131   0020E2  0E00               	movlw	0
  7132   0020E4  222A               	addwfc	(___flmul@grs+3)^0,f,c
  7133   0020E6  C029  F02A         	movff	___flmul@grs+2,___flmul@grs+3
  7134   0020EA  C028  F029         	movff	___flmul@grs+1,___flmul@grs+2
  7135   0020EE  C027  F028         	movff	___flmul@grs,___flmul@grs+1
  7136   0020F2  6A27               	clrf	___flmul@grs^0,c
  7137   0020F4  501E               	movf	___flmul@a^0,w,c
  7138   0020F6  021A               	mulwf	___flmul@b^0,c
  7139   0020F8  CFF3 F031          	movff	prodl,___flmul@temp
  7140   0020FC  CFF4 F032          	movff	prodh,___flmul@temp+1
  7141   002100  5031               	movf	___flmul@temp^0,w,c
  7142   002102  2627               	addwf	___flmul@grs^0,f,c
  7143   002104  5032               	movf	(___flmul@temp+1)^0,w,c
  7144   002106  2228               	addwfc	(___flmul@grs+1)^0,f,c
  7145   002108  0E00               	movlw	0
  7146   00210A  2229               	addwfc	(___flmul@grs+2)^0,f,c
  7147   00210C  0E00               	movlw	0
  7148   00210E  222A               	addwfc	(___flmul@grs+3)^0,f,c
  7149   002110  5020               	movf	(___flmul@a+2)^0,w,c
  7150   002112  021B               	mulwf	(___flmul@b+1)^0,c
  7151   002114  CFF3 F031          	movff	prodl,___flmul@temp
  7152   002118  CFF4 F032          	movff	prodh,___flmul@temp+1
  7153   00211C  5031               	movf	___flmul@temp^0,w,c
  7154   00211E  262D               	addwf	___flmul@prod^0,f,c
  7155   002120  5032               	movf	(___flmul@temp+1)^0,w,c
  7156   002122  222E               	addwfc	(___flmul@prod+1)^0,f,c
  7157   002124  0E00               	movlw	0
  7158   002126  222F               	addwfc	(___flmul@prod+2)^0,f,c
  7159   002128  0E00               	movlw	0
  7160   00212A  2230               	addwfc	(___flmul@prod+3)^0,f,c
  7161   00212C  501F               	movf	(___flmul@a+1)^0,w,c
  7162   00212E  021C               	mulwf	(___flmul@b+2)^0,c
  7163   002130  CFF3 F031          	movff	prodl,___flmul@temp
  7164   002134  CFF4 F032          	movff	prodh,___flmul@temp+1
  7165   002138  5031               	movf	___flmul@temp^0,w,c
  7166   00213A  262D               	addwf	___flmul@prod^0,f,c
  7167   00213C  5032               	movf	(___flmul@temp+1)^0,w,c
  7168   00213E  222E               	addwfc	(___flmul@prod+1)^0,f,c
  7169   002140  0E00               	movlw	0
  7170   002142  222F               	addwfc	(___flmul@prod+2)^0,f,c
  7171   002144  0E00               	movlw	0
  7172   002146  2230               	addwfc	(___flmul@prod+3)^0,f,c
  7173   002148  5020               	movf	(___flmul@a+2)^0,w,c
  7174   00214A  021C               	mulwf	(___flmul@b+2)^0,c
  7175   00214C  CFF3 F031          	movff	prodl,___flmul@temp
  7176   002150  CFF4 F032          	movff	prodh,___flmul@temp+1
  7177   002154  5031               	movf	___flmul@temp^0,w,c
  7178   002156  6E22               	movwf	??___flmul^0,c
  7179   002158  5032               	movf	(___flmul@temp+1)^0,w,c
  7180   00215A  6E23               	movwf	(??___flmul+1)^0,c
  7181   00215C  6A24               	clrf	(??___flmul+2)^0,c
  7182   00215E  6A25               	clrf	(??___flmul+3)^0,c
  7183   002160  C024  F025         	movff	??___flmul+2,??___flmul+3
  7184   002164  C023  F024         	movff	??___flmul+1,??___flmul+2
  7185   002168  C022  F023         	movff	??___flmul,??___flmul+1
  7186   00216C  6A22               	clrf	??___flmul^0,c
  7187   00216E  5022               	movf	??___flmul^0,w,c
  7188   002170  262D               	addwf	___flmul@prod^0,f,c
  7189   002172  5023               	movf	(??___flmul+1)^0,w,c
  7190   002174  222E               	addwfc	(___flmul@prod+1)^0,f,c
  7191   002176  5024               	movf	(??___flmul+2)^0,w,c
  7192   002178  222F               	addwfc	(___flmul@prod+2)^0,f,c
  7193   00217A  5025               	movf	(??___flmul+3)^0,w,c
  7194   00217C  2230               	addwfc	(___flmul@prod+3)^0,f,c
  7195   00217E  C027  F022         	movff	___flmul@grs,??___flmul
  7196   002182  C028  F023         	movff	___flmul@grs+1,??___flmul+1
  7197   002186  C029  F024         	movff	___flmul@grs+2,??___flmul+2
  7198   00218A  C02A  F025         	movff	___flmul@grs+3,??___flmul+3
  7199   00218E  0E19               	movlw	25
  7200   002190  EFCF  F010         	goto	u7120
  7201   002194                     u7125:
  7202   002194  90D8               	bcf	status,0,c
  7203   002196  3225               	rrcf	(??___flmul+3)^0,f,c
  7204   002198  3224               	rrcf	(??___flmul+2)^0,f,c
  7205   00219A  3223               	rrcf	(??___flmul+1)^0,f,c
  7206   00219C  3222               	rrcf	??___flmul^0,f,c
  7207   00219E                     u7120:
  7208   00219E  2EE8               	decfsz	wreg,f,c
  7209   0021A0  EFCA  F010         	goto	u7125
  7210   0021A4  5022               	movf	??___flmul^0,w,c
  7211   0021A6  262D               	addwf	___flmul@prod^0,f,c
  7212   0021A8  5023               	movf	(??___flmul+1)^0,w,c
  7213   0021AA  222E               	addwfc	(___flmul@prod+1)^0,f,c
  7214   0021AC  5024               	movf	(??___flmul+2)^0,w,c
  7215   0021AE  222F               	addwfc	(___flmul@prod+2)^0,f,c
  7216   0021B0  5025               	movf	(??___flmul+3)^0,w,c
  7217   0021B2  2230               	addwfc	(___flmul@prod+3)^0,f,c
  7218   0021B4  C029  F02A         	movff	___flmul@grs+2,___flmul@grs+3
  7219   0021B8  C028  F029         	movff	___flmul@grs+1,___flmul@grs+2
  7220   0021BC  C027  F028         	movff	___flmul@grs,___flmul@grs+1
  7221   0021C0  6A27               	clrf	___flmul@grs^0,c
  7222   0021C2  502B               	movf	___flmul@aexp^0,w,c
  7223   0021C4  C02C  F022         	movff	___flmul@bexp,??___flmul
  7224   0021C8  6A23               	clrf	(??___flmul+1)^0,c
  7225   0021CA  2622               	addwf	??___flmul^0,f,c
  7226   0021CC  0E00               	movlw	0
  7227   0021CE  2223               	addwfc	(??___flmul+1)^0,f,c
  7228   0021D0  0E82               	movlw	130
  7229   0021D2  2422               	addwf	??___flmul^0,w,c
  7230   0021D4  6E31               	movwf	___flmul@temp^0,c
  7231   0021D6  0EFF               	movlw	255
  7232   0021D8  2023               	addwfc	(??___flmul+1)^0,w,c
  7233   0021DA  6E32               	movwf	(___flmul@temp+1)^0,c
  7234   0021DC  EF05  F011         	goto	l8282
  7235   0021E0                     l8276:
  7236   0021E0  90D8               	bcf	status,0,c
  7237   0021E2  362D               	rlcf	___flmul@prod^0,f,c
  7238   0021E4  362E               	rlcf	(___flmul@prod+1)^0,f,c
  7239   0021E6  362F               	rlcf	(___flmul@prod+2)^0,f,c
  7240   0021E8  3630               	rlcf	(___flmul@prod+3)^0,f,c
  7241   0021EA  AE2A               	btfss	(___flmul@grs+3)^0,7,c
  7242   0021EC  EFFA  F010         	goto	u7131
  7243   0021F0  EFFC  F010         	goto	u7130
  7244   0021F4                     u7131:
  7245   0021F4  EFFD  F010         	goto	l2449
  7246   0021F8                     u7130:
  7247   0021F8  802D               	bsf	___flmul@prod^0,0,c
  7248   0021FA                     l2449:
  7249   0021FA  90D8               	bcf	status,0,c
  7250   0021FC  3627               	rlcf	___flmul@grs^0,f,c
  7251   0021FE  3628               	rlcf	(___flmul@grs+1)^0,f,c
  7252   002200  3629               	rlcf	(___flmul@grs+2)^0,f,c
  7253   002202  362A               	rlcf	(___flmul@grs+3)^0,f,c
  7254   002204  0631               	decf	___flmul@temp^0,f,c
  7255   002206  A0D8               	btfss	status,0,c
  7256   002208  0632               	decf	(___flmul@temp+1)^0,f,c
  7257   00220A                     l8282:
  7258   00220A  AE2F               	btfss	(___flmul@prod+2)^0,7,c
  7259   00220C  EF0A  F011         	goto	u7141
  7260   002210  EF0C  F011         	goto	u7140
  7261   002214                     u7141:
  7262   002214  EFF0  F010         	goto	l8276
  7263   002218                     u7140:
  7264   002218  0E00               	movlw	0
  7265   00221A  6E2B               	movwf	___flmul@aexp^0,c
  7266   00221C  AE2A               	btfss	(___flmul@grs+3)^0,7,c
  7267   00221E  EF13  F011         	goto	u7151
  7268   002222  EF15  F011         	goto	u7150
  7269   002226                     u7151:
  7270   002226  EF39  F011         	goto	l2451
  7271   00222A                     u7150:
  7272   00222A  0EFF               	movlw	255
  7273   00222C  1427               	andwf	___flmul@grs^0,w,c
  7274   00222E  6E22               	movwf	??___flmul^0,c
  7275   002230  0EFF               	movlw	255
  7276   002232  1428               	andwf	(___flmul@grs+1)^0,w,c
  7277   002234  6E23               	movwf	(??___flmul+1)^0,c
  7278   002236  0EFF               	movlw	255
  7279   002238  1429               	andwf	(___flmul@grs+2)^0,w,c
  7280   00223A  6E24               	movwf	(??___flmul+2)^0,c
  7281   00223C  0E7F               	movlw	127
  7282   00223E  142A               	andwf	(___flmul@grs+3)^0,w,c
  7283   002240  6E25               	movwf	(??___flmul+3)^0,c
  7284   002242  5022               	movf	??___flmul^0,w,c
  7285   002244  1023               	iorwf	(??___flmul+1)^0,w,c
  7286   002246  1024               	iorwf	(??___flmul+2)^0,w,c
  7287   002248  1025               	iorwf	(??___flmul+3)^0,w,c
  7288   00224A  B4D8               	btfsc	status,2,c
  7289   00224C  EF2A  F011         	goto	u7161
  7290   002250  EF2C  F011         	goto	u7160
  7291   002254                     u7161:
  7292   002254  EF30  F011         	goto	l2452
  7293   002258                     u7160:
  7294   002258                     l8290:
  7295   002258  0E01               	movlw	1
  7296   00225A  6E2B               	movwf	___flmul@aexp^0,c
  7297   00225C  EF39  F011         	goto	l2451
  7298   002260                     l2452:
  7299   002260  A02D               	btfss	___flmul@prod^0,0,c
  7300   002262  EF35  F011         	goto	u7171
  7301   002266  EF37  F011         	goto	u7170
  7302   00226A                     u7171:
  7303   00226A  EF39  F011         	goto	l2451
  7304   00226E                     u7170:
  7305   00226E  EF2C  F011         	goto	l8290
  7306   002272                     l2451:
  7307   002272  502B               	movf	___flmul@aexp^0,w,c
  7308   002274  B4D8               	btfsc	status,2,c
  7309   002276  EF3F  F011         	goto	u7181
  7310   00227A  EF41  F011         	goto	u7180
  7311   00227E                     u7181:
  7312   00227E  EF65  F011         	goto	l8302
  7313   002282                     u7180:
  7314   002282  0E01               	movlw	1
  7315   002284  262D               	addwf	___flmul@prod^0,f,c
  7316   002286  0E00               	movlw	0
  7317   002288  222E               	addwfc	(___flmul@prod+1)^0,f,c
  7318   00228A  222F               	addwfc	(___flmul@prod+2)^0,f,c
  7319   00228C  2230               	addwfc	(___flmul@prod+3)^0,f,c
  7320   00228E  A030               	btfss	(___flmul@prod+3)^0,0,c
  7321   002290  EF4C  F011         	goto	u7191
  7322   002294  EF4E  F011         	goto	u7190
  7323   002298                     u7191:
  7324   002298  EF65  F011         	goto	l8302
  7325   00229C                     u7190:
  7326   00229C  C02D  F022         	movff	___flmul@prod,??___flmul
  7327   0022A0  C02E  F023         	movff	___flmul@prod+1,??___flmul+1
  7328   0022A4  C02F  F024         	movff	___flmul@prod+2,??___flmul+2
  7329   0022A8  C030  F025         	movff	___flmul@prod+3,??___flmul+3
  7330   0022AC  3425               	rlcf	(??___flmul+3)^0,w,c
  7331   0022AE  3225               	rrcf	(??___flmul+3)^0,f,c
  7332   0022B0  3224               	rrcf	(??___flmul+2)^0,f,c
  7333   0022B2  3223               	rrcf	(??___flmul+1)^0,f,c
  7334   0022B4  3222               	rrcf	??___flmul^0,f,c
  7335   0022B6  C022  F02D         	movff	??___flmul,___flmul@prod
  7336   0022BA  C023  F02E         	movff	??___flmul+1,___flmul@prod+1
  7337   0022BE  C024  F02F         	movff	??___flmul+2,___flmul@prod+2
  7338   0022C2  C025  F030         	movff	??___flmul+3,___flmul@prod+3
  7339   0022C6  4A31               	infsnz	___flmul@temp^0,f,c
  7340   0022C8  2A32               	incf	(___flmul@temp+1)^0,f,c
  7341   0022CA                     l8302:
  7342   0022CA  BE32               	btfsc	(___flmul@temp+1)^0,7,c
  7343   0022CC  EF70  F011         	goto	u7201
  7344   0022D0  5032               	movf	(___flmul@temp+1)^0,w,c
  7345   0022D2  E108               	bnz	u7200
  7346   0022D4  2831               	incf	___flmul@temp^0,w,c
  7347   0022D6  A0D8               	btfss	status,0,c
  7348   0022D8  EF70  F011         	goto	u7201
  7349   0022DC  EF72  F011         	goto	u7200
  7350   0022E0                     u7201:
  7351   0022E0  EF7C  F011         	goto	l8306
  7352   0022E4                     u7200:
  7353   0022E4  0E00               	movlw	0
  7354   0022E6  6E2D               	movwf	___flmul@prod^0,c
  7355   0022E8  0E00               	movlw	0
  7356   0022EA  6E2E               	movwf	(___flmul@prod+1)^0,c
  7357   0022EC  0E80               	movlw	128
  7358   0022EE  6E2F               	movwf	(___flmul@prod+2)^0,c
  7359   0022F0  0E7F               	movlw	127
  7360   0022F2  6E30               	movwf	(___flmul@prod+3)^0,c
  7361   0022F4  EFAA  F011         	goto	l8318
  7362   0022F8                     l8306:
  7363   0022F8  BE32               	btfsc	(___flmul@temp+1)^0,7,c
  7364   0022FA  EF89  F011         	goto	u7210
  7365   0022FE  5032               	movf	(___flmul@temp+1)^0,w,c
  7366   002300  E106               	bnz	u7211
  7367   002302  0431               	decf	___flmul@temp^0,w,c
  7368   002304  B0D8               	btfsc	status,0,c
  7369   002306  EF87  F011         	goto	u7211
  7370   00230A  EF89  F011         	goto	u7210
  7371   00230E                     u7211:
  7372   00230E  EF95  F011         	goto	l2459
  7373   002312                     u7210:
  7374   002312  0E00               	movlw	0
  7375   002314  6E2D               	movwf	___flmul@prod^0,c
  7376   002316  0E00               	movlw	0
  7377   002318  6E2E               	movwf	(___flmul@prod+1)^0,c
  7378   00231A  0E00               	movlw	0
  7379   00231C  6E2F               	movwf	(___flmul@prod+2)^0,c
  7380   00231E  0E00               	movlw	0
  7381   002320  6E30               	movwf	(___flmul@prod+3)^0,c
  7382   002322  0E00               	movlw	0
  7383   002324  6E26               	movwf	___flmul@sign^0,c
  7384   002326  EFAA  F011         	goto	l8318
  7385   00232A                     l2459:
  7386   00232A  C031  F02C         	movff	___flmul@temp,___flmul@bexp
  7387   00232E  0EFF               	movlw	255
  7388   002330  162D               	andwf	___flmul@prod^0,f,c
  7389   002332  0EFF               	movlw	255
  7390   002334  162E               	andwf	(___flmul@prod+1)^0,f,c
  7391   002336  0E7F               	movlw	127
  7392   002338  162F               	andwf	(___flmul@prod+2)^0,f,c
  7393   00233A  0E00               	movlw	0
  7394   00233C  1630               	andwf	(___flmul@prod+3)^0,f,c
  7395   00233E  A02C               	btfss	___flmul@bexp^0,0,c
  7396   002340  EFA4  F011         	goto	u7221
  7397   002344  EFA6  F011         	goto	u7220
  7398   002348                     u7221:
  7399   002348  EFA7  F011         	goto	l8316
  7400   00234C                     u7220:
  7401   00234C  8E2F               	bsf	(___flmul@prod+2)^0,7,c
  7402   00234E                     l8316:
  7403   00234E  90D8               	bcf	status,0,c
  7404   002350  302C               	rrcf	___flmul@bexp^0,w,c
  7405   002352  6E30               	movwf	(___flmul@prod+3)^0,c
  7406   002354                     l8318:
  7407   002354  5026               	movf	___flmul@sign^0,w,c
  7408   002356  1230               	iorwf	(___flmul@prod+3)^0,f,c
  7409   002358  C02D  F01A         	movff	___flmul@prod,?___flmul
  7410   00235C  C02E  F01B         	movff	___flmul@prod+1,?___flmul+1
  7411   002360  C02F  F01C         	movff	___flmul@prod+2,?___flmul+2
  7412   002364  C030  F01D         	movff	___flmul@prod+3,?___flmul+3
  7413   002368                     l2446:
  7414   002368  0012               	return		;funcret
  7415   00236A                     __end_of___flmul:
  7416                           	callstack 0
  7417                           
  7418 ;; *************** function _I2C_Obj_CFG *****************
  7419 ;; Defined at:
  7420 ;;		line 46 in file "application.c"
  7421 ;; Parameters:    Size  Location     Type
  7422 ;;		None
  7423 ;; Auto vars:     Size  Location     Type
  7424 ;;		None
  7425 ;; Return value:  Size  Location     Type
  7426 ;;                  1    wreg      void 
  7427 ;; Registers used:
  7428 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7429 ;; Tracked objects:
  7430 ;;		On entry : 0/0
  7431 ;;		On exit  : 0/0
  7432 ;;		Unchanged: 0/0
  7433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7438 ;;Total ram usage:        0 bytes
  7439 ;; Hardware stack levels used: 1
  7440 ;; Hardware stack levels required when called: 7
  7441 ;; This function calls:
  7442 ;;		_MSSP_I2C_Init
  7443 ;; This function is called by:
  7444 ;;		_main
  7445 ;; This function uses a non-reentrant model
  7446 ;;
  7447                           
  7448                           	psect	text38
  7449   004660                     __ptext38:
  7450                           	callstack 0
  7451   004660                     _I2C_Obj_CFG:
  7452                           	callstack 23
  7453   004660                     
  7454                           ;application.c: 48:     i2c_obj.i2c_clock=100000;
  7455   004660  0E86               	movlw	134
  7456   004662  0100               	movlb	0	; () banked
  7457   004664  6FDB               	movwf	(_i2c_obj+1)& (0+255),b
  7458   004666  0EA0               	movlw	160
  7459   004668  6FDA               	movwf	_i2c_obj& (0+255),b
  7460   00466A                     
  7461                           ; BSR set to: 0
  7462                           ;application.c: 49:     i2c_obj.i2c_cfg.i2c_mode= 0;
  7463   00466A  91E4               	bcf	(_i2c_obj+10)& (0+255),0,b
  7464                           
  7465                           ;application.c: 50:     i2c_obj.i2c_cfg.i2c_mode_cfg= 0x07U;
  7466   00466C  0E07               	movlw	7
  7467   00466E  6FE2               	movwf	(_i2c_obj+8)& (0+255),b
  7468   004670                     
  7469                           ; BSR set to: 0
  7470                           ;application.c: 51:     i2c_obj.i2c_cfg.i2c_SMBus_control=0;
  7471   004670  95E4               	bcf	(_i2c_obj+10)& (0+255),2,b
  7472   004672                     
  7473                           ; BSR set to: 0
  7474                           ;application.c: 52:     i2c_obj.i2c_cfg.i2c_slew_rate=1;
  7475   004672  83E4               	bsf	(_i2c_obj+10)& (0+255),1,b
  7476   004674                     
  7477                           ; BSR set to: 0
  7478                           ;application.c: 53:     i2c_obj.i2c_cfg.i2c_general_call=0;
  7479   004674  97E4               	bcf	(_i2c_obj+10)& (0+255),3,b
  7480                           
  7481                           ;application.c: 54:     i2c_obj.i2c_cfg.i2c_slave_address=0x16;
  7482   004676  0E16               	movlw	22
  7483   004678  6FE3               	movwf	(_i2c_obj+9)& (0+255),b
  7484   00467A                     
  7485                           ; BSR set to: 0
  7486                           ;application.c: 55:     i2c_obj.I2C_DefaultInterruptHandler= MSSP_I2C_DefaultInterruptHa
      +                          ndler;
  7487   00467A  0EA2               	movlw	low _MSSP_I2C_DefaultInterruptHandler
  7488   00467C  6FDC               	movwf	(_i2c_obj+2)& (0+255),b
  7489   00467E  0E47               	movlw	high _MSSP_I2C_DefaultInterruptHandler
  7490   004680  6FDD               	movwf	(_i2c_obj+3)& (0+255),b
  7491   004682                     
  7492                           ; BSR set to: 0
  7493                           ;application.c: 56:     i2c_obj.I2C_Report_Receive_Overflow=((void*)0);
  7494   004682  0E00               	movlw	0
  7495   004684  6FE0               	movwf	(_i2c_obj+6)& (0+255),b
  7496   004686  0E00               	movlw	0
  7497   004688  6FE1               	movwf	(_i2c_obj+7)& (0+255),b
  7498   00468A                     
  7499                           ; BSR set to: 0
  7500                           ;application.c: 57:     i2c_obj.I2C_Report_Write_Collision=((void*)0);
  7501   00468A  0E00               	movlw	0
  7502   00468C  6FDE               	movwf	(_i2c_obj+4)& (0+255),b
  7503   00468E  0E00               	movlw	0
  7504   004690  6FDF               	movwf	(_i2c_obj+5)& (0+255),b
  7505   004692                     
  7506                           ; BSR set to: 0
  7507                           ;application.c: 58:      ret=MSSP_I2C_Init(&i2c_obj);
  7508   004692  0EDA               	movlw	low _i2c_obj
  7509   004694  6E51               	movwf	MSSP_I2C_Init@i2c_obj^0,c
  7510   004696  0E00               	movlw	high _i2c_obj
  7511   004698  6E52               	movwf	(MSSP_I2C_Init@i2c_obj+1)^0,c
  7512   00469A  ECE5  F017         	call	_MSSP_I2C_Init	;wreg free
  7513   00469E  0100               	movlb	0	; () banked
  7514   0046A0  6FEE               	movwf	_ret& (0+255),b
  7515   0046A2                     
  7516                           ; BSR set to: 0
  7517   0046A2  0012               	return		;funcret
  7518   0046A4                     __end_of_I2C_Obj_CFG:
  7519                           	callstack 0
  7520                           
  7521 ;; *************** function _MSSP_I2C_Init *****************
  7522 ;; Defined at:
  7523 ;;		line 17 in file "MCAL_Layer/I2C/hal_i2c.c"
  7524 ;; Parameters:    Size  Location     Type
  7525 ;;  i2c_obj         2   80[COMRAM] PTR const struct .
  7526 ;;		 -> i2c_obj(13), 
  7527 ;; Auto vars:     Size  Location     Type
  7528 ;;  ret             1    0        unsigned char 
  7529 ;; Return value:  Size  Location     Type
  7530 ;;                  1    wreg      unsigned char 
  7531 ;; Registers used:
  7532 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7533 ;; Tracked objects:
  7534 ;;		On entry : 0/0
  7535 ;;		On exit  : 0/0
  7536 ;;		Unchanged: 0/0
  7537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7538 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7540 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7541 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7542 ;;Total ram usage:        3 bytes
  7543 ;; Hardware stack levels used: 1
  7544 ;; Hardware stack levels required when called: 6
  7545 ;; This function calls:
  7546 ;;		_MSSP_I2C_Interrupt_Configuration
  7547 ;;		_MSSP_I2C_MODE_GPIO_CFG
  7548 ;;		_MSSP_I2C_Master_Mode_Clock_CFG
  7549 ;; This function is called by:
  7550 ;;		_I2C_Obj_CFG
  7551 ;; This function uses a non-reentrant model
  7552 ;;
  7553                           
  7554                           	psect	text39
  7555   002FCA                     __ptext39:
  7556                           	callstack 0
  7557   002FCA                     _MSSP_I2C_Init:
  7558                           	callstack 23
  7559   002FCA                     
  7560                           ;MCAL_Layer/I2C/hal_i2c.c: 20:     if(((void*)0) == i2c_obj){
  7561   002FCA  5051               	movf	MSSP_I2C_Init@i2c_obj^0,w,c
  7562   002FCC  1052               	iorwf	(MSSP_I2C_Init@i2c_obj+1)^0,w,c
  7563   002FCE  A4D8               	btfss	status,2,c
  7564   002FD0  EFEC  F017         	goto	u6501
  7565   002FD4  EFEE  F017         	goto	u6500
  7566   002FD8                     u6501:
  7567   002FD8  EFF0  F017         	goto	l927
  7568   002FDC                     u6500:
  7569   002FDC                     l7702:
  7570                           
  7571                           ;MCAL_Layer/I2C/hal_i2c.c: 22:     }
  7572   002FDC  EF90  F018         	goto	l7744
  7573   002FE0                     l927:
  7574                           
  7575                           ;MCAL_Layer/I2C/hal_i2c.c: 25:         (SSPCON1bits.SSPEN=0);
  7576   002FE0  9AC6               	bcf	198,5,c	;volatile
  7577   002FE2                     
  7578                           ;MCAL_Layer/I2C/hal_i2c.c: 27:         if(1 == i2c_obj->i2c_cfg.i2c_mode){
  7579   002FE2  EE20 F00A          	lfsr	2,10
  7580   002FE6  5051               	movf	MSSP_I2C_Init@i2c_obj^0,w,c
  7581   002FE8  26D9               	addwf	fsr2l,f,c
  7582   002FEA  5052               	movf	(MSSP_I2C_Init@i2c_obj+1)^0,w,c
  7583   002FEC  22DA               	addwfc	fsr2h,f,c
  7584   002FEE  A0DF               	btfss	indf2,0,c
  7585   002FF0  EFFC  F017         	goto	u6511
  7586   002FF4  EFFE  F017         	goto	u6510
  7587   002FF8                     u6511:
  7588   002FF8  EF06  F018         	goto	l7708
  7589   002FFC                     u6510:
  7590   002FFC                     
  7591                           ;MCAL_Layer/I2C/hal_i2c.c: 29:             MSSP_I2C_Master_Mode_Clock_CFG(i2c_obj);
  7592   002FFC  C051  F04D         	movff	MSSP_I2C_Init@i2c_obj,MSSP_I2C_Master_Mode_Clock_CFG@i2c_obj
  7593   003000  C052  F04E         	movff	MSSP_I2C_Init@i2c_obj+1,MSSP_I2C_Master_Mode_Clock_CFG@i2c_obj+1
  7594   003004  EC59  F01F         	call	_MSSP_I2C_Master_Mode_Clock_CFG	;wreg free
  7595                           
  7596                           ;MCAL_Layer/I2C/hal_i2c.c: 30:         }
  7597   003008  EF49  F018         	goto	l7720
  7598   00300C                     l7708:
  7599   00300C  EE20 F00A          	lfsr	2,10
  7600   003010  5051               	movf	MSSP_I2C_Init@i2c_obj^0,w,c
  7601   003012  26D9               	addwf	fsr2l,f,c
  7602   003014  5052               	movf	(MSSP_I2C_Init@i2c_obj+1)^0,w,c
  7603   003016  22DA               	addwfc	fsr2h,f,c
  7604   003018  B0DF               	btfsc	indf2,0,c
  7605   00301A  EF11  F018         	goto	u6521
  7606   00301E  EF13  F018         	goto	u6520
  7607   003022                     u6521:
  7608   003022  EF49  F018         	goto	l7720
  7609   003026                     u6520:
  7610   003026                     
  7611                           ;MCAL_Layer/I2C/hal_i2c.c: 33:             if(1 == i2c_obj->i2c_cfg.i2c_general_call){
  7612   003026  EE20 F00A          	lfsr	2,10
  7613   00302A  5051               	movf	MSSP_I2C_Init@i2c_obj^0,w,c
  7614   00302C  26D9               	addwf	fsr2l,f,c
  7615   00302E  5052               	movf	(MSSP_I2C_Init@i2c_obj+1)^0,w,c
  7616   003030  22DA               	addwfc	fsr2h,f,c
  7617   003032  A6DF               	btfss	indf2,3,c
  7618   003034  EF1E  F018         	goto	u6531
  7619   003038  EF20  F018         	goto	u6530
  7620   00303C                     u6531:
  7621   00303C  EF23  F018         	goto	l7714
  7622   003040                     u6530:
  7623   003040                     
  7624                           ;MCAL_Layer/I2C/hal_i2c.c: 34:                 (SSPCON2bits.GCEN=1);
  7625   003040  8EC5               	bsf	197,7,c	;volatile
  7626                           
  7627                           ;MCAL_Layer/I2C/hal_i2c.c: 35:             }
  7628   003042  EF31  F018         	goto	l933
  7629   003046                     l7714:
  7630   003046  EE20 F00A          	lfsr	2,10
  7631   00304A  5051               	movf	MSSP_I2C_Init@i2c_obj^0,w,c
  7632   00304C  26D9               	addwf	fsr2l,f,c
  7633   00304E  5052               	movf	(MSSP_I2C_Init@i2c_obj+1)^0,w,c
  7634   003050  22DA               	addwfc	fsr2h,f,c
  7635   003052  B6DF               	btfsc	indf2,3,c
  7636   003054  EF2E  F018         	goto	u6541
  7637   003058  EF30  F018         	goto	u6540
  7638   00305C                     u6541:
  7639   00305C  EF31  F018         	goto	l933
  7640   003060                     u6540:
  7641   003060                     
  7642                           ;MCAL_Layer/I2C/hal_i2c.c: 37:                 (SSPCON2bits.GCEN=0);
  7643   003060  9EC5               	bcf	197,7,c	;volatile
  7644   003062                     l933:
  7645                           
  7646                           ;MCAL_Layer/I2C/hal_i2c.c: 41:             SSPCON1bits.WCOL=0;
  7647   003062  9EC6               	bcf	198,7,c	;volatile
  7648                           
  7649                           ;MCAL_Layer/I2C/hal_i2c.c: 43:             SSPCON1bits.SSPOV=0;
  7650   003064  9CC6               	bcf	198,6,c	;volatile
  7651                           
  7652                           ;MCAL_Layer/I2C/hal_i2c.c: 45:             SSPCON1bits.CKP=1;
  7653   003066  88C6               	bsf	198,4,c	;volatile
  7654   003068                     
  7655                           ;MCAL_Layer/I2C/hal_i2c.c: 47:             SSPADD=i2c_obj->i2c_cfg.i2c_slave_address;
  7656   003068  EE20 F009          	lfsr	2,9
  7657   00306C  5051               	movf	MSSP_I2C_Init@i2c_obj^0,w,c
  7658   00306E  26D9               	addwf	fsr2l,f,c
  7659   003070  5052               	movf	(MSSP_I2C_Init@i2c_obj+1)^0,w,c
  7660   003072  22DA               	addwfc	fsr2h,f,c
  7661   003074  50DF               	movf	indf2,w,c
  7662   003076  6EC8               	movwf	200,c	;volatile
  7663                           
  7664                           ;MCAL_Layer/I2C/hal_i2c.c: 49:             (SSPCON1bits.SSPM=i2c_obj->i2c_cfg.i2c_mode_c
      +                          fg);
  7665   003078  EE20 F008          	lfsr	2,8
  7666   00307C  5051               	movf	MSSP_I2C_Init@i2c_obj^0,w,c
  7667   00307E  26D9               	addwf	fsr2l,f,c
  7668   003080  5052               	movf	(MSSP_I2C_Init@i2c_obj+1)^0,w,c
  7669   003082  22DA               	addwfc	fsr2h,f,c
  7670   003084  50DF               	movf	indf2,w,c
  7671   003086  6E53               	movwf	??_MSSP_I2C_Init^0,c
  7672   003088  50C6               	movf	198,w,c	;volatile
  7673   00308A  1853               	xorwf	??_MSSP_I2C_Init^0,w,c
  7674   00308C  0BF0               	andlw	-16
  7675   00308E  1853               	xorwf	??_MSSP_I2C_Init^0,w,c
  7676   003090  6EC6               	movwf	198,c	;volatile
  7677   003092                     l7720:
  7678                           
  7679                           ;MCAL_Layer/I2C/hal_i2c.c: 53:         MSSP_I2C_MODE_GPIO_CFG();
  7680   003092  EC1D  F025         	call	_MSSP_I2C_MODE_GPIO_CFG	;wreg free
  7681   003096                     
  7682                           ;MCAL_Layer/I2C/hal_i2c.c: 55:         if(0 == i2c_obj->i2c_cfg.i2c_slew_rate){
  7683   003096  EE20 F00A          	lfsr	2,10
  7684   00309A  5051               	movf	MSSP_I2C_Init@i2c_obj^0,w,c
  7685   00309C  26D9               	addwf	fsr2l,f,c
  7686   00309E  5052               	movf	(MSSP_I2C_Init@i2c_obj+1)^0,w,c
  7687   0030A0  22DA               	addwfc	fsr2h,f,c
  7688   0030A2  B2DF               	btfsc	indf2,1,c
  7689   0030A4  EF56  F018         	goto	u6551
  7690   0030A8  EF58  F018         	goto	u6550
  7691   0030AC                     u6551:
  7692   0030AC  EF5B  F018         	goto	l7726
  7693   0030B0                     u6550:
  7694   0030B0                     
  7695                           ;MCAL_Layer/I2C/hal_i2c.c: 56:             (SSPSTATbits.SMP=0);
  7696   0030B0  9EC7               	bcf	199,7,c	;volatile
  7697                           
  7698                           ;MCAL_Layer/I2C/hal_i2c.c: 57:         }
  7699   0030B2  EF69  F018         	goto	l7730
  7700   0030B6                     l7726:
  7701   0030B6  EE20 F00A          	lfsr	2,10
  7702   0030BA  5051               	movf	MSSP_I2C_Init@i2c_obj^0,w,c
  7703   0030BC  26D9               	addwf	fsr2l,f,c
  7704   0030BE  5052               	movf	(MSSP_I2C_Init@i2c_obj+1)^0,w,c
  7705   0030C0  22DA               	addwfc	fsr2h,f,c
  7706   0030C2  A2DF               	btfss	indf2,1,c
  7707   0030C4  EF66  F018         	goto	u6561
  7708   0030C8  EF68  F018         	goto	u6560
  7709   0030CC                     u6561:
  7710   0030CC  EF69  F018         	goto	l7730
  7711   0030D0                     u6560:
  7712   0030D0                     
  7713                           ;MCAL_Layer/I2C/hal_i2c.c: 59:             (SSPSTATbits.SMP=1);
  7714   0030D0  8EC7               	bsf	199,7,c	;volatile
  7715   0030D2                     l7730:
  7716                           
  7717                           ;MCAL_Layer/I2C/hal_i2c.c: 63:         if(1 == i2c_obj->i2c_cfg.i2c_SMBus_control){
  7718   0030D2  EE20 F00A          	lfsr	2,10
  7719   0030D6  5051               	movf	MSSP_I2C_Init@i2c_obj^0,w,c
  7720   0030D8  26D9               	addwf	fsr2l,f,c
  7721   0030DA  5052               	movf	(MSSP_I2C_Init@i2c_obj+1)^0,w,c
  7722   0030DC  22DA               	addwfc	fsr2h,f,c
  7723   0030DE  A4DF               	btfss	indf2,2,c
  7724   0030E0  EF74  F018         	goto	u6571
  7725   0030E4  EF76  F018         	goto	u6570
  7726   0030E8                     u6571:
  7727   0030E8  EF79  F018         	goto	l7734
  7728   0030EC                     u6570:
  7729   0030EC                     
  7730                           ;MCAL_Layer/I2C/hal_i2c.c: 64:             (SSPSTATbits.CKE=1);
  7731   0030EC  8CC7               	bsf	199,6,c	;volatile
  7732                           
  7733                           ;MCAL_Layer/I2C/hal_i2c.c: 65:         }
  7734   0030EE  EF87  F018         	goto	l7738
  7735   0030F2                     l7734:
  7736   0030F2  EE20 F00A          	lfsr	2,10
  7737   0030F6  5051               	movf	MSSP_I2C_Init@i2c_obj^0,w,c
  7738   0030F8  26D9               	addwf	fsr2l,f,c
  7739   0030FA  5052               	movf	(MSSP_I2C_Init@i2c_obj+1)^0,w,c
  7740   0030FC  22DA               	addwfc	fsr2h,f,c
  7741   0030FE  B4DF               	btfsc	indf2,2,c
  7742   003100  EF84  F018         	goto	u6581
  7743   003104  EF86  F018         	goto	u6580
  7744   003108                     u6581:
  7745   003108  EF87  F018         	goto	l7738
  7746   00310C                     u6580:
  7747   00310C                     
  7748                           ;MCAL_Layer/I2C/hal_i2c.c: 67:             (SSPSTATbits.CKE=0);
  7749   00310C  9CC7               	bcf	199,6,c	;volatile
  7750   00310E                     l7738:
  7751                           
  7752                           ;MCAL_Layer/I2C/hal_i2c.c: 72:  MSSP_I2C_Interrupt_Configuration(i2c_obj);
  7753   00310E  C051  F00C         	movff	MSSP_I2C_Init@i2c_obj,MSSP_I2C_Interrupt_Configuration@i2c_obj
  7754   003112  C052  F00D         	movff	MSSP_I2C_Init@i2c_obj+1,MSSP_I2C_Interrupt_Configuration@i2c_obj+1
  7755   003116  ECC7  F022         	call	_MSSP_I2C_Interrupt_Configuration	;wreg free
  7756   00311A                     
  7757                           ;MCAL_Layer/I2C/hal_i2c.c: 75:         (SSPCON1bits.SSPEN=1);
  7758   00311A  8AC6               	bsf	198,5,c	;volatile
  7759   00311C  EFEE  F017         	goto	l7702
  7760   003120                     l7744:
  7761                           
  7762                           ;MCAL_Layer/I2C/hal_i2c.c: 79:     return ret;
  7763   003120  0E01               	movlw	1
  7764   003122  0012               	return		;funcret
  7765   003124                     __end_of_MSSP_I2C_Init:
  7766                           	callstack 0
  7767                           
  7768 ;; *************** function _MSSP_I2C_Master_Mode_Clock_CFG *****************
  7769 ;; Defined at:
  7770 ;;		line 226 in file "MCAL_Layer/I2C/hal_i2c.c"
  7771 ;; Parameters:    Size  Location     Type
  7772 ;;  i2c_obj         2   76[COMRAM] PTR const struct .
  7773 ;;		 -> i2c_obj(13), 
  7774 ;; Auto vars:     Size  Location     Type
  7775 ;;		None
  7776 ;; Return value:  Size  Location     Type
  7777 ;;                  1    wreg      void 
  7778 ;; Registers used:
  7779 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7780 ;; Tracked objects:
  7781 ;;		On entry : 0/0
  7782 ;;		On exit  : 0/0
  7783 ;;		Unchanged: 0/0
  7784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7785 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7787 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7788 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7789 ;;Total ram usage:        4 bytes
  7790 ;; Hardware stack levels used: 1
  7791 ;; Hardware stack levels required when called: 5
  7792 ;; This function calls:
  7793 ;;		___fladd
  7794 ;;		___fldiv
  7795 ;;		___fltol
  7796 ;;		___xxtofl
  7797 ;; This function is called by:
  7798 ;;		_MSSP_I2C_Init
  7799 ;; This function uses a non-reentrant model
  7800 ;;
  7801                           
  7802                           	psect	text40
  7803   003EB2                     __ptext40:
  7804                           	callstack 0
  7805   003EB2                     _MSSP_I2C_Master_Mode_Clock_CFG:
  7806                           	callstack 23
  7807   003EB2                     
  7808                           ;MCAL_Layer/I2C/hal_i2c.c: 227:     (SSPCON1bits.SSPM=i2c_obj->i2c_cfg.i2c_mode_cfg);
  7809   003EB2  EE20 F008          	lfsr	2,8
  7810   003EB6  504D               	movf	MSSP_I2C_Master_Mode_Clock_CFG@i2c_obj^0,w,c
  7811   003EB8  26D9               	addwf	fsr2l,f,c
  7812   003EBA  504E               	movf	(MSSP_I2C_Master_Mode_Clock_CFG@i2c_obj+1)^0,w,c
  7813   003EBC  22DA               	addwfc	fsr2h,f,c
  7814   003EBE  50DF               	movf	indf2,w,c
  7815   003EC0  6E4F               	movwf	??_MSSP_I2C_Master_Mode_Clock_CFG^0,c
  7816   003EC2  50C6               	movf	198,w,c	;volatile
  7817   003EC4  184F               	xorwf	??_MSSP_I2C_Master_Mode_Clock_CFG^0,w,c
  7818   003EC6  0BF0               	andlw	-16
  7819   003EC8  184F               	xorwf	??_MSSP_I2C_Master_Mode_Clock_CFG^0,w,c
  7820   003ECA  6EC6               	movwf	198,c	;volatile
  7821   003ECC                     
  7822                           ;MCAL_Layer/I2C/hal_i2c.c: 228:     SSPADD= (uint8)(((4000000UL/4.0)/i2c_obj->i2c_clock)
      +                           - 1);
  7823   003ECC  0E00               	movlw	0
  7824   003ECE  6E37               	movwf	___fladd@a^0,c
  7825   003ED0  0E00               	movlw	0
  7826   003ED2  6E38               	movwf	(___fladd@a+1)^0,c
  7827   003ED4  0E80               	movlw	128
  7828   003ED6  6E39               	movwf	(___fladd@a+2)^0,c
  7829   003ED8  0EBF               	movlw	191
  7830   003EDA  6E3A               	movwf	(___fladd@a+3)^0,c
  7831   003EDC  C04D  FFD9         	movff	MSSP_I2C_Master_Mode_Clock_CFG@i2c_obj,fsr2l
  7832   003EE0  C04E  FFDA         	movff	MSSP_I2C_Master_Mode_Clock_CFG@i2c_obj+1,fsr2h
  7833   003EE4  CFDE F04F          	movff	postinc2,??_MSSP_I2C_Master_Mode_Clock_CFG
  7834   003EE8  CFDD F050          	movff	postdec2,??_MSSP_I2C_Master_Mode_Clock_CFG+1
  7835   003EEC  C04F  F00C         	movff	??_MSSP_I2C_Master_Mode_Clock_CFG,___xxtofl@val
  7836   003EF0  C050  F00D         	movff	??_MSSP_I2C_Master_Mode_Clock_CFG+1,___xxtofl@val+1
  7837   003EF4  6A0E               	clrf	(___xxtofl@val+2)^0,c
  7838   003EF6  6A0F               	clrf	(___xxtofl@val+3)^0,c
  7839   003EF8  0E00               	movlw	0
  7840   003EFA  EC85  F015         	call	___xxtofl
  7841   003EFE  C00C  F01E         	movff	?___xxtofl,___fldiv@a
  7842   003F02  C00D  F01F         	movff	?___xxtofl+1,___fldiv@a+1
  7843   003F06  C00E  F020         	movff	?___xxtofl+2,___fldiv@a+2
  7844   003F0A  C00F  F021         	movff	?___xxtofl+3,___fldiv@a+3
  7845   003F0E  0E00               	movlw	0
  7846   003F10  6E1A               	movwf	___fldiv@b^0,c
  7847   003F12  0E24               	movlw	36
  7848   003F14  6E1B               	movwf	(___fldiv@b+1)^0,c
  7849   003F16  0E74               	movlw	116
  7850   003F18  6E1C               	movwf	(___fldiv@b+2)^0,c
  7851   003F1A  0E49               	movlw	73
  7852   003F1C  6E1D               	movwf	(___fldiv@b+3)^0,c
  7853   003F1E  ECB8  F013         	call	___fldiv	;wreg free
  7854   003F22  C01A  F033         	movff	?___fldiv,___fladd@b
  7855   003F26  C01B  F034         	movff	?___fldiv+1,___fladd@b+1
  7856   003F2A  C01C  F035         	movff	?___fldiv+2,___fladd@b+2
  7857   003F2E  C01D  F036         	movff	?___fldiv+3,___fladd@b+3
  7858   003F32  EC40  F00D         	call	___fladd	;wreg free
  7859   003F36  C033  F043         	movff	?___fladd,___fltol@f1
  7860   003F3A  C034  F044         	movff	?___fladd+1,___fltol@f1+1
  7861   003F3E  C035  F045         	movff	?___fladd+2,___fltol@f1+2
  7862   003F42  C036  F046         	movff	?___fladd+3,___fltol@f1+3
  7863   003F46  ECEE  F01A         	call	___fltol	;wreg free
  7864   003F4A  5043               	movf	?___fltol^0,w,c
  7865   003F4C  6EC8               	movwf	200,c	;volatile
  7866   003F4E  0012               	return		;funcret
  7867   003F50                     __end_of_MSSP_I2C_Master_Mode_Clock_CFG:
  7868                           	callstack 0
  7869                           
  7870 ;; *************** function ___xxtofl *****************
  7871 ;; Defined at:
  7872 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\xxtofl.c"
  7873 ;; Parameters:    Size  Location     Type
  7874 ;;  sign            1    wreg     unsigned char 
  7875 ;;  val             4   11[COMRAM] long 
  7876 ;; Auto vars:     Size  Location     Type
  7877 ;;  sign            1   19[COMRAM] unsigned char 
  7878 ;;  arg             4   21[COMRAM] unsigned long 
  7879 ;;  exp             1   20[COMRAM] unsigned char 
  7880 ;; Return value:  Size  Location     Type
  7881 ;;                  4   11[COMRAM] unsigned char 
  7882 ;; Registers used:
  7883 ;;		wreg, status,2, status,0
  7884 ;; Tracked objects:
  7885 ;;		On entry : 0/0
  7886 ;;		On exit  : 0/0
  7887 ;;		Unchanged: 0/0
  7888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7889 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7890 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7891 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7892 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7893 ;;Total ram usage:       14 bytes
  7894 ;; Hardware stack levels used: 1
  7895 ;; Hardware stack levels required when called: 4
  7896 ;; This function calls:
  7897 ;;		Nothing
  7898 ;; This function is called by:
  7899 ;;		_MSSP_I2C_Master_Mode_Clock_CFG
  7900 ;;		_EUSART_Baud_Rate_Calculation
  7901 ;;		_main
  7902 ;; This function uses a non-reentrant model
  7903 ;;
  7904                           
  7905                           	psect	text41
  7906   002B0A                     __ptext41:
  7907                           	callstack 0
  7908   002B0A                     ___xxtofl:
  7909                           	callstack 22
  7910                           
  7911                           ;incstack = 0
  7912                           ;___xxtofl@sign stored from wreg
  7913   002B0A  6E14               	movwf	___xxtofl@sign^0,c
  7914   002B0C  5014               	movf	___xxtofl@sign^0,w,c
  7915   002B0E  B4D8               	btfsc	status,2,c
  7916   002B10  EF8C  F015         	goto	u5781
  7917   002B14  EF8E  F015         	goto	u5780
  7918   002B18                     u5781:
  7919   002B18  EFB0  F015         	goto	l2483
  7920   002B1C                     u5780:
  7921   002B1C  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  7922   002B1E  EF95  F015         	goto	u5790
  7923   002B22  EF93  F015         	goto	u5791
  7924   002B26                     u5791:
  7925   002B26  EFB0  F015         	goto	l2483
  7926   002B2A                     u5790:
  7927   002B2A  C00C  F010         	movff	___xxtofl@val,??___xxtofl
  7928   002B2E  C00D  F011         	movff	___xxtofl@val+1,??___xxtofl+1
  7929   002B32  C00E  F012         	movff	___xxtofl@val+2,??___xxtofl+2
  7930   002B36  C00F  F013         	movff	___xxtofl@val+3,??___xxtofl+3
  7931   002B3A  1E10               	comf	??___xxtofl^0,f,c
  7932   002B3C  1E11               	comf	(??___xxtofl+1)^0,f,c
  7933   002B3E  1E12               	comf	(??___xxtofl+2)^0,f,c
  7934   002B40  1E13               	comf	(??___xxtofl+3)^0,f,c
  7935   002B42  2A10               	incf	??___xxtofl^0,f,c
  7936   002B44  0E00               	movlw	0
  7937   002B46  2211               	addwfc	(??___xxtofl+1)^0,f,c
  7938   002B48  2212               	addwfc	(??___xxtofl+2)^0,f,c
  7939   002B4A  2213               	addwfc	(??___xxtofl+3)^0,f,c
  7940   002B4C  C010  F016         	movff	??___xxtofl,___xxtofl@arg
  7941   002B50  C011  F017         	movff	??___xxtofl+1,___xxtofl@arg+1
  7942   002B54  C012  F018         	movff	??___xxtofl+2,___xxtofl@arg+2
  7943   002B58  C013  F019         	movff	??___xxtofl+3,___xxtofl@arg+3
  7944   002B5C  EFB8  F015         	goto	l7018
  7945   002B60                     l2483:
  7946   002B60  C00C  F016         	movff	___xxtofl@val,___xxtofl@arg
  7947   002B64  C00D  F017         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7948   002B68  C00E  F018         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7949   002B6C  C00F  F019         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7950   002B70                     l7018:
  7951   002B70  500C               	movf	___xxtofl@val^0,w,c
  7952   002B72  100D               	iorwf	(___xxtofl@val+1)^0,w,c
  7953   002B74  100E               	iorwf	(___xxtofl@val+2)^0,w,c
  7954   002B76  100F               	iorwf	(___xxtofl@val+3)^0,w,c
  7955   002B78  A4D8               	btfss	status,2,c
  7956   002B7A  EFC1  F015         	goto	u5801
  7957   002B7E  EFC3  F015         	goto	u5800
  7958   002B82                     u5801:
  7959   002B82  EFCD  F015         	goto	l7024
  7960   002B86                     u5800:
  7961   002B86  0E00               	movlw	0
  7962   002B88  6E0C               	movwf	?___xxtofl^0,c
  7963   002B8A  0E00               	movlw	0
  7964   002B8C  6E0D               	movwf	(?___xxtofl+1)^0,c
  7965   002B8E  0E00               	movlw	0
  7966   002B90  6E0E               	movwf	(?___xxtofl+2)^0,c
  7967   002B92  0E00               	movlw	0
  7968   002B94  6E0F               	movwf	(?___xxtofl+3)^0,c
  7969   002B96  EF5E  F016         	goto	l2486
  7970   002B9A                     l7024:
  7971   002B9A  0E96               	movlw	150
  7972   002B9C  6E15               	movwf	___xxtofl@exp^0,c
  7973   002B9E  EFD7  F015         	goto	l7028
  7974   002BA2                     l7026:
  7975   002BA2  2A15               	incf	___xxtofl@exp^0,f,c
  7976   002BA4  90D8               	bcf	status,0,c
  7977   002BA6  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  7978   002BA8  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  7979   002BAA  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  7980   002BAC  3216               	rrcf	___xxtofl@arg^0,f,c
  7981   002BAE                     l7028:
  7982   002BAE  0E00               	movlw	0
  7983   002BB0  1416               	andwf	___xxtofl@arg^0,w,c
  7984   002BB2  6E10               	movwf	??___xxtofl^0,c
  7985   002BB4  0E00               	movlw	0
  7986   002BB6  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  7987   002BB8  6E11               	movwf	(??___xxtofl+1)^0,c
  7988   002BBA  0E00               	movlw	0
  7989   002BBC  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  7990   002BBE  6E12               	movwf	(??___xxtofl+2)^0,c
  7991   002BC0  0EFE               	movlw	254
  7992   002BC2  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  7993   002BC4  6E13               	movwf	(??___xxtofl+3)^0,c
  7994   002BC6  5010               	movf	??___xxtofl^0,w,c
  7995   002BC8  1011               	iorwf	(??___xxtofl+1)^0,w,c
  7996   002BCA  1012               	iorwf	(??___xxtofl+2)^0,w,c
  7997   002BCC  1013               	iorwf	(??___xxtofl+3)^0,w,c
  7998   002BCE  A4D8               	btfss	status,2,c
  7999   002BD0  EFEC  F015         	goto	u5811
  8000   002BD4  EFEE  F015         	goto	u5810
  8001   002BD8                     u5811:
  8002   002BD8  EFD1  F015         	goto	l7026
  8003   002BDC                     u5810:
  8004   002BDC  EFFC  F015         	goto	l2490
  8005   002BE0                     l7030:
  8006   002BE0  2A15               	incf	___xxtofl@exp^0,f,c
  8007   002BE2  0E01               	movlw	1
  8008   002BE4  2616               	addwf	___xxtofl@arg^0,f,c
  8009   002BE6  0E00               	movlw	0
  8010   002BE8  2217               	addwfc	(___xxtofl@arg+1)^0,f,c
  8011   002BEA  2218               	addwfc	(___xxtofl@arg+2)^0,f,c
  8012   002BEC  2219               	addwfc	(___xxtofl@arg+3)^0,f,c
  8013   002BEE  90D8               	bcf	status,0,c
  8014   002BF0  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  8015   002BF2  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  8016   002BF4  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  8017   002BF6  3216               	rrcf	___xxtofl@arg^0,f,c
  8018   002BF8                     l2490:
  8019   002BF8  0E00               	movlw	0
  8020   002BFA  1416               	andwf	___xxtofl@arg^0,w,c
  8021   002BFC  6E10               	movwf	??___xxtofl^0,c
  8022   002BFE  0E00               	movlw	0
  8023   002C00  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  8024   002C02  6E11               	movwf	(??___xxtofl+1)^0,c
  8025   002C04  0E00               	movlw	0
  8026   002C06  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  8027   002C08  6E12               	movwf	(??___xxtofl+2)^0,c
  8028   002C0A  0EFF               	movlw	255
  8029   002C0C  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  8030   002C0E  6E13               	movwf	(??___xxtofl+3)^0,c
  8031   002C10  5010               	movf	??___xxtofl^0,w,c
  8032   002C12  1011               	iorwf	(??___xxtofl+1)^0,w,c
  8033   002C14  1012               	iorwf	(??___xxtofl+2)^0,w,c
  8034   002C16  1013               	iorwf	(??___xxtofl+3)^0,w,c
  8035   002C18  A4D8               	btfss	status,2,c
  8036   002C1A  EF11  F016         	goto	u5821
  8037   002C1E  EF13  F016         	goto	u5820
  8038   002C22                     u5821:
  8039   002C22  EFF0  F015         	goto	l7030
  8040   002C26                     u5820:
  8041   002C26  EF1B  F016         	goto	l7038
  8042   002C2A                     l7036:
  8043   002C2A  0615               	decf	___xxtofl@exp^0,f,c
  8044   002C2C  90D8               	bcf	status,0,c
  8045   002C2E  3616               	rlcf	___xxtofl@arg^0,f,c
  8046   002C30  3617               	rlcf	(___xxtofl@arg+1)^0,f,c
  8047   002C32  3618               	rlcf	(___xxtofl@arg+2)^0,f,c
  8048   002C34  3619               	rlcf	(___xxtofl@arg+3)^0,f,c
  8049   002C36                     l7038:
  8050   002C36  BE18               	btfsc	(___xxtofl@arg+2)^0,7,c
  8051   002C38  EF20  F016         	goto	u5831
  8052   002C3C  EF22  F016         	goto	u5830
  8053   002C40                     u5831:
  8054   002C40  EF2A  F016         	goto	l2497
  8055   002C44                     u5830:
  8056   002C44  0E02               	movlw	2
  8057   002C46  6015               	cpfslt	___xxtofl@exp^0,c
  8058   002C48  EF28  F016         	goto	u5841
  8059   002C4C  EF2A  F016         	goto	u5840
  8060   002C50                     u5841:
  8061   002C50  EF15  F016         	goto	l7036
  8062   002C54                     u5840:
  8063   002C54                     l2497:
  8064   002C54  B015               	btfsc	___xxtofl@exp^0,0,c
  8065   002C56  EF2F  F016         	goto	u5851
  8066   002C5A  EF31  F016         	goto	u5850
  8067   002C5E                     u5851:
  8068   002C5E  EF32  F016         	goto	l7044
  8069   002C62                     u5850:
  8070   002C62  9E18               	bcf	(___xxtofl@arg+2)^0,7,c
  8071   002C64                     l7044:
  8072   002C64  90D8               	bcf	status,0,c
  8073   002C66  3215               	rrcf	___xxtofl@exp^0,f,c
  8074   002C68  C015  F010         	movff	___xxtofl@exp,??___xxtofl
  8075   002C6C  6A11               	clrf	(??___xxtofl+1)^0,c
  8076   002C6E  6A12               	clrf	(??___xxtofl+2)^0,c
  8077   002C70  6A13               	clrf	(??___xxtofl+3)^0,c
  8078   002C72  C010  F013         	movff	??___xxtofl,??___xxtofl+3
  8079   002C76  6A12               	clrf	(??___xxtofl+2)^0,c
  8080   002C78  6A11               	clrf	(??___xxtofl+1)^0,c
  8081   002C7A  6A10               	clrf	??___xxtofl^0,c
  8082   002C7C  5010               	movf	??___xxtofl^0,w,c
  8083   002C7E  1216               	iorwf	___xxtofl@arg^0,f,c
  8084   002C80  5011               	movf	(??___xxtofl+1)^0,w,c
  8085   002C82  1217               	iorwf	(___xxtofl@arg+1)^0,f,c
  8086   002C84  5012               	movf	(??___xxtofl+2)^0,w,c
  8087   002C86  1218               	iorwf	(___xxtofl@arg+2)^0,f,c
  8088   002C88  5013               	movf	(??___xxtofl+3)^0,w,c
  8089   002C8A  1219               	iorwf	(___xxtofl@arg+3)^0,f,c
  8090   002C8C  5014               	movf	___xxtofl@sign^0,w,c
  8091   002C8E  B4D8               	btfsc	status,2,c
  8092   002C90  EF4C  F016         	goto	u5861
  8093   002C94  EF4E  F016         	goto	u5860
  8094   002C98                     u5861:
  8095   002C98  EF56  F016         	goto	l7054
  8096   002C9C                     u5860:
  8097   002C9C  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  8098   002C9E  EF55  F016         	goto	u5870
  8099   002CA2  EF53  F016         	goto	u5871
  8100   002CA6                     u5871:
  8101   002CA6  EF56  F016         	goto	l7054
  8102   002CAA                     u5870:
  8103   002CAA  8E19               	bsf	(___xxtofl@arg+3)^0,7,c
  8104   002CAC                     l7054:
  8105   002CAC  C016  F00C         	movff	___xxtofl@arg,?___xxtofl
  8106   002CB0  C017  F00D         	movff	___xxtofl@arg+1,?___xxtofl+1
  8107   002CB4  C018  F00E         	movff	___xxtofl@arg+2,?___xxtofl+2
  8108   002CB8  C019  F00F         	movff	___xxtofl@arg+3,?___xxtofl+3
  8109   002CBC                     l2486:
  8110   002CBC  0012               	return		;funcret
  8111   002CBE                     __end_of___xxtofl:
  8112                           	callstack 0
  8113                           
  8114 ;; *************** function ___fltol *****************
  8115 ;; Defined at:
  8116 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
  8117 ;; Parameters:    Size  Location     Type
  8118 ;;  f1              4   66[COMRAM] unsigned char 
  8119 ;; Auto vars:     Size  Location     Type
  8120 ;;  exp1            1   75[COMRAM] unsigned char 
  8121 ;;  sign1           1   74[COMRAM] unsigned char 
  8122 ;; Return value:  Size  Location     Type
  8123 ;;                  4   66[COMRAM] long 
  8124 ;; Registers used:
  8125 ;;		wreg, status,2, status,0
  8126 ;; Tracked objects:
  8127 ;;		On entry : 0/0
  8128 ;;		On exit  : 0/0
  8129 ;;		Unchanged: 0/0
  8130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8131 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8132 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8133 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8134 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8135 ;;Total ram usage:       10 bytes
  8136 ;; Hardware stack levels used: 1
  8137 ;; Hardware stack levels required when called: 4
  8138 ;; This function calls:
  8139 ;;		Nothing
  8140 ;; This function is called by:
  8141 ;;		_MSSP_I2C_Master_Mode_Clock_CFG
  8142 ;;		_EUSART_Baud_Rate_Calculation
  8143 ;;		_main
  8144 ;; This function uses a non-reentrant model
  8145 ;;
  8146                           
  8147                           	psect	text42
  8148   0035DC                     __ptext42:
  8149                           	callstack 0
  8150   0035DC                     ___fltol:
  8151                           	callstack 22
  8152   0035DC  3445               	rlcf	(___fltol@f1+2)^0,w,c
  8153   0035DE  3446               	rlcf	(___fltol@f1+3)^0,w,c
  8154   0035E0  6E4C               	movwf	___fltol@exp1^0,c
  8155   0035E2  504C               	movf	___fltol@exp1^0,w,c
  8156   0035E4  A4D8               	btfss	status,2,c
  8157   0035E6  EFF7  F01A         	goto	u5711
  8158   0035EA  EFF9  F01A         	goto	u5710
  8159   0035EE                     u5711:
  8160   0035EE  EF03  F01B         	goto	l6974
  8161   0035F2                     u5710:
  8162   0035F2                     l6970:
  8163   0035F2  0E00               	movlw	0
  8164   0035F4  6E43               	movwf	?___fltol^0,c
  8165   0035F6  0E00               	movlw	0
  8166   0035F8  6E44               	movwf	(?___fltol+1)^0,c
  8167   0035FA  0E00               	movlw	0
  8168   0035FC  6E45               	movwf	(?___fltol+2)^0,c
  8169   0035FE  0E00               	movlw	0
  8170   003600  6E46               	movwf	(?___fltol+3)^0,c
  8171   003602  EF70  F01B         	goto	l2125
  8172   003606                     l6974:
  8173   003606  C043  F047         	movff	___fltol@f1,??___fltol
  8174   00360A  C044  F048         	movff	___fltol@f1+1,??___fltol+1
  8175   00360E  C045  F049         	movff	___fltol@f1+2,??___fltol+2
  8176   003612  C046  F04A         	movff	___fltol@f1+3,??___fltol+3
  8177   003616  0E20               	movlw	32
  8178   003618  EF13  F01B         	goto	u5720
  8179   00361C                     u5725:
  8180   00361C  90D8               	bcf	status,0,c
  8181   00361E  324A               	rrcf	(??___fltol+3)^0,f,c
  8182   003620  3249               	rrcf	(??___fltol+2)^0,f,c
  8183   003622  3248               	rrcf	(??___fltol+1)^0,f,c
  8184   003624  3247               	rrcf	??___fltol^0,f,c
  8185   003626                     u5720:
  8186   003626  2EE8               	decfsz	wreg,f,c
  8187   003628  EF0E  F01B         	goto	u5725
  8188   00362C  5047               	movf	??___fltol^0,w,c
  8189   00362E  6E4B               	movwf	___fltol@sign1^0,c
  8190   003630  8E45               	bsf	(___fltol@f1+2)^0,7,c
  8191   003632  0EFF               	movlw	255
  8192   003634  1643               	andwf	___fltol@f1^0,f,c
  8193   003636  0EFF               	movlw	255
  8194   003638  1644               	andwf	(___fltol@f1+1)^0,f,c
  8195   00363A  0EFF               	movlw	255
  8196   00363C  1645               	andwf	(___fltol@f1+2)^0,f,c
  8197   00363E  0E00               	movlw	0
  8198   003640  1646               	andwf	(___fltol@f1+3)^0,f,c
  8199   003642  0E96               	movlw	150
  8200   003644  5E4C               	subwf	___fltol@exp1^0,f,c
  8201   003646  BE4C               	btfsc	___fltol@exp1^0,7,c
  8202   003648  EF2A  F01B         	goto	u5730
  8203   00364C  EF28  F01B         	goto	u5731
  8204   003650                     u5731:
  8205   003650  EF40  F01B         	goto	l6994
  8206   003654                     u5730:
  8207   003654  504C               	movf	___fltol@exp1^0,w,c
  8208   003656  0A80               	xorlw	128
  8209   003658  0F97               	addlw	151
  8210   00365A  B0D8               	btfsc	status,0,c
  8211   00365C  EF32  F01B         	goto	u5741
  8212   003660  EF34  F01B         	goto	u5740
  8213   003664                     u5741:
  8214   003664  EF36  F01B         	goto	l6990
  8215   003668                     u5740:
  8216   003668  EFF9  F01A         	goto	l6970
  8217   00366C                     l6990:
  8218   00366C  90D8               	bcf	status,0,c
  8219   00366E  3246               	rrcf	(___fltol@f1+3)^0,f,c
  8220   003670  3245               	rrcf	(___fltol@f1+2)^0,f,c
  8221   003672  3244               	rrcf	(___fltol@f1+1)^0,f,c
  8222   003674  3243               	rrcf	___fltol@f1^0,f,c
  8223   003676  3E4C               	incfsz	___fltol@exp1^0,f,c
  8224   003678  EF36  F01B         	goto	l6990
  8225   00367C  EF58  F01B         	goto	l7004
  8226   003680                     l6994:
  8227   003680  0E1F               	movlw	31
  8228   003682  644C               	cpfsgt	___fltol@exp1^0,c
  8229   003684  EF46  F01B         	goto	u5751
  8230   003688  EF48  F01B         	goto	u5750
  8231   00368C                     u5751:
  8232   00368C  EF50  F01B         	goto	l7002
  8233   003690                     u5750:
  8234   003690  EFF9  F01A         	goto	l6970
  8235   003694                     l7000:
  8236   003694  90D8               	bcf	status,0,c
  8237   003696  3643               	rlcf	___fltol@f1^0,f,c
  8238   003698  3644               	rlcf	(___fltol@f1+1)^0,f,c
  8239   00369A  3645               	rlcf	(___fltol@f1+2)^0,f,c
  8240   00369C  3646               	rlcf	(___fltol@f1+3)^0,f,c
  8241   00369E  064C               	decf	___fltol@exp1^0,f,c
  8242   0036A0                     l7002:
  8243   0036A0  504C               	movf	___fltol@exp1^0,w,c
  8244   0036A2  A4D8               	btfss	status,2,c
  8245   0036A4  EF56  F01B         	goto	u5761
  8246   0036A8  EF58  F01B         	goto	u5760
  8247   0036AC                     u5761:
  8248   0036AC  EF4A  F01B         	goto	l7000
  8249   0036B0                     u5760:
  8250   0036B0                     l7004:
  8251   0036B0  504B               	movf	___fltol@sign1^0,w,c
  8252   0036B2  B4D8               	btfsc	status,2,c
  8253   0036B4  EF5E  F01B         	goto	u5771
  8254   0036B8  EF60  F01B         	goto	u5770
  8255   0036BC                     u5771:
  8256   0036BC  EF68  F01B         	goto	l7008
  8257   0036C0                     u5770:
  8258   0036C0  1E46               	comf	(___fltol@f1+3)^0,f,c
  8259   0036C2  1E45               	comf	(___fltol@f1+2)^0,f,c
  8260   0036C4  1E44               	comf	(___fltol@f1+1)^0,f,c
  8261   0036C6  6C43               	negf	___fltol@f1^0,c
  8262   0036C8  0E00               	movlw	0
  8263   0036CA  2244               	addwfc	(___fltol@f1+1)^0,f,c
  8264   0036CC  2245               	addwfc	(___fltol@f1+2)^0,f,c
  8265   0036CE  2246               	addwfc	(___fltol@f1+3)^0,f,c
  8266   0036D0                     l7008:
  8267   0036D0  C043  F043         	movff	___fltol@f1,?___fltol
  8268   0036D4  C044  F044         	movff	___fltol@f1+1,?___fltol+1
  8269   0036D8  C045  F045         	movff	___fltol@f1+2,?___fltol+2
  8270   0036DC  C046  F046         	movff	___fltol@f1+3,?___fltol+3
  8271   0036E0                     l2125:
  8272   0036E0  0012               	return		;funcret
  8273   0036E2                     __end_of___fltol:
  8274                           	callstack 0
  8275                           
  8276 ;; *************** function ___fldiv *****************
  8277 ;; Defined at:
  8278 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcdiv.c"
  8279 ;; Parameters:    Size  Location     Type
  8280 ;;  b               4   25[COMRAM] long 
  8281 ;;  a               4   29[COMRAM] long 
  8282 ;; Auto vars:     Size  Location     Type
  8283 ;;  grs             4   44[COMRAM] unsigned long 
  8284 ;;  rem             4   37[COMRAM] unsigned long 
  8285 ;;  new_exp         2   42[COMRAM] short 
  8286 ;;  aexp            1   49[COMRAM] unsigned char 
  8287 ;;  bexp            1   48[COMRAM] unsigned char 
  8288 ;;  sign            1   41[COMRAM] unsigned char 
  8289 ;; Return value:  Size  Location     Type
  8290 ;;                  4   25[COMRAM] unsigned char 
  8291 ;; Registers used:
  8292 ;;		wreg, status,2, status,0
  8293 ;; Tracked objects:
  8294 ;;		On entry : 0/0
  8295 ;;		On exit  : 0/0
  8296 ;;		Unchanged: 0/0
  8297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8298 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8299 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8300 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8301 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8302 ;;Total ram usage:       25 bytes
  8303 ;; Hardware stack levels used: 1
  8304 ;; Hardware stack levels required when called: 4
  8305 ;; This function calls:
  8306 ;;		Nothing
  8307 ;; This function is called by:
  8308 ;;		_MSSP_I2C_Master_Mode_Clock_CFG
  8309 ;;		_EUSART_Baud_Rate_Calculation
  8310 ;; This function uses a non-reentrant model
  8311 ;;
  8312                           
  8313                           	psect	text43
  8314   002770                     __ptext43:
  8315                           	callstack 0
  8316   002770                     ___fldiv:
  8317                           	callstack 22
  8318   002770  501D               	movf	(___fldiv@b+3)^0,w,c
  8319   002772  0B80               	andlw	128
  8320   002774  6E2A               	movwf	___fldiv@sign^0,c
  8321   002776  501D               	movf	(___fldiv@b+3)^0,w,c
  8322   002778  241D               	addwf	(___fldiv@b+3)^0,w,c
  8323   00277A  6E31               	movwf	___fldiv@bexp^0,c
  8324   00277C  AE1C               	btfss	(___fldiv@b+2)^0,7,c
  8325   00277E  EFC3  F013         	goto	u5481
  8326   002782  EFC5  F013         	goto	u5480
  8327   002786                     u5481:
  8328   002786  EFC6  F013         	goto	l6836
  8329   00278A                     u5480:
  8330   00278A  8031               	bsf	___fldiv@bexp^0,0,c
  8331   00278C                     l6836:
  8332   00278C  5031               	movf	___fldiv@bexp^0,w,c
  8333   00278E  B4D8               	btfsc	status,2,c
  8334   002790  EFCC  F013         	goto	u5491
  8335   002794  EFCE  F013         	goto	u5490
  8336   002798                     u5491:
  8337   002798  EFE3  F013         	goto	l6846
  8338   00279C                     u5490:
  8339   00279C  2831               	incf	___fldiv@bexp^0,w,c
  8340   00279E  A4D8               	btfss	status,2,c
  8341   0027A0  EFD4  F013         	goto	u5501
  8342   0027A4  EFD6  F013         	goto	u5500
  8343   0027A8                     u5501:
  8344   0027A8  EFDE  F013         	goto	l6842
  8345   0027AC                     u5500:
  8346   0027AC  0E00               	movlw	0
  8347   0027AE  6E1A               	movwf	___fldiv@b^0,c
  8348   0027B0  0E00               	movlw	0
  8349   0027B2  6E1B               	movwf	(___fldiv@b+1)^0,c
  8350   0027B4  0E00               	movlw	0
  8351   0027B6  6E1C               	movwf	(___fldiv@b+2)^0,c
  8352   0027B8  0E00               	movlw	0
  8353   0027BA  6E1D               	movwf	(___fldiv@b+3)^0,c
  8354   0027BC                     l6842:
  8355   0027BC  8E1C               	bsf	(___fldiv@b+2)^0,7,c
  8356   0027BE  0E00               	movlw	0
  8357   0027C0  6E1D               	movwf	(___fldiv@b+3)^0,c
  8358   0027C2  EFEB  F013         	goto	l6848
  8359   0027C6                     l6846:
  8360   0027C6  0E00               	movlw	0
  8361   0027C8  6E1A               	movwf	___fldiv@b^0,c
  8362   0027CA  0E00               	movlw	0
  8363   0027CC  6E1B               	movwf	(___fldiv@b+1)^0,c
  8364   0027CE  0E00               	movlw	0
  8365   0027D0  6E1C               	movwf	(___fldiv@b+2)^0,c
  8366   0027D2  0E00               	movlw	0
  8367   0027D4  6E1D               	movwf	(___fldiv@b+3)^0,c
  8368   0027D6                     l6848:
  8369   0027D6  5021               	movf	(___fldiv@a+3)^0,w,c
  8370   0027D8  0B80               	andlw	128
  8371   0027DA  1A2A               	xorwf	___fldiv@sign^0,f,c
  8372   0027DC  5021               	movf	(___fldiv@a+3)^0,w,c
  8373   0027DE  2421               	addwf	(___fldiv@a+3)^0,w,c
  8374   0027E0  6E32               	movwf	___fldiv@aexp^0,c
  8375   0027E2  AE20               	btfss	(___fldiv@a+2)^0,7,c
  8376   0027E4  EFF6  F013         	goto	u5511
  8377   0027E8  EFF8  F013         	goto	u5510
  8378   0027EC                     u5511:
  8379   0027EC  EFF9  F013         	goto	l6856
  8380   0027F0                     u5510:
  8381   0027F0  8032               	bsf	___fldiv@aexp^0,0,c
  8382   0027F2                     l6856:
  8383   0027F2  5032               	movf	___fldiv@aexp^0,w,c
  8384   0027F4  B4D8               	btfsc	status,2,c
  8385   0027F6  EFFF  F013         	goto	u5521
  8386   0027FA  EF01  F014         	goto	u5520
  8387   0027FE                     u5521:
  8388   0027FE  EF16  F014         	goto	l6866
  8389   002802                     u5520:
  8390   002802  2832               	incf	___fldiv@aexp^0,w,c
  8391   002804  A4D8               	btfss	status,2,c
  8392   002806  EF07  F014         	goto	u5531
  8393   00280A  EF09  F014         	goto	u5530
  8394   00280E                     u5531:
  8395   00280E  EF11  F014         	goto	l6862
  8396   002812                     u5530:
  8397   002812  0E00               	movlw	0
  8398   002814  6E1E               	movwf	___fldiv@a^0,c
  8399   002816  0E00               	movlw	0
  8400   002818  6E1F               	movwf	(___fldiv@a+1)^0,c
  8401   00281A  0E00               	movlw	0
  8402   00281C  6E20               	movwf	(___fldiv@a+2)^0,c
  8403   00281E  0E00               	movlw	0
  8404   002820  6E21               	movwf	(___fldiv@a+3)^0,c
  8405   002822                     l6862:
  8406   002822  8E20               	bsf	(___fldiv@a+2)^0,7,c
  8407   002824  0E00               	movlw	0
  8408   002826  6E21               	movwf	(___fldiv@a+3)^0,c
  8409   002828  EF1E  F014         	goto	l6868
  8410   00282C                     l6866:
  8411   00282C  0E00               	movlw	0
  8412   00282E  6E1E               	movwf	___fldiv@a^0,c
  8413   002830  0E00               	movlw	0
  8414   002832  6E1F               	movwf	(___fldiv@a+1)^0,c
  8415   002834  0E00               	movlw	0
  8416   002836  6E20               	movwf	(___fldiv@a+2)^0,c
  8417   002838  0E00               	movlw	0
  8418   00283A  6E21               	movwf	(___fldiv@a+3)^0,c
  8419   00283C                     l6868:
  8420   00283C  501E               	movf	___fldiv@a^0,w,c
  8421   00283E  101F               	iorwf	(___fldiv@a+1)^0,w,c
  8422   002840  1020               	iorwf	(___fldiv@a+2)^0,w,c
  8423   002842  1021               	iorwf	(___fldiv@a+3)^0,w,c
  8424   002844  A4D8               	btfss	status,2,c
  8425   002846  EF27  F014         	goto	u5541
  8426   00284A  EF29  F014         	goto	u5540
  8427   00284E                     u5541:
  8428   00284E  EF41  F014         	goto	l6880
  8429   002852                     u5540:
  8430   002852  0E00               	movlw	0
  8431   002854  6E1A               	movwf	___fldiv@b^0,c
  8432   002856  0E00               	movlw	0
  8433   002858  6E1B               	movwf	(___fldiv@b+1)^0,c
  8434   00285A  0E00               	movlw	0
  8435   00285C  6E1C               	movwf	(___fldiv@b+2)^0,c
  8436   00285E  0E00               	movlw	0
  8437   002860  6E1D               	movwf	(___fldiv@b+3)^0,c
  8438   002862  0E80               	movlw	128
  8439   002864  121C               	iorwf	(___fldiv@b+2)^0,f,c
  8440   002866  0E7F               	movlw	127
  8441   002868  121D               	iorwf	(___fldiv@b+3)^0,f,c
  8442   00286A                     l6874:
  8443   00286A  502A               	movf	___fldiv@sign^0,w,c
  8444   00286C  121D               	iorwf	(___fldiv@b+3)^0,f,c
  8445   00286E  C01A  F01A         	movff	___fldiv@b,?___fldiv
  8446   002872  C01B  F01B         	movff	___fldiv@b+1,?___fldiv+1
  8447   002876  C01C  F01C         	movff	___fldiv@b+2,?___fldiv+2
  8448   00287A  C01D  F01D         	movff	___fldiv@b+3,?___fldiv+3
  8449   00287E  EF84  F015         	goto	l2410
  8450   002882                     l6880:
  8451   002882  5031               	movf	___fldiv@bexp^0,w,c
  8452   002884  A4D8               	btfss	status,2,c
  8453   002886  EF47  F014         	goto	u5551
  8454   00288A  EF49  F014         	goto	u5550
  8455   00288E                     u5551:
  8456   00288E  EF53  F014         	goto	l6888
  8457   002892                     u5550:
  8458   002892  0E00               	movlw	0
  8459   002894  6E1A               	movwf	?___fldiv^0,c
  8460   002896  0E00               	movlw	0
  8461   002898  6E1B               	movwf	(?___fldiv+1)^0,c
  8462   00289A  0E00               	movlw	0
  8463   00289C  6E1C               	movwf	(?___fldiv+2)^0,c
  8464   00289E  0E00               	movlw	0
  8465   0028A0  6E1D               	movwf	(?___fldiv+3)^0,c
  8466   0028A2  EF84  F015         	goto	l2410
  8467   0028A6                     l6888:
  8468   0028A6  5032               	movf	___fldiv@aexp^0,w,c
  8469   0028A8  C031  F022         	movff	___fldiv@bexp,??___fldiv
  8470   0028AC  6A23               	clrf	(??___fldiv+1)^0,c
  8471   0028AE  5E22               	subwf	??___fldiv^0,f,c
  8472   0028B0  0E00               	movlw	0
  8473   0028B2  5A23               	subwfb	(??___fldiv+1)^0,f,c
  8474   0028B4  0E7F               	movlw	127
  8475   0028B6  2422               	addwf	??___fldiv^0,w,c
  8476   0028B8  6E2B               	movwf	___fldiv@new_exp^0,c
  8477   0028BA  0E00               	movlw	0
  8478   0028BC  2023               	addwfc	(??___fldiv+1)^0,w,c
  8479   0028BE  6E2C               	movwf	(___fldiv@new_exp+1)^0,c
  8480   0028C0  C01A  F026         	movff	___fldiv@b,___fldiv@rem
  8481   0028C4  C01B  F027         	movff	___fldiv@b+1,___fldiv@rem+1
  8482   0028C8  C01C  F028         	movff	___fldiv@b+2,___fldiv@rem+2
  8483   0028CC  C01D  F029         	movff	___fldiv@b+3,___fldiv@rem+3
  8484   0028D0  0E00               	movlw	0
  8485   0028D2  6E1A               	movwf	___fldiv@b^0,c
  8486   0028D4  0E00               	movlw	0
  8487   0028D6  6E1B               	movwf	(___fldiv@b+1)^0,c
  8488   0028D8  0E00               	movlw	0
  8489   0028DA  6E1C               	movwf	(___fldiv@b+2)^0,c
  8490   0028DC  0E00               	movlw	0
  8491   0028DE  6E1D               	movwf	(___fldiv@b+3)^0,c
  8492   0028E0  0E00               	movlw	0
  8493   0028E2  6E2D               	movwf	___fldiv@grs^0,c
  8494   0028E4  0E00               	movlw	0
  8495   0028E6  6E2E               	movwf	(___fldiv@grs+1)^0,c
  8496   0028E8  0E00               	movlw	0
  8497   0028EA  6E2F               	movwf	(___fldiv@grs+2)^0,c
  8498   0028EC  0E00               	movlw	0
  8499   0028EE  6E30               	movwf	(___fldiv@grs+3)^0,c
  8500   0028F0  0E00               	movlw	0
  8501   0028F2  6E32               	movwf	___fldiv@aexp^0,c
  8502   0028F4  EFB4  F014         	goto	l2412
  8503   0028F8                     l6898:
  8504   0028F8  5032               	movf	___fldiv@aexp^0,w,c
  8505   0028FA  B4D8               	btfsc	status,2,c
  8506   0028FC  EF82  F014         	goto	u5561
  8507   002900  EF84  F014         	goto	u5560
  8508   002904                     u5561:
  8509   002904  EF9B  F014         	goto	l6906
  8510   002908                     u5560:
  8511   002908  90D8               	bcf	status,0,c
  8512   00290A  3626               	rlcf	___fldiv@rem^0,f,c
  8513   00290C  3627               	rlcf	(___fldiv@rem+1)^0,f,c
  8514   00290E  3628               	rlcf	(___fldiv@rem+2)^0,f,c
  8515   002910  3629               	rlcf	(___fldiv@rem+3)^0,f,c
  8516   002912  90D8               	bcf	status,0,c
  8517   002914  361A               	rlcf	___fldiv@b^0,f,c
  8518   002916  361B               	rlcf	(___fldiv@b+1)^0,f,c
  8519   002918  361C               	rlcf	(___fldiv@b+2)^0,f,c
  8520   00291A  361D               	rlcf	(___fldiv@b+3)^0,f,c
  8521   00291C  AE30               	btfss	(___fldiv@grs+3)^0,7,c
  8522   00291E  EF93  F014         	goto	u5571
  8523   002922  EF95  F014         	goto	u5570
  8524   002926                     u5571:
  8525   002926  EF96  F014         	goto	l2415
  8526   00292A                     u5570:
  8527   00292A  801A               	bsf	___fldiv@b^0,0,c
  8528   00292C                     l2415:
  8529   00292C  90D8               	bcf	status,0,c
  8530   00292E  362D               	rlcf	___fldiv@grs^0,f,c
  8531   002930  362E               	rlcf	(___fldiv@grs+1)^0,f,c
  8532   002932  362F               	rlcf	(___fldiv@grs+2)^0,f,c
  8533   002934  3630               	rlcf	(___fldiv@grs+3)^0,f,c
  8534   002936                     l6906:
  8535   002936  501E               	movf	___fldiv@a^0,w,c
  8536   002938  5C26               	subwf	___fldiv@rem^0,w,c
  8537   00293A  501F               	movf	(___fldiv@a+1)^0,w,c
  8538   00293C  5827               	subwfb	(___fldiv@rem+1)^0,w,c
  8539   00293E  5020               	movf	(___fldiv@a+2)^0,w,c
  8540   002940  5828               	subwfb	(___fldiv@rem+2)^0,w,c
  8541   002942  5021               	movf	(___fldiv@a+3)^0,w,c
  8542   002944  5829               	subwfb	(___fldiv@rem+3)^0,w,c
  8543   002946  A0D8               	btfss	status,0,c
  8544   002948  EFA8  F014         	goto	u5581
  8545   00294C  EFAA  F014         	goto	u5580
  8546   002950                     u5581:
  8547   002950  EFB3  F014         	goto	l6912
  8548   002954                     u5580:
  8549   002954  8C30               	bsf	(___fldiv@grs+3)^0,6,c
  8550   002956  501E               	movf	___fldiv@a^0,w,c
  8551   002958  5E26               	subwf	___fldiv@rem^0,f,c
  8552   00295A  501F               	movf	(___fldiv@a+1)^0,w,c
  8553   00295C  5A27               	subwfb	(___fldiv@rem+1)^0,f,c
  8554   00295E  5020               	movf	(___fldiv@a+2)^0,w,c
  8555   002960  5A28               	subwfb	(___fldiv@rem+2)^0,f,c
  8556   002962  5021               	movf	(___fldiv@a+3)^0,w,c
  8557   002964  5A29               	subwfb	(___fldiv@rem+3)^0,f,c
  8558   002966                     l6912:
  8559   002966  2A32               	incf	___fldiv@aexp^0,f,c
  8560   002968                     l2412:
  8561   002968  0E19               	movlw	25
  8562   00296A  6432               	cpfsgt	___fldiv@aexp^0,c
  8563   00296C  EFBA  F014         	goto	u5591
  8564   002970  EFBC  F014         	goto	u5590
  8565   002974                     u5591:
  8566   002974  EF7C  F014         	goto	l6898
  8567   002978                     u5590:
  8568   002978  5026               	movf	___fldiv@rem^0,w,c
  8569   00297A  1027               	iorwf	(___fldiv@rem+1)^0,w,c
  8570   00297C  1028               	iorwf	(___fldiv@rem+2)^0,w,c
  8571   00297E  1029               	iorwf	(___fldiv@rem+3)^0,w,c
  8572   002980  B4D8               	btfsc	status,2,c
  8573   002982  EFC5  F014         	goto	u5601
  8574   002986  EFC7  F014         	goto	u5600
  8575   00298A                     u5601:
  8576   00298A  EFDF  F014         	goto	l6924
  8577   00298E                     u5600:
  8578   00298E  802D               	bsf	___fldiv@grs^0,0,c
  8579   002990  EFDF  F014         	goto	l6924
  8580   002994                     l6918:
  8581   002994  90D8               	bcf	status,0,c
  8582   002996  361A               	rlcf	___fldiv@b^0,f,c
  8583   002998  361B               	rlcf	(___fldiv@b+1)^0,f,c
  8584   00299A  361C               	rlcf	(___fldiv@b+2)^0,f,c
  8585   00299C  361D               	rlcf	(___fldiv@b+3)^0,f,c
  8586   00299E  AE30               	btfss	(___fldiv@grs+3)^0,7,c
  8587   0029A0  EFD4  F014         	goto	u5611
  8588   0029A4  EFD6  F014         	goto	u5610
  8589   0029A8                     u5611:
  8590   0029A8  EFD7  F014         	goto	l2421
  8591   0029AC                     u5610:
  8592   0029AC  801A               	bsf	___fldiv@b^0,0,c
  8593   0029AE                     l2421:
  8594   0029AE  90D8               	bcf	status,0,c
  8595   0029B0  362D               	rlcf	___fldiv@grs^0,f,c
  8596   0029B2  362E               	rlcf	(___fldiv@grs+1)^0,f,c
  8597   0029B4  362F               	rlcf	(___fldiv@grs+2)^0,f,c
  8598   0029B6  3630               	rlcf	(___fldiv@grs+3)^0,f,c
  8599   0029B8  062B               	decf	___fldiv@new_exp^0,f,c
  8600   0029BA  A0D8               	btfss	status,0,c
  8601   0029BC  062C               	decf	(___fldiv@new_exp+1)^0,f,c
  8602   0029BE                     l6924:
  8603   0029BE  AE1C               	btfss	(___fldiv@b+2)^0,7,c
  8604   0029C0  EFE4  F014         	goto	u5621
  8605   0029C4  EFE6  F014         	goto	u5620
  8606   0029C8                     u5621:
  8607   0029C8  EFCA  F014         	goto	l6918
  8608   0029CC                     u5620:
  8609   0029CC  0E00               	movlw	0
  8610   0029CE  6E32               	movwf	___fldiv@aexp^0,c
  8611   0029D0  AE30               	btfss	(___fldiv@grs+3)^0,7,c
  8612   0029D2  EFED  F014         	goto	u5631
  8613   0029D6  EFEF  F014         	goto	u5630
  8614   0029DA                     u5631:
  8615   0029DA  EF13  F015         	goto	l2423
  8616   0029DE                     u5630:
  8617   0029DE  0EFF               	movlw	255
  8618   0029E0  142D               	andwf	___fldiv@grs^0,w,c
  8619   0029E2  6E22               	movwf	??___fldiv^0,c
  8620   0029E4  0EFF               	movlw	255
  8621   0029E6  142E               	andwf	(___fldiv@grs+1)^0,w,c
  8622   0029E8  6E23               	movwf	(??___fldiv+1)^0,c
  8623   0029EA  0EFF               	movlw	255
  8624   0029EC  142F               	andwf	(___fldiv@grs+2)^0,w,c
  8625   0029EE  6E24               	movwf	(??___fldiv+2)^0,c
  8626   0029F0  0E7F               	movlw	127
  8627   0029F2  1430               	andwf	(___fldiv@grs+3)^0,w,c
  8628   0029F4  6E25               	movwf	(??___fldiv+3)^0,c
  8629   0029F6  5022               	movf	??___fldiv^0,w,c
  8630   0029F8  1023               	iorwf	(??___fldiv+1)^0,w,c
  8631   0029FA  1024               	iorwf	(??___fldiv+2)^0,w,c
  8632   0029FC  1025               	iorwf	(??___fldiv+3)^0,w,c
  8633   0029FE  B4D8               	btfsc	status,2,c
  8634   002A00  EF04  F015         	goto	u5641
  8635   002A04  EF06  F015         	goto	u5640
  8636   002A08                     u5641:
  8637   002A08  EF0A  F015         	goto	l2424
  8638   002A0C                     u5640:
  8639   002A0C                     l6932:
  8640   002A0C  0E01               	movlw	1
  8641   002A0E  6E32               	movwf	___fldiv@aexp^0,c
  8642   002A10  EF13  F015         	goto	l2423
  8643   002A14                     l2424:
  8644   002A14  A01A               	btfss	___fldiv@b^0,0,c
  8645   002A16  EF0F  F015         	goto	u5651
  8646   002A1A  EF11  F015         	goto	u5650
  8647   002A1E                     u5651:
  8648   002A1E  EF13  F015         	goto	l2423
  8649   002A22                     u5650:
  8650   002A22  EF06  F015         	goto	l6932
  8651   002A26                     l2423:
  8652   002A26  5032               	movf	___fldiv@aexp^0,w,c
  8653   002A28  B4D8               	btfsc	status,2,c
  8654   002A2A  EF19  F015         	goto	u5661
  8655   002A2E  EF1B  F015         	goto	u5660
  8656   002A32                     u5661:
  8657   002A32  EF3F  F015         	goto	l6944
  8658   002A36                     u5660:
  8659   002A36  0E01               	movlw	1
  8660   002A38  261A               	addwf	___fldiv@b^0,f,c
  8661   002A3A  0E00               	movlw	0
  8662   002A3C  221B               	addwfc	(___fldiv@b+1)^0,f,c
  8663   002A3E  221C               	addwfc	(___fldiv@b+2)^0,f,c
  8664   002A40  221D               	addwfc	(___fldiv@b+3)^0,f,c
  8665   002A42  A01D               	btfss	(___fldiv@b+3)^0,0,c
  8666   002A44  EF26  F015         	goto	u5671
  8667   002A48  EF28  F015         	goto	u5670
  8668   002A4C                     u5671:
  8669   002A4C  EF3F  F015         	goto	l6944
  8670   002A50                     u5670:
  8671   002A50  C01A  F022         	movff	___fldiv@b,??___fldiv
  8672   002A54  C01B  F023         	movff	___fldiv@b+1,??___fldiv+1
  8673   002A58  C01C  F024         	movff	___fldiv@b+2,??___fldiv+2
  8674   002A5C  C01D  F025         	movff	___fldiv@b+3,??___fldiv+3
  8675   002A60  3425               	rlcf	(??___fldiv+3)^0,w,c
  8676   002A62  3225               	rrcf	(??___fldiv+3)^0,f,c
  8677   002A64  3224               	rrcf	(??___fldiv+2)^0,f,c
  8678   002A66  3223               	rrcf	(??___fldiv+1)^0,f,c
  8679   002A68  3222               	rrcf	??___fldiv^0,f,c
  8680   002A6A  C022  F01A         	movff	??___fldiv,___fldiv@b
  8681   002A6E  C023  F01B         	movff	??___fldiv+1,___fldiv@b+1
  8682   002A72  C024  F01C         	movff	??___fldiv+2,___fldiv@b+2
  8683   002A76  C025  F01D         	movff	??___fldiv+3,___fldiv@b+3
  8684   002A7A  4A2B               	infsnz	___fldiv@new_exp^0,f,c
  8685   002A7C  2A2C               	incf	(___fldiv@new_exp+1)^0,f,c
  8686   002A7E                     l6944:
  8687   002A7E  BE2C               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8688   002A80  EF4A  F015         	goto	u5681
  8689   002A84  502C               	movf	(___fldiv@new_exp+1)^0,w,c
  8690   002A86  E108               	bnz	u5680
  8691   002A88  282B               	incf	___fldiv@new_exp^0,w,c
  8692   002A8A  A0D8               	btfss	status,0,c
  8693   002A8C  EF4A  F015         	goto	u5681
  8694   002A90  EF4C  F015         	goto	u5680
  8695   002A94                     u5681:
  8696   002A94  EF57  F015         	goto	l6948
  8697   002A98                     u5680:
  8698   002A98  0E00               	movlw	0
  8699   002A9A  6E2C               	movwf	(___fldiv@new_exp+1)^0,c
  8700   002A9C  682B               	setf	___fldiv@new_exp^0,c
  8701   002A9E  0E00               	movlw	0
  8702   002AA0  6E1A               	movwf	___fldiv@b^0,c
  8703   002AA2  0E00               	movlw	0
  8704   002AA4  6E1B               	movwf	(___fldiv@b+1)^0,c
  8705   002AA6  0E00               	movlw	0
  8706   002AA8  6E1C               	movwf	(___fldiv@b+2)^0,c
  8707   002AAA  0E00               	movlw	0
  8708   002AAC  6E1D               	movwf	(___fldiv@b+3)^0,c
  8709   002AAE                     l6948:
  8710   002AAE  BE2C               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8711   002AB0  EF64  F015         	goto	u5690
  8712   002AB4  502C               	movf	(___fldiv@new_exp+1)^0,w,c
  8713   002AB6  E106               	bnz	u5691
  8714   002AB8  042B               	decf	___fldiv@new_exp^0,w,c
  8715   002ABA  B0D8               	btfsc	status,0,c
  8716   002ABC  EF62  F015         	goto	u5691
  8717   002AC0  EF64  F015         	goto	u5690
  8718   002AC4                     u5691:
  8719   002AC4  EF72  F015         	goto	l6952
  8720   002AC8                     u5690:
  8721   002AC8  0E00               	movlw	0
  8722   002ACA  6E2C               	movwf	(___fldiv@new_exp+1)^0,c
  8723   002ACC  0E00               	movlw	0
  8724   002ACE  6E2B               	movwf	___fldiv@new_exp^0,c
  8725   002AD0  0E00               	movlw	0
  8726   002AD2  6E1A               	movwf	___fldiv@b^0,c
  8727   002AD4  0E00               	movlw	0
  8728   002AD6  6E1B               	movwf	(___fldiv@b+1)^0,c
  8729   002AD8  0E00               	movlw	0
  8730   002ADA  6E1C               	movwf	(___fldiv@b+2)^0,c
  8731   002ADC  0E00               	movlw	0
  8732   002ADE  6E1D               	movwf	(___fldiv@b+3)^0,c
  8733   002AE0  0E00               	movlw	0
  8734   002AE2  6E2A               	movwf	___fldiv@sign^0,c
  8735   002AE4                     l6952:
  8736   002AE4  C02B  F031         	movff	___fldiv@new_exp,___fldiv@bexp
  8737   002AE8  A031               	btfss	___fldiv@bexp^0,0,c
  8738   002AEA  EF79  F015         	goto	u5701
  8739   002AEE  EF7B  F015         	goto	u5700
  8740   002AF2                     u5701:
  8741   002AF2  EF7E  F015         	goto	l6958
  8742   002AF6                     u5700:
  8743   002AF6  8E1C               	bsf	(___fldiv@b+2)^0,7,c
  8744   002AF8  EF7F  F015         	goto	l6960
  8745   002AFC                     l6958:
  8746   002AFC  9E1C               	bcf	(___fldiv@b+2)^0,7,c
  8747   002AFE                     l6960:
  8748   002AFE  90D8               	bcf	status,0,c
  8749   002B00  3031               	rrcf	___fldiv@bexp^0,w,c
  8750   002B02  6E1D               	movwf	(___fldiv@b+3)^0,c
  8751   002B04  EF35  F014         	goto	l6874
  8752   002B08                     l2410:
  8753   002B08  0012               	return		;funcret
  8754   002B0A                     __end_of___fldiv:
  8755                           	callstack 0
  8756                           
  8757 ;; *************** function ___fladd *****************
  8758 ;; Defined at:
  8759 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
  8760 ;; Parameters:    Size  Location     Type
  8761 ;;  b               4   50[COMRAM] unsigned char 
  8762 ;;  a               4   54[COMRAM] unsigned char 
  8763 ;; Auto vars:     Size  Location     Type
  8764 ;;  grs             1   65[COMRAM] unsigned char 
  8765 ;;  bexp            1   64[COMRAM] unsigned char 
  8766 ;;  aexp            1   63[COMRAM] unsigned char 
  8767 ;;  signs           1   62[COMRAM] unsigned char 
  8768 ;; Return value:  Size  Location     Type
  8769 ;;                  4   50[COMRAM] unsigned char 
  8770 ;; Registers used:
  8771 ;;		wreg, status,2, status,0
  8772 ;; Tracked objects:
  8773 ;;		On entry : 0/0
  8774 ;;		On exit  : 0/0
  8775 ;;		Unchanged: 0/0
  8776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8777 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8778 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8779 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8780 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8781 ;;Total ram usage:       16 bytes
  8782 ;; Hardware stack levels used: 1
  8783 ;; Hardware stack levels required when called: 4
  8784 ;; This function calls:
  8785 ;;		Nothing
  8786 ;; This function is called by:
  8787 ;;		_MSSP_I2C_Master_Mode_Clock_CFG
  8788 ;;		_EUSART_Baud_Rate_Calculation
  8789 ;; This function uses a non-reentrant model
  8790 ;;
  8791                           
  8792                           	psect	text44
  8793   001A80                     __ptext44:
  8794                           	callstack 0
  8795   001A80                     ___fladd:
  8796                           	callstack 22
  8797   001A80  5036               	movf	(___fladd@b+3)^0,w,c
  8798   001A82  0B80               	andlw	128
  8799   001A84  6E3F               	movwf	___fladd@signs^0,c
  8800   001A86  5036               	movf	(___fladd@b+3)^0,w,c
  8801   001A88  2436               	addwf	(___fladd@b+3)^0,w,c
  8802   001A8A  6E41               	movwf	___fladd@bexp^0,c
  8803   001A8C  AE35               	btfss	(___fladd@b+2)^0,7,c
  8804   001A8E  EF4B  F00D         	goto	u5091
  8805   001A92  EF4D  F00D         	goto	u5090
  8806   001A96                     u5091:
  8807   001A96  EF4E  F00D         	goto	l6634
  8808   001A9A                     u5090:
  8809   001A9A  8041               	bsf	___fladd@bexp^0,0,c
  8810   001A9C                     l6634:
  8811   001A9C  5041               	movf	___fladd@bexp^0,w,c
  8812   001A9E  B4D8               	btfsc	status,2,c
  8813   001AA0  EF54  F00D         	goto	u5101
  8814   001AA4  EF56  F00D         	goto	u5100
  8815   001AA8                     u5101:
  8816   001AA8  EF6B  F00D         	goto	l6644
  8817   001AAC                     u5100:
  8818   001AAC  2841               	incf	___fladd@bexp^0,w,c
  8819   001AAE  A4D8               	btfss	status,2,c
  8820   001AB0  EF5C  F00D         	goto	u5111
  8821   001AB4  EF5E  F00D         	goto	u5110
  8822   001AB8                     u5111:
  8823   001AB8  EF66  F00D         	goto	l6640
  8824   001ABC                     u5110:
  8825   001ABC  0E00               	movlw	0
  8826   001ABE  6E33               	movwf	___fladd@b^0,c
  8827   001AC0  0E00               	movlw	0
  8828   001AC2  6E34               	movwf	(___fladd@b+1)^0,c
  8829   001AC4  0E00               	movlw	0
  8830   001AC6  6E35               	movwf	(___fladd@b+2)^0,c
  8831   001AC8  0E00               	movlw	0
  8832   001ACA  6E36               	movwf	(___fladd@b+3)^0,c
  8833   001ACC                     l6640:
  8834   001ACC  8E35               	bsf	(___fladd@b+2)^0,7,c
  8835   001ACE  0E00               	movlw	0
  8836   001AD0  6E36               	movwf	(___fladd@b+3)^0,c
  8837   001AD2  EF73  F00D         	goto	l6646
  8838   001AD6                     l6644:
  8839   001AD6  0E00               	movlw	0
  8840   001AD8  6E33               	movwf	___fladd@b^0,c
  8841   001ADA  0E00               	movlw	0
  8842   001ADC  6E34               	movwf	(___fladd@b+1)^0,c
  8843   001ADE  0E00               	movlw	0
  8844   001AE0  6E35               	movwf	(___fladd@b+2)^0,c
  8845   001AE2  0E00               	movlw	0
  8846   001AE4  6E36               	movwf	(___fladd@b+3)^0,c
  8847   001AE6                     l6646:
  8848   001AE6  503A               	movf	(___fladd@a+3)^0,w,c
  8849   001AE8  0B80               	andlw	128
  8850   001AEA  6E40               	movwf	___fladd@aexp^0,c
  8851   001AEC  503F               	movf	___fladd@signs^0,w,c
  8852   001AEE  1840               	xorwf	___fladd@aexp^0,w,c
  8853   001AF0  B4D8               	btfsc	status,2,c
  8854   001AF2  EF7D  F00D         	goto	u5121
  8855   001AF6  EF7F  F00D         	goto	u5120
  8856   001AFA                     u5121:
  8857   001AFA  EF80  F00D         	goto	l6652
  8858   001AFE                     u5120:
  8859   001AFE  8C3F               	bsf	___fladd@signs^0,6,c
  8860   001B00                     l6652:
  8861   001B00  503A               	movf	(___fladd@a+3)^0,w,c
  8862   001B02  243A               	addwf	(___fladd@a+3)^0,w,c
  8863   001B04  6E40               	movwf	___fladd@aexp^0,c
  8864   001B06  AE39               	btfss	(___fladd@a+2)^0,7,c
  8865   001B08  EF88  F00D         	goto	u5131
  8866   001B0C  EF8A  F00D         	goto	u5130
  8867   001B10                     u5131:
  8868   001B10  EF8B  F00D         	goto	l6658
  8869   001B14                     u5130:
  8870   001B14  8040               	bsf	___fladd@aexp^0,0,c
  8871   001B16                     l6658:
  8872   001B16  5040               	movf	___fladd@aexp^0,w,c
  8873   001B18  B4D8               	btfsc	status,2,c
  8874   001B1A  EF91  F00D         	goto	u5141
  8875   001B1E  EF93  F00D         	goto	u5140
  8876   001B22                     u5141:
  8877   001B22  EFA8  F00D         	goto	l6668
  8878   001B26                     u5140:
  8879   001B26  2840               	incf	___fladd@aexp^0,w,c
  8880   001B28  A4D8               	btfss	status,2,c
  8881   001B2A  EF99  F00D         	goto	u5151
  8882   001B2E  EF9B  F00D         	goto	u5150
  8883   001B32                     u5151:
  8884   001B32  EFA3  F00D         	goto	l6664
  8885   001B36                     u5150:
  8886   001B36  0E00               	movlw	0
  8887   001B38  6E37               	movwf	___fladd@a^0,c
  8888   001B3A  0E00               	movlw	0
  8889   001B3C  6E38               	movwf	(___fladd@a+1)^0,c
  8890   001B3E  0E00               	movlw	0
  8891   001B40  6E39               	movwf	(___fladd@a+2)^0,c
  8892   001B42  0E00               	movlw	0
  8893   001B44  6E3A               	movwf	(___fladd@a+3)^0,c
  8894   001B46                     l6664:
  8895   001B46  8E39               	bsf	(___fladd@a+2)^0,7,c
  8896   001B48  0E00               	movlw	0
  8897   001B4A  6E3A               	movwf	(___fladd@a+3)^0,c
  8898   001B4C  EFB0  F00D         	goto	l6670
  8899   001B50                     l6668:
  8900   001B50  0E00               	movlw	0
  8901   001B52  6E37               	movwf	___fladd@a^0,c
  8902   001B54  0E00               	movlw	0
  8903   001B56  6E38               	movwf	(___fladd@a+1)^0,c
  8904   001B58  0E00               	movlw	0
  8905   001B5A  6E39               	movwf	(___fladd@a+2)^0,c
  8906   001B5C  0E00               	movlw	0
  8907   001B5E  6E3A               	movwf	(___fladd@a+3)^0,c
  8908   001B60                     l6670:
  8909   001B60  5041               	movf	___fladd@bexp^0,w,c
  8910   001B62  5C40               	subwf	___fladd@aexp^0,w,c
  8911   001B64  B0D8               	btfsc	status,0,c
  8912   001B66  EFB7  F00D         	goto	u5161
  8913   001B6A  EFB9  F00D         	goto	u5160
  8914   001B6E                     u5161:
  8915   001B6E  EFE0  F00D         	goto	l6706
  8916   001B72                     u5160:
  8917   001B72  AC3F               	btfss	___fladd@signs^0,6,c
  8918   001B74  EFBE  F00D         	goto	u5171
  8919   001B78  EFC0  F00D         	goto	u5170
  8920   001B7C                     u5171:
  8921   001B7C  EFC2  F00D         	goto	l6676
  8922   001B80                     u5170:
  8923   001B80  0E80               	movlw	128
  8924   001B82  1A3F               	xorwf	___fladd@signs^0,f,c
  8925   001B84                     l6676:
  8926   001B84  C041  F042         	movff	___fladd@bexp,___fladd@grs
  8927   001B88  C040  F041         	movff	___fladd@aexp,___fladd@bexp
  8928   001B8C  C042  F040         	movff	___fladd@grs,___fladd@aexp
  8929   001B90  C033  F042         	movff	___fladd@b,___fladd@grs
  8930   001B94  C037  F033         	movff	___fladd@a,___fladd@b
  8931   001B98  C042  F037         	movff	___fladd@grs,___fladd@a
  8932   001B9C  C034  F042         	movff	___fladd@b+1,___fladd@grs
  8933   001BA0  C038  F034         	movff	___fladd@a+1,___fladd@b+1
  8934   001BA4  C042  F038         	movff	___fladd@grs,___fladd@a+1
  8935   001BA8  C035  F042         	movff	___fladd@b+2,___fladd@grs
  8936   001BAC  C039  F035         	movff	___fladd@a+2,___fladd@b+2
  8937   001BB0  C042  F039         	movff	___fladd@grs,___fladd@a+2
  8938   001BB4  C036  F042         	movff	___fladd@b+3,___fladd@grs
  8939   001BB8  C03A  F036         	movff	___fladd@a+3,___fladd@b+3
  8940   001BBC  C042  F03A         	movff	___fladd@grs,___fladd@a+3
  8941   001BC0                     l6706:
  8942   001BC0  0E00               	movlw	0
  8943   001BC2  6E42               	movwf	___fladd@grs^0,c
  8944   001BC4  5041               	movf	___fladd@bexp^0,w,c
  8945   001BC6  C040  F03B         	movff	___fladd@aexp,??___fladd
  8946   001BCA  6A3C               	clrf	(??___fladd+1)^0,c
  8947   001BCC  5E3B               	subwf	??___fladd^0,f,c
  8948   001BCE  0E00               	movlw	0
  8949   001BD0  5A3C               	subwfb	(??___fladd+1)^0,f,c
  8950   001BD2  BE3C               	btfsc	(??___fladd+1)^0,7,c
  8951   001BD4  EFF5  F00D         	goto	u5181
  8952   001BD8  503C               	movf	(??___fladd+1)^0,w,c
  8953   001BDA  E109               	bnz	u5180
  8954   001BDC  0E1A               	movlw	26
  8955   001BDE  5C3B               	subwf	??___fladd^0,w,c
  8956   001BE0  A0D8               	btfss	status,0,c
  8957   001BE2  EFF5  F00D         	goto	u5181
  8958   001BE6  EFF7  F00D         	goto	u5180
  8959   001BEA                     u5181:
  8960   001BEA  EF2E  F00E         	goto	l2357
  8961   001BEE                     u5180:
  8962   001BEE  5033               	movf	___fladd@b^0,w,c
  8963   001BF0  1034               	iorwf	(___fladd@b+1)^0,w,c
  8964   001BF2  1035               	iorwf	(___fladd@b+2)^0,w,c
  8965   001BF4  1036               	iorwf	(___fladd@b+3)^0,w,c
  8966   001BF6  A4D8               	btfss	status,2,c
  8967   001BF8  EF00  F00E         	goto	u5191
  8968   001BFC  EF03  F00E         	goto	u5190
  8969   001C00                     u5191:
  8970   001C00  0E01               	movlw	1
  8971   001C02  EF04  F00E         	goto	u5200
  8972   001C06                     u5190:
  8973   001C06  0E00               	movlw	0
  8974   001C08                     u5200:
  8975   001C08  6E42               	movwf	___fladd@grs^0,c
  8976   001C0A  0E00               	movlw	0
  8977   001C0C  6E33               	movwf	___fladd@b^0,c
  8978   001C0E  0E00               	movlw	0
  8979   001C10  6E34               	movwf	(___fladd@b+1)^0,c
  8980   001C12  0E00               	movlw	0
  8981   001C14  6E35               	movwf	(___fladd@b+2)^0,c
  8982   001C16  0E00               	movlw	0
  8983   001C18  6E36               	movwf	(___fladd@b+3)^0,c
  8984   001C1A  C040  F041         	movff	___fladd@aexp,___fladd@bexp
  8985   001C1E  EF37  F00E         	goto	l2356
  8986   001C22                     l2358:
  8987   001C22  A042               	btfss	___fladd@grs^0,0,c
  8988   001C24  EF16  F00E         	goto	u5211
  8989   001C28  EF18  F00E         	goto	u5210
  8990   001C2C                     u5211:
  8991   001C2C  EF1E  F00E         	goto	l6718
  8992   001C30                     u5210:
  8993   001C30  90D8               	bcf	status,0,c
  8994   001C32  3042               	rrcf	___fladd@grs^0,w,c
  8995   001C34  0901               	iorlw	1
  8996   001C36  6E42               	movwf	___fladd@grs^0,c
  8997   001C38  EF20  F00E         	goto	l6720
  8998   001C3C                     l6718:
  8999   001C3C  90D8               	bcf	status,0,c
  9000   001C3E  3242               	rrcf	___fladd@grs^0,f,c
  9001   001C40                     l6720:
  9002   001C40  A033               	btfss	___fladd@b^0,0,c
  9003   001C42  EF25  F00E         	goto	u5221
  9004   001C46  EF27  F00E         	goto	u5220
  9005   001C4A                     u5221:
  9006   001C4A  EF28  F00E         	goto	l6724
  9007   001C4E                     u5220:
  9008   001C4E  8E42               	bsf	___fladd@grs^0,7,c
  9009   001C50                     l6724:
  9010   001C50  3436               	rlcf	(___fladd@b+3)^0,w,c
  9011   001C52  3236               	rrcf	(___fladd@b+3)^0,f,c
  9012   001C54  3235               	rrcf	(___fladd@b+2)^0,f,c
  9013   001C56  3234               	rrcf	(___fladd@b+1)^0,f,c
  9014   001C58  3233               	rrcf	___fladd@b^0,f,c
  9015   001C5A  2A41               	incf	___fladd@bexp^0,f,c
  9016   001C5C                     l2357:
  9017   001C5C  5040               	movf	___fladd@aexp^0,w,c
  9018   001C5E  5C41               	subwf	___fladd@bexp^0,w,c
  9019   001C60  A0D8               	btfss	status,0,c
  9020   001C62  EF35  F00E         	goto	u5231
  9021   001C66  EF37  F00E         	goto	u5230
  9022   001C6A                     u5231:
  9023   001C6A  EF11  F00E         	goto	l2358
  9024   001C6E                     u5230:
  9025   001C6E                     l2356:
  9026   001C6E  BC3F               	btfsc	___fladd@signs^0,6,c
  9027   001C70  EF3C  F00E         	goto	u5241
  9028   001C74  EF3E  F00E         	goto	u5240
  9029   001C78                     u5241:
  9030   001C78  EF7E  F00E         	goto	l6752
  9031   001C7C                     u5240:
  9032   001C7C  5041               	movf	___fladd@bexp^0,w,c
  9033   001C7E  A4D8               	btfss	status,2,c
  9034   001C80  EF44  F00E         	goto	u5251
  9035   001C84  EF46  F00E         	goto	u5250
  9036   001C88                     u5251:
  9037   001C88  EF50  F00E         	goto	l6734
  9038   001C8C                     u5250:
  9039   001C8C  0E00               	movlw	0
  9040   001C8E  6E33               	movwf	?___fladd^0,c
  9041   001C90  0E00               	movlw	0
  9042   001C92  6E34               	movwf	(?___fladd+1)^0,c
  9043   001C94  0E00               	movlw	0
  9044   001C96  6E35               	movwf	(?___fladd+2)^0,c
  9045   001C98  0E00               	movlw	0
  9046   001C9A  6E36               	movwf	(?___fladd+3)^0,c
  9047   001C9C  EF9F  F00F         	goto	l2365
  9048   001CA0                     l6734:
  9049   001CA0  5037               	movf	___fladd@a^0,w,c
  9050   001CA2  2633               	addwf	___fladd@b^0,f,c
  9051   001CA4  5038               	movf	(___fladd@a+1)^0,w,c
  9052   001CA6  2234               	addwfc	(___fladd@b+1)^0,f,c
  9053   001CA8  5039               	movf	(___fladd@a+2)^0,w,c
  9054   001CAA  2235               	addwfc	(___fladd@b+2)^0,f,c
  9055   001CAC  503A               	movf	(___fladd@a+3)^0,w,c
  9056   001CAE  2236               	addwfc	(___fladd@b+3)^0,f,c
  9057   001CB0  A036               	btfss	(___fladd@b+3)^0,0,c
  9058   001CB2  EF5D  F00E         	goto	u5261
  9059   001CB6  EF5F  F00E         	goto	u5260
  9060   001CBA                     u5261:
  9061   001CBA  EF0B  F00F         	goto	l6788
  9062   001CBE                     u5260:
  9063   001CBE  A042               	btfss	___fladd@grs^0,0,c
  9064   001CC0  EF64  F00E         	goto	u5271
  9065   001CC4  EF66  F00E         	goto	u5270
  9066   001CC8                     u5271:
  9067   001CC8  EF6C  F00E         	goto	l6742
  9068   001CCC                     u5270:
  9069   001CCC  90D8               	bcf	status,0,c
  9070   001CCE  3042               	rrcf	___fladd@grs^0,w,c
  9071   001CD0  0901               	iorlw	1
  9072   001CD2  6E42               	movwf	___fladd@grs^0,c
  9073   001CD4  EF6E  F00E         	goto	l6744
  9074   001CD8                     l6742:
  9075   001CD8  90D8               	bcf	status,0,c
  9076   001CDA  3242               	rrcf	___fladd@grs^0,f,c
  9077   001CDC                     l6744:
  9078   001CDC  A033               	btfss	___fladd@b^0,0,c
  9079   001CDE  EF73  F00E         	goto	u5281
  9080   001CE2  EF75  F00E         	goto	u5280
  9081   001CE6                     u5281:
  9082   001CE6  EF76  F00E         	goto	l6748
  9083   001CEA                     u5280:
  9084   001CEA  8E42               	bsf	___fladd@grs^0,7,c
  9085   001CEC                     l6748:
  9086   001CEC  3436               	rlcf	(___fladd@b+3)^0,w,c
  9087   001CEE  3236               	rrcf	(___fladd@b+3)^0,f,c
  9088   001CF0  3235               	rrcf	(___fladd@b+2)^0,f,c
  9089   001CF2  3234               	rrcf	(___fladd@b+1)^0,f,c
  9090   001CF4  3233               	rrcf	___fladd@b^0,f,c
  9091   001CF6  2A41               	incf	___fladd@bexp^0,f,c
  9092   001CF8  EF0B  F00F         	goto	l6788
  9093   001CFC                     l6752:
  9094   001CFC  5037               	movf	___fladd@a^0,w,c
  9095   001CFE  5C33               	subwf	___fladd@b^0,w,c
  9096   001D00  5038               	movf	(___fladd@a+1)^0,w,c
  9097   001D02  5834               	subwfb	(___fladd@b+1)^0,w,c
  9098   001D04  5039               	movf	(___fladd@a+2)^0,w,c
  9099   001D06  5835               	subwfb	(___fladd@b+2)^0,w,c
  9100   001D08  5036               	movf	(___fladd@b+3)^0,w,c
  9101   001D0A  0A80               	xorlw	128
  9102   001D0C  6E3B               	movwf	??___fladd^0,c
  9103   001D0E  503A               	movf	(___fladd@a+3)^0,w,c
  9104   001D10  0A80               	xorlw	128
  9105   001D12  583B               	subwfb	??___fladd^0,w,c
  9106   001D14  B0D8               	btfsc	status,0,c
  9107   001D16  EF8F  F00E         	goto	u5291
  9108   001D1A  EF91  F00E         	goto	u5290
  9109   001D1E                     u5291:
  9110   001D1E  EFBC  F00E         	goto	l6762
  9111   001D22                     u5290:
  9112   001D22  5033               	movf	___fladd@b^0,w,c
  9113   001D24  5C37               	subwf	___fladd@a^0,w,c
  9114   001D26  6E3B               	movwf	??___fladd^0,c
  9115   001D28  5034               	movf	(___fladd@b+1)^0,w,c
  9116   001D2A  5838               	subwfb	(___fladd@a+1)^0,w,c
  9117   001D2C  6E3C               	movwf	(??___fladd+1)^0,c
  9118   001D2E  5035               	movf	(___fladd@b+2)^0,w,c
  9119   001D30  5839               	subwfb	(___fladd@a+2)^0,w,c
  9120   001D32  6E3D               	movwf	(??___fladd+2)^0,c
  9121   001D34  5036               	movf	(___fladd@b+3)^0,w,c
  9122   001D36  583A               	subwfb	(___fladd@a+3)^0,w,c
  9123   001D38  6E3E               	movwf	(??___fladd+3)^0,c
  9124   001D3A  0EFF               	movlw	255
  9125   001D3C  243B               	addwf	??___fladd^0,w,c
  9126   001D3E  6E33               	movwf	___fladd@b^0,c
  9127   001D40  0EFF               	movlw	255
  9128   001D42  203C               	addwfc	(??___fladd+1)^0,w,c
  9129   001D44  6E34               	movwf	(___fladd@b+1)^0,c
  9130   001D46  0EFF               	movlw	255
  9131   001D48  203D               	addwfc	(??___fladd+2)^0,w,c
  9132   001D4A  6E35               	movwf	(___fladd@b+2)^0,c
  9133   001D4C  0EFF               	movlw	255
  9134   001D4E  203E               	addwfc	(??___fladd+3)^0,w,c
  9135   001D50  6E36               	movwf	(___fladd@b+3)^0,c
  9136   001D52  0E80               	movlw	128
  9137   001D54  1A3F               	xorwf	___fladd@signs^0,f,c
  9138   001D56  6C42               	negf	___fladd@grs^0,c
  9139   001D58  5042               	movf	___fladd@grs^0,w,c
  9140   001D5A  A4D8               	btfss	status,2,c
  9141   001D5C  EFB2  F00E         	goto	u5301
  9142   001D60  EFB4  F00E         	goto	u5300
  9143   001D64                     u5301:
  9144   001D64  EFC4  F00E         	goto	l2373
  9145   001D68                     u5300:
  9146   001D68  0E01               	movlw	1
  9147   001D6A  2633               	addwf	___fladd@b^0,f,c
  9148   001D6C  0E00               	movlw	0
  9149   001D6E  2234               	addwfc	(___fladd@b+1)^0,f,c
  9150   001D70  2235               	addwfc	(___fladd@b+2)^0,f,c
  9151   001D72  2236               	addwfc	(___fladd@b+3)^0,f,c
  9152   001D74  EFC4  F00E         	goto	l2373
  9153   001D78                     l6762:
  9154   001D78  5037               	movf	___fladd@a^0,w,c
  9155   001D7A  5E33               	subwf	___fladd@b^0,f,c
  9156   001D7C  5038               	movf	(___fladd@a+1)^0,w,c
  9157   001D7E  5A34               	subwfb	(___fladd@b+1)^0,f,c
  9158   001D80  5039               	movf	(___fladd@a+2)^0,w,c
  9159   001D82  5A35               	subwfb	(___fladd@b+2)^0,f,c
  9160   001D84  503A               	movf	(___fladd@a+3)^0,w,c
  9161   001D86  5A36               	subwfb	(___fladd@b+3)^0,f,c
  9162   001D88                     l2373:
  9163   001D88  5033               	movf	___fladd@b^0,w,c
  9164   001D8A  1034               	iorwf	(___fladd@b+1)^0,w,c
  9165   001D8C  1035               	iorwf	(___fladd@b+2)^0,w,c
  9166   001D8E  1036               	iorwf	(___fladd@b+3)^0,w,c
  9167   001D90  A4D8               	btfss	status,2,c
  9168   001D92  EFCD  F00E         	goto	u5311
  9169   001D96  EFCF  F00E         	goto	u5310
  9170   001D9A                     u5311:
  9171   001D9A  EF04  F00F         	goto	l6786
  9172   001D9E                     u5310:
  9173   001D9E  5042               	movf	___fladd@grs^0,w,c
  9174   001DA0  A4D8               	btfss	status,2,c
  9175   001DA2  EFD5  F00E         	goto	u5321
  9176   001DA6  EFD7  F00E         	goto	u5320
  9177   001DAA                     u5321:
  9178   001DAA  EF04  F00F         	goto	l6786
  9179   001DAE                     u5320:
  9180   001DAE  0E00               	movlw	0
  9181   001DB0  6E33               	movwf	?___fladd^0,c
  9182   001DB2  0E00               	movlw	0
  9183   001DB4  6E34               	movwf	(?___fladd+1)^0,c
  9184   001DB6  0E00               	movlw	0
  9185   001DB8  6E35               	movwf	(?___fladd+2)^0,c
  9186   001DBA  0E00               	movlw	0
  9187   001DBC  6E36               	movwf	(?___fladd+3)^0,c
  9188   001DBE  EF9F  F00F         	goto	l2365
  9189   001DC2                     l6770:
  9190   001DC2  90D8               	bcf	status,0,c
  9191   001DC4  3633               	rlcf	___fladd@b^0,f,c
  9192   001DC6  3634               	rlcf	(___fladd@b+1)^0,f,c
  9193   001DC8  3635               	rlcf	(___fladd@b+2)^0,f,c
  9194   001DCA  3636               	rlcf	(___fladd@b+3)^0,f,c
  9195   001DCC  AE42               	btfss	___fladd@grs^0,7,c
  9196   001DCE  EFEB  F00E         	goto	u5331
  9197   001DD2  EFED  F00E         	goto	u5330
  9198   001DD6                     u5331:
  9199   001DD6  EFEE  F00E         	goto	l6776
  9200   001DDA                     u5330:
  9201   001DDA  8033               	bsf	___fladd@b^0,0,c
  9202   001DDC                     l6776:
  9203   001DDC  A042               	btfss	___fladd@grs^0,0,c
  9204   001DDE  EFF3  F00E         	goto	u5341
  9205   001DE2  EFF5  F00E         	goto	u5340
  9206   001DE6                     u5341:
  9207   001DE6  EFF9  F00E         	goto	l6780
  9208   001DEA                     u5340:
  9209   001DEA  80D8               	bsf	status,0,c
  9210   001DEC  3642               	rlcf	___fladd@grs^0,f,c
  9211   001DEE  EFFB  F00E         	goto	l6782
  9212   001DF2                     l6780:
  9213   001DF2  90D8               	bcf	status,0,c
  9214   001DF4  3642               	rlcf	___fladd@grs^0,f,c
  9215   001DF6                     l6782:
  9216   001DF6  5041               	movf	___fladd@bexp^0,w,c
  9217   001DF8  B4D8               	btfsc	status,2,c
  9218   001DFA  EF01  F00F         	goto	u5351
  9219   001DFE  EF03  F00F         	goto	u5350
  9220   001E02                     u5351:
  9221   001E02  EF04  F00F         	goto	l6786
  9222   001E06                     u5350:
  9223   001E06  0641               	decf	___fladd@bexp^0,f,c
  9224   001E08                     l6786:
  9225   001E08  AE35               	btfss	(___fladd@b+2)^0,7,c
  9226   001E0A  EF09  F00F         	goto	u5361
  9227   001E0E  EF0B  F00F         	goto	u5360
  9228   001E12                     u5361:
  9229   001E12  EFE1  F00E         	goto	l6770
  9230   001E16                     u5360:
  9231   001E16                     l6788:
  9232   001E16  0E00               	movlw	0
  9233   001E18  6E40               	movwf	___fladd@aexp^0,c
  9234   001E1A  AE42               	btfss	___fladd@grs^0,7,c
  9235   001E1C  EF12  F00F         	goto	u5371
  9236   001E20  EF14  F00F         	goto	u5370
  9237   001E24                     u5371:
  9238   001E24  EF2C  F00F         	goto	l2382
  9239   001E28                     u5370:
  9240   001E28  C042  F03B         	movff	___fladd@grs,??___fladd
  9241   001E2C  0E7F               	movlw	127
  9242   001E2E  163B               	andwf	??___fladd^0,f,c
  9243   001E30  B4D8               	btfsc	status,2,c
  9244   001E32  EF1D  F00F         	goto	u5381
  9245   001E36  EF1F  F00F         	goto	u5380
  9246   001E3A                     u5381:
  9247   001E3A  EF23  F00F         	goto	l2383
  9248   001E3E                     u5380:
  9249   001E3E                     l6794:
  9250   001E3E  0E01               	movlw	1
  9251   001E40  6E40               	movwf	___fladd@aexp^0,c
  9252   001E42  EF2C  F00F         	goto	l2382
  9253   001E46                     l2383:
  9254   001E46  A033               	btfss	___fladd@b^0,0,c
  9255   001E48  EF28  F00F         	goto	u5391
  9256   001E4C  EF2A  F00F         	goto	u5390
  9257   001E50                     u5391:
  9258   001E50  EF2C  F00F         	goto	l2382
  9259   001E54                     u5390:
  9260   001E54  EF1F  F00F         	goto	l6794
  9261   001E58                     l2382:
  9262   001E58  5040               	movf	___fladd@aexp^0,w,c
  9263   001E5A  B4D8               	btfsc	status,2,c
  9264   001E5C  EF32  F00F         	goto	u5401
  9265   001E60  EF34  F00F         	goto	u5400
  9266   001E64                     u5401:
  9267   001E64  EF5F  F00F         	goto	l6806
  9268   001E68                     u5400:
  9269   001E68  0E01               	movlw	1
  9270   001E6A  2633               	addwf	___fladd@b^0,f,c
  9271   001E6C  0E00               	movlw	0
  9272   001E6E  2234               	addwfc	(___fladd@b+1)^0,f,c
  9273   001E70  2235               	addwfc	(___fladd@b+2)^0,f,c
  9274   001E72  2236               	addwfc	(___fladd@b+3)^0,f,c
  9275   001E74  A036               	btfss	(___fladd@b+3)^0,0,c
  9276   001E76  EF3F  F00F         	goto	u5411
  9277   001E7A  EF41  F00F         	goto	u5410
  9278   001E7E                     u5411:
  9279   001E7E  EF5F  F00F         	goto	l6806
  9280   001E82                     u5410:
  9281   001E82  C033  F03B         	movff	___fladd@b,??___fladd
  9282   001E86  C034  F03C         	movff	___fladd@b+1,??___fladd+1
  9283   001E8A  C035  F03D         	movff	___fladd@b+2,??___fladd+2
  9284   001E8E  C036  F03E         	movff	___fladd@b+3,??___fladd+3
  9285   001E92  343E               	rlcf	(??___fladd+3)^0,w,c
  9286   001E94  323E               	rrcf	(??___fladd+3)^0,f,c
  9287   001E96  323D               	rrcf	(??___fladd+2)^0,f,c
  9288   001E98  323C               	rrcf	(??___fladd+1)^0,f,c
  9289   001E9A  323B               	rrcf	??___fladd^0,f,c
  9290   001E9C  C03B  F033         	movff	??___fladd,___fladd@b
  9291   001EA0  C03C  F034         	movff	??___fladd+1,___fladd@b+1
  9292   001EA4  C03D  F035         	movff	??___fladd+2,___fladd@b+2
  9293   001EA8  C03E  F036         	movff	??___fladd+3,___fladd@b+3
  9294   001EAC  2841               	incf	___fladd@bexp^0,w,c
  9295   001EAE  B4D8               	btfsc	status,2,c
  9296   001EB0  EF5C  F00F         	goto	u5421
  9297   001EB4  EF5E  F00F         	goto	u5420
  9298   001EB8                     u5421:
  9299   001EB8  EF5F  F00F         	goto	l6806
  9300   001EBC                     u5420:
  9301   001EBC  2A41               	incf	___fladd@bexp^0,f,c
  9302   001EBE                     l6806:
  9303   001EBE  2841               	incf	___fladd@bexp^0,w,c
  9304   001EC0  B4D8               	btfsc	status,2,c
  9305   001EC2  EF65  F00F         	goto	u5431
  9306   001EC6  EF67  F00F         	goto	u5430
  9307   001ECA                     u5431:
  9308   001ECA  EF6F  F00F         	goto	l6810
  9309   001ECE                     u5430:
  9310   001ECE  5041               	movf	___fladd@bexp^0,w,c
  9311   001ED0  A4D8               	btfss	status,2,c
  9312   001ED2  EF6D  F00F         	goto	u5441
  9313   001ED6  EF6F  F00F         	goto	u5440
  9314   001EDA                     u5441:
  9315   001EDA  EF81  F00F         	goto	l6814
  9316   001EDE                     u5440:
  9317   001EDE                     l6810:
  9318   001EDE  0E00               	movlw	0
  9319   001EE0  6E33               	movwf	___fladd@b^0,c
  9320   001EE2  0E00               	movlw	0
  9321   001EE4  6E34               	movwf	(___fladd@b+1)^0,c
  9322   001EE6  0E00               	movlw	0
  9323   001EE8  6E35               	movwf	(___fladd@b+2)^0,c
  9324   001EEA  0E00               	movlw	0
  9325   001EEC  6E36               	movwf	(___fladd@b+3)^0,c
  9326   001EEE  5041               	movf	___fladd@bexp^0,w,c
  9327   001EF0  A4D8               	btfss	status,2,c
  9328   001EF2  EF7D  F00F         	goto	u5451
  9329   001EF6  EF7F  F00F         	goto	u5450
  9330   001EFA                     u5451:
  9331   001EFA  EF81  F00F         	goto	l6814
  9332   001EFE                     u5450:
  9333   001EFE  0E00               	movlw	0
  9334   001F00  6E3F               	movwf	___fladd@signs^0,c
  9335   001F02                     l6814:
  9336   001F02  A041               	btfss	___fladd@bexp^0,0,c
  9337   001F04  EF86  F00F         	goto	u5461
  9338   001F08  EF88  F00F         	goto	u5460
  9339   001F0C                     u5461:
  9340   001F0C  EF8B  F00F         	goto	l6818
  9341   001F10                     u5460:
  9342   001F10  8E35               	bsf	(___fladd@b+2)^0,7,c
  9343   001F12  EF8C  F00F         	goto	l6820
  9344   001F16                     l6818:
  9345   001F16  9E35               	bcf	(___fladd@b+2)^0,7,c
  9346   001F18                     l6820:
  9347   001F18  90D8               	bcf	status,0,c
  9348   001F1A  3041               	rrcf	___fladd@bexp^0,w,c
  9349   001F1C  6E36               	movwf	(___fladd@b+3)^0,c
  9350   001F1E  AE3F               	btfss	___fladd@signs^0,7,c
  9351   001F20  EF94  F00F         	goto	u5471
  9352   001F24  EF96  F00F         	goto	u5470
  9353   001F28                     u5471:
  9354   001F28  EF97  F00F         	goto	l6826
  9355   001F2C                     u5470:
  9356   001F2C  8E36               	bsf	(___fladd@b+3)^0,7,c
  9357   001F2E                     l6826:
  9358   001F2E  C033  F033         	movff	___fladd@b,?___fladd
  9359   001F32  C034  F034         	movff	___fladd@b+1,?___fladd+1
  9360   001F36  C035  F035         	movff	___fladd@b+2,?___fladd+2
  9361   001F3A  C036  F036         	movff	___fladd@b+3,?___fladd+3
  9362   001F3E                     l2365:
  9363   001F3E  0012               	return		;funcret
  9364   001F40                     __end_of___fladd:
  9365                           	callstack 0
  9366                           
  9367 ;; *************** function _MSSP_I2C_MODE_GPIO_CFG *****************
  9368 ;; Defined at:
  9369 ;;		line 222 in file "MCAL_Layer/I2C/hal_i2c.c"
  9370 ;; Parameters:    Size  Location     Type
  9371 ;;		None
  9372 ;; Auto vars:     Size  Location     Type
  9373 ;;		None
  9374 ;; Return value:  Size  Location     Type
  9375 ;;                  1    wreg      void 
  9376 ;; Registers used:
  9377 ;;		None
  9378 ;; Tracked objects:
  9379 ;;		On entry : 0/0
  9380 ;;		On exit  : 0/0
  9381 ;;		Unchanged: 0/0
  9382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9387 ;;Total ram usage:        0 bytes
  9388 ;; Hardware stack levels used: 1
  9389 ;; Hardware stack levels required when called: 4
  9390 ;; This function calls:
  9391 ;;		Nothing
  9392 ;; This function is called by:
  9393 ;;		_MSSP_I2C_Init
  9394 ;; This function uses a non-reentrant model
  9395 ;;
  9396                           
  9397                           	psect	text45
  9398   004A3A                     __ptext45:
  9399                           	callstack 0
  9400   004A3A                     _MSSP_I2C_MODE_GPIO_CFG:
  9401                           	callstack 24
  9402   004A3A                     
  9403                           ;MCAL_Layer/I2C/hal_i2c.c: 223:     TRISCbits.TRISC3=1;
  9404   004A3A  8694               	bsf	148,3,c	;volatile
  9405                           
  9406                           ;MCAL_Layer/I2C/hal_i2c.c: 224:     TRISCbits.TRISC4=1;
  9407   004A3C  8894               	bsf	148,4,c	;volatile
  9408   004A3E  0012               	return		;funcret
  9409   004A40                     __end_of_MSSP_I2C_MODE_GPIO_CFG:
  9410                           	callstack 0
  9411                           
  9412 ;; *************** function _MSSP_I2C_Interrupt_Configuration *****************
  9413 ;; Defined at:
  9414 ;;		line 231 in file "MCAL_Layer/I2C/hal_i2c.c"
  9415 ;; Parameters:    Size  Location     Type
  9416 ;;  i2c_obj         2   11[COMRAM] PTR const struct .
  9417 ;;		 -> i2c_obj(13), 
  9418 ;; Auto vars:     Size  Location     Type
  9419 ;;		None
  9420 ;; Return value:  Size  Location     Type
  9421 ;;                  1    wreg      void 
  9422 ;; Registers used:
  9423 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9424 ;; Tracked objects:
  9425 ;;		On entry : 0/0
  9426 ;;		On exit  : 0/0
  9427 ;;		Unchanged: 0/0
  9428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9429 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9432 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9433 ;;Total ram usage:        2 bytes
  9434 ;; Hardware stack levels used: 1
  9435 ;; Hardware stack levels required when called: 4
  9436 ;; This function calls:
  9437 ;;		Nothing
  9438 ;; This function is called by:
  9439 ;;		_MSSP_I2C_Init
  9440 ;; This function uses a non-reentrant model
  9441 ;;
  9442                           
  9443                           	psect	text46
  9444   00458E                     __ptext46:
  9445                           	callstack 0
  9446   00458E                     _MSSP_I2C_Interrupt_Configuration:
  9447                           	callstack 24
  9448   00458E                     
  9449                           ;MCAL_Layer/I2C/hal_i2c.c: 233:     (PIE1bits.SSPIE=1) ;
  9450   00458E  869D               	bsf	157,3,c	;volatile
  9451                           
  9452                           ;MCAL_Layer/I2C/hal_i2c.c: 234:         (PIE2bits.BCLIE=1);
  9453   004590  86A0               	bsf	160,3,c	;volatile
  9454                           
  9455                           ;MCAL_Layer/I2C/hal_i2c.c: 235:         (PIR1bits.SSPIF=0);
  9456   004592  969E               	bcf	158,3,c	;volatile
  9457                           
  9458                           ;MCAL_Layer/I2C/hal_i2c.c: 236:         (PIR2bits.BCLIF=0);
  9459   004594  96A1               	bcf	161,3,c	;volatile
  9460                           
  9461                           ;MCAL_Layer/I2C/hal_i2c.c: 259:         (INTCONbits.GIE=1);
  9462   004596  8EF2               	bsf	242,7,c	;volatile
  9463                           
  9464                           ;MCAL_Layer/I2C/hal_i2c.c: 260:         (INTCONbits.PEIE=1);
  9465   004598  8CF2               	bsf	242,6,c	;volatile
  9466   00459A                     
  9467                           ;MCAL_Layer/I2C/hal_i2c.c: 262:         I2C_Report_Write_Collision_InterruptHandler=i2c_
      +                          obj->I2C_Report_Write_Collision;
  9468   00459A  EE20 F004          	lfsr	2,4
  9469   00459E  500C               	movf	MSSP_I2C_Interrupt_Configuration@i2c_obj^0,w,c
  9470   0045A0  26D9               	addwf	fsr2l,f,c
  9471   0045A2  500D               	movf	(MSSP_I2C_Interrupt_Configuration@i2c_obj+1)^0,w,c
  9472   0045A4  22DA               	addwfc	fsr2h,f,c
  9473   0045A6  CFDE F0BA          	movff	postinc2,_I2C_Report_Write_Collision_InterruptHandler
  9474   0045AA  CFDD F0BB          	movff	postdec2,_I2C_Report_Write_Collision_InterruptHandler+1
  9475                           
  9476                           ;MCAL_Layer/I2C/hal_i2c.c: 263:         I2C_DefaultInterruptHandler=i2c_obj->I2C_Default
      +                          InterruptHandler;
  9477   0045AE  EE20 F002          	lfsr	2,2
  9478   0045B2  500C               	movf	MSSP_I2C_Interrupt_Configuration@i2c_obj^0,w,c
  9479   0045B4  26D9               	addwf	fsr2l,f,c
  9480   0045B6  500D               	movf	(MSSP_I2C_Interrupt_Configuration@i2c_obj+1)^0,w,c
  9481   0045B8  22DA               	addwfc	fsr2h,f,c
  9482   0045BA  CFDE F0B8          	movff	postinc2,_I2C_DefaultInterruptHandler
  9483   0045BE  CFDD F0B9          	movff	postdec2,_I2C_DefaultInterruptHandler+1
  9484                           
  9485                           ;MCAL_Layer/I2C/hal_i2c.c: 264:         I2C_Report_Receive_Overflow_InterruptHandler=i2c
      +                          _obj->I2C_Report_Receive_Overflow;
  9486   0045C2  EE20 F006          	lfsr	2,6
  9487   0045C6  500C               	movf	MSSP_I2C_Interrupt_Configuration@i2c_obj^0,w,c
  9488   0045C8  26D9               	addwf	fsr2l,f,c
  9489   0045CA  500D               	movf	(MSSP_I2C_Interrupt_Configuration@i2c_obj+1)^0,w,c
  9490   0045CC  22DA               	addwfc	fsr2h,f,c
  9491   0045CE  CFDE F0B6          	movff	postinc2,_I2C_Report_Receive_Overflow_InterruptHandler
  9492   0045D2  CFDD F0B7          	movff	postdec2,_I2C_Report_Receive_Overflow_InterruptHandler+1
  9493   0045D6  0012               	return		;funcret
  9494   0045D8                     __end_of_MSSP_I2C_Interrupt_Configuration:
  9495                           	callstack 0
  9496                           
  9497 ;; *************** function _ADC_GetConversion_Blocking *****************
  9498 ;; Defined at:
  9499 ;;		line 207 in file "MCAL_Layer/ADC/hal_adc.c"
  9500 ;; Parameters:    Size  Location     Type
  9501 ;;  _adc            2   18[COMRAM] PTR const struct .
  9502 ;;		 -> adc_1(7), 
  9503 ;;  channel         1   20[COMRAM] enum E3032
  9504 ;;  conversion_r    2   21[COMRAM] PTR unsigned short 
  9505 ;;		 -> adc_lm35_1(2), 
  9506 ;; Auto vars:     Size  Location     Type
  9507 ;;  ret             1   23[COMRAM] unsigned char 
  9508 ;; Return value:  Size  Location     Type
  9509 ;;                  1    wreg      unsigned char 
  9510 ;; Registers used:
  9511 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9512 ;; Tracked objects:
  9513 ;;		On entry : 0/0
  9514 ;;		On exit  : 0/0
  9515 ;;		Unchanged: 0/0
  9516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9517 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9518 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9520 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9521 ;;Total ram usage:        6 bytes
  9522 ;; Hardware stack levels used: 1
  9523 ;; Hardware stack levels required when called: 6
  9524 ;; This function calls:
  9525 ;;		_ADC_GetConversionResult
  9526 ;;		_ADC_SelectChannel
  9527 ;;		_ADC_StartConversion
  9528 ;; This function is called by:
  9529 ;;		_main
  9530 ;; This function uses a non-reentrant model
  9531 ;;
  9532                           
  9533                           	psect	text47
  9534   00430C                     __ptext47:
  9535                           	callstack 0
  9536   00430C                     _ADC_GetConversion_Blocking:
  9537                           	callstack 24
  9538   00430C                     
  9539                           ;MCAL_Layer/ADC/hal_adc.c: 210:     if((((void*)0)== _adc) || (((void*)0)==conversion_re
      +                          sult)){
  9540   00430C  5013               	movf	ADC_GetConversion_Blocking@_adc^0,w,c
  9541   00430E  1014               	iorwf	(ADC_GetConversion_Blocking@_adc+1)^0,w,c
  9542   004310  B4D8               	btfsc	status,2,c
  9543   004312  EF8D  F021         	goto	u6901
  9544   004316  EF8F  F021         	goto	u6900
  9545   00431A                     u6901:
  9546   00431A  EF98  F021         	goto	l7970
  9547   00431E                     u6900:
  9548   00431E  5016               	movf	ADC_GetConversion_Blocking@conversion_result^0,w,c
  9549   004320  1017               	iorwf	(ADC_GetConversion_Blocking@conversion_result+1)^0,w,c
  9550   004322  A4D8               	btfss	status,2,c
  9551   004324  EF96  F021         	goto	u6911
  9552   004328  EF98  F021         	goto	u6910
  9553   00432C                     u6911:
  9554   00432C  EF9C  F021         	goto	l7972
  9555   004330                     u6910:
  9556   004330                     l7970:
  9557                           
  9558                           ;MCAL_Layer/ADC/hal_adc.c: 211:         ret=(Std_ReturnType)0x01;
  9559   004330  0E01               	movlw	1
  9560   004332  6E18               	movwf	ADC_GetConversion_Blocking@ret^0,c
  9561                           
  9562                           ;MCAL_Layer/ADC/hal_adc.c: 212:     }
  9563   004334  EFBE  F021         	goto	l7976
  9564   004338                     l7972:
  9565                           
  9566                           ;MCAL_Layer/ADC/hal_adc.c: 215:         ret=ADC_SelectChannel(_adc,channel);
  9567   004338  C013  F00F         	movff	ADC_GetConversion_Blocking@_adc,ADC_SelectChannel@_adc
  9568   00433C  C014  F010         	movff	ADC_GetConversion_Blocking@_adc+1,ADC_SelectChannel@_adc+1
  9569   004340  C015  F011         	movff	ADC_GetConversion_Blocking@channel,ADC_SelectChannel@channel
  9570   004344  EC29  F024         	call	_ADC_SelectChannel	;wreg free
  9571   004348  6E18               	movwf	ADC_GetConversion_Blocking@ret^0,c
  9572                           
  9573                           ;MCAL_Layer/ADC/hal_adc.c: 217:         ret=ADC_StartConversion(_adc);
  9574   00434A  C013  F00C         	movff	ADC_GetConversion_Blocking@_adc,ADC_StartConversion@_adc
  9575   00434E  C014  F00D         	movff	ADC_GetConversion_Blocking@_adc+1,ADC_StartConversion@_adc+1
  9576   004352  ECB5  F024         	call	_ADC_StartConversion	;wreg free
  9577   004356  6E18               	movwf	ADC_GetConversion_Blocking@ret^0,c
  9578   004358                     l553:
  9579   004358  B2C2               	btfsc	194,1,c	;volatile
  9580   00435A  EFB1  F021         	goto	u6921
  9581   00435E  EFB3  F021         	goto	u6920
  9582   004362                     u6921:
  9583   004362  EFAC  F021         	goto	l553
  9584   004366                     u6920:
  9585   004366                     
  9586                           ;MCAL_Layer/ADC/hal_adc.c: 220:         ret=ADC_GetConversionResult(_adc,conversion_resu
      +                          lt);
  9587   004366  C013  F00C         	movff	ADC_GetConversion_Blocking@_adc,ADC_GetConversionResult@_adc
  9588   00436A  C014  F00D         	movff	ADC_GetConversion_Blocking@_adc+1,ADC_GetConversionResult@_adc+1
  9589   00436E  C016  F00E         	movff	ADC_GetConversion_Blocking@conversion_result,ADC_GetConversionResult@conversion_r
      +                          esult
  9590   004372  C017  F00F         	movff	ADC_GetConversion_Blocking@conversion_result+1,ADC_GetConversionResult@conversion
      +                          _result+1
  9591   004376  EC8C  F01D         	call	_ADC_GetConversionResult	;wreg free
  9592   00437A  6E18               	movwf	ADC_GetConversion_Blocking@ret^0,c
  9593   00437C                     l7976:
  9594                           
  9595                           ;MCAL_Layer/ADC/hal_adc.c: 224:     return ret;
  9596   00437C  5018               	movf	ADC_GetConversion_Blocking@ret^0,w,c
  9597   00437E  0012               	return		;funcret
  9598   004380                     __end_of_ADC_GetConversion_Blocking:
  9599                           	callstack 0
  9600                           
  9601 ;; *************** function _ADC_StartConversion *****************
  9602 ;; Defined at:
  9603 ;;		line 131 in file "MCAL_Layer/ADC/hal_adc.c"
  9604 ;; Parameters:    Size  Location     Type
  9605 ;;  _adc            2   11[COMRAM] PTR const struct .
  9606 ;;		 -> adc_1(7), 
  9607 ;; Auto vars:     Size  Location     Type
  9608 ;;  ret             1    0        unsigned char 
  9609 ;; Return value:  Size  Location     Type
  9610 ;;                  1    wreg      unsigned char 
  9611 ;; Registers used:
  9612 ;;		wreg, status,2, status,0
  9613 ;; Tracked objects:
  9614 ;;		On entry : 0/0
  9615 ;;		On exit  : 0/0
  9616 ;;		Unchanged: 0/0
  9617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9618 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9621 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9622 ;;Total ram usage:        2 bytes
  9623 ;; Hardware stack levels used: 1
  9624 ;; Hardware stack levels required when called: 4
  9625 ;; This function calls:
  9626 ;;		Nothing
  9627 ;; This function is called by:
  9628 ;;		_ADC_GetConversion_Blocking
  9629 ;;		_ADC_StartConversion_Interrupt
  9630 ;; This function uses a non-reentrant model
  9631 ;;
  9632                           
  9633                           	psect	text48
  9634   00496A                     __ptext48:
  9635                           	callstack 0
  9636   00496A                     _ADC_StartConversion:
  9637                           	callstack 25
  9638   00496A                     
  9639                           ;MCAL_Layer/ADC/hal_adc.c: 134:     if(((void*)0)== _adc){
  9640   00496A  500C               	movf	ADC_StartConversion@_adc^0,w,c
  9641   00496C  100D               	iorwf	(ADC_StartConversion@_adc+1)^0,w,c
  9642   00496E  A4D8               	btfss	status,2,c
  9643   004970  EFBC  F024         	goto	u6441
  9644   004974  EFBE  F024         	goto	u6440
  9645   004978                     u6441:
  9646   004978  EFC0  F024         	goto	l526
  9647   00497C                     u6440:
  9648   00497C                     l7668:
  9649                           
  9650                           ;MCAL_Layer/ADC/hal_adc.c: 136:     }
  9651   00497C  EFC3  F024         	goto	l527
  9652   004980                     l526:
  9653                           
  9654                           ;MCAL_Layer/ADC/hal_adc.c: 138:         (ADCON0bits.GO_DONE=1);
  9655   004980  82C2               	bsf	194,1,c	;volatile
  9656   004982  EFBE  F024         	goto	l7668
  9657   004986                     l527:
  9658                           
  9659                           ;MCAL_Layer/ADC/hal_adc.c: 142:     return ret;
  9660   004986  0E01               	movlw	1
  9661   004988  0012               	return		;funcret
  9662   00498A                     __end_of_ADC_StartConversion:
  9663                           	callstack 0
  9664                           
  9665 ;; *************** function _ADC_SelectChannel *****************
  9666 ;; Defined at:
  9667 ;;		line 106 in file "MCAL_Layer/ADC/hal_adc.c"
  9668 ;; Parameters:    Size  Location     Type
  9669 ;;  _adc            2   14[COMRAM] PTR const struct .
  9670 ;;		 -> adc_1(7), 
  9671 ;;  channel         1   16[COMRAM] enum E3032
  9672 ;; Auto vars:     Size  Location     Type
  9673 ;;  ret             1    0        unsigned char 
  9674 ;; Return value:  Size  Location     Type
  9675 ;;                  1    wreg      unsigned char 
  9676 ;; Registers used:
  9677 ;;		wreg, status,2, status,0, cstack
  9678 ;; Tracked objects:
  9679 ;;		On entry : 0/0
  9680 ;;		On exit  : 0/0
  9681 ;;		Unchanged: 0/0
  9682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9683 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9685 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9686 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9687 ;;Total ram usage:        4 bytes
  9688 ;; Hardware stack levels used: 1
  9689 ;; Hardware stack levels required when called: 5
  9690 ;; This function calls:
  9691 ;;		_adc_input_channel_port_configure
  9692 ;; This function is called by:
  9693 ;;		_ADC_GetConversion_Blocking
  9694 ;;		_ADC_StartConversion_Interrupt
  9695 ;; This function uses a non-reentrant model
  9696 ;;
  9697                           
  9698                           	psect	text49
  9699   004852                     __ptext49:
  9700                           	callstack 0
  9701   004852                     _ADC_SelectChannel:
  9702                           	callstack 24
  9703   004852                     
  9704                           ;MCAL_Layer/ADC/hal_adc.c: 109:     if(((void*)0)== _adc){
  9705   004852  500F               	movf	ADC_SelectChannel@_adc^0,w,c
  9706   004854  1010               	iorwf	(ADC_SelectChannel@_adc+1)^0,w,c
  9707   004856  A4D8               	btfss	status,2,c
  9708   004858  EF30  F024         	goto	u6431
  9709   00485C  EF32  F024         	goto	u6430
  9710   004860                     u6431:
  9711   004860  EF34  F024         	goto	l7654
  9712   004864                     u6430:
  9713   004864                     l7652:
  9714                           
  9715                           ;MCAL_Layer/ADC/hal_adc.c: 111:     }
  9716   004864  EF42  F024         	goto	l7660
  9717   004868                     l7654:
  9718                           
  9719                           ;MCAL_Layer/ADC/hal_adc.c: 115:         ADCON0bits.CHS=channel;
  9720   004868  C011  F012         	movff	ADC_SelectChannel@channel,??_ADC_SelectChannel
  9721   00486C  4612               	rlncf	??_ADC_SelectChannel^0,f,c
  9722   00486E  4612               	rlncf	??_ADC_SelectChannel^0,f,c
  9723   004870  50C2               	movf	194,w,c	;volatile
  9724   004872  1812               	xorwf	??_ADC_SelectChannel^0,w,c
  9725   004874  0BC3               	andlw	-61
  9726   004876  1812               	xorwf	??_ADC_SelectChannel^0,w,c
  9727   004878  6EC2               	movwf	194,c	;volatile
  9728   00487A                     
  9729                           ;MCAL_Layer/ADC/hal_adc.c: 116:         adc_input_channel_port_configure(channel);
  9730   00487A  5011               	movf	ADC_SelectChannel@channel^0,w,c
  9731   00487C  ECEF  F01B         	call	_adc_input_channel_port_configure
  9732   004880  EF32  F024         	goto	l7652
  9733   004884                     l7660:
  9734                           
  9735                           ;MCAL_Layer/ADC/hal_adc.c: 122:     return ret;
  9736   004884  0E01               	movlw	1
  9737   004886  0012               	return		;funcret
  9738   004888                     __end_of_ADC_SelectChannel:
  9739                           	callstack 0
  9740                           
  9741 ;; *************** function _adc_input_channel_port_configure *****************
  9742 ;; Defined at:
  9743 ;;		line 253 in file "MCAL_Layer/ADC/hal_adc.c"
  9744 ;; Parameters:    Size  Location     Type
  9745 ;;  channel         1    wreg     enum E3032
  9746 ;; Auto vars:     Size  Location     Type
  9747 ;;  channel         1   13[COMRAM] enum E3032
  9748 ;; Return value:  Size  Location     Type
  9749 ;;                  1    wreg      void 
  9750 ;; Registers used:
  9751 ;;		wreg, status,2, status,0
  9752 ;; Tracked objects:
  9753 ;;		On entry : 0/0
  9754 ;;		On exit  : 0/0
  9755 ;;		Unchanged: 0/0
  9756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9758 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9759 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9760 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9761 ;;Total ram usage:        3 bytes
  9762 ;; Hardware stack levels used: 1
  9763 ;; Hardware stack levels required when called: 4
  9764 ;; This function calls:
  9765 ;;		Nothing
  9766 ;; This function is called by:
  9767 ;;		_ADC_Init
  9768 ;;		_ADC_SelectChannel
  9769 ;; This function uses a non-reentrant model
  9770 ;;
  9771                           
  9772                           	psect	text50
  9773   0037DE                     __ptext50:
  9774                           	callstack 0
  9775   0037DE                     _adc_input_channel_port_configure:
  9776                           	callstack 23
  9777                           
  9778                           ;incstack = 0
  9779                           ;adc_input_channel_port_configure@channel stored from wreg
  9780   0037DE  6E0E               	movwf	adc_input_channel_port_configure@channel^0,c
  9781   0037E0                     
  9782                           ;MCAL_Layer/ADC/hal_adc.c: 254:     switch(channel){
  9783   0037E0  EF19  F01C         	goto	l7178
  9784   0037E4                     l7150:
  9785   0037E4  8092               	bsf	146,0,c	;volatile
  9786   0037E6  EF5A  F01C         	goto	l579
  9787   0037EA                     l7152:
  9788   0037EA  8292               	bsf	146,1,c	;volatile
  9789   0037EC  EF5A  F01C         	goto	l579
  9790   0037F0                     l7154:
  9791   0037F0  8492               	bsf	146,2,c	;volatile
  9792   0037F2  EF5A  F01C         	goto	l579
  9793   0037F6                     l7156:
  9794   0037F6  8692               	bsf	146,3,c	;volatile
  9795   0037F8  EF5A  F01C         	goto	l579
  9796   0037FC                     l7158:
  9797   0037FC  8A92               	bsf	146,5,c	;volatile
  9798   0037FE  EF5A  F01C         	goto	l579
  9799   003802                     l7160:
  9800   003802  8096               	bsf	150,0,c	;volatile
  9801   003804  EF5A  F01C         	goto	l579
  9802   003808                     l7162:
  9803   003808  8296               	bsf	150,1,c	;volatile
  9804   00380A  EF5A  F01C         	goto	l579
  9805   00380E                     l7164:
  9806   00380E  8496               	bsf	150,2,c	;volatile
  9807   003810  EF5A  F01C         	goto	l579
  9808   003814                     l7166:
  9809   003814  8493               	bsf	147,2,c	;volatile
  9810   003816  EF5A  F01C         	goto	l579
  9811   00381A                     l7168:
  9812   00381A  8693               	bsf	147,3,c	;volatile
  9813   00381C  EF5A  F01C         	goto	l579
  9814   003820                     l7170:
  9815   003820  8293               	bsf	147,1,c	;volatile
  9816   003822  EF5A  F01C         	goto	l579
  9817   003826                     l7172:
  9818   003826  8893               	bsf	147,4,c	;volatile
  9819   003828  EF5A  F01C         	goto	l579
  9820   00382C                     l7174:
  9821   00382C  8093               	bsf	147,0,c	;volatile
  9822   00382E  EF5A  F01C         	goto	l579
  9823   003832                     l7178:
  9824   003832  500E               	movf	adc_input_channel_port_configure@channel^0,w,c
  9825   003834  6E0C               	movwf	??_adc_input_channel_port_configure^0,c
  9826   003836  6A0D               	clrf	(??_adc_input_channel_port_configure+1)^0,c
  9827                           
  9828                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9829                           ; Switch size 1, requested type "simple"
  9830                           ; Number of cases is 1, Range of values is 0 to 0
  9831                           ; switch strategies available:
  9832                           ; Name         Instructions Cycles
  9833                           ; simple_byte            4     3 (average)
  9834                           ;	Chosen strategy is simple_byte
  9835   003838  500D               	movf	(??_adc_input_channel_port_configure+1)^0,w,c
  9836   00383A  0A00               	xorlw	0	; case 0
  9837   00383C  B4D8               	btfsc	status,2,c
  9838   00383E  EF23  F01C         	goto	l10308
  9839   003842  EF5A  F01C         	goto	l579
  9840   003846                     l10308:
  9841                           
  9842                           ; Switch size 1, requested type "simple"
  9843                           ; Number of cases is 13, Range of values is 0 to 12
  9844                           ; switch strategies available:
  9845                           ; Name         Instructions Cycles
  9846                           ; simple_byte           40    21 (average)
  9847                           ;	Chosen strategy is simple_byte
  9848   003846  500C               	movf	??_adc_input_channel_port_configure^0,w,c
  9849   003848  0A00               	xorlw	0	; case 0
  9850   00384A  B4D8               	btfsc	status,2,c
  9851   00384C  EFF2  F01B         	goto	l7150
  9852   003850  0A01               	xorlw	1	; case 1
  9853   003852  B4D8               	btfsc	status,2,c
  9854   003854  EFF5  F01B         	goto	l7152
  9855   003858  0A03               	xorlw	3	; case 2
  9856   00385A  B4D8               	btfsc	status,2,c
  9857   00385C  EFF8  F01B         	goto	l7154
  9858   003860  0A01               	xorlw	1	; case 3
  9859   003862  B4D8               	btfsc	status,2,c
  9860   003864  EFFB  F01B         	goto	l7156
  9861   003868  0A07               	xorlw	7	; case 4
  9862   00386A  B4D8               	btfsc	status,2,c
  9863   00386C  EFFE  F01B         	goto	l7158
  9864   003870  0A01               	xorlw	1	; case 5
  9865   003872  B4D8               	btfsc	status,2,c
  9866   003874  EF01  F01C         	goto	l7160
  9867   003878  0A03               	xorlw	3	; case 6
  9868   00387A  B4D8               	btfsc	status,2,c
  9869   00387C  EF04  F01C         	goto	l7162
  9870   003880  0A01               	xorlw	1	; case 7
  9871   003882  B4D8               	btfsc	status,2,c
  9872   003884  EF07  F01C         	goto	l7164
  9873   003888  0A0F               	xorlw	15	; case 8
  9874   00388A  B4D8               	btfsc	status,2,c
  9875   00388C  EF0A  F01C         	goto	l7166
  9876   003890  0A01               	xorlw	1	; case 9
  9877   003892  B4D8               	btfsc	status,2,c
  9878   003894  EF0D  F01C         	goto	l7168
  9879   003898  0A03               	xorlw	3	; case 10
  9880   00389A  B4D8               	btfsc	status,2,c
  9881   00389C  EF10  F01C         	goto	l7170
  9882   0038A0  0A01               	xorlw	1	; case 11
  9883   0038A2  B4D8               	btfsc	status,2,c
  9884   0038A4  EF13  F01C         	goto	l7172
  9885   0038A8  0A07               	xorlw	7	; case 12
  9886   0038AA  B4D8               	btfsc	status,2,c
  9887   0038AC  EF16  F01C         	goto	l7174
  9888   0038B0  EF5A  F01C         	goto	l579
  9889   0038B4                     l579:
  9890   0038B4  0012               	return		;funcret
  9891   0038B6                     __end_of_adc_input_channel_port_configure:
  9892                           	callstack 0
  9893                           
  9894 ;; *************** function _ADC_GetConversionResult *****************
  9895 ;; Defined at:
  9896 ;;		line 174 in file "MCAL_Layer/ADC/hal_adc.c"
  9897 ;; Parameters:    Size  Location     Type
  9898 ;;  _adc            2   11[COMRAM] PTR const struct .
  9899 ;;		 -> adc_1(7), 
  9900 ;;  conversion_r    2   13[COMRAM] PTR unsigned short 
  9901 ;;		 -> adc_lm35_1(2), 
  9902 ;; Auto vars:     Size  Location     Type
  9903 ;;  ret             1    0        unsigned char 
  9904 ;; Return value:  Size  Location     Type
  9905 ;;                  1    wreg      unsigned char 
  9906 ;; Registers used:
  9907 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9908 ;; Tracked objects:
  9909 ;;		On entry : 0/0
  9910 ;;		On exit  : 0/0
  9911 ;;		Unchanged: 0/0
  9912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9913 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9915 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9916 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9917 ;;Total ram usage:        7 bytes
  9918 ;; Hardware stack levels used: 1
  9919 ;; Hardware stack levels required when called: 4
  9920 ;; This function calls:
  9921 ;;		Nothing
  9922 ;; This function is called by:
  9923 ;;		_ADC_GetConversion_Blocking
  9924 ;; This function uses a non-reentrant model
  9925 ;;
  9926                           
  9927                           	psect	text51
  9928   003B18                     __ptext51:
  9929                           	callstack 0
  9930   003B18                     _ADC_GetConversionResult:
  9931                           	callstack 25
  9932   003B18                     
  9933                           ;MCAL_Layer/ADC/hal_adc.c: 177:     if((((void*)0)== _adc) || (((void*)0)==conversion_re
      +                          sult)){
  9934   003B18  500C               	movf	ADC_GetConversionResult@_adc^0,w,c
  9935   003B1A  100D               	iorwf	(ADC_GetConversionResult@_adc+1)^0,w,c
  9936   003B1C  B4D8               	btfsc	status,2,c
  9937   003B1E  EF93  F01D         	goto	u6451
  9938   003B22  EF95  F01D         	goto	u6450
  9939   003B26                     u6451:
  9940   003B26  EF9E  F01D         	goto	l7680
  9941   003B2A                     u6450:
  9942   003B2A  500E               	movf	ADC_GetConversionResult@conversion_result^0,w,c
  9943   003B2C  100F               	iorwf	(ADC_GetConversionResult@conversion_result+1)^0,w,c
  9944   003B2E  A4D8               	btfss	status,2,c
  9945   003B30  EF9C  F01D         	goto	u6461
  9946   003B34  EF9E  F01D         	goto	u6460
  9947   003B38                     u6461:
  9948   003B38  EFA0  F01D         	goto	l7682
  9949   003B3C                     u6460:
  9950   003B3C                     l7680:
  9951                           
  9952                           ;MCAL_Layer/ADC/hal_adc.c: 180:     }
  9953   003B3C  EFEA  F01D         	goto	l7694
  9954   003B40                     l7682:
  9955                           
  9956                           ;MCAL_Layer/ADC/hal_adc.c: 182:         if(0x01U == _adc->adc_result_format){
  9957   003B40  EE20 F006          	lfsr	2,6
  9958   003B44  500C               	movf	ADC_GetConversionResult@_adc^0,w,c
  9959   003B46  26D9               	addwf	fsr2l,f,c
  9960   003B48  500D               	movf	(ADC_GetConversionResult@_adc+1)^0,w,c
  9961   003B4A  22DA               	addwfc	fsr2h,f,c
  9962   003B4C  A2DF               	btfss	indf2,1,c
  9963   003B4E  EFAB  F01D         	goto	u6471
  9964   003B52  EFAD  F01D         	goto	u6470
  9965   003B56                     u6471:
  9966   003B56  EFC1  F01D         	goto	l7686
  9967   003B5A                     u6470:
  9968   003B5A                     l7684:
  9969                           
  9970                           ;MCAL_Layer/ADC/hal_adc.c: 183:             *conversion_result= (adc_result_t)((ADRESH <
      +                          < 8) + ADRESL);
  9971   003B5A  50C3               	movf	195,w,c	;volatile
  9972   003B5C  CFC4 F010          	movff	4036,??_ADC_GetConversionResult	;volatile
  9973   003B60  6A11               	clrf	(??_ADC_GetConversionResult+1)^0,c
  9974   003B62  C010  F011         	movff	??_ADC_GetConversionResult,??_ADC_GetConversionResult+1
  9975   003B66  6A10               	clrf	??_ADC_GetConversionResult^0,c
  9976   003B68  2610               	addwf	??_ADC_GetConversionResult^0,f,c
  9977   003B6A  0E00               	movlw	0
  9978   003B6C  2211               	addwfc	(??_ADC_GetConversionResult+1)^0,f,c
  9979   003B6E  C00E  FFD9         	movff	ADC_GetConversionResult@conversion_result,fsr2l
  9980   003B72  C00F  FFDA         	movff	ADC_GetConversionResult@conversion_result+1,fsr2h
  9981   003B76  C010  FFDE         	movff	??_ADC_GetConversionResult,postinc2
  9982   003B7A  C011  FFDD         	movff	??_ADC_GetConversionResult+1,postdec2
  9983                           
  9984                           ;MCAL_Layer/ADC/hal_adc.c: 184:         }
  9985   003B7E  EF9E  F01D         	goto	l7680
  9986   003B82                     l7686:
  9987   003B82  EE20 F006          	lfsr	2,6
  9988   003B86  500C               	movf	ADC_GetConversionResult@_adc^0,w,c
  9989   003B88  26D9               	addwf	fsr2l,f,c
  9990   003B8A  500D               	movf	(ADC_GetConversionResult@_adc+1)^0,w,c
  9991   003B8C  22DA               	addwfc	fsr2h,f,c
  9992   003B8E  B2DF               	btfsc	indf2,1,c
  9993   003B90  EFCC  F01D         	goto	u6481
  9994   003B94  EFCE  F01D         	goto	u6480
  9995   003B98                     u6481:
  9996   003B98  EFAD  F01D         	goto	l7684
  9997   003B9C                     u6480:
  9998   003B9C                     
  9999                           ;MCAL_Layer/ADC/hal_adc.c: 186:             *conversion_result= (adc_result_t)(((ADRESH 
      +                          << 8) + ADRESL) >>6);
 10000   003B9C  50C3               	movf	195,w,c	;volatile
 10001   003B9E  CFC4 F010          	movff	4036,??_ADC_GetConversionResult	;volatile
 10002   003BA2  6A11               	clrf	(??_ADC_GetConversionResult+1)^0,c
 10003   003BA4  C010  F011         	movff	??_ADC_GetConversionResult,??_ADC_GetConversionResult+1
 10004   003BA8  6A10               	clrf	??_ADC_GetConversionResult^0,c
 10005   003BAA  2610               	addwf	??_ADC_GetConversionResult^0,f,c
 10006   003BAC  0E00               	movlw	0
 10007   003BAE  2211               	addwfc	(??_ADC_GetConversionResult+1)^0,f,c
 10008   003BB0  0E06               	movlw	6
 10009   003BB2  6E12               	movwf	(??_ADC_GetConversionResult+2)^0,c
 10010   003BB4                     u6495:
 10011   003BB4  3411               	rlcf	(??_ADC_GetConversionResult+1)^0,w,c
 10012   003BB6  3211               	rrcf	(??_ADC_GetConversionResult+1)^0,f,c
 10013   003BB8  3210               	rrcf	??_ADC_GetConversionResult^0,f,c
 10014   003BBA  2E12               	decfsz	(??_ADC_GetConversionResult+2)^0,f,c
 10015   003BBC  EFDA  F01D         	goto	u6495
 10016   003BC0  C00E  FFD9         	movff	ADC_GetConversionResult@conversion_result,fsr2l
 10017   003BC4  C00F  FFDA         	movff	ADC_GetConversionResult@conversion_result+1,fsr2h
 10018   003BC8  C010  FFDE         	movff	??_ADC_GetConversionResult,postinc2
 10019   003BCC  C011  FFDD         	movff	??_ADC_GetConversionResult+1,postdec2
 10020                           
 10021                           ;MCAL_Layer/ADC/hal_adc.c: 187:         }
 10022   003BD0  EF9E  F01D         	goto	l7680
 10023   003BD4                     l7694:
 10024                           
 10025                           ;MCAL_Layer/ADC/hal_adc.c: 196:     return ret;
 10026   003BD4  0E01               	movlw	1
 10027   003BD6  0012               	return		;funcret
 10028   003BD8                     __end_of_ADC_GetConversionResult:
 10029                           	callstack 0
 10030                           
 10031 ;; *************** function _InterruptManagerHigh *****************
 10032 ;; Defined at:
 10033 ;;		line 88 in file "MCAL_Layer/Interrupt/mcal_interrupt_manager.c"
 10034 ;; Parameters:    Size  Location     Type
 10035 ;;		None
 10036 ;; Auto vars:     Size  Location     Type
 10037 ;;		None
 10038 ;; Return value:  Size  Location     Type
 10039 ;;                  1    wreg      void 
 10040 ;; Registers used:
 10041 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 10042 ;; Tracked objects:
 10043 ;;		On entry : 0/0
 10044 ;;		On exit  : 0/0
 10045 ;;		Unchanged: 0/0
 10046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10049 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10050 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10051 ;;Total ram usage:        4 bytes
 10052 ;; Hardware stack levels used: 1
 10053 ;; Hardware stack levels required when called: 3
 10054 ;; This function calls:
 10055 ;;		_ADC_ISR
 10056 ;;		_CCP1_ISR
 10057 ;;		_CCP2_ISR
 10058 ;;		_EUSART_Rx_ISR
 10059 ;;		_EUSART_Tx_ISR
 10060 ;;		_INT0_ISR
 10061 ;;		_INT1_ISR
 10062 ;;		_INT2_ISR
 10063 ;;		_MSSP_I2C_BC_ISR
 10064 ;;		_MSSP_I2C_ISR
 10065 ;;		_RB4_ISR
 10066 ;;		_RB5_ISR
 10067 ;;		_RB6_ISR
 10068 ;;		_RB7_ISR
 10069 ;;		_TMR0_ISR
 10070 ;;		_TMR1_ISR
 10071 ;;		_TMR2_ISR
 10072 ;;		_TMR3_ISR
 10073 ;; This function is called by:
 10074 ;;		Interrupt level 2
 10075 ;; This function uses a non-reentrant model
 10076 ;;
 10077                           
 10078                           	psect	intcode
 10079   000008                     __pintcode:
 10080                           	callstack 0
 10081   000008                     _InterruptManagerHigh:
 10082                           	callstack 18
 10083                           
 10084                           ;incstack = 0
 10085   000008  8273               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 10086   00000A  EDB5  F011         	call	int_func,f	;refresh shadow registers
 10087                           
 10088                           	psect	intcode_body
 10089   00236A                     __pintcode_body:
 10090                           	callstack 18
 10091   00236A                     int_func:
 10092                           	callstack 18
 10093   00236A  0006               	pop		; remove dummy address from shadow register refresh
 10094   00236C  CFFA F008          	movff	pclath,??_InterruptManagerHigh
 10095   002370  CFFB F009          	movff	pclatu,??_InterruptManagerHigh+1
 10096   002374  CFD9 F00A          	movff	fsr2l,??_InterruptManagerHigh+2
 10097   002378  CFDA F00B          	movff	fsr2h,??_InterruptManagerHigh+3
 10098   00237C                     
 10099                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 89:     if((1 == INTCONbits.INT0IE) && (
      +                          1 == INTCONbits.INT0IF)){
 10100   00237C  A8F2               	btfss	242,4,c	;volatile
 10101   00237E  EFC3  F011         	goto	i2u811_41
 10102   002382  EFC5  F011         	goto	i2u811_40
 10103   002386                     i2u811_41:
 10104   002386  EFCE  F011         	goto	i2l1340
 10105   00238A                     i2u811_40:
 10106   00238A  A2F2               	btfss	242,1,c	;volatile
 10107   00238C  EFCA  F011         	goto	i2u812_41
 10108   002390  EFCC  F011         	goto	i2u812_40
 10109   002394                     i2u812_41:
 10110   002394  EFCE  F011         	goto	i2l1340
 10111   002398                     i2u812_40:
 10112   002398                     
 10113                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 90:         INT0_ISR();
 10114   002398  EC28  F025         	call	_INT0_ISR	;wreg free
 10115   00239C                     i2l1340:
 10116                           
 10117                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 94:      if((1 == INTCON3bits.INT1IE) &&
      +                           (1 == INTCON3bits.INT1IF)){
 10118   00239C  A6F0               	btfss	240,3,c	;volatile
 10119   00239E  EFD3  F011         	goto	i2u813_41
 10120   0023A2  EFD5  F011         	goto	i2u813_40
 10121   0023A6                     i2u813_41:
 10122   0023A6  EFDE  F011         	goto	i2l1342
 10123   0023AA                     i2u813_40:
 10124   0023AA  A0F0               	btfss	240,0,c	;volatile
 10125   0023AC  EFDA  F011         	goto	i2u814_41
 10126   0023B0  EFDC  F011         	goto	i2u814_40
 10127   0023B4                     i2u814_41:
 10128   0023B4  EFDE  F011         	goto	i2l1342
 10129   0023B8                     i2u814_40:
 10130   0023B8                     
 10131                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 95:         INT1_ISR();
 10132   0023B8  EC26  F025         	call	_INT1_ISR	;wreg free
 10133   0023BC                     i2l1342:
 10134                           
 10135                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 99:      if((1 == INTCON3bits.INT2IE) &&
      +                           (1 == INTCON3bits.INT2IF)){
 10136   0023BC  A8F0               	btfss	240,4,c	;volatile
 10137   0023BE  EFE3  F011         	goto	i2u815_41
 10138   0023C2  EFE5  F011         	goto	i2u815_40
 10139   0023C6                     i2u815_41:
 10140   0023C6  EFEE  F011         	goto	i2l1344
 10141   0023CA                     i2u815_40:
 10142   0023CA  A2F0               	btfss	240,1,c	;volatile
 10143   0023CC  EFEA  F011         	goto	i2u816_41
 10144   0023D0  EFEC  F011         	goto	i2u816_40
 10145   0023D4                     i2u816_41:
 10146   0023D4  EFEE  F011         	goto	i2l1344
 10147   0023D8                     i2u816_40:
 10148   0023D8                     
 10149                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 100:         INT2_ISR();
 10150   0023D8  EC24  F025         	call	_INT2_ISR	;wreg free
 10151   0023DC                     i2l1344:
 10152                           
 10153                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 104:     if((1 == INTCONbits.RBIE) && (1
      +                           == INTCONbits.RBIF) &&
 10154   0023DC  A6F2               	btfss	242,3,c	;volatile
 10155   0023DE  EFF3  F011         	goto	i2u817_41
 10156   0023E2  EFF5  F011         	goto	i2u817_40
 10157   0023E6                     i2u817_41:
 10158   0023E6  EF10  F012         	goto	i2l1346
 10159   0023EA                     i2u817_40:
 10160   0023EA  A0F2               	btfss	242,0,c	;volatile
 10161   0023EC  EFFA  F011         	goto	i2u818_41
 10162   0023F0  EFFC  F011         	goto	i2u818_40
 10163   0023F4                     i2u818_41:
 10164   0023F4  EF10  F012         	goto	i2l1346
 10165   0023F8                     i2u818_40:
 10166   0023F8  A881               	btfss	129,4,c	;volatile
 10167   0023FA  EF01  F012         	goto	i2u819_41
 10168   0023FE  EF03  F012         	goto	i2u819_40
 10169   002402                     i2u819_41:
 10170   002402  EF10  F012         	goto	i2l1346
 10171   002406                     i2u819_40:
 10172   002406  0470               	decf	_RB4_Flag^0,w,c	;volatile
 10173   002408  A4D8               	btfss	status,2,c
 10174   00240A  EF09  F012         	goto	i2u820_41
 10175   00240E  EF0B  F012         	goto	i2u820_40
 10176   002412                     i2u820_41:
 10177   002412  EF10  F012         	goto	i2l1346
 10178   002416                     i2u820_40:
 10179   002416                     
 10180                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 105:             (PORTBbits.RB4==GPIO_HI
      +                          GH) && (RB4_Flag==1)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 106:         RB4_F
      +                          lag=0;
 10181   002416  0E00               	movlw	0
 10182   002418  6E70               	movwf	_RB4_Flag^0,c	;volatile
 10183   00241A                     
 10184                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 107:         RB4_ISR(0);
 10185   00241A  0E00               	movlw	0
 10186   00241C  ECEC  F024         	call	_RB4_ISR
 10187   002420                     i2l1346:
 10188                           
 10189                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 111:     if((1 == INTCONbits.RBIE) && (1
      +                           == INTCONbits.RBIF) &&
 10190   002420  A6F2               	btfss	242,3,c	;volatile
 10191   002422  EF15  F012         	goto	i2u821_41
 10192   002426  EF17  F012         	goto	i2u821_40
 10193   00242A                     i2u821_41:
 10194   00242A  EF32  F012         	goto	i2l9312
 10195   00242E                     i2u821_40:
 10196   00242E  A0F2               	btfss	242,0,c	;volatile
 10197   002430  EF1C  F012         	goto	i2u822_41
 10198   002434  EF1E  F012         	goto	i2u822_40
 10199   002438                     i2u822_41:
 10200   002438  EF32  F012         	goto	i2l9312
 10201   00243C                     i2u822_40:
 10202   00243C  B881               	btfsc	129,4,c	;volatile
 10203   00243E  EF23  F012         	goto	i2u823_41
 10204   002442  EF25  F012         	goto	i2u823_40
 10205   002446                     i2u823_41:
 10206   002446  EF32  F012         	goto	i2l9312
 10207   00244A                     i2u823_40:
 10208   00244A  5070               	movf	_RB4_Flag^0,w,c	;volatile
 10209   00244C  A4D8               	btfss	status,2,c
 10210   00244E  EF2B  F012         	goto	i2u824_41
 10211   002452  EF2D  F012         	goto	i2u824_40
 10212   002456                     i2u824_41:
 10213   002456  EF32  F012         	goto	i2l9312
 10214   00245A                     i2u824_40:
 10215   00245A                     
 10216                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 112:             (PORTBbits.RB4==GPIO_LO
      +                          W) && (RB4_Flag==0)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 113:         RB4_Fl
      +                          ag=1;
 10217   00245A  0E01               	movlw	1
 10218   00245C  6E70               	movwf	_RB4_Flag^0,c	;volatile
 10219   00245E                     
 10220                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 114:         RB4_ISR(1);
 10221   00245E  0E01               	movlw	1
 10222   002460  ECEC  F024         	call	_RB4_ISR
 10223   002464                     i2l9312:
 10224                           
 10225                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 116:     if((1 == INTCONbits.RBIE) && (1
      +                           == INTCONbits.RBIF) &&
 10226   002464  A6F2               	btfss	242,3,c	;volatile
 10227   002466  EF37  F012         	goto	i2u825_41
 10228   00246A  EF39  F012         	goto	i2u825_40
 10229   00246E                     i2u825_41:
 10230   00246E  EF54  F012         	goto	i2l1349
 10231   002472                     i2u825_40:
 10232   002472  A0F2               	btfss	242,0,c	;volatile
 10233   002474  EF3E  F012         	goto	i2u826_41
 10234   002478  EF40  F012         	goto	i2u826_40
 10235   00247C                     i2u826_41:
 10236   00247C  EF54  F012         	goto	i2l1349
 10237   002480                     i2u826_40:
 10238   002480  AA81               	btfss	129,5,c	;volatile
 10239   002482  EF45  F012         	goto	i2u827_41
 10240   002486  EF47  F012         	goto	i2u827_40
 10241   00248A                     i2u827_41:
 10242   00248A  EF54  F012         	goto	i2l1349
 10243   00248E                     i2u827_40:
 10244   00248E  046F               	decf	_RB5_Flag^0,w,c	;volatile
 10245   002490  A4D8               	btfss	status,2,c
 10246   002492  EF4D  F012         	goto	i2u828_41
 10247   002496  EF4F  F012         	goto	i2u828_40
 10248   00249A                     i2u828_41:
 10249   00249A  EF54  F012         	goto	i2l1349
 10250   00249E                     i2u828_40:
 10251   00249E                     
 10252                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 117:             (PORTBbits.RB5==GPIO_HI
      +                          GH) && (RB5_Flag==1)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 118:         RB5_F
      +                          lag=0;
 10253   00249E  0E00               	movlw	0
 10254   0024A0  6E6F               	movwf	_RB5_Flag^0,c	;volatile
 10255   0024A2                     
 10256                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 119:         RB5_ISR(0);
 10257   0024A2  0E00               	movlw	0
 10258   0024A4  ECDF  F024         	call	_RB5_ISR
 10259   0024A8                     i2l1349:
 10260                           
 10261                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 123:     if((1 == INTCONbits.RBIE) && (1
      +                           == INTCONbits.RBIF) &&
 10262   0024A8  A6F2               	btfss	242,3,c	;volatile
 10263   0024AA  EF59  F012         	goto	i2u829_41
 10264   0024AE  EF5B  F012         	goto	i2u829_40
 10265   0024B2                     i2u829_41:
 10266   0024B2  EF76  F012         	goto	i2l9334
 10267   0024B6                     i2u829_40:
 10268   0024B6  A0F2               	btfss	242,0,c	;volatile
 10269   0024B8  EF60  F012         	goto	i2u830_41
 10270   0024BC  EF62  F012         	goto	i2u830_40
 10271   0024C0                     i2u830_41:
 10272   0024C0  EF76  F012         	goto	i2l9334
 10273   0024C4                     i2u830_40:
 10274   0024C4  BA81               	btfsc	129,5,c	;volatile
 10275   0024C6  EF67  F012         	goto	i2u831_41
 10276   0024CA  EF69  F012         	goto	i2u831_40
 10277   0024CE                     i2u831_41:
 10278   0024CE  EF76  F012         	goto	i2l9334
 10279   0024D2                     i2u831_40:
 10280   0024D2  506F               	movf	_RB5_Flag^0,w,c	;volatile
 10281   0024D4  A4D8               	btfss	status,2,c
 10282   0024D6  EF6F  F012         	goto	i2u832_41
 10283   0024DA  EF71  F012         	goto	i2u832_40
 10284   0024DE                     i2u832_41:
 10285   0024DE  EF76  F012         	goto	i2l9334
 10286   0024E2                     i2u832_40:
 10287   0024E2                     
 10288                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 124:             (PORTBbits.RB5==GPIO_LO
      +                          W) && (RB5_Flag==0)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 125:         RB5_Fl
      +                          ag=1;
 10289   0024E2  0E01               	movlw	1
 10290   0024E4  6E6F               	movwf	_RB5_Flag^0,c	;volatile
 10291   0024E6                     
 10292                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 126:         RB5_ISR(1);
 10293   0024E6  0E01               	movlw	1
 10294   0024E8  ECDF  F024         	call	_RB5_ISR
 10295   0024EC                     i2l9334:
 10296                           
 10297                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 128:     if((1 == INTCONbits.RBIE) && (1
      +                           == INTCONbits.RBIF) &&
 10298   0024EC  A6F2               	btfss	242,3,c	;volatile
 10299   0024EE  EF7B  F012         	goto	i2u833_41
 10300   0024F2  EF7D  F012         	goto	i2u833_40
 10301   0024F6                     i2u833_41:
 10302   0024F6  EF98  F012         	goto	i2l1352
 10303   0024FA                     i2u833_40:
 10304   0024FA  A0F2               	btfss	242,0,c	;volatile
 10305   0024FC  EF82  F012         	goto	i2u834_41
 10306   002500  EF84  F012         	goto	i2u834_40
 10307   002504                     i2u834_41:
 10308   002504  EF98  F012         	goto	i2l1352
 10309   002508                     i2u834_40:
 10310   002508  AC81               	btfss	129,6,c	;volatile
 10311   00250A  EF89  F012         	goto	i2u835_41
 10312   00250E  EF8B  F012         	goto	i2u835_40
 10313   002512                     i2u835_41:
 10314   002512  EF98  F012         	goto	i2l1352
 10315   002516                     i2u835_40:
 10316   002516  046E               	decf	_RB6_Flag^0,w,c	;volatile
 10317   002518  A4D8               	btfss	status,2,c
 10318   00251A  EF91  F012         	goto	i2u836_41
 10319   00251E  EF93  F012         	goto	i2u836_40
 10320   002522                     i2u836_41:
 10321   002522  EF98  F012         	goto	i2l1352
 10322   002526                     i2u836_40:
 10323   002526                     
 10324                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 129:             (PORTBbits.RB6==GPIO_HI
      +                          GH) && (RB6_Flag==1)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 130:         RB6_F
      +                          lag=0;
 10325   002526  0E00               	movlw	0
 10326   002528  6E6E               	movwf	_RB6_Flag^0,c	;volatile
 10327   00252A                     
 10328                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 131:         RB6_ISR(0);
 10329   00252A  0E00               	movlw	0
 10330   00252C  ECD2  F024         	call	_RB6_ISR
 10331   002530                     i2l1352:
 10332                           
 10333                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 135:     if((1 == INTCONbits.RBIE) && (1
      +                           == INTCONbits.RBIF) &&
 10334   002530  A6F2               	btfss	242,3,c	;volatile
 10335   002532  EF9D  F012         	goto	i2u837_41
 10336   002536  EF9F  F012         	goto	i2u837_40
 10337   00253A                     i2u837_41:
 10338   00253A  EFBA  F012         	goto	i2l9356
 10339   00253E                     i2u837_40:
 10340   00253E  A0F2               	btfss	242,0,c	;volatile
 10341   002540  EFA4  F012         	goto	i2u838_41
 10342   002544  EFA6  F012         	goto	i2u838_40
 10343   002548                     i2u838_41:
 10344   002548  EFBA  F012         	goto	i2l9356
 10345   00254C                     i2u838_40:
 10346   00254C  BC81               	btfsc	129,6,c	;volatile
 10347   00254E  EFAB  F012         	goto	i2u839_41
 10348   002552  EFAD  F012         	goto	i2u839_40
 10349   002556                     i2u839_41:
 10350   002556  EFBA  F012         	goto	i2l9356
 10351   00255A                     i2u839_40:
 10352   00255A  506E               	movf	_RB6_Flag^0,w,c	;volatile
 10353   00255C  A4D8               	btfss	status,2,c
 10354   00255E  EFB3  F012         	goto	i2u840_41
 10355   002562  EFB5  F012         	goto	i2u840_40
 10356   002566                     i2u840_41:
 10357   002566  EFBA  F012         	goto	i2l9356
 10358   00256A                     i2u840_40:
 10359   00256A                     
 10360                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 136:             (PORTBbits.RB6==GPIO_LO
      +                          W) && (RB6_Flag==0)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 137:         RB6_Fl
      +                          ag=1;
 10361   00256A  0E01               	movlw	1
 10362   00256C  6E6E               	movwf	_RB6_Flag^0,c	;volatile
 10363   00256E                     
 10364                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 138:         RB6_ISR(1);
 10365   00256E  0E01               	movlw	1
 10366   002570  ECD2  F024         	call	_RB6_ISR
 10367   002574                     i2l9356:
 10368                           
 10369                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 140:     if((1 == INTCONbits.RBIE) && (1
      +                           == INTCONbits.RBIF) &&
 10370   002574  A6F2               	btfss	242,3,c	;volatile
 10371   002576  EFBF  F012         	goto	i2u841_41
 10372   00257A  EFC1  F012         	goto	i2u841_40
 10373   00257E                     i2u841_41:
 10374   00257E  EFDC  F012         	goto	i2l1355
 10375   002582                     i2u841_40:
 10376   002582  A0F2               	btfss	242,0,c	;volatile
 10377   002584  EFC6  F012         	goto	i2u842_41
 10378   002588  EFC8  F012         	goto	i2u842_40
 10379   00258C                     i2u842_41:
 10380   00258C  EFDC  F012         	goto	i2l1355
 10381   002590                     i2u842_40:
 10382   002590  AE81               	btfss	129,7,c	;volatile
 10383   002592  EFCD  F012         	goto	i2u843_41
 10384   002596  EFCF  F012         	goto	i2u843_40
 10385   00259A                     i2u843_41:
 10386   00259A  EFDC  F012         	goto	i2l1355
 10387   00259E                     i2u843_40:
 10388   00259E  046D               	decf	_RB7_Flag^0,w,c	;volatile
 10389   0025A0  A4D8               	btfss	status,2,c
 10390   0025A2  EFD5  F012         	goto	i2u844_41
 10391   0025A6  EFD7  F012         	goto	i2u844_40
 10392   0025AA                     i2u844_41:
 10393   0025AA  EFDC  F012         	goto	i2l1355
 10394   0025AE                     i2u844_40:
 10395   0025AE                     
 10396                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 141:             (PORTBbits.RB7==GPIO_HI
      +                          GH) && (RB7_Flag==1)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 142:         RB7_F
      +                          lag=0;
 10397   0025AE  0E00               	movlw	0
 10398   0025B0  6E6D               	movwf	_RB7_Flag^0,c	;volatile
 10399   0025B2                     
 10400                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 143:         RB7_ISR(0);
 10401   0025B2  0E00               	movlw	0
 10402   0025B4  ECC5  F024         	call	_RB7_ISR
 10403   0025B8                     i2l1355:
 10404                           
 10405                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 147:     if((1 == INTCONbits.RBIE) && (1
      +                           == INTCONbits.RBIF) &&
 10406   0025B8  A6F2               	btfss	242,3,c	;volatile
 10407   0025BA  EFE1  F012         	goto	i2u845_41
 10408   0025BE  EFE3  F012         	goto	i2u845_40
 10409   0025C2                     i2u845_41:
 10410   0025C2  EFFE  F012         	goto	i2l1357
 10411   0025C6                     i2u845_40:
 10412   0025C6  A0F2               	btfss	242,0,c	;volatile
 10413   0025C8  EFE8  F012         	goto	i2u846_41
 10414   0025CC  EFEA  F012         	goto	i2u846_40
 10415   0025D0                     i2u846_41:
 10416   0025D0  EFFE  F012         	goto	i2l1357
 10417   0025D4                     i2u846_40:
 10418   0025D4  BE81               	btfsc	129,7,c	;volatile
 10419   0025D6  EFEF  F012         	goto	i2u847_41
 10420   0025DA  EFF1  F012         	goto	i2u847_40
 10421   0025DE                     i2u847_41:
 10422   0025DE  EFFE  F012         	goto	i2l1357
 10423   0025E2                     i2u847_40:
 10424   0025E2  506D               	movf	_RB7_Flag^0,w,c	;volatile
 10425   0025E4  A4D8               	btfss	status,2,c
 10426   0025E6  EFF7  F012         	goto	i2u848_41
 10427   0025EA  EFF9  F012         	goto	i2u848_40
 10428   0025EE                     i2u848_41:
 10429   0025EE  EFFE  F012         	goto	i2l1357
 10430   0025F2                     i2u848_40:
 10431   0025F2                     
 10432                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 148:             (PORTBbits.RB7==GPIO_LO
      +                          W) && (RB7_Flag==0)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 149:         RB7_Fl
      +                          ag=1;
 10433   0025F2  0E01               	movlw	1
 10434   0025F4  6E6D               	movwf	_RB7_Flag^0,c	;volatile
 10435   0025F6                     
 10436                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 150:         RB7_ISR(1);
 10437   0025F6  0E01               	movlw	1
 10438   0025F8  ECC5  F024         	call	_RB7_ISR
 10439   0025FC                     i2l1357:
 10440                           
 10441                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 156:     if((1 == PIE1bits.ADIE) && (1 =
      +                          = PIR1bits.ADIF)){
 10442   0025FC  AC9D               	btfss	157,6,c	;volatile
 10443   0025FE  EF03  F013         	goto	i2u849_41
 10444   002602  EF05  F013         	goto	i2u849_40
 10445   002606                     i2u849_41:
 10446   002606  EF0E  F013         	goto	i2l1359
 10447   00260A                     i2u849_40:
 10448   00260A  AC9E               	btfss	158,6,c	;volatile
 10449   00260C  EF0A  F013         	goto	i2u850_41
 10450   002610  EF0C  F013         	goto	i2u850_40
 10451   002614                     i2u850_41:
 10452   002614  EF0E  F013         	goto	i2l1359
 10453   002618                     i2u850_40:
 10454   002618                     
 10455                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 157:         ADC_ISR();
 10456   002618  EC2E  F025         	call	_ADC_ISR	;wreg free
 10457   00261C                     i2l1359:
 10458                           
 10459                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 163:     if((1 == INTCONbits.TMR0IE) && 
      +                          (1 == INTCONbits.TMR0IF)){
 10460   00261C  AAF2               	btfss	242,5,c	;volatile
 10461   00261E  EF13  F013         	goto	i2u851_41
 10462   002622  EF15  F013         	goto	i2u851_40
 10463   002626                     i2u851_41:
 10464   002626  EF1E  F013         	goto	i2l9386
 10465   00262A                     i2u851_40:
 10466   00262A  A4F2               	btfss	242,2,c	;volatile
 10467   00262C  EF1A  F013         	goto	i2u852_41
 10468   002630  EF1C  F013         	goto	i2u852_40
 10469   002634                     i2u852_41:
 10470   002634  EF1E  F013         	goto	i2l9386
 10471   002638                     i2u852_40:
 10472   002638                     
 10473                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 164:         TMR0_ISR();
 10474   002638  EC0F  F025         	call	_TMR0_ISR	;wreg free
 10475   00263C                     i2l9386:
 10476                           
 10477                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 168:     if((1 == PIE1bits.TMR1IE) && (1
      +                           == PIR1bits.TMR1IF)){
 10478   00263C  A09D               	btfss	157,0,c	;volatile
 10479   00263E  EF23  F013         	goto	i2u853_41
 10480   002642  EF25  F013         	goto	i2u853_40
 10481   002646                     i2u853_41:
 10482   002646  EF2E  F013         	goto	i2l9392
 10483   00264A                     i2u853_40:
 10484   00264A  A09E               	btfss	158,0,c	;volatile
 10485   00264C  EF2A  F013         	goto	i2u854_41
 10486   002650  EF2C  F013         	goto	i2u854_40
 10487   002654                     i2u854_41:
 10488   002654  EF2E  F013         	goto	i2l9392
 10489   002658                     i2u854_40:
 10490   002658                     
 10491                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 169:         TMR1_ISR();
 10492   002658  EC08  F025         	call	_TMR1_ISR	;wreg free
 10493   00265C                     i2l9392:
 10494                           
 10495                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 173:     if((1 == PIE1bits.TMR2IE) && (1
      +                           == PIR1bits.TMR2IF)){
 10496   00265C  A29D               	btfss	157,1,c	;volatile
 10497   00265E  EF33  F013         	goto	i2u855_41
 10498   002662  EF35  F013         	goto	i2u855_40
 10499   002666                     i2u855_41:
 10500   002666  EF3E  F013         	goto	i2l9398
 10501   00266A                     i2u855_40:
 10502   00266A  A29E               	btfss	158,1,c	;volatile
 10503   00266C  EF3A  F013         	goto	i2u856_41
 10504   002670  EF3C  F013         	goto	i2u856_40
 10505   002674                     i2u856_41:
 10506   002674  EF3E  F013         	goto	i2l9398
 10507   002678                     i2u856_40:
 10508   002678                     
 10509                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 174:         TMR2_ISR();
 10510   002678  EC16  F025         	call	_TMR2_ISR	;wreg free
 10511   00267C                     i2l9398:
 10512                           
 10513                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 178:     if((1 == PIE2bits.TMR3IE) && (1
      +                           == PIR2bits.TMR3IF)){
 10514   00267C  A2A0               	btfss	160,1,c	;volatile
 10515   00267E  EF43  F013         	goto	i2u857_41
 10516   002682  EF45  F013         	goto	i2u857_40
 10517   002686                     i2u857_41:
 10518   002686  EF4E  F013         	goto	i2l9404
 10519   00268A                     i2u857_40:
 10520   00268A  A2A1               	btfss	161,1,c	;volatile
 10521   00268C  EF4A  F013         	goto	i2u858_41
 10522   002690  EF4C  F013         	goto	i2u858_40
 10523   002694                     i2u858_41:
 10524   002694  EF4E  F013         	goto	i2l9404
 10525   002698                     i2u858_40:
 10526   002698                     
 10527                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 179:         TMR3_ISR();
 10528   002698  EC01  F025         	call	_TMR3_ISR	;wreg free
 10529   00269C                     i2l9404:
 10530                           
 10531                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 183:     if((1 == PIE1bits.CCP1IE) && (1
      +                           == PIR1bits.CCP1IF)){
 10532   00269C  A49D               	btfss	157,2,c	;volatile
 10533   00269E  EF53  F013         	goto	i2u859_41
 10534   0026A2  EF55  F013         	goto	i2u859_40
 10535   0026A6                     i2u859_41:
 10536   0026A6  EF5E  F013         	goto	i2l9410
 10537   0026AA                     i2u859_40:
 10538   0026AA  A49E               	btfss	158,2,c	;volatile
 10539   0026AC  EF5A  F013         	goto	i2u860_41
 10540   0026B0  EF5C  F013         	goto	i2u860_40
 10541   0026B4                     i2u860_41:
 10542   0026B4  EF5E  F013         	goto	i2l9410
 10543   0026B8                     i2u860_40:
 10544   0026B8                     
 10545                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 184:         CCP1_ISR();
 10546   0026B8  EC76  F024         	call	_CCP1_ISR	;wreg free
 10547   0026BC                     i2l9410:
 10548                           
 10549                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 186:     if((1 == PIE2bits.CCP2IE) && (1
      +                           == PIR2bits.CCP2IF)){
 10550   0026BC  A0A0               	btfss	160,0,c	;volatile
 10551   0026BE  EF63  F013         	goto	i2u861_41
 10552   0026C2  EF65  F013         	goto	i2u861_40
 10553   0026C6                     i2u861_41:
 10554   0026C6  EF6E  F013         	goto	i2l9416
 10555   0026CA                     i2u861_40:
 10556   0026CA  A0A1               	btfss	161,0,c	;volatile
 10557   0026CC  EF6A  F013         	goto	i2u862_41
 10558   0026D0  EF6C  F013         	goto	i2u862_40
 10559   0026D4                     i2u862_41:
 10560   0026D4  EF6E  F013         	goto	i2l9416
 10561   0026D8                     i2u862_40:
 10562   0026D8                     
 10563                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 187:         CCP2_ISR();
 10564   0026D8  EC2C  F025         	call	_CCP2_ISR	;wreg free
 10565   0026DC                     i2l9416:
 10566                           
 10567                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 191:     if((1 == PIE1bits.TXIE) && (1 =
      +                          = PIR1bits.TXIF)){
 10568   0026DC  A89D               	btfss	157,4,c	;volatile
 10569   0026DE  EF73  F013         	goto	i2u863_41
 10570   0026E2  EF75  F013         	goto	i2u863_40
 10571   0026E6                     i2u863_41:
 10572   0026E6  EF7E  F013         	goto	i2l9422
 10573   0026EA                     i2u863_40:
 10574   0026EA  A89E               	btfss	158,4,c	;volatile
 10575   0026EC  EF7A  F013         	goto	i2u864_41
 10576   0026F0  EF7C  F013         	goto	i2u864_40
 10577   0026F4                     i2u864_41:
 10578   0026F4  EF7E  F013         	goto	i2l9422
 10579   0026F8                     i2u864_40:
 10580   0026F8                     
 10581                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 192:         EUSART_Tx_ISR();
 10582   0026F8  EC2A  F025         	call	_EUSART_Tx_ISR	;wreg free
 10583   0026FC                     i2l9422:
 10584                           
 10585                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 194:     if((1 == PIE1bits.RCIE) && (1 =
      +                          = PIR1bits.RCIF)){
 10586   0026FC  AA9D               	btfss	157,5,c	;volatile
 10587   0026FE  EF83  F013         	goto	i2u865_41
 10588   002702  EF85  F013         	goto	i2u865_40
 10589   002706                     i2u865_41:
 10590   002706  EF8E  F013         	goto	i2l9428
 10591   00270A                     i2u865_40:
 10592   00270A  AA9E               	btfss	158,5,c	;volatile
 10593   00270C  EF8A  F013         	goto	i2u866_41
 10594   002710  EF8C  F013         	goto	i2u866_40
 10595   002714                     i2u866_41:
 10596   002714  EF8E  F013         	goto	i2l9428
 10597   002718                     i2u866_40:
 10598   002718                     
 10599                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 195:         EUSART_Rx_ISR();
 10600   002718  EC31  F025         	call	_EUSART_Rx_ISR	;wreg free
 10601   00271C                     i2l9428:
 10602                           
 10603                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 200:     if((1 == PIE1bits.SSPIE) && (1 
      +                          == PIR1bits.SSPIF)){
 10604   00271C  A69D               	btfss	157,3,c	;volatile
 10605   00271E  EF93  F013         	goto	i2u867_41
 10606   002722  EF95  F013         	goto	i2u867_40
 10607   002726                     i2u867_41:
 10608   002726  EF9E  F013         	goto	i2l9434
 10609   00272A                     i2u867_40:
 10610   00272A  A69E               	btfss	158,3,c	;volatile
 10611   00272C  EF9A  F013         	goto	i2u868_41
 10612   002730  EF9C  F013         	goto	i2u868_40
 10613   002734                     i2u868_41:
 10614   002734  EF9E  F013         	goto	i2l9434
 10615   002738                     i2u868_40:
 10616   002738                     
 10617                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 201:         MSSP_I2C_ISR();
 10618   002738  EC5E  F024         	call	_MSSP_I2C_ISR	;wreg free
 10619   00273C                     i2l9434:
 10620                           
 10621                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 203:     if((1 == PIE2bits.BCLIE) && (1 
      +                          == PIR2bits.BCLIF)){
 10622   00273C  A6A0               	btfss	160,3,c	;volatile
 10623   00273E  EFA3  F013         	goto	i2u869_41
 10624   002742  EFA5  F013         	goto	i2u869_40
 10625   002746                     i2u869_41:
 10626   002746  EFAE  F013         	goto	i2l1370
 10627   00274A                     i2u869_40:
 10628   00274A  A6A1               	btfss	161,3,c	;volatile
 10629   00274C  EFAA  F013         	goto	i2u870_41
 10630   002750  EFAC  F013         	goto	i2u870_40
 10631   002754                     i2u870_41:
 10632   002754  EFAE  F013         	goto	i2l1370
 10633   002758                     i2u870_40:
 10634   002758                     
 10635                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 204:         MSSP_I2C_BC_ISR();
 10636   002758  EC22  F025         	call	_MSSP_I2C_BC_ISR	;wreg free
 10637   00275C                     i2l1370:
 10638   00275C  C00B  FFDA         	movff	??_InterruptManagerHigh+3,fsr2h
 10639   002760  C00A  FFD9         	movff	??_InterruptManagerHigh+2,fsr2l
 10640   002764  C009  FFFB         	movff	??_InterruptManagerHigh+1,pclatu
 10641   002768  C008  FFFA         	movff	??_InterruptManagerHigh,pclath
 10642   00276C  9273               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10643   00276E  0011               	retfie		f
 10644   002770                     __end_of_InterruptManagerHigh:
 10645                           	callstack 0
 10646                           
 10647 ;; *************** function _TMR3_ISR *****************
 10648 ;; Defined at:
 10649 ;;		line 125 in file "MCAL_Layer/Timer3/hal_timer3.c"
 10650 ;; Parameters:    Size  Location     Type
 10651 ;;		None
 10652 ;; Auto vars:     Size  Location     Type
 10653 ;;		None
 10654 ;; Return value:  Size  Location     Type
 10655 ;;                  1    wreg      void 
 10656 ;; Registers used:
 10657 ;;		wreg, status,2
 10658 ;; Tracked objects:
 10659 ;;		On entry : 0/0
 10660 ;;		On exit  : 0/0
 10661 ;;		Unchanged: 0/0
 10662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10667 ;;Total ram usage:        0 bytes
 10668 ;; Hardware stack levels used: 1
 10669 ;; This function calls:
 10670 ;;		Nothing
 10671 ;; This function is called by:
 10672 ;;		_InterruptManagerHigh
 10673 ;; This function uses a non-reentrant model
 10674 ;;
 10675                           
 10676                           	psect	text53
 10677   004A02                     __ptext53:
 10678                           	callstack 0
 10679   004A02                     _TMR3_ISR:
 10680                           	callstack 20
 10681   004A02                     
 10682                           ;MCAL_Layer/Timer3/hal_timer3.c: 126:     (PIR2bits.TMR3IF=0) ;
 10683   004A02  92A1               	bcf	161,1,c	;volatile
 10684   004A04                     
 10685                           ;MCAL_Layer/Timer3/hal_timer3.c: 127:     TMR3H=(timer3_preload) >> 8;
 10686   004A04  0100               	movlb	0	; () banked
 10687   004A06  5193               	movf	(_timer3_preload+1)& (0+255),w,b
 10688   004A08  6EB3               	movwf	179,c	;volatile
 10689   004A0A                     
 10690                           ; BSR set to: 0
 10691                           ;MCAL_Layer/Timer3/hal_timer3.c: 128:     TMR3L=(uint8)(timer3_preload);
 10692   004A0A  C092  FFB2         	movff	_timer3_preload,4018	;volatile
 10693   004A0E                     
 10694                           ; BSR set to: 0
 10695   004A0E  0012               	return		;funcret
 10696   004A10                     __end_of_TMR3_ISR:
 10697                           	callstack 0
 10698                           
 10699 ;; *************** function _TMR2_ISR *****************
 10700 ;; Defined at:
 10701 ;;		line 106 in file "MCAL_Layer/Timer2/hal_timer2.c"
 10702 ;; Parameters:    Size  Location     Type
 10703 ;;		None
 10704 ;; Auto vars:     Size  Location     Type
 10705 ;;		None
 10706 ;; Return value:  Size  Location     Type
 10707 ;;                  1    wreg      void 
 10708 ;; Registers used:
 10709 ;;		None
 10710 ;; Tracked objects:
 10711 ;;		On entry : 0/0
 10712 ;;		On exit  : 0/0
 10713 ;;		Unchanged: 0/0
 10714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10719 ;;Total ram usage:        0 bytes
 10720 ;; Hardware stack levels used: 1
 10721 ;; This function calls:
 10722 ;;		Nothing
 10723 ;; This function is called by:
 10724 ;;		_InterruptManagerHigh
 10725 ;; This function uses a non-reentrant model
 10726 ;;
 10727                           
 10728                           	psect	text54
 10729   004A2C                     __ptext54:
 10730                           	callstack 0
 10731   004A2C                     _TMR2_ISR:
 10732                           	callstack 20
 10733   004A2C                     
 10734                           ;MCAL_Layer/Timer2/hal_timer2.c: 107:     (PIR1bits.TMR2IF=0) ;
 10735   004A2C  929E               	bcf	158,1,c	;volatile
 10736                           
 10737                           ;MCAL_Layer/Timer2/hal_timer2.c: 108:     TMR2=timer2_preload;
 10738   004A2E  C062  FFCC         	movff	_timer2_preload,4044	;volatile
 10739   004A32  0012               	return		;funcret
 10740   004A34                     __end_of_TMR2_ISR:
 10741                           	callstack 0
 10742                           
 10743 ;; *************** function _TMR1_ISR *****************
 10744 ;; Defined at:
 10745 ;;		line 108 in file "MCAL_Layer/Timer1/hal_timer1.c"
 10746 ;; Parameters:    Size  Location     Type
 10747 ;;		None
 10748 ;; Auto vars:     Size  Location     Type
 10749 ;;		None
 10750 ;; Return value:  Size  Location     Type
 10751 ;;                  1    wreg      void 
 10752 ;; Registers used:
 10753 ;;		wreg, status,2
 10754 ;; Tracked objects:
 10755 ;;		On entry : 0/0
 10756 ;;		On exit  : 0/0
 10757 ;;		Unchanged: 0/0
 10758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10763 ;;Total ram usage:        0 bytes
 10764 ;; Hardware stack levels used: 1
 10765 ;; This function calls:
 10766 ;;		Nothing
 10767 ;; This function is called by:
 10768 ;;		_InterruptManagerHigh
 10769 ;; This function uses a non-reentrant model
 10770 ;;
 10771                           
 10772                           	psect	text55
 10773   004A10                     __ptext55:
 10774                           	callstack 0
 10775   004A10                     _TMR1_ISR:
 10776                           	callstack 20
 10777   004A10                     
 10778                           ;MCAL_Layer/Timer1/hal_timer1.c: 109:     (PIR1bits.TMR1IF=0) ;
 10779   004A10  909E               	bcf	158,0,c	;volatile
 10780   004A12                     
 10781                           ;MCAL_Layer/Timer1/hal_timer1.c: 110:     TMR1H=(timer1_preload) >> 8;
 10782   004A12  0100               	movlb	0	; () banked
 10783   004A14  5199               	movf	(_timer1_preload+1)& (0+255),w,b
 10784   004A16  6ECF               	movwf	207,c	;volatile
 10785   004A18                     
 10786                           ; BSR set to: 0
 10787                           ;MCAL_Layer/Timer1/hal_timer1.c: 111:     TMR1L=(uint8)(timer1_preload);
 10788   004A18  C098  FFCE         	movff	_timer1_preload,4046	;volatile
 10789   004A1C                     
 10790                           ; BSR set to: 0
 10791   004A1C  0012               	return		;funcret
 10792   004A1E                     __end_of_TMR1_ISR:
 10793                           	callstack 0
 10794                           
 10795 ;; *************** function _TMR0_ISR *****************
 10796 ;; Defined at:
 10797 ;;		line 105 in file "MCAL_Layer/Timer0/hal_timer0.c"
 10798 ;; Parameters:    Size  Location     Type
 10799 ;;		None
 10800 ;; Auto vars:     Size  Location     Type
 10801 ;;		None
 10802 ;; Return value:  Size  Location     Type
 10803 ;;                  1    wreg      void 
 10804 ;; Registers used:
 10805 ;;		wreg, status,2
 10806 ;; Tracked objects:
 10807 ;;		On entry : 0/0
 10808 ;;		On exit  : 0/0
 10809 ;;		Unchanged: 0/0
 10810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10815 ;;Total ram usage:        0 bytes
 10816 ;; Hardware stack levels used: 1
 10817 ;; This function calls:
 10818 ;;		Nothing
 10819 ;; This function is called by:
 10820 ;;		_InterruptManagerHigh
 10821 ;; This function uses a non-reentrant model
 10822 ;;
 10823                           
 10824                           	psect	text56
 10825   004A1E                     __ptext56:
 10826                           	callstack 0
 10827   004A1E                     _TMR0_ISR:
 10828                           	callstack 20
 10829   004A1E                     
 10830                           ;MCAL_Layer/Timer0/hal_timer0.c: 106:     (INTCONbits.TMR0IF=0) ;
 10831   004A1E  94F2               	bcf	242,2,c	;volatile
 10832   004A20                     
 10833                           ;MCAL_Layer/Timer0/hal_timer0.c: 107:     TMR0H=(timer0_preload) >> 8;
 10834   004A20  0100               	movlb	0	; () banked
 10835   004A22  519D               	movf	(_timer0_preload+1)& (0+255),w,b
 10836   004A24  6ED7               	movwf	215,c	;volatile
 10837   004A26                     
 10838                           ; BSR set to: 0
 10839                           ;MCAL_Layer/Timer0/hal_timer0.c: 108:     TMR0L=(uint8)(timer0_preload);
 10840   004A26  C09C  FFD6         	movff	_timer0_preload,4054	;volatile
 10841   004A2A                     
 10842                           ; BSR set to: 0
 10843   004A2A  0012               	return		;funcret
 10844   004A2C                     __end_of_TMR0_ISR:
 10845                           	callstack 0
 10846                           
 10847 ;; *************** function _RB7_ISR *****************
 10848 ;; Defined at:
 10849 ;;		line 128 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 10850 ;; Parameters:    Size  Location     Type
 10851 ;;  RB7_source      1    wreg     unsigned char 
 10852 ;; Auto vars:     Size  Location     Type
 10853 ;;  RB7_source      1    0[COMRAM] unsigned char 
 10854 ;; Return value:  Size  Location     Type
 10855 ;;                  1    wreg      void 
 10856 ;; Registers used:
 10857 ;;		wreg, status,2, status,0
 10858 ;; Tracked objects:
 10859 ;;		On entry : 0/0
 10860 ;;		On exit  : 0/0
 10861 ;;		Unchanged: 0/0
 10862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10864 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10866 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10867 ;;Total ram usage:        1 bytes
 10868 ;; Hardware stack levels used: 1
 10869 ;; This function calls:
 10870 ;;		Nothing
 10871 ;; This function is called by:
 10872 ;;		_InterruptManagerHigh
 10873 ;; This function uses a non-reentrant model
 10874 ;;
 10875                           
 10876                           	psect	text57
 10877   00498A                     __ptext57:
 10878                           	callstack 0
 10879   00498A                     _RB7_ISR:
 10880                           	callstack 20
 10881                           
 10882                           ; BSR set to: 0
 10883                           ;incstack = 0
 10884                           ;RB7_ISR@RB7_source stored from wreg
 10885   00498A  6E01               	movwf	RB7_ISR@RB7_source^0,c
 10886   00498C                     
 10887                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 130:     (INTCONbits.RBIF=0) ;
 10888   00498C  90F2               	bcf	242,0,c	;volatile
 10889   00498E                     
 10890                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 132:     if (0 == RB7_source){
 10891   00498E  5001               	movf	RB7_ISR@RB7_source^0,w,c
 10892   004990  A4D8               	btfss	status,2,c
 10893   004992  EFCD  F024         	goto	i2u700_41
 10894   004996  EFCF  F024         	goto	i2u700_40
 10895   00499A                     i2u700_41:
 10896   00499A  EFD1  F024         	goto	i2l8078
 10897   00499E                     i2u700_40:
 10898   00499E  EFD1  F024         	goto	i2l1137
 10899   0049A2                     i2l8078:
 10900   0049A2                     i2l1137:
 10901   0049A2  0012               	return		;funcret
 10902   0049A4                     __end_of_RB7_ISR:
 10903                           	callstack 0
 10904                           
 10905 ;; *************** function _RB6_ISR *****************
 10906 ;; Defined at:
 10907 ;;		line 110 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 10908 ;; Parameters:    Size  Location     Type
 10909 ;;  RB6_source      1    wreg     unsigned char 
 10910 ;; Auto vars:     Size  Location     Type
 10911 ;;  RB6_source      1    0[COMRAM] unsigned char 
 10912 ;; Return value:  Size  Location     Type
 10913 ;;                  1    wreg      void 
 10914 ;; Registers used:
 10915 ;;		wreg, status,2, status,0
 10916 ;; Tracked objects:
 10917 ;;		On entry : 0/0
 10918 ;;		On exit  : 0/0
 10919 ;;		Unchanged: 0/0
 10920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10922 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10924 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10925 ;;Total ram usage:        1 bytes
 10926 ;; Hardware stack levels used: 1
 10927 ;; This function calls:
 10928 ;;		Nothing
 10929 ;; This function is called by:
 10930 ;;		_InterruptManagerHigh
 10931 ;; This function uses a non-reentrant model
 10932 ;;
 10933                           
 10934                           	psect	text58
 10935   0049A4                     __ptext58:
 10936                           	callstack 0
 10937   0049A4                     _RB6_ISR:
 10938                           	callstack 20
 10939                           
 10940                           ;incstack = 0
 10941                           ;RB6_ISR@RB6_source stored from wreg
 10942   0049A4  6E01               	movwf	RB6_ISR@RB6_source^0,c
 10943   0049A6                     
 10944                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 112:     (INTCONbits.RBIF=0) ;
 10945   0049A6  90F2               	bcf	242,0,c	;volatile
 10946   0049A8                     
 10947                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 114:     if (0 == RB6_source){
 10948   0049A8  5001               	movf	RB6_ISR@RB6_source^0,w,c
 10949   0049AA  A4D8               	btfss	status,2,c
 10950   0049AC  EFDA  F024         	goto	i2u699_41
 10951   0049B0  EFDC  F024         	goto	i2u699_40
 10952   0049B4                     i2u699_41:
 10953   0049B4  EFDE  F024         	goto	i2l8064
 10954   0049B8                     i2u699_40:
 10955   0049B8  EFDE  F024         	goto	i2l1126
 10956   0049BC                     i2l8064:
 10957   0049BC                     i2l1126:
 10958   0049BC  0012               	return		;funcret
 10959   0049BE                     __end_of_RB6_ISR:
 10960                           	callstack 0
 10961                           
 10962 ;; *************** function _RB5_ISR *****************
 10963 ;; Defined at:
 10964 ;;		line 92 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 10965 ;; Parameters:    Size  Location     Type
 10966 ;;  RB5_source      1    wreg     unsigned char 
 10967 ;; Auto vars:     Size  Location     Type
 10968 ;;  RB5_source      1    0[COMRAM] unsigned char 
 10969 ;; Return value:  Size  Location     Type
 10970 ;;                  1    wreg      void 
 10971 ;; Registers used:
 10972 ;;		wreg, status,2, status,0
 10973 ;; Tracked objects:
 10974 ;;		On entry : 0/0
 10975 ;;		On exit  : 0/0
 10976 ;;		Unchanged: 0/0
 10977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10979 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10981 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10982 ;;Total ram usage:        1 bytes
 10983 ;; Hardware stack levels used: 1
 10984 ;; This function calls:
 10985 ;;		Nothing
 10986 ;; This function is called by:
 10987 ;;		_InterruptManagerHigh
 10988 ;; This function uses a non-reentrant model
 10989 ;;
 10990                           
 10991                           	psect	text59
 10992   0049BE                     __ptext59:
 10993                           	callstack 0
 10994   0049BE                     _RB5_ISR:
 10995                           	callstack 20
 10996                           
 10997                           ;incstack = 0
 10998                           ;RB5_ISR@RB5_source stored from wreg
 10999   0049BE  6E01               	movwf	RB5_ISR@RB5_source^0,c
 11000   0049C0                     
 11001                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 94:     (INTCONbits.RBIF=0) ;
 11002   0049C0  90F2               	bcf	242,0,c	;volatile
 11003   0049C2                     
 11004                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 96:     if (0 == RB5_source){
 11005   0049C2  5001               	movf	RB5_ISR@RB5_source^0,w,c
 11006   0049C4  A4D8               	btfss	status,2,c
 11007   0049C6  EFE7  F024         	goto	i2u698_41
 11008   0049CA  EFE9  F024         	goto	i2u698_40
 11009   0049CE                     i2u698_41:
 11010   0049CE  EFEB  F024         	goto	i2l8050
 11011   0049D2                     i2u698_40:
 11012   0049D2  EFEB  F024         	goto	i2l1115
 11013   0049D6                     i2l8050:
 11014   0049D6                     i2l1115:
 11015   0049D6  0012               	return		;funcret
 11016   0049D8                     __end_of_RB5_ISR:
 11017                           	callstack 0
 11018                           
 11019 ;; *************** function _RB4_ISR *****************
 11020 ;; Defined at:
 11021 ;;		line 74 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 11022 ;; Parameters:    Size  Location     Type
 11023 ;;  RB4_source      1    wreg     unsigned char 
 11024 ;; Auto vars:     Size  Location     Type
 11025 ;;  RB4_source      1    0[COMRAM] unsigned char 
 11026 ;; Return value:  Size  Location     Type
 11027 ;;                  1    wreg      void 
 11028 ;; Registers used:
 11029 ;;		wreg, status,2, status,0
 11030 ;; Tracked objects:
 11031 ;;		On entry : 0/0
 11032 ;;		On exit  : 0/0
 11033 ;;		Unchanged: 0/0
 11034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11036 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11038 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11039 ;;Total ram usage:        1 bytes
 11040 ;; Hardware stack levels used: 1
 11041 ;; This function calls:
 11042 ;;		Nothing
 11043 ;; This function is called by:
 11044 ;;		_InterruptManagerHigh
 11045 ;; This function uses a non-reentrant model
 11046 ;;
 11047                           
 11048                           	psect	text60
 11049   0049D8                     __ptext60:
 11050                           	callstack 0
 11051   0049D8                     _RB4_ISR:
 11052                           	callstack 20
 11053                           
 11054                           ;incstack = 0
 11055                           ;RB4_ISR@RB4_source stored from wreg
 11056   0049D8  6E01               	movwf	RB4_ISR@RB4_source^0,c
 11057   0049DA                     
 11058                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 76:     (INTCONbits.RBIF=0) ;
 11059   0049DA  90F2               	bcf	242,0,c	;volatile
 11060   0049DC                     
 11061                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 78:     if (0 == RB4_source){
 11062   0049DC  5001               	movf	RB4_ISR@RB4_source^0,w,c
 11063   0049DE  A4D8               	btfss	status,2,c
 11064   0049E0  EFF4  F024         	goto	i2u697_41
 11065   0049E4  EFF6  F024         	goto	i2u697_40
 11066   0049E8                     i2u697_41:
 11067   0049E8  EFF8  F024         	goto	i2l8036
 11068   0049EC                     i2u697_40:
 11069   0049EC  EFF8  F024         	goto	i2l1104
 11070   0049F0                     i2l8036:
 11071   0049F0                     i2l1104:
 11072   0049F0  0012               	return		;funcret
 11073   0049F2                     __end_of_RB4_ISR:
 11074                           	callstack 0
 11075                           
 11076 ;; *************** function _MSSP_I2C_ISR *****************
 11077 ;; Defined at:
 11078 ;;		line 270 in file "MCAL_Layer/I2C/hal_i2c.c"
 11079 ;; Parameters:    Size  Location     Type
 11080 ;;		None
 11081 ;; Auto vars:     Size  Location     Type
 11082 ;;		None
 11083 ;; Return value:  Size  Location     Type
 11084 ;;                  1    wreg      void 
 11085 ;; Registers used:
 11086 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 11087 ;; Tracked objects:
 11088 ;;		On entry : 0/0
 11089 ;;		On exit  : 0/0
 11090 ;;		Unchanged: 0/0
 11091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11096 ;;Total ram usage:        0 bytes
 11097 ;; Hardware stack levels used: 1
 11098 ;; Hardware stack levels required when called: 1
 11099 ;; This function calls:
 11100 ;;		NULL
 11101 ;;		_MSSP_I2C_DefaultInterruptHandler
 11102 ;; This function is called by:
 11103 ;;		_InterruptManagerHigh
 11104 ;; This function uses a non-reentrant model
 11105 ;;
 11106                           
 11107                           	psect	text61
 11108   0048BC                     __ptext61:
 11109                           	callstack 0
 11110   0048BC                     _MSSP_I2C_ISR:
 11111                           	callstack 19
 11112   0048BC                     
 11113                           ;MCAL_Layer/I2C/hal_i2c.c: 272:     (PIR1bits.SSPIF=0);
 11114   0048BC  969E               	bcf	158,3,c	;volatile
 11115   0048BE                     
 11116                           ;MCAL_Layer/I2C/hal_i2c.c: 273:     if(I2C_DefaultInterruptHandler){
 11117   0048BE  0100               	movlb	0	; () banked
 11118   0048C0  51B8               	movf	_I2C_DefaultInterruptHandler& (0+255),w,b
 11119   0048C2  11B9               	iorwf	(_I2C_DefaultInterruptHandler+1)& (0+255),w,b
 11120   0048C4  B4D8               	btfsc	status,2,c
 11121   0048C6  EF67  F024         	goto	i2u695_41
 11122   0048CA  EF69  F024         	goto	i2u695_40
 11123   0048CE                     i2u695_41:
 11124   0048CE  EF75  F024         	goto	i2l1018
 11125   0048D2                     i2u695_40:
 11126   0048D2                     
 11127                           ; BSR set to: 0
 11128                           ;MCAL_Layer/I2C/hal_i2c.c: 274:         I2C_DefaultInterruptHandler();
 11129   0048D2  D802               	call	i2u696_48
 11130   0048D4  EF75  F024         	goto	i2u696_49
 11131   0048D8                     i2u696_48:
 11132   0048D8  0005               	push	
 11133   0048DA  6EFA               	movwf	pclath,c
 11134   0048DC  51B8               	movf	_I2C_DefaultInterruptHandler& (0+255),w,b
 11135   0048DE  6EFD               	movwf	tosl,c
 11136   0048E0  51B9               	movf	(_I2C_DefaultInterruptHandler+1)& (0+255),w,b
 11137   0048E2  6EFE               	movwf	tosh,c
 11138   0048E4  6AFF               	clrf	tosu,c
 11139   0048E6  50FA               	movf	pclath,w,c
 11140   0048E8  0012               	return		;indir
 11141   0048EA                     i2u696_49:
 11142   0048EA                     i2l1018:
 11143   0048EA  0012               	return		;funcret
 11144   0048EC                     __end_of_MSSP_I2C_ISR:
 11145                           	callstack 0
 11146                           
 11147 ;; *************** function _MSSP_I2C_DefaultInterruptHandler *****************
 11148 ;; Defined at:
 11149 ;;		line 29 in file "application.c"
 11150 ;; Parameters:    Size  Location     Type
 11151 ;;		None
 11152 ;; Auto vars:     Size  Location     Type
 11153 ;;		None
 11154 ;; Return value:  Size  Location     Type
 11155 ;;                  1    wreg      void 
 11156 ;; Registers used:
 11157 ;;		wreg
 11158 ;; Tracked objects:
 11159 ;;		On entry : 0/0
 11160 ;;		On exit  : 0/0
 11161 ;;		Unchanged: 0/0
 11162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11167 ;;Total ram usage:        0 bytes
 11168 ;; Hardware stack levels used: 1
 11169 ;; This function calls:
 11170 ;;		Nothing
 11171 ;; This function is called by:
 11172 ;;		_I2C_Obj_CFG
 11173 ;;		_MSSP_I2C_ISR
 11174 ;; This function uses a non-reentrant model
 11175 ;;
 11176                           
 11177                           	psect	text62
 11178   0047A2                     __ptext62:
 11179                           	callstack 0
 11180   0047A2                     _MSSP_I2C_DefaultInterruptHandler:
 11181                           	callstack 19
 11182   0047A2                     
 11183                           ;application.c: 31:     (SSPCON1bits.CKP=0);
 11184   0047A2  98C6               	bcf	198,4,c	;volatile
 11185                           
 11186                           ;application.c: 32:     if((SSPSTATbits.R_nW==0) && (SSPSTATbits.D_nA == 0)){
 11187   0047A4  B4C7               	btfsc	199,2,c	;volatile
 11188   0047A6  EFD7  F023         	goto	i2u659_41
 11189   0047AA  EFD9  F023         	goto	i2u659_40
 11190   0047AE                     i2u659_41:
 11191   0047AE  EFED  F023         	goto	i2l1795
 11192   0047B2                     i2u659_40:
 11193   0047B2  BAC7               	btfsc	199,5,c	;volatile
 11194   0047B4  EFDE  F023         	goto	i2u660_41
 11195   0047B8  EFE0  F023         	goto	i2u660_40
 11196   0047BC                     i2u660_41:
 11197   0047BC  EFED  F023         	goto	i2l1795
 11198   0047C0                     i2u660_40:
 11199   0047C0                     
 11200                           ;application.c: 33:         dummy_buffer=SSPBUF;
 11201   0047C0  CFC9 F0C8          	movff	4041,_dummy_buffer	;volatile
 11202   0047C4                     i2l1796:
 11203   0047C4  A0C7               	btfss	199,0,c	;volatile
 11204   0047C6  EFE7  F023         	goto	i2u661_41
 11205   0047CA  EFE9  F023         	goto	i2u661_40
 11206   0047CE                     i2u661_41:
 11207   0047CE  EFE2  F023         	goto	i2l1796
 11208   0047D2                     i2u661_40:
 11209   0047D2                     
 11210                           ;application.c: 35:         i2c_slave_rec_data=SSPBUF;
 11211   0047D2  CFC9 F0C7          	movff	4041,_i2c_slave_rec_data	;volatile
 11212                           
 11213                           ;application.c: 36:     }
 11214   0047D6  EFEE  F023         	goto	i2l1799
 11215   0047DA                     i2l1795:
 11216   0047DA  50C7               	movf	199,w,c	;volatile
 11217   0047DC                     i2l1799:
 11218                           
 11219                           ;application.c: 43:     (SSPCON1bits.CKP=1);
 11220   0047DC  88C6               	bsf	198,4,c	;volatile
 11221   0047DE  0012               	return		;funcret
 11222   0047E0                     __end_of_MSSP_I2C_DefaultInterruptHandler:
 11223                           	callstack 0
 11224                           
 11225 ;; *************** function _MSSP_I2C_BC_ISR *****************
 11226 ;; Defined at:
 11227 ;;		line 279 in file "MCAL_Layer/I2C/hal_i2c.c"
 11228 ;; Parameters:    Size  Location     Type
 11229 ;;		None
 11230 ;; Auto vars:     Size  Location     Type
 11231 ;;		None
 11232 ;; Return value:  Size  Location     Type
 11233 ;;                  1    wreg      void 
 11234 ;; Registers used:
 11235 ;;		None
 11236 ;; Tracked objects:
 11237 ;;		On entry : 0/0
 11238 ;;		On exit  : 0/0
 11239 ;;		Unchanged: 0/0
 11240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11245 ;;Total ram usage:        0 bytes
 11246 ;; Hardware stack levels used: 1
 11247 ;; This function calls:
 11248 ;;		Nothing
 11249 ;; This function is called by:
 11250 ;;		_InterruptManagerHigh
 11251 ;; This function uses a non-reentrant model
 11252 ;;
 11253                           
 11254                           	psect	text63
 11255   004A44                     __ptext63:
 11256                           	callstack 0
 11257   004A44                     _MSSP_I2C_BC_ISR:
 11258                           	callstack 20
 11259   004A44                     
 11260                           ;MCAL_Layer/I2C/hal_i2c.c: 281:     (PIR2bits.BCLIF=0);
 11261   004A44  96A1               	bcf	161,3,c	;volatile
 11262   004A46  0012               	return		;funcret
 11263   004A48                     __end_of_MSSP_I2C_BC_ISR:
 11264                           	callstack 0
 11265                           
 11266 ;; *************** function _INT2_ISR *****************
 11267 ;; Defined at:
 11268 ;;		line 64 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 11269 ;; Parameters:    Size  Location     Type
 11270 ;;		None
 11271 ;; Auto vars:     Size  Location     Type
 11272 ;;		None
 11273 ;; Return value:  Size  Location     Type
 11274 ;;                  1    wreg      void 
 11275 ;; Registers used:
 11276 ;;		None
 11277 ;; Tracked objects:
 11278 ;;		On entry : 0/0
 11279 ;;		On exit  : 0/0
 11280 ;;		Unchanged: 0/0
 11281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11286 ;;Total ram usage:        0 bytes
 11287 ;; Hardware stack levels used: 1
 11288 ;; This function calls:
 11289 ;;		Nothing
 11290 ;; This function is called by:
 11291 ;;		_InterruptManagerHigh
 11292 ;; This function uses a non-reentrant model
 11293 ;;
 11294                           
 11295                           	psect	text64
 11296   004A48                     __ptext64:
 11297                           	callstack 0
 11298   004A48                     _INT2_ISR:
 11299                           	callstack 20
 11300   004A48                     
 11301                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 66:     (INTCON3bits.INT2IF=0) ;
 11302   004A48  92F0               	bcf	240,1,c	;volatile
 11303   004A4A  0012               	return		;funcret
 11304   004A4C                     __end_of_INT2_ISR:
 11305                           	callstack 0
 11306                           
 11307 ;; *************** function _INT1_ISR *****************
 11308 ;; Defined at:
 11309 ;;		line 54 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 11310 ;; Parameters:    Size  Location     Type
 11311 ;;		None
 11312 ;; Auto vars:     Size  Location     Type
 11313 ;;		None
 11314 ;; Return value:  Size  Location     Type
 11315 ;;                  1    wreg      void 
 11316 ;; Registers used:
 11317 ;;		None
 11318 ;; Tracked objects:
 11319 ;;		On entry : 0/0
 11320 ;;		On exit  : 0/0
 11321 ;;		Unchanged: 0/0
 11322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11327 ;;Total ram usage:        0 bytes
 11328 ;; Hardware stack levels used: 1
 11329 ;; This function calls:
 11330 ;;		Nothing
 11331 ;; This function is called by:
 11332 ;;		_InterruptManagerHigh
 11333 ;; This function uses a non-reentrant model
 11334 ;;
 11335                           
 11336                           	psect	text65
 11337   004A4C                     __ptext65:
 11338                           	callstack 0
 11339   004A4C                     _INT1_ISR:
 11340                           	callstack 20
 11341   004A4C                     
 11342                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 56:     (INTCON3bits.INT1IF=0) ;
 11343   004A4C  90F0               	bcf	240,0,c	;volatile
 11344   004A4E  0012               	return		;funcret
 11345   004A50                     __end_of_INT1_ISR:
 11346                           	callstack 0
 11347                           
 11348 ;; *************** function _INT0_ISR *****************
 11349 ;; Defined at:
 11350 ;;		line 44 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 11351 ;; Parameters:    Size  Location     Type
 11352 ;;		None
 11353 ;; Auto vars:     Size  Location     Type
 11354 ;;		None
 11355 ;; Return value:  Size  Location     Type
 11356 ;;                  1    wreg      void 
 11357 ;; Registers used:
 11358 ;;		None
 11359 ;; Tracked objects:
 11360 ;;		On entry : 0/0
 11361 ;;		On exit  : 0/0
 11362 ;;		Unchanged: 0/0
 11363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11368 ;;Total ram usage:        0 bytes
 11369 ;; Hardware stack levels used: 1
 11370 ;; This function calls:
 11371 ;;		Nothing
 11372 ;; This function is called by:
 11373 ;;		_InterruptManagerHigh
 11374 ;; This function uses a non-reentrant model
 11375 ;;
 11376                           
 11377                           	psect	text66
 11378   004A50                     __ptext66:
 11379                           	callstack 0
 11380   004A50                     _INT0_ISR:
 11381                           	callstack 20
 11382   004A50                     
 11383                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 46:     (INTCONbits.INT0IF=0) ;
 11384   004A50  92F2               	bcf	242,1,c	;volatile
 11385   004A52  0012               	return		;funcret
 11386   004A54                     __end_of_INT0_ISR:
 11387                           	callstack 0
 11388                           
 11389 ;; *************** function _EUSART_Tx_ISR *****************
 11390 ;; Defined at:
 11391 ;;		line 262 in file "MCAL_Layer/USART/hal_usart.c"
 11392 ;; Parameters:    Size  Location     Type
 11393 ;;		None
 11394 ;; Auto vars:     Size  Location     Type
 11395 ;;		None
 11396 ;; Return value:  Size  Location     Type
 11397 ;;                  1    wreg      void 
 11398 ;; Registers used:
 11399 ;;		None
 11400 ;; Tracked objects:
 11401 ;;		On entry : 0/0
 11402 ;;		On exit  : 0/0
 11403 ;;		Unchanged: 0/0
 11404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11409 ;;Total ram usage:        0 bytes
 11410 ;; Hardware stack levels used: 1
 11411 ;; This function calls:
 11412 ;;		Nothing
 11413 ;; This function is called by:
 11414 ;;		_InterruptManagerHigh
 11415 ;; This function uses a non-reentrant model
 11416 ;;
 11417                           
 11418                           	psect	text67
 11419   004A54                     __ptext67:
 11420                           	callstack 0
 11421   004A54                     _EUSART_Tx_ISR:
 11422                           	callstack 20
 11423   004A54                     
 11424                           ;MCAL_Layer/USART/hal_usart.c: 263:     (PIE1bits.TXIE=0);
 11425   004A54  989D               	bcf	157,4,c	;volatile
 11426   004A56  0012               	return		;funcret
 11427   004A58                     __end_of_EUSART_Tx_ISR:
 11428                           	callstack 0
 11429                           
 11430 ;; *************** function _EUSART_Rx_ISR *****************
 11431 ;; Defined at:
 11432 ;;		line 269 in file "MCAL_Layer/USART/hal_usart.c"
 11433 ;; Parameters:    Size  Location     Type
 11434 ;;		None
 11435 ;; Auto vars:     Size  Location     Type
 11436 ;;		None
 11437 ;; Return value:  Size  Location     Type
 11438 ;;                  1    wreg      void 
 11439 ;; Registers used:
 11440 ;;		wreg, status,2, status,0
 11441 ;; Tracked objects:
 11442 ;;		On entry : 0/0
 11443 ;;		On exit  : 0/0
 11444 ;;		Unchanged: 0/0
 11445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11450 ;;Total ram usage:        0 bytes
 11451 ;; Hardware stack levels used: 1
 11452 ;; This function calls:
 11453 ;;		Nothing
 11454 ;; This function is called by:
 11455 ;;		_InterruptManagerHigh
 11456 ;; This function uses a non-reentrant model
 11457 ;;
 11458                           
 11459                           	psect	text68
 11460   004A62                     __ptext68:
 11461                           	callstack 0
 11462   004A62                     _EUSART_Rx_ISR:
 11463                           	callstack 20
 11464   004A62  0012               	return		;funcret
 11465   004A64                     __end_of_EUSART_Rx_ISR:
 11466                           	callstack 0
 11467                           
 11468 ;; *************** function _CCP2_ISR *****************
 11469 ;; Defined at:
 11470 ;;		line 20 in file "MCAL_Layer/CCP1/hal_ccp1.c"
 11471 ;; Parameters:    Size  Location     Type
 11472 ;;		None
 11473 ;; Auto vars:     Size  Location     Type
 11474 ;;		None
 11475 ;; Return value:  Size  Location     Type
 11476 ;;                  1    wreg      void 
 11477 ;; Registers used:
 11478 ;;		None
 11479 ;; Tracked objects:
 11480 ;;		On entry : 0/0
 11481 ;;		On exit  : 0/0
 11482 ;;		Unchanged: 0/0
 11483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11488 ;;Total ram usage:        0 bytes
 11489 ;; Hardware stack levels used: 1
 11490 ;; This function calls:
 11491 ;;		Nothing
 11492 ;; This function is called by:
 11493 ;;		_InterruptManagerHigh
 11494 ;; This function uses a non-reentrant model
 11495 ;;
 11496                           
 11497                           	psect	text69
 11498   004A58                     __ptext69:
 11499                           	callstack 0
 11500   004A58                     _CCP2_ISR:
 11501                           	callstack 20
 11502   004A58                     
 11503                           ;MCAL_Layer/CCP1/hal_ccp1.c: 21:     (PIR2bits.CCP2IF=0) ;
 11504   004A58  90A1               	bcf	161,0,c	;volatile
 11505   004A5A  0012               	return		;funcret
 11506   004A5C                     __end_of_CCP2_ISR:
 11507                           	callstack 0
 11508                           
 11509 ;; *************** function _CCP1_ISR *****************
 11510 ;; Defined at:
 11511 ;;		line 27 in file "MCAL_Layer/CCP1/hal_ccp1.c"
 11512 ;; Parameters:    Size  Location     Type
 11513 ;;		None
 11514 ;; Auto vars:     Size  Location     Type
 11515 ;;		None
 11516 ;; Return value:  Size  Location     Type
 11517 ;;                  1    wreg      void 
 11518 ;; Registers used:
 11519 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 11520 ;; Tracked objects:
 11521 ;;		On entry : 0/0
 11522 ;;		On exit  : 0/0
 11523 ;;		Unchanged: 0/0
 11524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11529 ;;Total ram usage:        0 bytes
 11530 ;; Hardware stack levels used: 1
 11531 ;; Hardware stack levels required when called: 2
 11532 ;; This function calls:
 11533 ;;		NULL
 11534 ;;		_CCP1_DefaultInterruptHandler
 11535 ;; This function is called by:
 11536 ;;		_InterruptManagerHigh
 11537 ;; This function uses a non-reentrant model
 11538 ;;
 11539                           
 11540                           	psect	text70
 11541   0048EC                     __ptext70:
 11542                           	callstack 0
 11543   0048EC                     _CCP1_ISR:
 11544                           	callstack 18
 11545   0048EC                     
 11546                           ;MCAL_Layer/CCP1/hal_ccp1.c: 28:     (PIR1bits.CCP1IF=0) ;
 11547   0048EC  949E               	bcf	158,2,c	;volatile
 11548   0048EE                     
 11549                           ;MCAL_Layer/CCP1/hal_ccp1.c: 29:     if(CCP1_Interrupt_Handler){
 11550   0048EE  0100               	movlb	0	; () banked
 11551   0048F0  51C0               	movf	_CCP1_Interrupt_Handler& (0+255),w,b
 11552   0048F2  11C1               	iorwf	(_CCP1_Interrupt_Handler+1)& (0+255),w,b
 11553   0048F4  B4D8               	btfsc	status,2,c
 11554   0048F6  EF7F  F024         	goto	i2u693_41
 11555   0048FA  EF81  F024         	goto	i2u693_40
 11556   0048FE                     i2u693_41:
 11557   0048FE  EF8D  F024         	goto	i2l650
 11558   004902                     i2u693_40:
 11559   004902                     
 11560                           ; BSR set to: 0
 11561                           ;MCAL_Layer/CCP1/hal_ccp1.c: 30:         CCP1_Interrupt_Handler();
 11562   004902  D802               	call	i2u694_48
 11563   004904  EF8D  F024         	goto	i2u694_49
 11564   004908                     i2u694_48:
 11565   004908  0005               	push	
 11566   00490A  6EFA               	movwf	pclath,c
 11567   00490C  51C0               	movf	_CCP1_Interrupt_Handler& (0+255),w,b
 11568   00490E  6EFD               	movwf	tosl,c
 11569   004910  51C1               	movf	(_CCP1_Interrupt_Handler+1)& (0+255),w,b
 11570   004912  6EFE               	movwf	tosh,c
 11571   004914  6AFF               	clrf	tosu,c
 11572   004916  50FA               	movf	pclath,w,c
 11573   004918  0012               	return		;indir
 11574   00491A                     i2u694_49:
 11575   00491A                     i2l650:
 11576   00491A  0012               	return		;funcret
 11577   00491C                     __end_of_CCP1_ISR:
 11578                           	callstack 0
 11579                           
 11580 ;; *************** function _CCP1_DefaultInterruptHandler *****************
 11581 ;; Defined at:
 11582 ;;		line 134 in file "ECU_Layer/ecu_layer_init.c"
 11583 ;; Parameters:    Size  Location     Type
 11584 ;;		None
 11585 ;; Auto vars:     Size  Location     Type
 11586 ;;		None
 11587 ;; Return value:  Size  Location     Type
 11588 ;;                  1    wreg      void 
 11589 ;; Registers used:
 11590 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11591 ;; Tracked objects:
 11592 ;;		On entry : 0/0
 11593 ;;		On exit  : 0/0
 11594 ;;		Unchanged: 0/0
 11595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11600 ;;Total ram usage:        0 bytes
 11601 ;; Hardware stack levels used: 1
 11602 ;; Hardware stack levels required when called: 1
 11603 ;; This function calls:
 11604 ;;		_CCP_Compare_Mode_Set_Value
 11605 ;;		_Timer3_Write_value
 11606 ;; This function is called by:
 11607 ;;		_CCP_SET_Duty
 11608 ;;		_CCP1_ISR
 11609 ;; This function uses a non-reentrant model
 11610 ;;
 11611                           
 11612                           	psect	text71
 11613   004198                     __ptext71:
 11614                           	callstack 0
 11615   004198                     _CCP1_DefaultInterruptHandler:
 11616                           	callstack 18
 11617   004198                     
 11618                           ;ECU_Layer/ecu_layer_init.c: 135:     compare_flag++;
 11619   004198  2A63               	incf	_compare_flag^0,f,c	;volatile
 11620   00419A                     
 11621                           ;ECU_Layer/ecu_layer_init.c: 136:     ret=Timer3_Write_value(&timer_obj,0);
 11622   00419A  0E5F               	movlw	low _timer_obj
 11623   00419C  6E01               	movwf	Timer3_Write_value@_timer^0,c
 11624   00419E  0E01               	movlw	high _timer_obj
 11625   0041A0  6E02               	movwf	(Timer3_Write_value@_timer+1)^0,c
 11626   0041A2  0E00               	movlw	0
 11627   0041A4  6E04               	movwf	(Timer3_Write_value@_value+1)^0,c
 11628   0041A6  0E00               	movlw	0
 11629   0041A8  6E03               	movwf	Timer3_Write_value@_value^0,c
 11630   0041AA  ECA4  F024         	call	_Timer3_Write_value	;wreg free
 11631   0041AE  0100               	movlb	0	; () banked
 11632   0041B0  6FEE               	movwf	_ret& (0+255),b
 11633   0041B2                     
 11634                           ; BSR set to: 0
 11635                           ;ECU_Layer/ecu_layer_init.c: 137:     if (1== compare_flag){
 11636   0041B2  0463               	decf	_compare_flag^0,w,c	;volatile
 11637   0041B4  A4D8               	btfss	status,2,c
 11638   0041B6  EFDF  F020         	goto	i2u641_41
 11639   0041BA  EFE1  F020         	goto	i2u641_40
 11640   0041BE                     i2u641_41:
 11641   0041BE  EFF3  F020         	goto	i2l7626
 11642   0041C2                     i2u641_40:
 11643   0041C2                     
 11644                           ; BSR set to: 0
 11645                           ;ECU_Layer/ecu_layer_init.c: 138:       ret=CCP_Compare_Mode_Set_Value(&ccp1_obj ,2400);
 11646   0041C2  0E42               	movlw	low _ccp1_obj
 11647   0041C4  6E01               	movwf	CCP_Compare_Mode_Set_Value@_ccp_obj^0,c
 11648   0041C6  0E01               	movlw	high _ccp1_obj
 11649   0041C8  6E02               	movwf	(CCP_Compare_Mode_Set_Value@_ccp_obj+1)^0,c
 11650   0041CA  0E09               	movlw	9
 11651   0041CC  6E04               	movwf	(CCP_Compare_Mode_Set_Value@compare_value+1)^0,c
 11652   0041CE  0E60               	movlw	96
 11653   0041D0  6E03               	movwf	CCP_Compare_Mode_Set_Value@compare_value^0,c
 11654   0041D2  ECC0  F021         	call	_CCP_Compare_Mode_Set_Value	;wreg free
 11655   0041D6  0100               	movlb	0	; () banked
 11656   0041D8  6FEE               	movwf	_ret& (0+255),b
 11657   0041DA                     
 11658                           ; BSR set to: 0
 11659                           ;ECU_Layer/ecu_layer_init.c: 139:       (CCP1CONbits.CCP1M = ((uint8)0x09));
 11660   0041DA  50BD               	movf	189,w,c	;volatile
 11661   0041DC  0BF0               	andlw	-16
 11662   0041DE  0909               	iorlw	9
 11663   0041E0  6EBD               	movwf	189,c	;volatile
 11664                           
 11665                           ;ECU_Layer/ecu_layer_init.c: 140:     }
 11666   0041E2  EF0E  F021         	goto	i2l464
 11667   0041E6                     i2l7626:
 11668                           
 11669                           ; BSR set to: 0
 11670   0041E6  0E02               	movlw	2
 11671   0041E8  1863               	xorwf	_compare_flag^0,w,c	;volatile
 11672   0041EA  A4D8               	btfss	status,2,c
 11673   0041EC  EFFA  F020         	goto	i2u642_41
 11674   0041F0  EFFC  F020         	goto	i2u642_40
 11675   0041F4                     i2u642_41:
 11676   0041F4  EF0E  F021         	goto	i2l464
 11677   0041F8                     i2u642_40:
 11678   0041F8                     
 11679                           ; BSR set to: 0
 11680                           ;ECU_Layer/ecu_layer_init.c: 142:       ret=CCP_Compare_Mode_Set_Value(&ccp1_obj ,17600)
      +                          ;
 11681   0041F8  0E42               	movlw	low _ccp1_obj
 11682   0041FA  6E01               	movwf	CCP_Compare_Mode_Set_Value@_ccp_obj^0,c
 11683   0041FC  0E01               	movlw	high _ccp1_obj
 11684   0041FE  6E02               	movwf	(CCP_Compare_Mode_Set_Value@_ccp_obj+1)^0,c
 11685   004200  0E44               	movlw	68
 11686   004202  6E04               	movwf	(CCP_Compare_Mode_Set_Value@compare_value+1)^0,c
 11687   004204  0EC0               	movlw	192
 11688   004206  6E03               	movwf	CCP_Compare_Mode_Set_Value@compare_value^0,c
 11689   004208  ECC0  F021         	call	_CCP_Compare_Mode_Set_Value	;wreg free
 11690   00420C  0100               	movlb	0	; () banked
 11691   00420E  6FEE               	movwf	_ret& (0+255),b
 11692   004210                     
 11693                           ; BSR set to: 0
 11694                           ;ECU_Layer/ecu_layer_init.c: 143:       (CCP1CONbits.CCP1M = ((uint8)0x08));
 11695   004210  50BD               	movf	189,w,c	;volatile
 11696   004212  0BF0               	andlw	-16
 11697   004214  0908               	iorlw	8
 11698   004216  6EBD               	movwf	189,c	;volatile
 11699   004218                     
 11700                           ; BSR set to: 0
 11701                           ;ECU_Layer/ecu_layer_init.c: 144:       compare_flag=0;
 11702   004218  0E00               	movlw	0
 11703   00421A  6E63               	movwf	_compare_flag^0,c	;volatile
 11704   00421C                     i2l464:
 11705                           
 11706                           ; BSR set to: 0
 11707   00421C  0012               	return		;funcret
 11708   00421E                     __end_of_CCP1_DefaultInterruptHandler:
 11709                           	callstack 0
 11710                           
 11711 ;; *************** function _Timer3_Write_value *****************
 11712 ;; Defined at:
 11713 ;;		line 74 in file "MCAL_Layer/Timer3/hal_timer3.c"
 11714 ;; Parameters:    Size  Location     Type
 11715 ;;  _timer          2    0[COMRAM] PTR const struct .
 11716 ;;		 -> timer_obj(7), 
 11717 ;;  _value          2    2[COMRAM] unsigned short 
 11718 ;; Auto vars:     Size  Location     Type
 11719 ;;  ret             1    0        unsigned char 
 11720 ;; Return value:  Size  Location     Type
 11721 ;;                  1    wreg      unsigned char 
 11722 ;; Registers used:
 11723 ;;		wreg, status,2, status,0
 11724 ;; Tracked objects:
 11725 ;;		On entry : 0/0
 11726 ;;		On exit  : 0/0
 11727 ;;		Unchanged: 0/0
 11728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11729 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11732 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11733 ;;Total ram usage:        4 bytes
 11734 ;; Hardware stack levels used: 1
 11735 ;; This function calls:
 11736 ;;		Nothing
 11737 ;; This function is called by:
 11738 ;;		_CCP1_DefaultInterruptHandler
 11739 ;; This function uses a non-reentrant model
 11740 ;;
 11741                           
 11742                           	psect	text72
 11743   004948                     __ptext72:
 11744                           	callstack 0
 11745   004948                     _Timer3_Write_value:
 11746                           	callstack 18
 11747   004948                     
 11748                           ;MCAL_Layer/Timer3/hal_timer3.c: 77:     if(((void*)0) == _timer){
 11749   004948  5001               	movf	Timer3_Write_value@_timer^0,w,c
 11750   00494A  1002               	iorwf	(Timer3_Write_value@_timer+1)^0,w,c
 11751   00494C  A4D8               	btfss	status,2,c
 11752   00494E  EFAB  F024         	goto	i2u625_41
 11753   004952  EFAD  F024         	goto	i2u625_40
 11754   004956                     i2u625_41:
 11755   004956  EFAF  F024         	goto	i2l7394
 11756   00495A                     i2u625_40:
 11757   00495A                     
 11758                           ;MCAL_Layer/Timer3/hal_timer3.c: 79:     }
 11759   00495A  EFB3  F024         	goto	i2l1569
 11760   00495E                     i2l7394:
 11761                           
 11762                           ;MCAL_Layer/Timer3/hal_timer3.c: 81:         TMR3H=(_value) >> 8;
 11763   00495E  5004               	movf	(Timer3_Write_value@_value+1)^0,w,c
 11764   004960  6EB3               	movwf	179,c	;volatile
 11765   004962                     
 11766                           ;MCAL_Layer/Timer3/hal_timer3.c: 82:         TMR3L=(uint8)(_value);
 11767   004962  C003  FFB2         	movff	Timer3_Write_value@_value,4018	;volatile
 11768   004966                     i2l1569:
 11769                           
 11770                           ;MCAL_Layer/Timer3/hal_timer3.c: 87:     return ret;
 11771   004966  0E01               	movlw	1
 11772   004968  0012               	return		;funcret
 11773   00496A                     __end_of_Timer3_Write_value:
 11774                           	callstack 0
 11775                           
 11776 ;; *************** function _CCP_Compare_Mode_Set_Value *****************
 11777 ;; Defined at:
 11778 ;;		line 195 in file "MCAL_Layer/CCP1/hal_ccp1.c"
 11779 ;; Parameters:    Size  Location     Type
 11780 ;;  _ccp_obj        2    0[COMRAM] PTR const struct .
 11781 ;;		 -> ccp1_obj(11), 
 11782 ;;  compare_valu    2    2[COMRAM] unsigned short 
 11783 ;; Auto vars:     Size  Location     Type
 11784 ;;  capture_temp    2    5[COMRAM] struct .
 11785 ;;  ret             1    0        unsigned char 
 11786 ;; Return value:  Size  Location     Type
 11787 ;;                  1    wreg      unsigned char 
 11788 ;; Registers used:
 11789 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11790 ;; Tracked objects:
 11791 ;;		On entry : 0/0
 11792 ;;		On exit  : 0/0
 11793 ;;		Unchanged: 0/0
 11794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11795 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11796 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11797 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11798 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11799 ;;Total ram usage:        7 bytes
 11800 ;; Hardware stack levels used: 1
 11801 ;; This function calls:
 11802 ;;		Nothing
 11803 ;; This function is called by:
 11804 ;;		_CCP1_DefaultInterruptHandler
 11805 ;; This function uses a non-reentrant model
 11806 ;;
 11807                           
 11808                           	psect	text73
 11809   004380                     __ptext73:
 11810                           	callstack 0
 11811   004380                     _CCP_Compare_Mode_Set_Value:
 11812                           	callstack 18
 11813   004380                     
 11814                           ;MCAL_Layer/CCP1/hal_ccp1.c: 198:     if (((void*)0) == _ccp_obj){
 11815   004380  5001               	movf	CCP_Compare_Mode_Set_Value@_ccp_obj^0,w,c
 11816   004382  1002               	iorwf	(CCP_Compare_Mode_Set_Value@_ccp_obj+1)^0,w,c
 11817   004384  A4D8               	btfss	status,2,c
 11818   004386  EFC7  F021         	goto	i2u626_41
 11819   00438A  EFC9  F021         	goto	i2u626_40
 11820   00438E                     i2u626_41:
 11821   00438E  EFCB  F021         	goto	i2l691
 11822   004392                     i2u626_40:
 11823   004392                     i2l7406:
 11824                           
 11825                           ;MCAL_Layer/CCP1/hal_ccp1.c: 200:     }
 11826   004392  EFF7  F021         	goto	i2l692
 11827   004396                     i2l691:
 11828                           
 11829                           ;MCAL_Layer/CCP1/hal_ccp1.c: 203:         capture_temp_value.ccpr_16Bit = compare_value;
 11830   004396  C003  F006         	movff	CCP_Compare_Mode_Set_Value@compare_value,CCP_Compare_Mode_Set_Value@capture_temp_
      +                          value
 11831   00439A  C004  F007         	movff	CCP_Compare_Mode_Set_Value@compare_value+1,CCP_Compare_Mode_Set_Value@capture_tem
      +                          p_value+1
 11832   00439E                     
 11833                           ;MCAL_Layer/CCP1/hal_ccp1.c: 204:         if( CCP1_INST == _ccp_obj->ccp_inst){
 11834   00439E  EE20 F003          	lfsr	2,3
 11835   0043A2  5001               	movf	CCP_Compare_Mode_Set_Value@_ccp_obj^0,w,c
 11836   0043A4  26D9               	addwf	fsr2l,f,c
 11837   0043A6  5002               	movf	(CCP_Compare_Mode_Set_Value@_ccp_obj+1)^0,w,c
 11838   0043A8  22DA               	addwfc	fsr2h,f,c
 11839   0043AA  50DF               	movf	indf2,w,c
 11840   0043AC  A4D8               	btfss	status,2,c
 11841   0043AE  EFDB  F021         	goto	i2u627_41
 11842   0043B2  EFDD  F021         	goto	i2u627_40
 11843   0043B6                     i2u627_41:
 11844   0043B6  EFE3  F021         	goto	i2l7412
 11845   0043BA                     i2u627_40:
 11846   0043BA                     
 11847                           ;MCAL_Layer/CCP1/hal_ccp1.c: 205:             CCPR1L = capture_temp_value.ccpr_low;
 11848   0043BA  C006  FFBE         	movff	CCP_Compare_Mode_Set_Value@capture_temp_value,4030	;volatile
 11849                           
 11850                           ;MCAL_Layer/CCP1/hal_ccp1.c: 206:             CCPR1H = capture_temp_value.ccpr_high;
 11851   0043BE  C007  FFBF         	movff	CCP_Compare_Mode_Set_Value@capture_temp_value+1,4031	;volatile
 11852                           
 11853                           ;MCAL_Layer/CCP1/hal_ccp1.c: 207:         }
 11854   0043C2  EFC9  F021         	goto	i2l7406
 11855   0043C6                     i2l7412:
 11856   0043C6  EE20 F003          	lfsr	2,3
 11857   0043CA  5001               	movf	CCP_Compare_Mode_Set_Value@_ccp_obj^0,w,c
 11858   0043CC  26D9               	addwf	fsr2l,f,c
 11859   0043CE  5002               	movf	(CCP_Compare_Mode_Set_Value@_ccp_obj+1)^0,w,c
 11860   0043D0  22DA               	addwfc	fsr2h,f,c
 11861   0043D2  04DE               	decf	postinc2,w,c
 11862   0043D4  A4D8               	btfss	status,2,c
 11863   0043D6  EFEF  F021         	goto	i2u628_41
 11864   0043DA  EFF1  F021         	goto	i2u628_40
 11865   0043DE                     i2u628_41:
 11866   0043DE  EFC9  F021         	goto	i2l7406
 11867   0043E2                     i2u628_40:
 11868   0043E2                     
 11869                           ;MCAL_Layer/CCP1/hal_ccp1.c: 209:             CCPR2L = capture_temp_value.ccpr_low;
 11870   0043E2  C006  FFBB         	movff	CCP_Compare_Mode_Set_Value@capture_temp_value,4027	;volatile
 11871                           
 11872                           ;MCAL_Layer/CCP1/hal_ccp1.c: 210:             CCPR2H = capture_temp_value.ccpr_high;
 11873   0043E6  C007  FFBC         	movff	CCP_Compare_Mode_Set_Value@capture_temp_value+1,4028	;volatile
 11874   0043EA  EFC9  F021         	goto	i2l7406
 11875   0043EE                     i2l692:
 11876                           
 11877                           ;MCAL_Layer/CCP1/hal_ccp1.c: 216:     return ret;
 11878   0043EE  0E01               	movlw	1
 11879   0043F0  0012               	return		;funcret
 11880   0043F2                     __end_of_CCP_Compare_Mode_Set_Value:
 11881                           	callstack 0
 11882                           
 11883 ;; *************** function _ADC_ISR *****************
 11884 ;; Defined at:
 11885 ;;		line 295 in file "MCAL_Layer/ADC/hal_adc.c"
 11886 ;; Parameters:    Size  Location     Type
 11887 ;;		None
 11888 ;; Auto vars:     Size  Location     Type
 11889 ;;		None
 11890 ;; Return value:  Size  Location     Type
 11891 ;;                  1    wreg      void 
 11892 ;; Registers used:
 11893 ;;		None
 11894 ;; Tracked objects:
 11895 ;;		On entry : 0/0
 11896 ;;		On exit  : 0/0
 11897 ;;		Unchanged: 0/0
 11898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11903 ;;Total ram usage:        0 bytes
 11904 ;; Hardware stack levels used: 1
 11905 ;; This function calls:
 11906 ;;		Nothing
 11907 ;; This function is called by:
 11908 ;;		_InterruptManagerHigh
 11909 ;; This function uses a non-reentrant model
 11910 ;;
 11911                           
 11912                           	psect	text74
 11913   004A5C                     __ptext74:
 11914                           	callstack 0
 11915   004A5C                     _ADC_ISR:
 11916                           	callstack 20
 11917   004A5C                     
 11918                           ;MCAL_Layer/ADC/hal_adc.c: 296:     (PIR1bits.ADIF=0);
 11919   004A5C  9C9E               	bcf	158,6,c	;volatile
 11920   004A5E  0012               	return		;funcret
 11921   004A60                     __end_of_ADC_ISR:
 11922                           	callstack 0
 11923                           
 11924                           	psect	text75
 11925   000000                     __ptext75:
 11926                           	callstack 0
 11927   000000                     
 11928                           	psect	rparam
 11929   000000                     
 11930                           	psect	temp
 11931   000073                     btemp:
 11932                           	callstack 0
 11933   000073                     	ds	1
 11934   000000                     int$flags	set	btemp
 11935   000000                     wtemp8	set	btemp+1
 11936   000000                     ttemp5	set	btemp+1
 11937   000000                     ttemp6	set	btemp+4
 11938   000000                     ttemp7	set	btemp+8
 11939                           
 11940                           	psect	config
 11941                           
 11942                           ; Padding undefined space
 11943   300000                     	org	3145728
 11944   300000  FF                 	db	255
 11945                           
 11946                           ;Config register CONFIG1H @ 0x300001
 11947                           ;	Oscillator Selection bits
 11948                           ;	OSC = HS, HS oscillator
 11949                           ;	Fail-Safe Clock Monitor Enable bit
 11950                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 11951                           ;	Internal/External Oscillator Switchover bit
 11952                           ;	IESO = OFF, Oscillator Switchover mode disabled
 11953   300001                     	org	3145729
 11954   300001  02                 	db	2
 11955                           
 11956                           ;Config register CONFIG2L @ 0x300002
 11957                           ;	Power-up Timer Enable bit
 11958                           ;	PWRT = OFF, PWRT disabled
 11959                           ;	Brown-out Reset Enable bits
 11960                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
 11961                           ;	Brown Out Reset Voltage bits
 11962                           ;	BORV = 1, 
 11963   300002                     	org	3145730
 11964   300002  09                 	db	9
 11965                           
 11966                           ;Config register CONFIG2H @ 0x300003
 11967                           ;	Watchdog Timer Enable bit
 11968                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 11969                           ;	Watchdog Timer Postscale Select bits
 11970                           ;	WDTPS = 32768, 1:32768
 11971   300003                     	org	3145731
 11972   300003  1E                 	db	30
 11973                           
 11974                           ; Padding undefined space
 11975   300004                     	org	3145732
 11976   300004  FF                 	db	255
 11977                           
 11978                           ;Config register CONFIG3H @ 0x300005
 11979                           ;	CCP2 MUX bit
 11980                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 11981                           ;	PORTB A/D Enable bit
 11982                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 11983                           ;	Low-Power Timer1 Oscillator Enable bit
 11984                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 11985                           ;	MCLR Pin Enable bit
 11986                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 11987   300005                     	org	3145733
 11988   300005  81                 	db	129
 11989                           
 11990                           ;Config register CONFIG4L @ 0x300006
 11991                           ;	Stack Full/Underflow Reset Enable bit
 11992                           ;	STVREN = ON, Stack full/underflow will cause Reset
 11993                           ;	Single-Supply ICSP Enable bit
 11994                           ;	LVP = OFF, Single-Supply ICSP disabled
 11995                           ;	Extended Instruction Set Enable bit
 11996                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 11997                           ;	Background Debugger Enable bit
 11998                           ;	DEBUG = 0x1, unprogrammed default
 11999   300006                     	org	3145734
 12000   300006  81                 	db	129
 12001                           
 12002                           ; Padding undefined space
 12003   300007                     	org	3145735
 12004   300007  FF                 	db	255
 12005                           
 12006                           ;Config register CONFIG5L @ 0x300008
 12007                           ;	Code Protection bit
 12008                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 12009                           ;	Code Protection bit
 12010                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 12011                           ;	Code Protection bit
 12012                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 12013                           ;	Code Protection bit
 12014                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 12015   300008                     	org	3145736
 12016   300008  0F                 	db	15
 12017                           
 12018                           ;Config register CONFIG5H @ 0x300009
 12019                           ;	Boot Block Code Protection bit
 12020                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 12021                           ;	Data EEPROM Code Protection bit
 12022                           ;	CPD = OFF, Data EEPROM not code-protected
 12023   300009                     	org	3145737
 12024   300009  C0                 	db	192
 12025                           
 12026                           ;Config register CONFIG6L @ 0x30000A
 12027                           ;	Write Protection bit
 12028                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 12029                           ;	Write Protection bit
 12030                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 12031                           ;	Write Protection bit
 12032                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 12033                           ;	Write Protection bit
 12034                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 12035   30000A                     	org	3145738
 12036   30000A  0F                 	db	15
 12037                           
 12038                           ;Config register CONFIG6H @ 0x30000B
 12039                           ;	Configuration Register Write Protection bit
 12040                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 12041                           ;	Boot Block Write Protection bit
 12042                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 12043                           ;	Data EEPROM Write Protection bit
 12044                           ;	WRTD = OFF, Data EEPROM not write-protected
 12045   30000B                     	org	3145739
 12046   30000B  E0                 	db	224
 12047                           
 12048                           ;Config register CONFIG7L @ 0x30000C
 12049                           ;	Table Read Protection bit
 12050                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 12051                           ;	Table Read Protection bit
 12052                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 12053                           ;	Table Read Protection bit
 12054                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 12055                           ;	Table Read Protection bit
 12056                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 12057   30000C                     	org	3145740
 12058   30000C  0F                 	db	15
 12059                           
 12060                           ;Config register CONFIG7H @ 0x30000D
 12061                           ;	Boot Block Table Read Protection bit
 12062                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 12063   30000D                     	org	3145741
 12064   30000D  40                 	db	64
 12065                           tosu	equ	0xFFF
 12066                           tosh	equ	0xFFE
 12067                           tosl	equ	0xFFD
 12068                           stkptr	equ	0xFFC
 12069                           pclatu	equ	0xFFB
 12070                           pclath	equ	0xFFA
 12071                           pcl	equ	0xFF9
 12072                           tblptru	equ	0xFF8
 12073                           tblptrh	equ	0xFF7
 12074                           tblptrl	equ	0xFF6
 12075                           tablat	equ	0xFF5
 12076                           prodh	equ	0xFF4
 12077                           prodl	equ	0xFF3
 12078                           indf0	equ	0xFEF
 12079                           postinc0	equ	0xFEE
 12080                           postdec0	equ	0xFED
 12081                           preinc0	equ	0xFEC
 12082                           plusw0	equ	0xFEB
 12083                           fsr0h	equ	0xFEA
 12084                           fsr0l	equ	0xFE9
 12085                           wreg	equ	0xFE8
 12086                           indf1	equ	0xFE7
 12087                           postinc1	equ	0xFE6
 12088                           postdec1	equ	0xFE5
 12089                           preinc1	equ	0xFE4
 12090                           plusw1	equ	0xFE3
 12091                           fsr1h	equ	0xFE2
 12092                           fsr1l	equ	0xFE1
 12093                           bsr	equ	0xFE0
 12094                           indf2	equ	0xFDF
 12095                           postinc2	equ	0xFDE
 12096                           postdec2	equ	0xFDD
 12097                           preinc2	equ	0xFDC
 12098                           plusw2	equ	0xFDB
 12099                           fsr2h	equ	0xFDA
 12100                           fsr2l	equ	0xFD9
 12101                           status	equ	0xFD8

Data Sizes:
    Strings     75
    Constant    16
    Data        62
    BSS         226
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     94     114
    BANK0           128      0     125
    BANK1           256     12     157
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S5219$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 11
		 -> convert_uint32_to_string@Temp_String(COMRAM[11]), convert_uint16_to_string@Temp_String(BANK1[6]), convert_uint8_to_string@Temp_String(COMRAM[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S5166$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S5166$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(2) Largest target is 7
		 -> adc_lm35_1_txt(BANK0[7]), 

    memset@s	PTR unsigned char  size(2) Largest target is 7
		 -> adc_lm35_1_txt(BANK0[7]), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), NULL(NULL[0]), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), NULL(NULL[0]), 

    EUSART_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), NULL(NULL[0]), 

    EUSART_ASYNC_RX_Init@_eusart.EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    EUSART_ASYNC_RX_Init@_eusart.EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    EUSART_ASYNC_RX_Init@_eusart.EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    EUSART_ASYNC_RX_Init@_eusart.EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    EUSART_ASYNC_RX_Init@_eusart	PTR const struct . size(2) Largest target is 16
		 -> usart_obj(BANK0[16]), 

    EUSART_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), NULL(NULL[0]), 

    EUSART_ASYNC_TX_Init@_eusart.EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    EUSART_ASYNC_TX_Init@_eusart.EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    EUSART_ASYNC_TX_Init@_eusart.EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    EUSART_ASYNC_TX_Init@_eusart.EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    EUSART_ASYNC_TX_Init@_eusart	PTR const struct . size(2) Largest target is 16
		 -> usart_obj(BANK0[16]), 

    EUSART_Baud_Rate_Calculation@_eusart.EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    EUSART_Baud_Rate_Calculation@_eusart.EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    EUSART_Baud_Rate_Calculation@_eusart.EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    EUSART_Baud_Rate_Calculation@_eusart.EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    EUSART_Baud_Rate_Calculation@_eusart	PTR const struct . size(2) Largest target is 16
		 -> usart_obj(BANK0[16]), 

    EUSART_ASYNC_Init@_eusart	PTR const struct . size(2) Largest target is 16
		 -> usart_obj(BANK0[16]), 

    Timer3_Mode_Select@_timer.TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    Timer3_Write_value@_timer	PTR const struct . size(2) Largest target is 7
		 -> timer_obj(BANK1[7]), 

    TMR3_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), NULL(NULL[0]), 

    Timer3_Init@_timer.TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TMR2_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S3754$TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer2_Init@_timer.TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Mode_Select@_timer.TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    TMR1_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S3565$TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Init@_timer.TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Register_Size_Config@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Mode_Select@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Prescaler_Config@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    TMR0_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S3395$TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Init@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_SetInterruptHandler@int_obj.EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_SetInterruptHandler@int_obj.EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    S2863$EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Pin_Init@int_obj.EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    S2863$EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Pin_Init@int_obj.EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_SetInterruptHandler@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Clear_Flag@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Disable@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S2825$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Enable@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    RB7_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Report_Receive_Overflow_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), NULL(NULL[0]), 

    I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> MSSP_I2C_DefaultInterruptHandler(), NULL(), 

    MSSP_I2C_Interrupt_Configuration@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    MSSP_I2C_Interrupt_Configuration@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    MSSP_I2C_Interrupt_Configuration@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> MSSP_I2C_DefaultInterruptHandler(), 

    MSSP_I2C_Interrupt_Configuration@i2c_obj	PTR const struct . size(2) Largest target is 13
		 -> i2c_obj(BANK0[13]), 

    I2C_Report_Write_Collision_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), NULL(NULL[0]), 

    MSSP_I2C_Master_Mode_Clock_CFG@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    MSSP_I2C_Master_Mode_Clock_CFG@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    MSSP_I2C_Master_Mode_Clock_CFG@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> MSSP_I2C_DefaultInterruptHandler(), 

    MSSP_I2C_Master_Mode_Clock_CFG@i2c_obj	PTR const struct . size(2) Largest target is 13
		 -> i2c_obj(BANK0[13]), 

    MSSP_I2C_Init@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    MSSP_I2C_Init@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    MSSP_I2C_Init@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> MSSP_I2C_DefaultInterruptHandler(), 

    MSSP_I2C_Init@i2c_obj	PTR const struct . size(2) Largest target is 13
		 -> i2c_obj(BANK0[13]), 

    gpio_pin_intialize@_pin_config	PTR const struct . size(2) Largest target is 10
		 -> dc_motor2.dc_motor_pin(BANK0[2]), dc_motor2(BANK0[2]), dc_motor1.dc_motor_pin(BANK0[2]), dc_motor1(BANK0[2]), 
		 -> lcd_2.lcd_data(BANK0[8]), relay_initialize@pin_obj(COMRAM[1]), lcd_2(BANK0[10]), led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(2) Largest target is 10
		 -> dc_motor2.dc_motor_pin(BANK0[2]), dc_motor2(BANK0[2]), dc_motor1.dc_motor_pin(BANK0[2]), dc_motor1(BANK0[2]), 
		 -> lcd_2.lcd_data(BANK0[8]), relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 
		 -> lcd_2(BANK0[10]), led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_direction_intialize@_pin_config	PTR const struct . size(2) Largest target is 10
		 -> dc_motor2.dc_motor_pin(BANK0[2]), dc_motor2(BANK0[2]), dc_motor1.dc_motor_pin(BANK0[2]), dc_motor1(BANK0[2]), 
		 -> lcd_2.lcd_data(BANK0[8]), relay_initialize@pin_obj(COMRAM[1]), lcd_2(BANK0[10]), led_initialize@pin_obj(COMRAM[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRllll[1]), PORTD(BITBIGSFRllll[1]), PORTC(BITBIGSFRllll[1]), PORTB(BITBIGSFRllll[1]), 
		 -> PORTA(BITBIGSFRllll[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlllh[1]), LATD(BITBIGSFRlllh[1]), LATC(BITBIGSFRlllh[1]), LATB(BITBIGSFRlllh[1]), 
		 -> LATA(BITBIGSFRllll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISD(ABS[1]), TRISC(ABS[1]), TRISB(ABS[1]), TRISE(ABS[1]), 
		 -> TRISA(BITBIGSFRllll[1]), 

    CCP_Compare_Mode_Config@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Compare_Mode_Config@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_DefaultInterruptHandler(), 

    CCP_Capture_Mode_Config@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Capture_Mode_Config@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_DefaultInterruptHandler(), 

    CCP_Mode_Timer_Select@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Mode_Timer_Select@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_DefaultInterruptHandler(), 

    CCP_Interrupt_Config@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Interrupt_Config@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_DefaultInterruptHandler(), 

    CCP_Compare_Mode_Set_Value@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Compare_Mode_Set_Value@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_DefaultInterruptHandler(), 

    CCP_Compare_Mode_Set_Value@_ccp_obj	PTR const struct . size(2) Largest target is 11
		 -> ccp1_obj(BANK1[11]), 

    CCP_IsCompareComplete@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_IsCompareComplete@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_DefaultInterruptHandler(), 

    CCP1_DeInit@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP1_DeInit@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_DefaultInterruptHandler(), 

    CCP_Init@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Init@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_DefaultInterruptHandler(), 

    CCP1_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), CCP1_DefaultInterruptHandler(), 

    CCP2_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    configure_voltage_reference@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    configure_voltage_reference@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK1[7]), 

    select_result_format@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    select_result_format@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK1[7]), 

    ADC_GetConversion_Blocking@conversion_result	PTR unsigned short  size(2) Largest target is 2
		 -> adc_lm35_1(COMRAM[2]), 

    ADC_GetConversion_Blocking@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK1[7]), 

    ADC_GetConversionResult@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ADC_GetConversionResult@conversion_result	PTR unsigned short  size(2) Largest target is 2
		 -> adc_lm35_1(COMRAM[2]), 

    ADC_GetConversionResult@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK1[7]), 

    ADC_StartConversion@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK1[7]), 

    ADC_SelectChannel@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK1[7]), 

    ADC_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ADC_Init@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ADC_Init@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK1[7]), 

    S1036$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    adc_1.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S903$TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    timer_obj.TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S887$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    ccp1_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S887$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_DefaultInterruptHandler(), 

    ccp1_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_DefaultInterruptHandler(), 

    S859$EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    usart_obj.EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S859$EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    usart_obj.EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S859$EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    usart_obj.EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S859$EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    usart_obj.EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S457$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S457$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S457$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> MSSP_I2C_DefaultInterruptHandler(), 

    i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> MSSP_I2C_DefaultInterruptHandler(), 

    dc_motor_stop@_motor	PTR const struct . size(2) Largest target is 2
		 -> dc_motor2(BANK0[2]), dc_motor1(BANK0[2]), 

    dc_motor_move_right@_motor	PTR const struct . size(2) Largest target is 2
		 -> dc_motor2(BANK0[2]), dc_motor1(BANK0[2]), 

    dc_motor_initialize@_motor	PTR const struct . size(2) Largest target is 2
		 -> dc_motor2(BANK0[2]), dc_motor1(BANK0[2]), 

    lcd_8bit_set_cursor@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_2(BANK0[10]), 

    lcd_8bit_send_enable_signal@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_2(BANK0[10]), 

    convert_uint16_to_string@str	PTR unsigned char  size(2) Largest target is 7
		 -> adc_lm35_1_txt(BANK0[7]), 

    sp__memset	PTR void  size(2) Largest target is 7
		 -> adc_lm35_1_txt(BANK0[7]), 

    lcd_8bit_send_string_pos@str	PTR unsigned char  size(2) Largest target is 22
		 -> STR_12(CODE[22]), STR_11(CODE[15]), STR_10(CODE[11]), STR_9(CODE[15]), 
		 -> STR_8(CODE[8]), STR_7(CODE[15]), STR_6(CODE[15]), adc_lm35_1_txt(BANK0[7]), 
		 -> STR_5(CODE[8]), STR_4(CODE[8]), RealTimeClockDS1307_Time(BANK1[9]), RealTimeClockDS1307_Data(BANK1[9]), 

    lcd_8bit_send_string_pos@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_2(BANK0[10]), 

    lcd_8bit_send_char_data@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_2(BANK0[10]), 

    lcd_8bit_send_command@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_2(BANK0[10]), 

    lcd_8bit_initialize@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_2(BANK0[10]), 


Critical Paths under _main in COMRAM

    _lcd_8bit_send_string_pos->_lcd_8bit_set_cursor
    _lcd_8bit_set_cursor->_lcd_8bit_send_command
    _lcd_8bit_send_char_data->_lcd_8bit_send_enable_signal
    _dc_motor_stop->_gpio_pin_write_logic
    _dc_motor_move_right->_gpio_pin_write_logic
    _convert_uint16_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _ecu_layer_intialize->_EUSART_ASYNC_Init
    _lcd_8bit_initialize->_lcd_8bit_send_command
    _lcd_8bit_send_command->_lcd_8bit_send_enable_signal
    _lcd_8bit_send_enable_signal->_gpio_pin_write_logic
    _dc_motor_initialize->_gpio_pin_intialize
    _gpio_pin_intialize->_gpio_pin_write_logic
    _EUSART_ASYNC_Init->_EUSART_Baud_Rate_Calculation
    _EUSART_Baud_Rate_Calculation->___fltol
    _ADC_Init->_adc_input_channel_port_configure
    ___flmul->___xxtofl
    _I2C_Obj_CFG->_MSSP_I2C_Init
    _MSSP_I2C_Init->_MSSP_I2C_Master_Mode_Clock_CFG
    _MSSP_I2C_Master_Mode_Clock_CFG->___fltol
    ___fltol->___fladd
    ___fldiv->___xxtofl
    ___fladd->___fldiv
    _ADC_GetConversion_Blocking->_ADC_GetConversionResult
    _ADC_GetConversion_Blocking->_ADC_SelectChannel
    _ADC_SelectChannel->_adc_input_channel_port_configure

Critical Paths under _InterruptManagerHigh in COMRAM

    _CCP1_DefaultInterruptHandler->_CCP_Compare_Mode_Set_Value

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_convert_uint16_to_string

Critical Paths under _InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManagerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManagerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  113343
                                             93 COMRAM     1     1      0
         _ADC_GetConversion_Blocking
                        _I2C_Obj_CFG
                            ___flmul
                            ___fltol
                            ___lwdiv
                           ___xxtofl
              _application_intialize
           _convert_uint16_to_string
                _dc_motor_move_right
                      _dc_motor_stop
              _lcd_8bit_send_command
           _lcd_8bit_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_8bit_send_string_pos                             7     1      6   29077
                                             38 COMRAM     7     1      6
            _lcd_8bit_send_char_data
                _lcd_8bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_set_cursor                                  7     3      4   13475
                                             32 COMRAM     6     2      4
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_send_char_data                              9     6      3   10839
                                             23 COMRAM     9     6      3
               _gpio_pin_write_logic
        _lcd_8bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (1) _dc_motor_stop                                        3     1      2    5285
                                             20 COMRAM     2     0      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _dc_motor_move_right                                  3     1      2    5133
                                             20 COMRAM     2     0      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _convert_uint16_to_string                            12     8      4   10594
                                              0 BANK1     12     8      4
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             22    16      6    7642
                                             73 COMRAM    20    14      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6796
                                             65 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           19    13      6    6335
                                             51 COMRAM    14     8      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                13     9      4    4768
                                             38 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2533
                                             27 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1177
                                             20 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     857
                                             11 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             17 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                             11 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                             11 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _memset                                              12     6      6    1827
                                             11 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (1) _application_intialize                                0     0      0   35931
                _ecu_layer_intialize
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_intialize                                  1     1      0   35931
                           _ADC_Init
                  _EUSART_ASYNC_Init
                _dc_motor_initialize
                _lcd_8bit_initialize
                   _usart_model_init
 ---------------------------------------------------------------------------------
 (3) _usart_model_init                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_initialize                                  6     4      2   20084
                                             32 COMRAM     6     4      2
                 _gpio_pin_intialize
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_command                                9     6      3   12815
                                             23 COMRAM     9     6      3
               _gpio_pin_write_logic
        _lcd_8bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (4) _lcd_8bit_send_enable_signal                          3     1      2    5112
                                             20 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _dc_motor_initialize                                  3     1      2    7044
                                             24 COMRAM     2     0      2
                 _gpio_pin_intialize
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_intialize                                   4     2      2    6802
                                             20 COMRAM     4     2      2
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                10     7      3    4891
                                             11 COMRAM     9     6      3
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_intialize                         9     7      2     559
                                             11 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_ASYNC_Init                                    3     1      2    8258
                                             88 COMRAM     2     0      2
               _EUSART_ASYNC_RX_Init
               _EUSART_ASYNC_TX_Init
       _EUSART_Baud_Rate_Calculation
 ---------------------------------------------------------------------------------
 (4) _EUSART_Baud_Rate_Calculation                        12    10      2    7565
                                             76 COMRAM    12    10      2
                            ___fladd
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) _EUSART_ASYNC_TX_Init                                 2     0      2     230
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_ASYNC_RX_Init                                 2     0      2     274
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _ADC_Init                                             4     2      2     539
                                             14 COMRAM     3     1      2
   _adc_input_channel_port_configure
        _configure_voltage_reference
               _select_result_format
 ---------------------------------------------------------------------------------
 (4) _select_result_format                                 2     0      2     120
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _configure_voltage_reference                          2     0      2     120
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     770
                                             11 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    2200
                                             25 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _I2C_Obj_CFG                                          0     0      0    7795
                      _MSSP_I2C_Init
 ---------------------------------------------------------------------------------
 (2) _MSSP_I2C_Init                                        4     2      2    7795
                                             80 COMRAM     3     1      2
   _MSSP_I2C_Interrupt_Configuration
             _MSSP_I2C_MODE_GPIO_CFG
     _MSSP_I2C_Master_Mode_Clock_CFG
 ---------------------------------------------------------------------------------
 (3) _MSSP_I2C_Master_Mode_Clock_CFG                       4     2      2    7266
                                             76 COMRAM     4     2      2
                            ___fladd
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___xxtofl                                            14    10      4     969
                                             11 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     734
                                             66 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2521
                                             25 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             16     8      8    2922
                                             50 COMRAM    16     8      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _MSSP_I2C_MODE_GPIO_CFG                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MSSP_I2C_Interrupt_Configuration                     2     0      2     142
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion_Blocking                           6     1      5    2040
                                             18 COMRAM     6     1      5
            _ADC_GetConversionResult
                  _ADC_SelectChannel
                _ADC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADC_StartConversion                                  3     1      2     199
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_SelectChannel                                    5     2      3     417
                                             14 COMRAM     4     1      3
   _adc_input_channel_port_configure
 ---------------------------------------------------------------------------------
 (4) _adc_input_channel_port_configure                     3     3      0      22
                                             11 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversionResult                              8     4      4     331
                                             11 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptManagerHigh                                4     4      0     928
                                              7 COMRAM     4     4      0
                            _ADC_ISR
                           _CCP1_ISR
                           _CCP2_ISR
                      _EUSART_Rx_ISR
                      _EUSART_Tx_ISR
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                    _MSSP_I2C_BC_ISR
                       _MSSP_I2C_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR3_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR2_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _RB7_ISR                                             1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _RB6_ISR                                             1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _RB5_ISR                                             1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _RB4_ISR                                             1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _MSSP_I2C_ISR                                        0     0      0       0
                                NULL *
   _MSSP_I2C_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _MSSP_I2C_DefaultInterruptHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _MSSP_I2C_BC_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _INT2_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _INT1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _INT0_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Tx_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Rx_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _CCP2_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _CCP1_ISR                                            0     0      0     752
                                NULL *
       _CCP1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _CCP1_DefaultInterruptHandler                        0     0      0     752
         _CCP_Compare_Mode_Set_Value
                 _Timer3_Write_value
 ---------------------------------------------------------------------------------
 (13) _Timer3_Write_value                                  5     1      4     243
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (13) _CCP_Compare_Mode_Set_Value                          8     4      4     509
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (12) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADC_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion_Blocking
     _ADC_GetConversionResult
     _ADC_SelectChannel
       _adc_input_channel_port_configure
     _ADC_StartConversion
   _I2C_Obj_CFG
     _MSSP_I2C_Init
       _MSSP_I2C_Interrupt_Configuration
       _MSSP_I2C_MODE_GPIO_CFG
       _MSSP_I2C_Master_Mode_Clock_CFG
         ___fladd
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
         ___fltol
           ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
   ___flmul
   ___fltol
   ___lwdiv
   ___xxtofl
   _application_intialize
     _ecu_layer_intialize
       _ADC_Init
         _adc_input_channel_port_configure
         _configure_voltage_reference
         _select_result_format
       _EUSART_ASYNC_Init
         _EUSART_ASYNC_RX_Init
         _EUSART_ASYNC_TX_Init
         _EUSART_Baud_Rate_Calculation
           ___fladd
           ___fldiv
           ___fltol
           ___xxtofl
       _dc_motor_initialize
         _gpio_pin_intialize
           _gpio_pin_direction_intialize
           _gpio_pin_write_logic
       _lcd_8bit_initialize
         _gpio_pin_intialize
         _lcd_8bit_send_command
           _gpio_pin_write_logic
           _lcd_8bit_send_enable_signal
             _gpio_pin_write_logic
       _usart_model_init
   _convert_uint16_to_string
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
   _dc_motor_move_right
     _gpio_pin_write_logic
   _dc_motor_stop
     _gpio_pin_write_logic
   _lcd_8bit_send_command
   _lcd_8bit_send_string_pos
     _lcd_8bit_send_char_data
       _gpio_pin_write_logic
       _lcd_8bit_send_enable_signal
     _lcd_8bit_set_cursor
       _lcd_8bit_send_command

 _InterruptManagerHigh (ROOT)
   _ADC_ISR
   _CCP1_ISR
     NULL(Fake) *
     _CCP1_DefaultInterruptHandler *
       _CCP_Compare_Mode_Set_Value
       _Timer3_Write_value
   _CCP2_ISR
   _EUSART_Rx_ISR
   _EUSART_Tx_ISR
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR
   _MSSP_I2C_BC_ISR
   _MSSP_I2C_ISR
     NULL(Fake) *
     _MSSP_I2C_DefaultInterruptHandler *
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR
   _TMR0_ISR
   _TMR1_ISR
   _TMR2_ISR
   _TMR3_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      48        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      C      9D       7       61.3%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      7D       5       97.7%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     5E      72       1       90.5%
BITBIGSFRhhlhhh     18      0       0      37        0.0%
BITBIGSFRhhh         D      0       0      36        0.0%
BITBIGSFRllhh        6      0       0      44        0.0%
BITBIGSFRhhlhhh      5      0       0      38        0.0%
BITBIGSFRlhhlhh      4      0       0      41        0.0%
BITBIGSFRlllh        4      0       0      45        0.0%
BITBIGSFRlhhlll      4      0       0      42        0.0%
BITBIGSFRllll        4      0       0      46        0.0%
BITBIGSFRlhhlhh      1      0       0      40        0.0%
BITBIGSFRhhlhhh      1      0       0      39        0.0%
BITBIGSFRlhl         1      0       0      43        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     18C      47        0.0%
DATA                 0      0     18C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Feb 04 14:17:39 2024

                                ___fldiv@aexp 0032                                  ___fldiv@bexp 0031  
                                           _i 00C5                                  ___fldiv@sign 002A  
                                 _SSPSTATbits 0FC7                                  ___awdiv@sign 0011  
                                         l120 34B6                                           l205 48BA  
                                         l134 4078                                           l127 4108  
                                         l215 3FE8                                           l234 4850  
                                         l511 3CAA                                           l239 47A0  
                                         l159 3E00                                           l513 3D4E  
                                         l249 4762                                           l186 3C92  
                                         l523 4886                                           l526 4980  
                                         l454 481A                                           l527 4986  
                                         l528 4988                                           l553 4358  
                                         l546 3BD6                                           l556 437E  
                                         l590 455E                                           l478 46E4  
                                         l823 325E                                           l584 465C  
                                         l594 4580                                           l586 465E  
                                         l842 35DA                                           l579 38B4  
                                         l933 3062                                           l597 4588  
                                         l927 2FE0                                           l599 458C  
                                         l863 445C                                           l945 3122  
         __end_of_configure_voltage_reference 458E                   _configure_voltage_reference 4544  
                                         _abs 46E6                        ??_InterruptManagerHigh 0008  
                                         _pad 421E                     _RB5_InterruptHandler_HIGH 00AA  
                             __end_of_ADC_ISR 4A60                                           _ret 00EE  
                                         _str 011A                                  ___awmod@sign 0011  
                         led_initialize@F3048 006A                                           prod 0FF3  
                   ?_lcd_8bit_send_string_pos 0027                         relay_initialize@F3042 0066  
                                         tosl 0FFD                                           wreg 0FE8  
                 __end_of_lcd_8bit_set_cursor 3FEA                                  ___flmul@aexp 002B  
                                ___flmul@bexp 002C                                  ___flmul@sign 0026  
                                ___flmul@temp 0031                                  ___flmul@prod 002D  
                   ?_convert_uint16_to_string 0191                               __end_of_RB4_ISR 49F2  
                             __end_of_RB5_ISR 49D8                               __end_of_RB6_ISR 49BE  
                             __end_of_RB7_ISR 49A4  _I2C_Report_Receive_Overflow_InterruptHandler 00B6  
                                ___fltol@exp1 004C                                          l1010 3F4E  
                                        l1013 45D6                                          l1007 4A3E  
                                        ?_abs 0012                                          l2125 36E0  
                                        l2072 3EB0                                          l2410 2B08  
                                        l2059 3B16                                          l2412 2968  
                                        l2421 29AE                                          l2326 430A  
                                        l2423 2A26                                          l2415 292C  
                                        l2319 4302                                          l1703 3988  
                                        l2503 2FC8                                          l2424 2A14  
                                        l1712 37BC                                          l2601 461A  
                                        l2442 2004                                          l1634 4542  
                                        l2451 2272                                          l2356 1C6E  
                                        l2452 2260                                          l2604 4A60  
                                        l2516 44F8                                          l2373 1D88  
                                        l2365 1F3E                                          l2357 1C5C  
                                        l1805 46A2                                          l2382 1E58  
                                        l2358 1C22                                          l2446 2368  
                                        l1718 37DC                                          l2542 4296  
                                        l2550 2D54                                          l2383 1E46  
                                        l1680 15A6                                          l2449 21FA  
                                        l1825 4A38                                          l2561 2E52  
                                        l2490 2BF8                                          l1682 165E  
                                        l2538 4240                                          l2483 2B60  
                                        l2459 232A                                          l1683 1716  
                                        l2547 2D06                                          l1684 17CE  
                                        l1685 1886                                          l2581 4724  
                                        l2549 2D0E                                          l2486 2CBC  
                                        l1686 193C                                          l2574 44AC  
                                        l7000 3694                                          l1688 1A7E  
                                        l2568 338A                                          l2497 2C54  
                                        l1697 3968                                          l2593 3A52  
                                        l7002 36A0                                          l2578 471C  
                                        l7004 36B0                                          l7020 2B86  
                                        l7012 2B0C                                          l7006 36C0  
                                        l7030 2BE0                                          l7014 2B1C  
                                        l7110 43F2                                          ?_pad 001C  
                                        l7008 36D0                                          l7040 2C44  
                                        l7032 2BE2                                          l7024 2B9A  
                                        l7016 2B2A                                          l7200 1602  
                                        l7112 4404                                          l7050 2C9C  
                                        l7042 2C62                                          l7034 2BEE  
                                        l7026 2BA2                                          l7018 2B70  
                                        l7210 17D4                                          l7202 1664  
                                        l7114 4426                                          l7130 40A8  
                                        l7122 407A                                          l7052 2CAA  
                                        l7044 2C64                                          l7036 2C2A  
                                        l7028 2BAE                                          l7220 1996  
                                        l7212 182A                                          l7204 16BA  
                                        l7116 442E                                          l7108 43F2  
                                        l7140 40E8                                          l7124 407E  
                                        l7150 37E4                                          l7054 2CAC  
                                        l7046 2C68                                          l7038 2C36  
                                        l7230 38B6                                          l7214 188A  
                                        l7206 171C                                          l7222 19F2  
                                        l7118 445A                                          l7142 40F8  
                                        l7126 4090                                          l7310 3390  
                                        l7160 3802                                          l7152 37EA  
                                        l7048 2C8C                                          l8200 1F5C  
                                        l7240 3926                                          l7232 38D0  
                                        l7216 18E0                                          l7208 1772  
                                        l7224 1A48                                          l6600 3158  
                                        l7136 40AC                                          l7144 4106  
                                        l7128 4098                                          l7312 33A2  
                                        l7170 3820                                          l7162 3808  
                                        l7154 37F0                                          l8210 1FA2  
                                        l8202 1F6C                                          l7242 3928  
                                        l7234 38D2                                          l7250 396C  
                                        l7218 1940                                          l6602 315C  
                                        l6610 325C                                          l7138 40E6  
                                        l7330 340C                                          l7322 33CE  
                                        l7314 33AA                                          l7172 3826  
                                        l7164 380E                                          l7156 37F6  
                                        l7148 37E0                                          l6700 1BB4  
                                        l8300 22C6                                          l8220 1FCE  
                                        l8212 1FA8                                          l8204 1F7C  
                                        l7260 3754                                          l7252 3986  
                                        l7244 3942                                          l7236 3900  
                                        l7420 44FA                                          l6604 31BE  
                                        l6620 4888                                          l7340 3462  
                                        l7332 341C                                          l7324 33EA  
                                        l7316 33CA                                          l7308 338C  
                                        l7174 382C                                          l7166 3814  
                                        l7158 37FC                                          l6710 1BEE  
                                        l6702 1BB8                                          l6630 1A8C  
                                        l8310 232E                                          l8302 22CA  
                                        l8230 2024                                          l8222 1FDE  
                                        l8214 1FAE                                          l8206 1F8C  
                                        l7190 4656                                          l7270 379C  
                                        l7262 3760                                          l7254 36E2  
                                        l7246 3948                                          l7238 390C  
                                        l7430 451E                                          l7422 44FA  
                                        l6622 489C                                          l7342 3472  
                                        l7334 343C                                          l7326 33EC  
                                        l7350 34B4                                          l7168 381A  
                                        l6800 1E74                                          l6720 1C40  
                                        l6712 1C0A                                          l6704 1BBC  
                                        l6640 1ACC                                          l6632 1A9A  
                                        l8320 2358                                          l8312 233E  
                                        l8304 22E4                                          l8240 2064  
                                        l8224 1FEE                                          l8216 1FBC  
                                        l8208 1F92                                          l7192 4544  
                                        l7184 461C                                          l7272 37B6  
                                        l7264 377A                                          l7256 36FC  
                                        l7248 3962                                          l7432 4520  
                                        l7424 450C                                          l6608 321A  
                                        l6480 34F0                                          l6472 34B8  
                                        l7360 4832                                          l6624 48A2  
                                        l7344 3482                                          l7336 3442  
                                        l7328 33FC                                          l7178 3832  
                                        l6810 1EDE                                          l6802 1E82  
                                        l6730 1C8C                                          l6722 1C4E  
                                        l6714 1C1A                                          l6706 1BC0  
                                        l6650 1AFE                                          l6642 1ACE  
                                        l6634 1A9C                                          l8314 234C  
                                        l8306 22F8                                          l8250 20AE  
                                        l8242 2070                                          l8234 2038  
                                        l8226 1FF4                                          l8218 1FBE  
                                        l8330 42BA                                          l7194 4566  
                                        l7186 4636                                          l7450 3D04  
                                        l7442 3C94                                          l7266 377C  
                                        l7258 36FE                                          l7274 37C0  
                                        l7434 453A                                          l7426 4510  
                                        l6482 354C                                          l6474 34B8  
                                        l7362 484E                                          l7354 481C  
                                        l6618 4888                                          l7346 3492  
                                        l7338 3452                                          l7370 47F0  
                                        l7530 3FEE                                          l6820 1F18  
                                        l6812 1EFE                                          l6804 1EBC  
                                        l6740 1CCC                                          l6724 1C50  
                                        l6716 1C30                                          l6708 1BC4  
                                        l6660 1B26                                          l6652 1B00  
                                        l6636 1AAC                                          l6644 1AD6  
                                        l6628 1A80                                          l6900 2908  
                                        l7700 2FCA                                          l8180 4672  
                                        l8316 234E                                          l8308 2312  
                                        l8260 2100                                          l8252 20BA  
                                        l8244 2088                                          l8236 2044  
                                        l8228 2014                                          l8340 42F4  
                                        l8332 42C2                                          l8324 4298  
                                        l7188 463C                                          l7460 3D1E  
                                        l7452 3D16                                          l7444 3C94  
                                        l7276 37DA                                          l7268 3796  
                                        l7196 1592                                          l7428 451C  
                                        l6476 34CA                                          l7356 481C  
                                        l7348 34A2                                          l7380 47FA  
                                        l7372 47F2                                          l7532 4000  
                                        l6822 1F1E                                          l6814 1F02  
                                        l6806 1EBE                                          l6750 1CF6  
                                        l6742 1CD8                                          l6734 1CA0  
                                        l6726 1C5A                                          l6718 1C3C  
                                        l6670 1B60                                          l6662 1B36  
                                        l6654 1B06                                          l6646 1AE6  
                                        l6638 1ABC                                          l6910 2956  
                                        l6902 291C                                          l6830 2770  
                                        l7710 3026                                          l7702 2FDC  
                                        l8190 4692                                          l8182 4674  
                                        l8174 4660                                          l8318 2354  
                                        l8270 217E                                          l8262 2110  
                                        l8254 20CA                                          l8246 2094  
                                        l8238 204E                                          l8342 42F6  
                                        l8334 42D0                                          l8326 42A0  
                                        l7462 3D2E                                          l7454 3D18  
                                        l7470 3D4C                                          l7446 3CA6  
                                        l7198 15AC                                          l7438 4540  
                                        l6486 35AE                                          l6478 34EC  
                                        l7358 482E                                          l7382 4802  
                                        l7374 47F4                                          l7366 47E0  
                                        l7542 401C                                          l7550 4076  
                                        l7534 4008                                          l7480 458E  
                                        l6824 1F2C                                          l6816 1F10  
                                        l6808 1ECE                                          l6760 1D68  
                                        l6744 1CDC                                          l6736 1CB0  
                                        l6728 1C7C                                          l6752 1CFC  
                                        l6680 1B8C                                          l6672 1B72  
                                        l6664 1B46                                          l6656 1B14  
                                        l6648 1AEC                                          l6920 299E  
                                        l6912 2966                                          l6904 292A  
                                        l6840 27AC                                          l6832 277C  
                                        l7712 3040                                          l7720 3092  
                                        l7704 2FE2                                          l8184 467A  
                                        l8176 466A                                          l8280 21F8  
                                        l8272 21B4                                          l8264 212C  
                                        l8256 20D6                                          l8248 20A0  
                                        l8344 42FC                                          l8336 42D6  
                                        l8328 42B2                                          l7464 3D3A  
                                        l7456 3D1A                                          l7448 3CAC  
                                        l6488 35D8                                          l7384 480A  
                                        l7376 47F6                                          l7368 47EE  
                                        l7640 46B4                                          l8192 4A34  
                                        l7544 4056                                          l7536 4018  
                                        l7528 3FEA                                          l7560 3F6C  
                                        l7800 3D7C                                          l7650 4852  
                                        l7482 459A                                          l6826 1F2E  
                                        l6818 1F16                                          l6770 1DC2  
                                        l6754 1D22                                          l6762 1D78  
                                        l6746 1CEA                                          l6738 1CBE  
                                        l6690 1BA0                                          l6682 1B90  
                                        l6674 1B80                                          l6666 1B48  
                                        l6658 1B16                                          l6930 29DE  
                                        l6922 29AC                                          l6914 2978  
                                        l6906 2936                                          l6850 27DC  
                                        l6842 27BC                                          l6834 278A  
                                        l7474 3EB2                                          l7730 30D2  
                                        l7722 3096                                          l7714 3046  
                                        l7706 2FFC                                          l8186 4682  
                                        l8178 4670                                          l8290 2258  
                                        l8282 220A                                          l8274 21C2  
                                        l8266 2138                                          l8258 20E6  
                                        l8194 1F40                                          l8338 42EC  
                                        l7466 3D46                                          l7458 3D1C  
                                        l6594 3124                                          l7386 4812  
                                        l7378 47F8                                          l7642 46C0  
                                        l7634 46A4                                          l7546 4058  
                                        l7562 3F82                                          l7554 3F50  
                                        l7802 3D96                                          l7660 4884  
                                        l7652 4864                                          l6780 1DF2  
                                        l6772 1DCC                                          l6764 1D9E  
                                        l6756 1D56                                          l6748 1CEC  
                                        l6692 1BA4                                          l6684 1B94  
                                        l6676 1B84                                          l6668 1B50  
                                        l6940 2A50                                          l6932 2A0C  
                                        l6916 298E                                          l6924 29BE  
                                        l6908 2954                                          l6860 2812  
                                        l6852 27E2                                          l6844 27BE  
                                        l6836 278C                                          l7476 3ECC  
                                        l7740 311A                                          l7732 30EC  
                                        l7724 30B0                                          l7716 3060  
                                        l7708 300C                                          l8188 468A  
                                        l8284 2218                                          l8276 21E0  
                                        l8268 2154                                          l8196 1F4C  
                                        l6596 3124                                          l7644 46CC  
                                        l7636 46A4                                          l7548 4068  
                                        l7564 3F98                                          l7556 3F50  
                                        l7804 3DC8                                          l7654 4868  
                                        l7478 4A3A                                          l6790 1E1A  
                                        l6782 1DF6                                          l6774 1DDA  
                                        l6766 1DAE                                          l6758 1D58  
                                        l6694 1BA8                                          l6686 1B98  
                                        l6678 1B88                                          l6950 2AC8  
                                        l6942 2A7A                                          l6926 29CC  
                                        l6918 2994                                          l6870 2852  
                                        l6862 2822                                          l6854 27F0  
                                        l6838 279C                                          l6846 27C6  
                                        l7734 30F2                                          l7726 30B6  
                                        l7718 3068                                          l8294 2282  
                                        l8286 221C                                          l8278 21EA  
                                        l8198 1F5A                                          l6598 3136  
                                        l7646 46D8                                          l7638 46A8  
                                        l7558 3F56                                          l7566 3FAE  
                                        l7806 3DCC                                          l7680 3B3C  
                                        l7656 487A                                          l7648 4852  
                                        l7664 496A                                          l6792 1E28  
                                        l6784 1E06                                          l6776 1DDC  
                                        l6696 1BAC                                          l6688 1B9C  
                                        l6960 2AFE                                          l6952 2AE4  
                                        l6936 2A36                                          l6944 2A7E  
                                        l6928 29D0                                          l6872 2862  
                                        l6880 2882                                          l6864 2824  
                                        l6856 27F2                                          l6848 27D6  
                                        l7736 310C                                          l7728 30D0  
                                        l7744 3120                                          l8296 228E  
                                        l8288 222A                                          l7840 4764  
                                        l7808 3DFE                                          l7682 3B40  
                                        l7674 3B18                                          l7666 496A  
                                        l6794 1E3E                                          l6778 1DEA  
                                        l6786 1E08                                          l6698 1BB0  
                                        l6954 2AE8                                          l6946 2A98  
                                        l6938 2A42                                          l6890 28C0  
                                        l6882 2892                                          l6874 286A  
                                        l6858 2802                                          l6866 282C  
                                        l6970 35F2                                          l7738 310E  
                                        l8298 229C                                          l7842 4776  
                                        l7850 4726                                          l7684 3B5A  
                                        l7676 3B18                                          l7668 497C  
                                        l6788 1E16                                          l6956 2AF6  
                                        l6948 2AAE                                          l6892 28D0  
                                        l6884 2892                                          l6876 286E  
                                        l6868 283C                                          l6980 3642  
                                        l7844 477A                                          l7852 4726  
                                        l7686 3B82                                          l7694 3BD4  
                                        l7678 3B2A                                          l6798 1E68  
                                        l6958 2AFC                                          l6894 28E0  
                                        l6990 366C                                          l6982 3646  
                                        l6974 3606                                          l7846 479E  
                                        l7838 4764                                          l7854 4738  
                                        l7688 3B9C                                          l6896 28F0  
                                        l6888 28A6                                          l6992 3676  
                                        l6984 3654                                          l6976 3630  
                                        l6968 35DC                                          l9800 45D8  
                                        l7856 473C                                          l7792 3D50  
                                        l7970 4330                                          l6898 28F8  
                                        l6994 3680                                          l6978 3632  
                                        l7698 2FCA                                          l9810 3A58  
                                        l9802 45E4                                          l7858 4760  
                                        l7794 3D50                                          l7972 4338  
                                        l7964 430C                                          l9820 3A88  
                                        l9812 3A66                                          l9804 45F6  
                                        l9900 4282                                          l7796 3D62  
                                        l7974 4366                                          l7966 430C  
                                        l9830 3AB6                                          l9822 3A8C  
                                        l9814 3A6E                                          l9902 46E6  
                                        l9806 45FA                                          l9910 2CE2  
                                        l7798 3D74                                          l7976 437C  
                                        l7968 431E                                          l9840 3AEA  
                                        l9832 3AC4                                          l9824 3A94  
                                        l9816 3A72                                          l9808 3A54  
                                        l9904 4700                                          l9920 2D2C  
                                        l9912 2CEA                                          l9842 3AF0  
                                        l9834 3ACA                                          l9826 3AA6  
                                        l9818 3A80                                          l9930 2D66  
                                        l9922 2D3C                                          l9914 2CFA  
                                        l9906 2CBE                                          l9836 3AE0  
                                        l9828 3AAE                                          l9844 3AF6  
                                        l9860 3E20                                          l9852 3E02  
                                        l9932 2D6C                                          l9940 2DC6  
                                        l9924 2D48                                          l9916 2D16  
                                        l9908 2CD2                                          l9846 3B06  
                                        l9838 3AE8                                          l9870 3E58  
                                        l9862 3E2E                                          l9854 3E06  
                                        l9790 39AE                                          l9950 2E22  
                                        l9942 2DE0                                          l9934 2D9E  
                                        l9926 2D50                                          l9918 2D26  
                                        STR_1 1059                                          l9848 3B0E  
                                        l9872 3E66                                          l9880 3E90  
                                        l9864 3E36                                          l9856 3E14  
                                        l9792 39B8                                          l9952 2E32  
                                        l9944 2DF2                                          l9936 2DA4  
                                        l9928 2D5C                                          l9960 3294  
                                        STR_2 1059                                          l9882 3EA0  
                                        l9874 3E7C                                          l9866 3E48  
                                        l9858 3E1C                                          l9794 39D6  
                                        l9786 398A                                          l9890 422C  
                                        l9946 2E0C                                          l9938 2DAA  
                                        l9970 32F2                                          l9962 32A2  
                                        STR_4 1051                                          STR_5 1049  
                                        l9884 3EA8                                          l9876 3E84  
                                        l9868 3E50                                          l9796 3A0C  
                                        l9788 399C                                          l9892 4238  
                                        l9948 2E1C                                          l9972 3336  
                                        l9964 32A6                                          l9980 3360  
                                        l9956 3260                                          STR_6 1027  
                                        STR_7 1027                                          l9878 3E8A  
                                        l9894 424C                                          l9966 32B6  
                                        l9958 3286                                          l9990 4486  
                                        STR_8 1041                                          STR_9 1027  
                                        l9896 4260                                          l9888 421E  
                                        l9976 334E                                          l9968 32D4  
                                        l9992 44A4                                          l9898 4264  
                                        l9986 445E                                          l9996 2E54  
                                        l9988 446A                                          _LATA 0F89  
                                        _LATB 0F8A                                          _LATC 0F8B  
                                        _LATD 0F8C                                          _LATE 0F8D  
                                        u5100 1AAC                                          u5101 1AA8  
                                        u5110 1ABC                                          u5030 3136  
                                        u5111 1AB8                                          u5031 3132  
                                        u5200 1C08                                          u5120 1AFE  
                                        u5040 3158                                          u6000 4090  
                                        u5121 1AFA                                          u5041 3154  
                                        u6001 408C                                          u5210 1C30  
                                        u5130 1B14                                          u5211 1C2C  
                                        u5131 1B10                                          u5300 1D68  
                                        u5220 1C4E                                          u5140 1B26  
                                        u6100 3942                                          u6020 40F8  
                                        u5301 1D64                                          u5221 1C4A  
                                        u5141 1B22                                          u6101 393E  
                                        u6021 40F4                                          u5310 1D9E  
                                        u5230 1C6E                                          u5150 1B36  
                                        u6030 4636                                          u6110 3962  
                                        u5070 3232                                          u5054 317C  
                                        u6014 40D6                                          u5311 1D9A  
                                        u5231 1C6A                                          u5151 1B32  
                                        u6031 4632                                          u6111 395E  
                                        u5071 322C                                          u5055 3178  
                                        u6015 40D2                                          u5400 1E68  
                                        u5320 1DAE                                          u5240 1C7C  
                                        u5160 1B72                                          u6040 4656  
                                        u6120 3986                                          u5080 3234  
                                        u5064 31DE                                          u5401 1E64  
                                        u5321 1DAA                                          u5241 1C78  
                                        u5161 1B6E                                          u6041 4652  
                                        u6121 3982                                          u5065 31DA  
                                        u5410 1E82                                          u5330 1DDA  
                                        u5250 1C8C                                          u5170 1B80  
                                        u5090 1A9A                                          u6050 455E  
                                        u6130 36FC                                          u5411 1E7E  
                                        u5331 1DD6                                          u5251 1C88  
                                        u5171 1B7C                                          u5091 1A96  
                                        u6051 455A                                          u6131 36F8  
                                        u5420 1EBC                                          u5340 1DEA  
                                        u5260 1CBE                                          u5180 1BEE  
                                        u5500 27AC                                          u7100 2014  
                                        u6060 4580                                          u6300 3CA6  
                                        u6140 3754                                          u6220 33A2  
                                        u5421 1EB8                                          u5341 1DE6  
                                        u5261 1CBA                                          u5181 1BEA  
                                        u5501 27A8                                          u7101 2010  
                                        u6061 457C                                          u6301 3CA2  
                                        u6141 3750                                          u6221 339E  
                                        u5430 1ECE                                          u5350 1E06  
                                        u5270 1CCC                                          u5190 1C06  
                                        u5510 27F0                                          u7110 2024  
                                        u6150 377A                                          u6070 38D0  
                                        u6230 33FC                                          u5431 1ECA  
                                        u5351 1E02                                          u5271 1CC8  
                                        u5191 1C00                                          u5511 27EC  
                                        u7111 2020                                          u6151 3776  
                                        u6071 38CC                                          u6231 33F8  
                                        u5440 1EDE                                          u5360 1E16  
                                        u5280 1CEA                                          u5600 298E  
                                        u5520 2802                                          u7200 22E4  
                                        u7120 219E                                          u7040 1F5A  
                                        u6160 3796                                          u6080 3900  
                                        u6240 482E                                          u5441 1EDA  
                                        u5361 1E12                                          u5281 1CE6  
                                        u5601 298A                                          u5521 27FE  
                                        u7201 22E0                                          u7041 1F56  
                                        u6161 3792                                          u6081 38FC  
                                        u6241 482A                                          u5450 1EFE  
                                        u5370 1E28                                          u5290 1D22  
                                        u5610 29AC                                          u5530 2812  
                                        u7210 2312                                          u7130 21F8  
                                        u7050 1F6C                                          u6170 37B6  
                                        u6090 3926                                          u6330 4000  
                                        u5451 1EFA                                          u5371 1E24  
                                        u5291 1D1E                                          u5611 29A8  
                                        u5531 280E                                          u7211 230E  
                                        u7131 21F4                                          u7051 1F68  
                                        u6171 37B2                                          u6091 3922  
                                        u6331 3FFC                                          u5460 1F10  
                                        u5380 1E3E                                          u5700 2AF6  
                                        u5620 29CC                                          u5540 2852  
                                        u6500 2FDC                                          u7220 234C  
                                        u7140 2218                                          u7060 1F7C  
                                        u6180 37DA                                          u5461 1F0C  
                                        u5381 1E3A                                          u5701 2AF2  
                                        u5621 29C8                                          u5541 284E  
                                        u6501 2FD8                                          u7221 2348  
                                        u7141 2214                                          u7125 2194  
                                        u7061 1F78                                          u6181 37D6  
                                        u6430 4864                                          u5470 1F2C  
                                        u5390 1E54                                          u5630 29DE  
                                        u5550 2892                                          u5710 35F2  
                                        u6510 2FFC                                          u7150 222A  
                                        u7070 1FBC                                          u7230 42B2  
                                        u6350 4068                                          u6431 4860  
                                        u5471 1F28                                          u5391 1E50  
                                        u5631 29DA                                          u5551 288E  
                                        u5711 35EE                                          u6511 2FF8  
                                        u7151 2226                                          u7071 1FB8  
                                        u7231 42AE                                          u6351 4064  
                                        u6440 497C                                          u5640 2A0C  
                                        u5560 2908                                          u5480 278A  
                                        u5720 3626                                          u5800 2B86  
                                        u6520 3026                                          u7160 2258  
                                        u7080 1FCE                                          u7240 42D0  
                                        u4840 34CA                                          u9000 3A66  
                                        u6344 4046                                          u6441 4978  
                                        u5641 2A08                                          u5561 2904  
                                        u5481 2786                                          u5801 2B82  
                                        u6521 3022                                          u7161 2254  
                                        u7081 1FCA                                          u7241 42CC  
                                        u4841 34C6                                          u9001 3A62  
                                        u6345 4042                                          u6450 3B2A  
                                        u5650 2A22                                          u5570 292A  
                                        u5490 279C                                          u5730 3654  
                                        u5810 2BDC                                          u6530 3040  
                                        u7170 226E                                          u7090 1FDE  
                                        u7250 42EC                                          u6290 450C  
                                        u4850 34EC                                          u9010 3A80  
                                        u6451 3B26                                          u5651 2A1E  
                                        u5571 2926                                          u5491 2798  
                                        u5731 3650                                          u5811 2BD8  
                                        u6531 303C                                          u7171 226A  
                                        u7091 1FDA                                          u7251 42E8  
                                        u6291 4508                                          u4851 34E8  
                                        u9011 3A7C                                          u6460 3B3C  
                                        u5660 2A36                                          u5580 2954  
                                        u5740 3668                                          u5820 2C26  
                                        u6540 3060                                          u7180 2282  
                                        u9020 3AA6                                          u9100 3E7C  
                                        u6461 3B38                                          u5661 2A32  
                                        u5581 2950                                          u5741 3664  
                                        u5725 361C                                          u5821 2C22  
                                        u6541 305C                                          u7181 227E  
                                        u9021 3AA2                                          u9101 3E78  
                                        u6470 3B5A                                          u5670 2A50  
                                        u5590 2978                                          u5750 3690  
                                        u5830 2C44                                          u6550 30B0  
                                        u7190 229C                                          u9030 3AC4  
                                        u9110 3EA0                                          u6471 3B56  
                                        u5671 2A4C                                          u5591 2974  
                                        u5751 368C                                          u5831 2C40  
                                        u6551 30AC                                          u7191 2298  
                                        u9031 3AC0                                          u9111 3E9C  
                                        u6480 3B9C                                          u5680 2A98  
                                        u5760 36B0                                          u5840 2C54  
                                        u6560 30D0                                          u4864 3510  
                                        u9040 3AE0                                          u9120 422C  
                                        u9200 2D3C                                          u6481 3B98  
                                        u5681 2A94                                          u5761 36AC  
                                        u5841 2C50                                          u6561 30CC  
                                        u4865 350C                                          u9041 3ADC  
                                        u9121 4228                                          u9201 2D38  
                                        u5690 2AC8                                          u5770 36C0  
                                        u5850 2C62                                          u6570 30EC  
                                        u4874 356C                                          u9050 3B06  
                                        u9130 4282                                          u9210 2DE0  
                                        u6730 4776                                          u6650 3D62  
                                        u5691 2AC4                                          u5771 36BC  
                                        u5851 2C5E                                          u6571 30E8  
                                        u4875 3568                                          u9051 3B02  
                                        u9131 427E                                          u9211 2DDC  
                                        u6731 4772                                          u6651 3D5E  
                                        u6900 431E                                          u5860 2C9C  
                                        u5780 2B1C                                          u6580 310C  
                                        u9300 2EB0                                          u9060 3E14  
                                        u9140 4700                                          u9220 2DF2  
                                        u6740 4738                                          u6660 3D74  
                                        u6901 431A                                          u5861 2C98  
                                        u5781 2B18                                          u6581 3108  
                                        u9301 2EAC                                          u9061 3E10  
                                        u9141 46FC                                          u9221 2DEE  
                                        u6741 4734                                          u6661 3D70  
                                        u6910 4330                                          u5870 2CAA  
                                        u5790 2B2A                                          u9310 2F22  
                                        u9070 3E2E                                          u9230 2E0C  
                                        u9150 2CCE                                          u6670 3DC0  
                                        u6495 3BB4                                          u6911 432C  
                                        u5871 2CA6                                          u5791 2B26  
                                        u9311 2F1E                                          u9071 3E2A  
                                        u9231 2E08                                          u9151 2CC8  
                                        u6920 4366                                          u9320 2F68  
                                        u9080 3E48                                          u9240 2E1C  
                                        u9160 2CD0                                          u6680 3DEE  
                                        u6921 4362                                          u9321 2F64  
                                        u9081 3E44                                          u9241 2E18  
                                        u9330 2FC8                                          u9090 3E66  
                                        u9170 2CE2                                          u9250 3286  
                                        u6690 3DFE                                          u9331 2FC4  
                                        u9091 3E62                                          u9171 2CDE  
                                        u9251 3282                                          u6691 3DFA  
                                        u5980 4404                                          u9180 2CFA  
                                        u9260 32D4                                          u9420 1170  
                                        u5981 4400                                          u9181 2CF6  
                                        u9261 32D0                                          u9341 3BE4  
                                        u6677 3DB6                                          u9421 116C  
                                        u5990 4426                                          u9190 2D26  
                                        u9270 32F2                                          u9350 3C00  
                                        u9430 1188                                          u5991 4422  
                                        u9191 2D22                                          u9271 32EE  
                                        u9351 3BFC                                          u6687 3DE4  
                                        u9431 1184                                          u9280 44A4  
                                        u9360 3C90                                          u9440 12DE  
                                        u9281 44A0                                          u9361 3C8C  
                                        u9441 12DA                                          u9290 2E6E  
                                        u9450 1316                                          u9507 343E  
                                        u9291 2E6A                                          u9451 1312  
                                        u9460 146E                                          u9461 146A  
                                        u9477 1150                                          u8950 399C  
                                        u9487 3402                                          u8951 3998  
                                        u8960 39AE                                          u9497 3422  
                                        u8961 39AA                                          u8970 39D6  
                                        u8971 39D2                                          u8980 3A0C  
                                        u8981 3A08                                          u8990 461A  
                                        u8991 4616                                          _TMR2 0FCC  
                     ??_application_intialize 005B                      _RB4_InterruptHandler_LOW 00AC  
                                        abs@a 0012                                          _dbuf 0122  
                                        _main 105E                                          _dtoa 2CBE  
                            __end_of_CCP1_ISR 491C                              __end_of_CCP2_ISR 4A5C  
                                        _prec 0088                      _RB7_InterruptHandler_LOW 00A0  
                                        pad@i 0023                                          pad@p 0020  
                                        fsr0h 0FEA                                          fsr1h 0FE2  
                                        indf0 0FEF                                          fsr2h 0FDA  
                                        fsr0l 0FE9                                          indf1 0FE7  
                                        indf2 0FDF                                          fsr1l 0FE1  
                                        pad@w 0025                                          fsr2l 0FD9  
                                        btemp 0073                              __end_of_ADC_Init 3D50  
                                        prodh 0FF4                                          prodl 0FF3  
                                        start 000E                               ___fldiv@new_exp 002B  
               __end_of_lcd_8bit_send_command 410A                                  ___param_bank 0000  
                                       ??_abs 0014                          _gpio_pin_write_logic 34B8  
                                       ??_pad 0022                              __end_of_INT0_ISR 4A54  
                            __end_of_INT1_ISR 4A50                              __end_of_INT2_ISR 4A4C  
                                       l10000 2E72                                         l10002 2E7E  
                                       l10020 2FA0                                         l10012 2F26  
                                       l10022 2FAC                                         l10014 2F52  
                                       l10006 2EB4                                         l10030 44BE  
                                       l10110 1066                                         l10024 2FB2  
                                       l10008 2F0C                                         l10032 44C6  
                                       l10040 3BD8                                         l10120 112A  
                                       l10112 1082                                         l10026 2FB6  
                                       l10018 2F6C                                         l10034 44CE  
                                       l10050 3C08                                         l10042 3BDE  
                                       l10130 119C                                         l10122 114A  
                                       l10114 10D4                                         l10106 105E  
                                       l10036 44EA                                         l10028 44AE  
                                       l10060 3C72                                         l10052 3C24  
                                       l10044 3BEA                                         l10300 3FC2  
                                       l10140 1260                                         l10132 11BC  
                                       l10124 115A                                         l10116 10F0  
                                       l10108 1062                                         l10302 35C2  
                                       l10054 3C34                                         l10062 3C90  
                                       l10046 3BEE                                         l10142 1280  
                                       l10134 11D8                                         l10126 1170  
                                       l10150 12C8                                         l10118 110A  
                                       l10304 3246                                         l10056 3C54  
                                       l10048 3C00                                         l10160 132A  
                                       l10152 12DE                                         l10136 122A  
                                       l10128 1188                                         l10144 1284  
                                       l10306 1A12                                         l10058 3C70  
                                       l10170 13EE                                         l10162 134A  
                                       l10154 12E6                                         l10146 12A4  
                                       l10138 1246                                         l10308 3846  
                                       l10180 144E                                         l10172 140E  
                                       l10164 1366                                         l10156 12F6  
                                       l10148 12B4                                         l10190 1510  
                                       l10182 146E                                         l10166 13B8  
                                       l10158 1316                                         l10174 1412  
                                       l10192 152C                                         l10184 1482  
                                       l10168 13D4                                         l10176 1436  
                                       l10194 1546                                         l10186 14A2  
                                       l10178 143E                                         l10196 1566  
                                       l10188 14BE                                         l10198 156A  
                               ___fltol@sign1 004B                               __end_of___fladd 1F40  
                                       ?_main 0001                                         ?_dtoa 0027  
                             __end_of___fldiv 2B0A                               __end_of___awdiv 3B18  
                                       _EEADR 0FA9                                         STR_10 1036  
                                       STR_11 1027                                         STR_12 1011  
                             __end_of___awmod 3EB2                               __end_of___flmul 236A  
                             __end_of___fltol 36E2                               ___awdiv@divisor 000E  
                             __end_of___lwdiv 430C                                         i2l604 4A5E  
                                       i2l464 421C                                         i2l650 491A  
                                       i2l645 4A5A                                         i2l691 4396  
                                       i2l692 43EE                                         i2l696 43F0  
                             ___awdiv@counter 0010                                         _RCREG 0FAE  
                         relay_turn_off@F3052 0064                                  vfpfcnvrt@fmt 0036  
                                       _TMR0H 0FD7                                         _TMR1H 0FCF  
                                       _TMR0L 0FD6                                         _TMR1L 0FCE  
                                       _TMR3H 0FB3                                         _TMR3L 0FB2  
                                       _SPBRG 0FAF                                         _PORTA 0F80  
                                       _PORTB 0F81                                         _PORTC 0F82  
                                       _PORTD 0F83                                         _PORTE 0F84  
                               _EUSART_Rx_ISR 4A62                                         _TRISA 0F92  
                                       _TRISB 0F93                                         _TRISC 0F94  
                                       _TRISD 0F95                                         _TRISE 0F96  
                               _EUSART_Tx_ISR 4A54                                         _TXREG 0FAD  
                            __end_of_TMR0_ISR 4A2C                              __end_of_TMR1_ISR 4A1E  
                            __end_of_TMR2_ISR 4A34                                         _adc_1 018A  
                            __end_of_TMR3_ISR 4A10                                         _lcd_1 0184  
                                       _lcd_2 00EF                                         _flags 00C4  
                                       _fputc 398A                                         _fputs 45D8  
                    ?_lcd_8bit_send_char_data 0018                                         pad@fp 001C  
                                       _width 0086                                         _putch 4A60  
                                       dtoa@d 0029                                         dtoa@i 0032  
                                       dtoa@p 002D                                         dtoa@s 0031  
                                       dtoa@w 002F                                         pclath 0FFA  
                                       pclatu 0FFB                                         tablat 0FF5  
          CCP_Compare_Mode_Set_Value@_ccp_obj 0001                                         ttemp5 0074  
                                       ttemp6 0077                                         ttemp7 007B  
                                       status 0FD8                                         wtemp8 0074  
                             __end_of_sprintf 44FA                   _I2C_DefaultInterruptHandler 00B8  
                             __initialization 410A                                  __end_of_main 1592  
                                __end_of_dtoa 2E54                      ??_MSSP_I2C_MODE_GPIO_CFG 000C  
                       ?_gpio_pin_write_logic 000C                                     ??_ADC_ISR 0001  
                      lcd_8bit_set_cursor@lcd 0021                        lcd_8bit_set_cursor@row 0023  
                               _lat_registers 0170                   __end_of_dc_motor_initialize 4852  
         lcd_8bit_send_command@l_pins_counter 0020                                        ??_main 005E  
                                      ??_dtoa 002B                                 __activetblptr 0003  
                              ?_EUSART_Rx_ISR 0001                                ?_EUSART_Tx_ISR 0001  
                            led_turn_on@F3053 0069                             ?_usart_model_init 0001  
                                   ??_RB4_ISR 0001                                     ??_RB5_ISR 0001  
                                   ??_RB6_ISR 0001                                     ??_RB7_ISR 0001  
                          ??_usart_model_init 000C                    _EUSART_OverrunErrorHandler 008A  
                                      ?_fputc 000C                                        ?_fputs 0015  
                                      _ADRESH 0FC4                                        _EEADRH 0FAA  
                                      _ADRESL 0FC3                                        _EEDATA 0FA8  
                                      _CCPR1H 0FBF                                        _CCPR2H 0FBC  
                                      _CCPR1L 0FBE                                        _CCPR2L 0FBB  
                                      _EECON2 0FA7                              ___awdiv@dividend 000C  
                                      ?_putch 0001                     dc_motor_initialize@_motor 0019  
                           _EUSART_ASYNC_Init 44FA                                        i2l1023 4A46  
                                      i2l1104 49F0      __end_of_MSSP_I2C_Interrupt_Configuration 45D8  
          ??_MSSP_I2C_Interrupt_Configuration 000E             ?_MSSP_I2C_Interrupt_Configuration 000C  
            _MSSP_I2C_Interrupt_Configuration 458E                                        i2l1018 48EA  
                                      i2l1115 49D6                                        i2l1126 49BC  
                                      i2l1137 49A2                                        i2l1083 4A52  
                                      i2l1340 239C                                        i2l1093 4A4A  
                                      i2l1342 23BC                                        i2l1415 4A2A  
                                      i2l1088 4A4E                                        i2l1352 2530  
                                      i2l1344 23DC                                        i2l1370 275C  
                                      i2l1346 2420                                        i2l1355 25B8  
                                      i2l1357 25FC                                        i2l1349 24A8  
                                      i2l1359 261C                                        i2l1537 4A32  
                                      i2l1570 4968                                        i2l1802 47DE  
                                      i2l1723 4A56                                        i2l1732 4A62  
                                      i2l1485 4A1C                                        i2l1569 4966  
                                      i2l1593 4A0E                                        i2l1795 47DA  
                                      i2l1796 47C4                                        i2l1798 47D2  
                                      i2l1799 47DC                                        i2l8000 48BE  
                                      i2l8010 4A50                                        i2l8002 48D2  
                                      i2l8004 4A44                                        i2l8022 4A48  
                                      i2l8030 49DC                                        i2l7400 4380  
                                      i2l8016 4A4C                                        i2l8120 4A1E  
                                      i2l7410 43BA                                        i2l7402 4380  
                                      i2l8050 49D6                                        i2l8042 49C0  
                                      i2l8122 4A20                                        i2l8130 4A10  
                                      i2l7412 43C6                                        i2l7404 4380  
                                      i2l8036 49F0                                        i2l8028 49DA  
                                      i2l8044 49C2                                        i2l8124 4A26  
                                      i2l8132 4A12                                        i2l8140 4A2C  
                                      i2l7414 43E2                                        i2l7406 4392  
                                      i2l8070 498C                                        i2l8134 4A18  
                                      i2l8150 4A0A                                        i2l7408 439E  
                                      i2l8064 49BC                                        i2l8056 49A6  
                                      i2l8072 498E                                        i2l8162 4A62  
                                      i2l8058 49A8                                        i2l8146 4A02  
                                      i2l7620 41B2                                        i2l8156 4A54  
                                      i2l8148 4A04                                        i2l9300 241A  
                                      i2l7390 4948                                        i2l7630 4210  
                                      i2l7622 41C2                                        i2l8078 49A2  
                                      i2l9310 245E                                        i2l9302 242E  
                                      i2l7392 495A                                        i2l7632 4218  
                                      i2l7624 41DA                                        i2l7616 4198  
                                      i2l9400 268A                                        i2l9320 249E  
                                      i2l9304 243C                                        i2l9312 2464  
                                      i2l7394 495E                                        i2l7626 41E6  
                                      i2l7618 419A                                        i2l9410 26BC  
                                      i2l9402 2698                                        i2l9330 24E2  
                                      i2l9322 24A2                                        i2l9314 2472  
                                      i2l9306 244A                                        i2l7396 4962  
                                      i2l7388 4948                                        i2l7628 41F8  
                                      i2l9420 26F8                                        i2l9412 26CA  
                                      i2l9404 269C                                        i2l9340 2516  
                                      i2l9332 24E6                                        i2l9324 24B6  
                                      i2l9316 2480                                        i2l9308 245A  
                                      i2l7750 47B2                                        i2l9430 272A  
                                      i2l9422 26FC                                        i2l9414 26D8  
                                      i2l9406 26AA                                        i2l9350 255A  
                                      i2l9342 2526                                        i2l9326 24C4  
                                      i2l9334 24EC                                        i2l9318 248E  
                                      i2l7752 47C0                                        i2l9432 2738  
                                      i2l9424 270A                                        i2l9416 26DC  
                                      i2l9408 26B8                                        i2l9360 2590  
                                      i2l9352 256A                                        i2l9344 252A  
                                      i2l9336 24FA                                        i2l9328 24D2  
                                      i2l9280 238A                                        i2l9434 273C  
                                      i2l9426 2718                                        i2l9418 26EA  
                                      i2l9370 25D4                                        i2l9362 259E  
                                      i2l9354 256E                                        i2l9346 253E  
                                      i2l9338 2508                                        i2l9290 23D8  
                                      i2l9282 2398                                        i2l7748 47A2  
                                      i2l9436 274A                                        i2l9428 271C  
                                      i2l9380 2618                                        i2l9372 25E2  
                                      i2l9364 25AE                                        i2l9348 254C  
                                      i2l9356 2574                                        i2l9292 23EA  
                                      i2l9284 23AA                                        i2l9438 2758  
                                      i2l9390 2658                                        i2l9382 262A  
                                      i2l9374 25F2                                        i2l9366 25B2  
                                      i2l9358 2582                                        i2l9294 23F8  
                                      i2l9286 23B8                                        i2l9278 237C  
                                      i2l9392 265C                                        i2l9384 2638  
                                      i2l9376 25F6                                        i2l9368 25C6  
                                      i2l9296 2406                                        i2l9288 23CA  
                                      i2l9394 266A                                        i2l9386 263C  
                                      i2l9378 260A                                        i2l9298 2416  
                                      i2l7980 4A5C                                        i2l9396 2678  
                                      i2l9388 264A                                        i2l9398 267C  
                                      i2l7992 48EC                                        i2l7994 48EE  
                                      i2l7986 4A58                                        i2l7996 4902  
                                      i2l7998 48BC           convert_uint16_to_string@Temp_String 0195  
                                      _SPBRGH 0FB0                            ?_EUSART_ASYNC_Init 0059  
                                      _SSPADD 0FC8                                        _SSPBUF 0FC9  
           ADC_GetConversion_Blocking@channel 0015                              __end_of___xxtofl 2CBE  
            ??_MSSP_I2C_Master_Mode_Clock_CFG 004F               ?_MSSP_I2C_Master_Mode_Clock_CFG 004D  
                       __end_of_MSSP_I2C_Init 3124                   __end_of_dc_motor_move_right 47A2  
                                vfprintf@cfmt 0048                           ??_EUSART_ASYNC_Init 005B  
                                   ??___fladd 003B                                        _check1 0061  
                                      _check2 0060                                        _check3 005F  
                                   ??___fldiv 0022                                     ??___awdiv 0010  
                                   ??___awmod 0010                                     ??___flmul 0022  
                                   ??___fltol 0047                                     ??___lwdiv 0010  
                                      _memset 2E54                                        clear_0 4170  
                                      clear_1 417C                                        clear_2 4188  
                            ___awdiv@quotient 0012                               ___awmod@divisor 000E  
                                      isa$std 0001                               ___awmod@counter 0010  
                                      pad@buf 001E                                        dtoa@fp 0027  
                 lcd_8bit_send_string_pos@lcd 0027                   lcd_8bit_send_string_pos@ret 002D  
                 lcd_8bit_send_string_pos@row 0029                   lcd_8bit_send_string_pos@str 002B  
     gpio_pin_direction_intialize@_pin_config 000C                                        fputc@c 000C  
                                   ?_CCP1_ISR 0001                                        fputs@c 0019  
                                      fputs@i 001A                                  __pdataCOMRAM 006D  
                                   ?_CCP2_ISR 0001                                        fputs@s 0015  
                              _adc_lm35_1_txt 00E7                                     ?_ADC_Init 000F  
                                __mediumconst 0000                                        tblptrh 0FF7  
                                      tblptrl 0FF6                                        tblptru 0FF8  
                   __end_of_EUSART_ASYNC_Init 4544                                        putch@c 0001  
                            __end_of_vfprintf 44AE                                     ??_sprintf 0050  
                __end_of_EUSART_ASYNC_RX_Init 37DE                  __end_of_EUSART_ASYNC_TX_Init 398A  
                __end_of_select_result_format 4660                                  ___xxtofl@arg 0016  
                                ___xxtofl@exp 0015                                  ___xxtofl@val 000C  
                                  __accesstop 0080                       __end_of__initialization 418E  
                                   ?_INT0_ISR 0001                                     ?_INT1_ISR 0001  
                                   ?_INT2_ISR 0001                                 ___rparam_used 0001  
                                  ___fltol@f1 0043                                    _adc_lm35_1 006B  
                      ??_gpio_pin_write_logic 000F                                __pcstackCOMRAM 0001  
                                __pidataBANK0 49F2                                  __pidataBANK1 491C  
                                   ?_TMR0_ISR 0001                                     ?_TMR1_ISR 0001  
                                   ?_TMR2_ISR 0001                                     ?_TMR3_ISR 0001  
                ??_ADC_GetConversion_Blocking 0018                                 __end_of_fputc 3A54  
                               __end_of_fputs 461C                                 __end_of_putch 4A62  
                             ??_EUSART_Rx_ISR 0001                               ??_EUSART_Tx_ISR 0001  
                           RB5_ISR@RB5_source 0001       MSSP_I2C_Interrupt_Configuration@i2c_obj 000C  
                          _Timer3_Write_value 4948                       _ADC_GetConversionResult 3B18  
                                  ??_CCP1_ISR 0008                                    ??_CCP2_ISR 0001  
                                  ??_ADC_Init 0011                           ?_Timer3_Write_value 0001  
                                     ??_fputc 0010                                       ??_fputs 0019  
                                     ??_putch 000C                                    __pbssBANK0 0080  
                                  __pbssBANK1 0100                         _INT0_InterruptHandler 00B4  
                                  ??_INT0_ISR 0001                                    ??_INT1_ISR 0001  
                                  ??_INT2_ISR 0001                                    __pnvCOMRAM 0071  
               __end_of_application_intialize 4A3A                     dc_motor_move_right@_motor 0015  
                      lcd_8bit_initialize@lcd 0021                        lcd_8bit_initialize@ret 0026  
                      _TMR0_Interrupt_Handler 009E                        _TMR3_Interrupt_Handler 0094  
                        ??_Timer3_Write_value 0005                                    ??_TMR0_ISR 0001  
                                  ??_TMR1_ISR 0001                                    ??_TMR2_ISR 0001  
                                  ??_TMR3_ISR 0001                             led_turn_off@F3058 0068  
                               ??_I2C_Obj_CFG 0054                   convert_uint16_to_string@ret 019B  
                                     _ADC_ISR 4A5C                   EUSART_ASYNC_TX_Init@_eusart 000C  
                             led_toggle@F3063 0067                   convert_uint16_to_string@str 0193  
                                     ?_memset 000C                                       _ADC_Req 00C9  
              ADC_GetConversion_Blocking@_adc 0013                                       _RB4_ISR 49D8  
                                     _RB5_ISR 49BE                                       _RB6_ISR 49A4  
                                     _RB7_ISR 498A                                     ?___xxtofl 000C  
                   _RB6_InterruptHandler_HIGH 00A6                                 ?_MSSP_I2C_ISR 0001  
         __end_of_lcd_8bit_send_enable_signal 48BC                   _lcd_8bit_send_enable_signal 4888  
                           RB7_ISR@RB7_source 0001                ??_CCP1_DefaultInterruptHandler 0008  
                      _MSSP_I2C_MODE_GPIO_CFG 4A3A               CCP_Compare_Mode_Set_Value@F3112 00BC  
              lcd_8bit_send_enable_signal@lcd 0015                lcd_8bit_send_enable_signal@ret 0017  
                              _tris_registers 017A                      _RB6_InterruptHandler_LOW 00A4  
               ??_lcd_8bit_send_enable_signal 0017                                       _i2c_obj 00DA  
                           ??_MSSP_I2C_BC_ISR 0001        lcd_8bit_initialize@l_data_pins_counter 0025  
                                     __Hparam 0000                                  ADC_Init@_adc 000F  
                                     __Lparam 0000                           _ecu_layer_intialize 46A4  
                                     ___fladd 1A80                         _lcd_8bit_send_command 407A  
                                     ___fldiv 2770                                       ___awdiv 3A54  
                                     ___awmod 3E02                                       ___flmul 1F40  
                                     ___fltol 35DC                                       ___lwdiv 4298  
                           __end_of_btn_value 1011             _EUSART_Baud_Rate_Calculation$5785 0055  
                                   ?_vfprintf 0042                                  __psmallconst 1000  
                        _EUSART_ASYNC_RX_Init 36E2                     ??_ADC_GetConversionResult 0010  
                        _EUSART_ASYNC_TX_Init 38B6                    __end_of_gpio_pin_intialize 445E  
                                     __pcinit 410A                          _select_result_format 461C  
                                     __ramtop 1000                      _lcd_8bit_send_string_pos 3D50  
                                     __ptext0 105E                                       __ptext1 3D50  
                                     __ptext2 3F50                                       __ptext3 3FEA  
                                     __ptext4 4726                                       __ptext5 4764  
                                     __ptext6 3BD8                                       __ptext7 44AE  
                                     __ptext8 445E                                       __ptext9 3260  
                                   _T0CONbits 0FD5                                     _T1CONbits 0FCD  
                    _convert_uint16_to_string 3BD8                                ??_MSSP_I2C_ISR 0001  
                                   _T2CONbits 0FCA                           __end_of_I2C_Obj_CFG 46A4  
                                  ??___xxtofl 0010                                     _T3CONbits 0FB1  
                            ___awmod@dividend 000C                          ?_ecu_layer_intialize 0001  
  EUSART_Baud_Rate_Calculation@Baud_Rate_Temp 0051                                       _sprintf 44AE  
                              __pintcode_body 236A                          end_of_initialization 418E  
                    select_result_format@_adc 000C   ADC_GetConversion_Blocking@conversion_result 0016  
                                     fputc@fp 000E                                       memset@c 000E  
                                     memset@k 0014                                       memset@n 0010  
                                     memset@s 0016                                       int_func 236A  
                                     fputs@fp 0017                  ??_CCP_Compare_Mode_Set_Value 0005  
                       gpio_pin_intialize@ret 0018                                 _dc_motor_stop 4726  
                           __end_of_vfpfcnvrt 338C                                     _RCSTAbits 0FAB  
          __end_of_ADC_GetConversion_Blocking 4380                    _ADC_GetConversion_Blocking 430C  
                                     postdec1 0FE5                                       postdec2 0FDD  
                                     postinc0 0FEE                                       postinc1 0FE6  
                                     postinc2 0FDE                              vfpfcnvrt@convarg 003C  
                       ?_EUSART_ASYNC_RX_Init 000C                                    ??_vfprintf 0048  
                       ?_EUSART_ASYNC_TX_Init 000C                         ?_select_result_format 000C  
                       _INT1_InterruptHandler 00B2                                     _PORTBbits 0F81  
               gpio_pin_intialize@_pin_config 0015                                  _compare_flag 0063  
                                 ___fladd@grs 0042                         ??_ecu_layer_intialize 005B  
        __end_of_gpio_pin_direction_intialize 3260                  _gpio_pin_direction_intialize 3124  
                               ___xxtofl@sign 0014                                     _TRISCbits 0F94  
                         _ADC_StartConversion 496A                                   ___fldiv@grs 002D  
                                 ___fldiv@rem 0026                                   ___flmul@grs 0027  
                                 _CCP1CONbits 0FBD                                   _CCP2CONbits 0FBA  
                                   _TXSTAbits 0FAC                                ?_dc_motor_stop 0015  
                          relay_turn_on@F3047 0065                        ?_lcd_8bit_send_command 0018  
                        ?_ADC_StartConversion 000C                lcd_8bit_send_string_pos@column 002A  
                    EUSART_ASYNC_Init@_eusart 0059                 convert_uint16_to_string@F3201 0114  
               convert_uint32_to_string@F3208 0100                                   _I2C_Obj_CFG 4660  
                                 vfpfcnvrt@ap 0038                                   vfpfcnvrt@cp 0040  
                                 vfpfcnvrt@fp 0034                                   _BAUDCONbits 0FB8  
                               __pidataCOMRAM 4A40       adc_input_channel_port_configure@channel 000E  
                              _timer0_preload 009C         lcd_8bit_send_char_data@l_pins_counter 0020  
                              __end_of_memset 2FCA                                _timer1_preload 0098  
                              _timer2_preload 0062                  ?_configure_voltage_reference 000C  
                         start_initialization 410A                                _timer3_preload 0092  
         EUSART_Baud_Rate_Calculation@_eusart 004D                           _lcd_8bit_initialize 338C  
               convert_uint16_to_string@value 0191                                   __end_of_abs 4726  
                                 __end_of_pad 4298                 ?_gpio_pin_direction_intialize 000C  
    ADC_GetConversionResult@conversion_result 000E          __end_of_EUSART_Baud_Rate_Calculation 1A80  
                _EUSART_Baud_Rate_Calculation 1592                     _EUSART_RxInterruptHandler 008E  
                          _i2c_slave_rec_data 00C7                         ADC_SelectChannel@_adc 000F  
                        __end_of_MSSP_I2C_ISR 48EC                          ?_lcd_8bit_initialize 0021  
                       ??_ADC_StartConversion 000E                       _lcd_8bit_send_char_data 3FEA  
                                 vfprintf@fmt 0044                    _EUSART_FramingErrorHandler 008C  
                      ??_EUSART_ASYNC_RX_Init 000E                        ??_EUSART_ASYNC_TX_Init 000E  
                      ??_select_result_format 000E                                   __pdataBANK0 00EE  
                                 __pdataBANK1 0166                  convert_uint8_to_string@F3194 011E  
                                    ?_ADC_ISR 0001                                      ??_memset 0012  
                         _lcd_8bit_set_cursor 3F50                                    memset@dest 000C  
                    lcd_8bit_send_command@lcd 0018                      lcd_8bit_send_command@ret 001F  
                     ADC_StartConversion@_adc 000C                         __end_of_EUSART_Rx_ISR 4A64  
                                   ___fladd@a 0037                                     ___fladd@b 0033  
                       __end_of_EUSART_Tx_ISR 4A58                          MSSP_I2C_Init@i2c_obj 0051  
                                   ___fldiv@a 001E                                     ___fldiv@b 001A  
                                    ?_RB4_ISR 0001                                      ?_RB5_ISR 0001  
                                    ?_RB6_ISR 0001                                      ?_RB7_ISR 0001  
                     ?_MSSP_I2C_MODE_GPIO_CFG 0001                                     ___flmul@a 001E  
                                   ___flmul@b 001A                                   __pbssCOMRAM 005F  
 _I2C_Report_Write_Collision_InterruptHandler 00BA                                 __pcstackBANK1 0191  
               ??_configure_voltage_reference 000E                               _MSSP_I2C_BC_ISR 4A44  
                      _CCP1_Interrupt_Handler 00C0                   ADC_GetConversionResult@_adc 000C  
                                _dummy_buffer 00C8                          ?_lcd_8bit_set_cursor 0021  
                       _INT2_InterruptHandler 00B0                                     _dc_motor1 00FB  
                                   _dc_motor2 00F9                              _usart_model_init 47E0  
                             ??_dc_motor_stop 0017            __end_of_CCP_Compare_Mode_Set_Value 43F2  
                  _CCP_Compare_Mode_Set_Value 4380                 ?_EUSART_Baud_Rate_Calculation 004D  
                       ??_lcd_8bit_initialize 0023                  __end_of_InterruptManagerHigh 2770  
                  ??_lcd_8bit_send_string_pos 002D                              ___lwdiv@dividend 000C  
                               _MSSP_I2C_Init 2FCA                        _TMR1_Interrupt_Handler 009A  
                       _application_intialize 4A34                                     _dtoa$5246 002B  
                                   __pintcode 0008      __end_of_adc_input_channel_port_configure 38B6  
          ??_adc_input_channel_port_configure 000C             ?_adc_input_channel_port_configure 0001  
            _adc_input_channel_port_configure 37DE                             _ADC_SelectChannel 4852  
                 lcd_8bit_send_char_data@data 001A                    ??_convert_uint16_to_string 005E  
                                    ?___fladd 0033               gpio_pin_write_logic@_pin_config 000C  
                                    ?___fldiv 001A                                      ?___awdiv 000C  
                                    ?___awmod 000C                                      ?___flmul 001A  
                                    ?___fltol 0043                                      ?___lwdiv 000C  
               ADC_GetConversion_Blocking@ret 0018                            ?_ADC_SelectChannel 000F  
                   gpio_pin_write_logic@logic 000E                __end_of_MSSP_I2C_MODE_GPIO_CFG 4A40  
                                   _btn_value 1001                                   __smallconst 1000  
                   _RB4_InterruptHandler_HIGH 00AE                                      _CCP1_ISR 48EC  
                                    _CCP2_ISR 4A58                           ??_ADC_SelectChannel 0012  
                                    _ADC_Init 3C94                      Timer3_Write_value@_value 0003  
                    Timer3_Write_value@_timer 0001                     _RB7_InterruptHandler_HIGH 00A2  
                            ___lwdiv@quotient 0010                                      ?_sprintf 004A  
                          _gpio_pin_intialize 43F2                         ??_lcd_8bit_set_cursor 0025  
              ??_gpio_pin_direction_intialize 000E                      _RB5_InterruptHandler_LOW 00A8  
                                    _INT0_ISR 4A50                                      _INT1_ISR 4A4C  
                                    _INT2_ISR 4A48                                      _RB4_Flag 0070  
                   ??_lcd_8bit_send_char_data 001B                                      _RB5_Flag 006F  
                                    _RB6_Flag 006E                                      _RB7_Flag 006D  
                         ?_gpio_pin_intialize 0015                                      _PIE1bits 0F9D  
                                    _PIE2bits 0FA0                                ?_MSSP_I2C_Init 0051  
                   __end_of_ADC_SelectChannel 4888                                      _PIR1bits 0F9E  
                                    _PIR2bits 0FA1                                      i2u700_40 499E  
                                    i2u700_41 499A                                      i2u625_40 495A  
                                    i2u641_40 41C2                                      i2u625_41 4956  
                                    i2u641_41 41BE                                      i2u626_40 4392  
                                    i2u642_40 41F8                                      i2u626_41 438E  
                                    i2u642_41 41F4                                      i2u627_40 43BA  
                                    i2u811_40 238A                                      i2u627_41 43B6  
                                    i2u811_41 2386                                      i2u628_40 43E2  
                                    i2u660_40 47C0                                      i2u820_40 2416  
                                    i2u812_40 2398                                      i2u628_41 43DE  
                                    i2u660_41 47BC                                      i2u820_41 2412  
                                    i2u812_41 2394                                      i2u661_40 47D2  
                                    i2u821_40 242E                                      i2u813_40 23AA  
                                    i2u661_41 47CE                                      i2u821_41 242A  
                                    i2u813_41 23A6                                      i2u830_40 24C4  
                                    i2u822_40 243C                                      i2u814_40 23B8  
                                    i2u830_41 24C0                                      i2u822_41 2438  
                                    i2u814_41 23B4                                      i2u831_40 24D2  
                                    i2u823_40 244A                                      i2u815_40 23CA  
                                    i2u831_41 24CE                                      i2u823_41 2446  
                                    i2u815_41 23C6                                      i2u840_40 256A  
                                    i2u832_40 24E2                                      i2u824_40 245A  
                                    i2u816_40 23D8                                      i2u840_41 2566  
                                    i2u832_41 24DE                                      i2u824_41 2456  
                                    i2u816_41 23D4                                      i2u841_40 2582  
                                    i2u833_40 24FA                                      i2u825_40 2472  
                                    i2u817_40 23EA                                      i2u841_41 257E  
                                    i2u833_41 24F6                                      i2u825_41 246E  
                                    i2u817_41 23E6                                      i2u850_40 2618  
                                    i2u842_40 2590                                      i2u834_40 2508  
                                    i2u826_40 2480                                      i2u818_40 23F8  
                                    i2u850_41 2614                                      i2u842_41 258C  
                                    i2u834_41 2504                                      i2u826_41 247C  
                                    i2u818_41 23F4                                      i2u659_40 47B2  
                                    i2u851_40 262A                                      i2u843_40 259E  
                                    i2u835_40 2516                                      i2u827_40 248E  
                                    i2u819_40 2406                                      i2u659_41 47AE  
                                    i2u851_41 2626                                      i2u843_41 259A  
                                    i2u835_41 2512                                      i2u827_41 248A  
                                    i2u819_41 2402                                      i2u860_40 26B8  
                                    i2u852_40 2638                                      i2u844_40 25AE  
                                    i2u836_40 2526                                      i2u828_40 249E  
                                    i2u860_41 26B4                                      i2u852_41 2634  
                                    i2u844_41 25AA                                      i2u836_41 2522  
                                    i2u828_41 249A                                      i2u693_40 4902  
                                    i2u861_40 26CA                                      i2u853_40 264A  
                                    i2u845_40 25C6                                      i2u837_40 253E  
                                    i2u829_40 24B6                                      i2u693_41 48FE  
                                    i2u861_41 26C6                                      i2u853_41 2646  
                                    i2u845_41 25C2                                      i2u837_41 253A  
                                    i2u829_41 24B2                                      i2u870_40 2758  
                                    i2u862_40 26D8                                      i2u854_40 2658  
                                    i2u846_40 25D4                                      i2u838_40 254C  
                                    i2u870_41 2754                                      i2u862_41 26D4  
                                    i2u854_41 2654                                      i2u846_41 25D0  
                                    i2u838_41 2548                                      i2u694_48 4908  
                                    i2u695_40 48D2                                      i2u863_40 26EA  
                                    i2u855_40 266A                                      i2u847_40 25E2  
                                    i2u839_40 255A                                      i2u694_49 491A  
                                    i2u695_41 48CE                                      i2u863_41 26E6  
                                    i2u855_41 2666                                      i2u847_41 25DE  
                                    i2u839_41 2556                                      i2u864_40 26F8  
                                    i2u856_40 2678                                      i2u848_40 25F2  
                                    i2u864_41 26F4                                      i2u856_41 2674  
                                    i2u848_41 25EE                                      i2u696_48 48D8  
                                    i2u697_40 49EC                                      i2u865_40 270A  
                                    i2u857_40 268A                                      i2u849_40 260A  
                                    i2u696_49 48EA                                      i2u697_41 49E8  
                                    i2u865_41 2706                                      i2u857_41 2686  
                                    i2u849_41 2606                                      i2u698_40 49D2  
                                    i2u866_40 2718                                      i2u858_40 2698  
                                    i2u698_41 49CE                                      i2u866_41 2714  
                                    i2u858_41 2694                                      i2u699_40 49B8  
                                    i2u867_40 272A                                      i2u859_40 26AA  
                                    i2u699_41 49B4                                      i2u867_41 2726  
                                    i2u859_41 26A6                                      i2u868_40 2738  
                                    i2u868_41 2734                                      i2u869_40 274A  
                                    i2u869_41 2746                           _dc_motor_initialize 481C  
                 ?_ADC_GetConversion_Blocking 0013                             RB4_ISR@RB4_source 0001  
                                    _TMR0_ISR 4A1E          __end_of_CCP1_DefaultInterruptHandler 421E  
                _CCP1_DefaultInterruptHandler 4198                                      _TMR1_ISR 4A10  
                                    _TMR2_ISR 4A2C                                      _TMR3_ISR 4A02  
                                   _timer_obj 015F                                     _vfpfcnvrt 3260  
                                  _ADCON0bits 0FC2                                    _ADCON1bits 0FC1  
                                  _ADCON2bits 0FC0                       __end_of_MSSP_I2C_BC_ISR 4A48  
                        ??_gpio_pin_intialize 0017                      ADC_SelectChannel@channel 0011  
         fp__MSSP_I2C_DefaultInterruptHandler 0000      __end_of_MSSP_I2C_DefaultInterruptHandler 47E0  
          ??_MSSP_I2C_DefaultInterruptHandler 0001             ?_MSSP_I2C_DefaultInterruptHandler 0001  
            _MSSP_I2C_DefaultInterruptHandler 47A2                                     _usart_obj 00CA  
                   lcd_8bit_set_cursor@coulmn 0024                          ?_dc_motor_initialize 0019  
                                 _INTCON2bits 0FF1                                   _INTCON3bits 0FF0  
                                   copy_data0 411E                                     copy_data1 413E  
                                   copy_data2 415E                           _dc_motor_move_right 4764  
                     ??_lcd_8bit_send_command 001B                  _RealTimeClockDS1307_Str_Data 010B  
                                  _EECON1bits 0FA6                        ?_application_intialize 0001  
                                    __Hrparam 0000                                    vfprintf@ap 0046  
                                    __Lrparam 0000                                    vfprintf@fp 0042  
                    ?_ADC_GetConversionResult 000C                ??_EUSART_Baud_Rate_Calculation 004F  
                 EUSART_ASYNC_RX_Init@_eusart 000C                         _ADC_Interrupt_Handler 00C2  
                                ?_I2C_Obj_CFG 0001                           _RealTimeClockDS1307 0080  
                 __end_of_ecu_layer_intialize 46E6                                    ?_vfpfcnvrt 0034  
             fp__CCP1_DefaultInterruptHandler 0000                 ?_CCP1_DefaultInterruptHandler 0001  
                                    _ccp1_obj 0142                          ?_dc_motor_move_right 0015  
             __end_of_lcd_8bit_send_char_data 407A                                    sprintf@fmt 004C  
                           RB6_ISR@RB6_source 0001                                      ___xxtofl 2B0A  
                                _MSSP_I2C_ISR 48BC                         ??_dc_motor_initialize 001B  
                             ___lwdiv@divisor 000E                          _InterruptManagerHigh 0008  
                  lcd_8bit_send_char_data@lcd 0018                               ___lwdiv@counter 0012  
                  lcd_8bit_send_char_data@ret 001F                                      __ptext10 2CBE  
                                    __ptext11 421E                                      __ptext20 46A4  
                                    __ptext12 45D8                                      __ptext21 47E0  
                                    __ptext13 398A                                      __ptext30 1592  
                                    __ptext22 338C                                      __ptext14 4A60  
                                    __ptext31 38B6                                      __ptext23 407A  
                                    __ptext15 46E6                                      __ptext40 3EB2  
                                    __ptext32 36E2                                      __ptext24 4888  
                                    __ptext16 3E02                                      __ptext41 2B0A  
                                    __ptext33 3C94                                      __ptext25 481C  
                                    __ptext17 3A54                                      __ptext50 37DE  
                                    __ptext42 35DC                                      __ptext34 461C  
                                    __ptext26 43F2                                      __ptext18 2E54  
                                    __ptext51 3B18                                      __ptext43 2770  
                                    __ptext35 4544                                      __ptext27 34B8  
                                    __ptext19 4A34                                      __ptext60 49D8  
                                    __ptext44 1A80                                      __ptext36 4298  
                                    __ptext28 3124                                      __ptext61 48BC  
                                    __ptext53 4A02                                      __ptext45 4A3A  
                                    __ptext37 1F40                                      __ptext29 44FA  
                                    __ptext70 48EC                                      __ptext62 47A2  
                                    __ptext54 4A2C                                      __ptext46 458E  
                                    __ptext38 4660                                      __ptext71 4198  
                                    __ptext63 4A44                                      __ptext55 4A10  
                                    __ptext47 430C                                      __ptext39 2FCA  
                                    __ptext72 4948                                      __ptext64 4A48  
                                    __ptext56 4A1E                                      __ptext48 496A  
                                    __ptext73 4380                                      __ptext65 4A4C  
                                    __ptext57 498A                                      __ptext49 4852  
                                    __ptext74 4A5C                                      __ptext66 4A50  
                                    __ptext58 49A4                                      __ptext75 0000  
                                    __ptext67 4A54                                      __ptext59 49BE  
                                    __ptext68 4A62                                      __ptext69 4A58  
             configure_voltage_reference@_adc 000C                                   _keypadvalue 00C6  
                             ??_MSSP_I2C_Init 0053              __end_of_lcd_8bit_send_string_pos 3E02  
     CCP_Compare_Mode_Set_Value@compare_value 0003           convert_uint16_to_string@DataCounter 019C  
            __end_of_convert_uint16_to_string 3C94                                      isa$xinst 0000  
                                    int$flags 0073                                      _vfprintf 445E  
       MSSP_I2C_Master_Mode_Clock_CFG@i2c_obj 004D                         ??_dc_motor_move_right 0017  
                    __end_of_usart_model_init 481C                              ?_MSSP_I2C_BC_ISR 0001  
                                  _INTCONbits 0FF2        __end_of_MSSP_I2C_Master_Mode_Clock_CFG 3F50  
              _MSSP_I2C_Master_Mode_Clock_CFG 3EB2                         ?_InterruptManagerHigh 0001  
                __end_of_gpio_pin_write_logic 35DC                  ?_lcd_8bit_send_enable_signal 0015  
                                    intlevel2 0000                                     sprintf@ap 0050  
                 __end_of_ADC_StartConversion 498A                     _EUSART_TxInterruptHandler 0090  
             __end_of_ADC_GetConversionResult 3BD8                   ?_CCP_Compare_Mode_Set_Value 0001  
                                 ??_vfpfcnvrt 003A  CCP_Compare_Mode_Set_Value@capture_temp_value 0006  
                    _RealTimeClockDS1307_Data 0156                           dc_motor_stop@_motor 0015  
                    _RealTimeClockDS1307_Time 014D                                      sprintf@f 0052  
                                    sprintf@s 004A                                _port_registers 0166  
                            _adc_lm35_celsius 0071                                   _SSPCON1bits 0FC6  
                                 _SSPCON2bits 0FC5                                 ___fladd@signs 003F  
                      _CCP2_Interrupt_Handler 00BE                   __end_of_lcd_8bit_initialize 34B8  
                lcd_8bit_send_command@command 001A                                  ___fladd@aexp 0040  
                                ___fladd@bexp 0041                    __end_of_Timer3_Write_value 496A  
                       __end_of_dc_motor_stop 4764                        _TMR2_Interrupt_Handler 0096  
