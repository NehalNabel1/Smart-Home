

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Feb 04 14:25:37 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1,inline
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1,inline
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1,inline
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1
    89                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    92                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    93                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    94   000000                     
    95                           ; Generated 23/03/2023 GMT
    96                           ; 
    97                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    98                           ; All rights reserved.
    99                           ; 
   100                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   101                           ; 
   102                           ; Redistribution and use in source and binary forms, with or without modification, are
   103                           ; permitted provided that the following conditions are met:
   104                           ; 
   105                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   106                           ;        conditions and the following disclaimer.
   107                           ; 
   108                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   109                           ;        of conditions and the following disclaimer in the documentation and/or other
   110                           ;        materials provided with the distribution. Publication is not required when
   111                           ;        this file is used in an embedded application.
   112                           ; 
   113                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   114                           ;        software without specific prior written permission.
   115                           ; 
   116                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   117                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   118                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   119                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   120                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   121                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   122                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   123                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   124                           ; 
   125                           ; 
   126                           ; Code-generator required, PIC18F4620 Definitions
   127                           ; 
   128                           ; SFR Addresses
   129   000000                     
   130                           	psect	idataCOMRAM
   131   004742                     __pidataCOMRAM:
   132                           	callstack 0
   133                           
   134                           ;initializer for _RB7_Flag
   135   004742  01                 	db	1
   136                           
   137                           ;initializer for _RB6_Flag
   138   004743  01                 	db	1
   139                           
   140                           ;initializer for _RB5_Flag
   141   004744  01                 	db	1
   142                           
   143                           ;initializer for _RB4_Flag
   144   004745  01                 	db	1
   145                           
   146                           	psect	idataBANK0
   147   0046F0                     __pidataBANK0:
   148                           	callstack 0
   149                           
   150                           ;initializer for _lat_registers
   151   0046F0  89                 	db	137
   152   0046F1  0F                 	db	15
   153   0046F2  8A                 	db	138
   154   0046F3  0F                 	db	15
   155   0046F4  8B                 	db	139
   156   0046F5  0F                 	db	15
   157   0046F6  8C                 	db	140
   158   0046F7  0F                 	db	15
   159   0046F8  8D                 	db	141
   160   0046F9  0F                 	db	15
   161                           
   162                           ;initializer for _ret
   163   0046FA  01                 	db	1
   164                           
   165                           ;initializer for _lcd_2
   166   0046FB  01                 	db	1
   167   0046FC  08                 	db	8
   168   0046FD  03                 	db	3
   169   0046FE  0B                 	db	11
   170   0046FF  13                 	db	19
   171   004700  1B                 	db	27
   172   004701  23                 	db	35
   173   004702  2B                 	db	43
   174   004703  33                 	db	51
   175   004704  3B                 	db	59
   176                           
   177                           ;initializer for _dc_motor2
   178   004705  10                 	db	16
   179   004706  2A                 	db	42
   180                           
   181                           ;initializer for _dc_motor1
   182   004707  02                 	db	2
   183   004708  0A                 	db	10
   184                           
   185                           	psect	idataBANK1
   186   004646                     __pidataBANK1:
   187                           	callstack 0
   188                           
   189                           ;initializer for _port_registers
   190   004646  80                 	db	128
   191   004647  0F                 	db	15
   192   004648  81                 	db	129
   193   004649  0F                 	db	15
   194   00464A  82                 	db	130
   195   00464B  0F                 	db	15
   196   00464C  83                 	db	131
   197   00464D  0F                 	db	15
   198   00464E  84                 	db	132
   199   00464F  0F                 	db	15
   200                           
   201                           ;initializer for _tris_registers
   202   004650  92                 	db	146
   203   004651  0F                 	db	15
   204   004652  93                 	db	147
   205   004653  0F                 	db	15
   206   004654  94                 	db	148
   207   004655  0F                 	db	15
   208   004656  95                 	db	149
   209   004657  0F                 	db	15
   210   004658  96                 	db	150
   211   004659  0F                 	db	15
   212                           
   213                           ;initializer for _lcd_1
   214   00465A  02                 	db	2
   215   00465B  0A                 	db	10
   216   00465C  12                 	db	18
   217   00465D  1A                 	db	26
   218   00465E  22                 	db	34
   219   00465F  2A                 	db	42
   220                           
   221                           ;initializer for _adc_1
   222   004660  00                 	db	0
   223   004661  00                 	db	0
   224   004662  00                 	db	0
   225   004663  05                 	db	5
   226   004664  05                 	db	5
   227   004665  00                 	db	0
   228   004666  02                 	db	2
   229                           
   230                           	psect	smallconst
   231   001000                     __psmallconst:
   232                           	callstack 0
   233   001000  00                 	db	0
   234   001001                     _btn_value:
   235                           	callstack 0
   236   001001  37                 	db	55
   237   001002  38                 	db	56
   238   001003  39                 	db	57
   239   001004  2F                 	db	47
   240   001005  34                 	db	52
   241   001006  35                 	db	53
   242   001007  36                 	db	54
   243   001008  2A                 	db	42
   244   001009  31                 	db	49
   245   00100A  32                 	db	50
   246   00100B  33                 	db	51
   247   00100C  2D                 	db	45
   248   00100D  23                 	db	35
   249   00100E  30                 	db	48
   250   00100F  3D                 	db	61
   251   001010  2B                 	db	43
   252   001011                     __end_of_btn_value:
   253                           	callstack 0
   254   000000                     _SPBRGH	set	4016
   255   000000                     _SPBRG	set	4015
   256   000000                     _TXREG	set	4013
   257   000000                     _TXSTAbits	set	4012
   258   000000                     _RCREG	set	4014
   259   000000                     _RCSTAbits	set	4011
   260   000000                     _TMR3L	set	4018
   261   000000                     _TMR3H	set	4019
   262   000000                     _TMR1L	set	4046
   263   000000                     _TMR1H	set	4047
   264   000000                     _TMR0L	set	4054
   265   000000                     _TMR0H	set	4055
   266   000000                     _INTCON2bits	set	4081
   267   000000                     _SSPSTATbits	set	4039
   268   000000                     _SSPADD	set	4040
   269   000000                     _SSPCON2bits	set	4037
   270   000000                     _SSPCON1bits	set	4038
   271   000000                     _EECON2	set	4007
   272   000000                     _CCPR2H	set	4028
   273   000000                     _CCPR2L	set	4027
   274   000000                     _CCPR1H	set	4031
   275   000000                     _CCPR1L	set	4030
   276   000000                     _ADCON1bits	set	4033
   277   000000                     _ADRESL	set	4035
   278   000000                     _ADRESH	set	4036
   279   000000                     _INTCONbits	set	4082
   280   000000                     _ADCON2bits	set	4032
   281   000000                     _ADCON0bits	set	4034
   282   000000                     _TRISD	set	3989
   283   000000                     _TRISC	set	3988
   284   000000                     _TRISB	set	3987
   285   000000                     _TRISE	set	3990
   286   001011                     STR_12:
   287   001011  46                 	db	70	;'F'
   288   001012  61                 	db	97	;'a'
   289   001013  6E                 	db	110	;'n'
   290   001014  20                 	db	32
   291   001015  4F                 	db	79	;'O'
   292   001016  46                 	db	70	;'F'
   293   001017  46                 	db	70	;'F'
   294   001018  20                 	db	32
   295   001019  2F                 	db	47
   296   00101A  20                 	db	32
   297   00101B  48                 	db	72	;'H'
   298   00101C  65                 	db	101	;'e'
   299   00101D  61                 	db	97	;'a'
   300   00101E  74                 	db	116	;'t'
   301   00101F  65                 	db	101	;'e'
   302   001020  72                 	db	114	;'r'
   303   001021  20                 	db	32
   304   001022  4F                 	db	79	;'O'
   305   001023  46                 	db	70	;'F'
   306   001024  46                 	db	70	;'F'
   307   001025  20                 	db	32
   308   001026  00                 	db	0
   309   001027                     STR_6:
   310   001027  54                 	db	84	;'T'
   311   001028  65                 	db	101	;'e'
   312   001029  6D                 	db	109	;'m'
   313   00102A  70                 	db	112	;'p'
   314   00102B  65                 	db	101	;'e'
   315   00102C  72                 	db	114	;'r'
   316   00102D  61                 	db	97	;'a'
   317   00102E  74                 	db	116	;'t'
   318   00102F  75                 	db	117	;'u'
   319   001030  72                 	db	114	;'r'
   320   001031  65                 	db	101	;'e'
   321   001032  20                 	db	32
   322   001033  3A                 	db	58	;':'
   323   001034  20                 	db	32
   324   001035  00                 	db	0
   325   001036                     STR_10:
   326   001036  48                 	db	72	;'H'
   327   001037  65                 	db	101	;'e'
   328   001038  61                 	db	97	;'a'
   329   001039  74                 	db	116	;'t'
   330   00103A  65                 	db	101	;'e'
   331   00103B  72                 	db	114	;'r'
   332   00103C  20                 	db	32
   333   00103D  4F                 	db	79	;'O'
   334   00103E  4E                 	db	78	;'N'
   335   00103F  20                 	db	32
   336   001040  00                 	db	0
   337   001041                     STR_8:
   338   001041  46                 	db	70	;'F'
   339   001042  61                 	db	97	;'a'
   340   001043  6E                 	db	110	;'n'
   341   001044  20                 	db	32
   342   001045  4F                 	db	79	;'O'
   343   001046  4E                 	db	78	;'N'
   344   001047  20                 	db	32
   345   001048  00                 	db	0
   346   001049  54                 	db	84	;'T'
   347   00104A  69                 	db	105	;'i'
   348   00104B  6D                 	db	109	;'m'
   349   00104C  65                 	db	101	;'e'
   350   00104D  20                 	db	32
   351   00104E  3A                 	db	58	;':'
   352   00104F  20                 	db	32
   353   001050  00                 	db	0
   354   001051  44                 	db	68	;'D'
   355   001052  61                 	db	97	;'a'
   356   001053  74                 	db	116	;'t'
   357   001054  65                 	db	101	;'e'
   358   001055  20                 	db	32
   359   001056  3A                 	db	58	;':'
   360   001057  20                 	db	32
   361   001058  00                 	db	0
   362   001059                     STR_1:
   363   001059  25                 	db	37
   364   00105A  69                 	db	105	;'i'
   365   00105B  00                 	db	0
   366   00105C  00                 	db	0	; dummy byte at the end
   367   000000                     
   368                           	psect	nvCOMRAM
   369   000071                     __pnvCOMRAM:
   370                           	callstack 0
   371   000071                     _adc_lm35_celsius:
   372                           	callstack 0
   373   000071                     	ds	2
   374   000000                     _PORTBbits	set	3969
   375   000000                     _TRISCbits	set	3988
   376   000000                     _PIE1bits	set	3997
   377   000000                     _CCP1CONbits	set	4029
   378   000000                     _PORTE	set	3972
   379   000000                     _PORTD	set	3971
   380   000000                     _PORTC	set	3970
   381   000000                     _PORTB	set	3969
   382   000000                     _PORTA	set	3968
   383   000000                     _LATA	set	3977
   384   000000                     _TRISA	set	3986
   385   000000                     _PIE2bits	set	4000
   386   000000                     _PIR2bits	set	4001
   387   000000                     _PIR1bits	set	3998
   388   000000                     _EECON1bits	set	4006
   389   000000                     _EEDATA	set	4008
   390   000000                     _EEADR	set	4009
   391   000000                     _EEADRH	set	4010
   392   000000                     _T3CONbits	set	4017
   393   000000                     _CCP2CONbits	set	4026
   394   000000                     _LATE	set	3981
   395   000000                     _LATD	set	3980
   396   000000                     _LATC	set	3979
   397   000000                     _LATB	set	3978
   398   000000                     _TMR2	set	4044
   399   000000                     _T2CONbits	set	4042
   400   000000                     _T1CONbits	set	4045
   401   000000                     _T0CONbits	set	4053
   402   000000                     _INTCON3bits	set	4080
   403   000000                     _SSPBUF	set	4041
   404   000000                     _BAUDCONbits	set	4024
   405                           
   406                           ; #config settings
   407                           
   408                           	psect	cinit
   409   003F0E                     __pcinit:
   410                           	callstack 0
   411   003F0E                     start_initialization:
   412                           	callstack 0
   413   003F0E                     __initialization:
   414                           	callstack 0
   415                           
   416                           ; Initialize objects allocated to BANK1 (33 bytes)
   417                           ; load TBLPTR registers with __pidataBANK1
   418   003F0E  0E46               	movlw	low __pidataBANK1
   419   003F10  6EF6               	movwf	tblptrl,c
   420   003F12  0E46               	movlw	high __pidataBANK1
   421   003F14  6EF7               	movwf	tblptrh,c
   422   003F16  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   423   003F18  6EF8               	movwf	tblptru,c
   424   003F1A  EE01  F05B         	lfsr	0,__pdataBANK1
   425   003F1E  EE10 F021          	lfsr	1,33
   426   003F22                     copy_data0:
   427   003F22  0009               	tblrd		*+
   428   003F24  CFF5 FFEE          	movff	tablat,postinc0
   429   003F28  50E5               	movf	postdec1,w,c
   430   003F2A  50E1               	movf	fsr1l,w,c
   431   003F2C  E1FA               	bnz	copy_data0
   432                           
   433                           ; Initialize objects allocated to BANK0 (25 bytes)
   434                           ; load TBLPTR registers with __pidataBANK0
   435   003F2E  0EF0               	movlw	low __pidataBANK0
   436   003F30  6EF6               	movwf	tblptrl,c
   437   003F32  0E46               	movlw	high __pidataBANK0
   438   003F34  6EF7               	movwf	tblptrh,c
   439   003F36  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   440   003F38  6EF8               	movwf	tblptru,c
   441   003F3A  EE00  F0E5         	lfsr	0,__pdataBANK0
   442   003F3E  EE10 F019          	lfsr	1,25
   443   003F42                     copy_data1:
   444   003F42  0009               	tblrd		*+
   445   003F44  CFF5 FFEE          	movff	tablat,postinc0
   446   003F48  50E5               	movf	postdec1,w,c
   447   003F4A  50E1               	movf	fsr1l,w,c
   448   003F4C  E1FA               	bnz	copy_data1
   449                           
   450                           ; Initialize objects allocated to COMRAM (4 bytes)
   451                           ; load TBLPTR registers with __pidataCOMRAM
   452   003F4E  0E42               	movlw	low __pidataCOMRAM
   453   003F50  6EF6               	movwf	tblptrl,c
   454   003F52  0E47               	movlw	high __pidataCOMRAM
   455   003F54  6EF7               	movwf	tblptrh,c
   456   003F56  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   457   003F58  6EF8               	movwf	tblptru,c
   458   003F5A  EE00  F06D         	lfsr	0,__pdataCOMRAM
   459   003F5E  EE10 F004          	lfsr	1,4
   460   003F62                     copy_data2:
   461   003F62  0009               	tblrd		*+
   462   003F64  CFF5 FFEE          	movff	tablat,postinc0
   463   003F68  50E5               	movf	postdec1,w,c
   464   003F6A  50E1               	movf	fsr1l,w,c
   465   003F6C  E1FA               	bnz	copy_data2
   466                           
   467                           ; Clear objects allocated to BANK1 (91 bytes)
   468   003F6E  EE01  F000         	lfsr	0,__pbssBANK1
   469   003F72  0E5B               	movlw	91
   470   003F74                     clear_0:
   471   003F74  6AEE               	clrf	postinc0,c
   472   003F76  06E8               	decf	wreg,f,c
   473   003F78  E1FD               	bnz	clear_0
   474                           
   475                           ; Clear objects allocated to BANK0 (101 bytes)
   476   003F7A  EE00  F080         	lfsr	0,__pbssBANK0
   477   003F7E  0E65               	movlw	101
   478   003F80                     clear_1:
   479   003F80  6AEE               	clrf	postinc0,c
   480   003F82  06E8               	decf	wreg,f,c
   481   003F84  E1FD               	bnz	clear_1
   482                           
   483                           ; Clear objects allocated to COMRAM (14 bytes)
   484   003F86  EE00  F05F         	lfsr	0,__pbssCOMRAM
   485   003F8A  0E0E               	movlw	14
   486   003F8C                     clear_2:
   487   003F8C  6AEE               	clrf	postinc0,c
   488   003F8E  06E8               	decf	wreg,f,c
   489   003F90  E1FD               	bnz	clear_2
   490   003F92                     end_of_initialization:
   491                           	callstack 0
   492   003F92                     __end_of__initialization:
   493                           	callstack 0
   494   003F92  9073               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   495   003F94  9273               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   496   003F96  0100               	movlb	0
   497   003F98  EF2F  F008         	goto	_main	;jump to C main() function
   498                           
   499                           	psect	bssCOMRAM
   500   00005F                     __pbssCOMRAM:
   501                           	callstack 0
   502   00005F                     _check3:
   503                           	callstack 0
   504   00005F                     	ds	1
   505   000060                     _check2:
   506                           	callstack 0
   507   000060                     	ds	1
   508   000061                     _check1:
   509                           	callstack 0
   510   000061                     	ds	1
   511   000062                     _timer2_preload:
   512                           	callstack 0
   513   000062                     	ds	1
   514   000063                     _compare_flag:
   515                           	callstack 0
   516   000063                     	ds	1
   517   000064                     relay_turn_off@F3052:
   518                           	callstack 0
   519   000064                     	ds	1
   520   000065                     relay_turn_on@F3047:
   521                           	callstack 0
   522   000065                     	ds	1
   523   000066                     relay_initialize@F3042:
   524                           	callstack 0
   525   000066                     	ds	1
   526   000067                     led_toggle@F3063:
   527                           	callstack 0
   528   000067                     	ds	1
   529   000068                     led_turn_off@F3058:
   530                           	callstack 0
   531   000068                     	ds	1
   532   000069                     led_turn_on@F3053:
   533                           	callstack 0
   534   000069                     	ds	1
   535   00006A                     led_initialize@F3048:
   536                           	callstack 0
   537   00006A                     	ds	1
   538   00006B                     _adc_lm35_1:
   539                           	callstack 0
   540   00006B                     	ds	2
   541                           
   542                           	psect	dataCOMRAM
   543   00006D                     __pdataCOMRAM:
   544                           	callstack 0
   545   00006D                     _RB7_Flag:
   546                           	callstack 0
   547   00006D                     	ds	1
   548   00006E                     _RB6_Flag:
   549                           	callstack 0
   550   00006E                     	ds	1
   551   00006F                     _RB5_Flag:
   552                           	callstack 0
   553   00006F                     	ds	1
   554   000070                     _RB4_Flag:
   555                           	callstack 0
   556   000070                     	ds	1
   557                           
   558                           	psect	bssBANK0
   559   000080                     __pbssBANK0:
   560                           	callstack 0
   561   000080                     _RealTimeClockDS1307:
   562                           	callstack 0
   563   000080                     	ds	6
   564   000086                     _width:
   565                           	callstack 0
   566   000086                     	ds	2
   567   000088                     _prec:
   568                           	callstack 0
   569   000088                     	ds	2
   570   00008A                     _EUSART_OverrunErrorHandler:
   571                           	callstack 0
   572   00008A                     	ds	2
   573   00008C                     _EUSART_FramingErrorHandler:
   574                           	callstack 0
   575   00008C                     	ds	2
   576   00008E                     _EUSART_RxInterruptHandler:
   577                           	callstack 0
   578   00008E                     	ds	2
   579   000090                     _EUSART_TxInterruptHandler:
   580                           	callstack 0
   581   000090                     	ds	2
   582   000092                     _timer3_preload:
   583                           	callstack 0
   584   000092                     	ds	2
   585   000094                     _TMR3_Interrupt_Handler:
   586                           	callstack 0
   587   000094                     	ds	2
   588   000096                     _TMR2_Interrupt_Handler:
   589                           	callstack 0
   590   000096                     	ds	2
   591   000098                     _timer1_preload:
   592                           	callstack 0
   593   000098                     	ds	2
   594   00009A                     _TMR1_Interrupt_Handler:
   595                           	callstack 0
   596   00009A                     	ds	2
   597   00009C                     _timer0_preload:
   598                           	callstack 0
   599   00009C                     	ds	2
   600   00009E                     _TMR0_Interrupt_Handler:
   601                           	callstack 0
   602   00009E                     	ds	2
   603   0000A0                     _RB7_InterruptHandler_LOW:
   604                           	callstack 0
   605   0000A0                     	ds	2
   606   0000A2                     _RB7_InterruptHandler_HIGH:
   607                           	callstack 0
   608   0000A2                     	ds	2
   609   0000A4                     _RB6_InterruptHandler_LOW:
   610                           	callstack 0
   611   0000A4                     	ds	2
   612   0000A6                     _RB6_InterruptHandler_HIGH:
   613                           	callstack 0
   614   0000A6                     	ds	2
   615   0000A8                     _RB5_InterruptHandler_LOW:
   616                           	callstack 0
   617   0000A8                     	ds	2
   618   0000AA                     _RB5_InterruptHandler_HIGH:
   619                           	callstack 0
   620   0000AA                     	ds	2
   621   0000AC                     _RB4_InterruptHandler_LOW:
   622                           	callstack 0
   623   0000AC                     	ds	2
   624   0000AE                     _RB4_InterruptHandler_HIGH:
   625                           	callstack 0
   626   0000AE                     	ds	2
   627   0000B0                     _INT2_InterruptHandler:
   628                           	callstack 0
   629   0000B0                     	ds	2
   630   0000B2                     _INT1_InterruptHandler:
   631                           	callstack 0
   632   0000B2                     	ds	2
   633   0000B4                     _INT0_InterruptHandler:
   634                           	callstack 0
   635   0000B4                     	ds	2
   636   0000B6                     _I2C_Report_Receive_Overflow_InterruptHandler:
   637                           	callstack 0
   638   0000B6                     	ds	2
   639   0000B8                     _I2C_DefaultInterruptHandler:
   640                           	callstack 0
   641   0000B8                     	ds	2
   642   0000BA                     _I2C_Report_Write_Collision_InterruptHandler:
   643                           	callstack 0
   644   0000BA                     	ds	2
   645   0000BC                     CCP_Compare_Mode_Set_Value@F3112:
   646                           	callstack 0
   647   0000BC                     	ds	2
   648   0000BE                     _CCP2_Interrupt_Handler:
   649                           	callstack 0
   650   0000BE                     	ds	2
   651   0000C0                     _CCP1_Interrupt_Handler:
   652                           	callstack 0
   653   0000C0                     	ds	2
   654   0000C2                     _ADC_Interrupt_Handler:
   655                           	callstack 0
   656   0000C2                     	ds	2
   657   0000C4                     _flags:
   658                           	callstack 0
   659   0000C4                     	ds	1
   660   0000C5                     _i:
   661                           	callstack 0
   662   0000C5                     	ds	1
   663   0000C6                     _ADC_Req:
   664                           	callstack 0
   665   0000C6                     	ds	1
   666   0000C7                     _usart_obj:
   667                           	callstack 0
   668   0000C7                     	ds	16
   669   0000D7                     _adc_lm35_1_txt:
   670                           	callstack 0
   671   0000D7                     	ds	7
   672   0000DE                     _timer_obj:
   673                           	callstack 0
   674   0000DE                     	ds	7
   675                           
   676                           	psect	dataBANK0
   677   0000E5                     __pdataBANK0:
   678                           	callstack 0
   679   0000E5                     _lat_registers:
   680                           	callstack 0
   681   0000E5                     	ds	10
   682   0000EF                     _ret:
   683                           	callstack 0
   684   0000EF                     	ds	1
   685   0000F0                     _lcd_2:
   686                           	callstack 0
   687   0000F0                     	ds	10
   688   0000FA                     _dc_motor2:
   689                           	callstack 0
   690   0000FA                     	ds	2
   691   0000FC                     _dc_motor1:
   692                           	callstack 0
   693   0000FC                     	ds	2
   694                           
   695                           	psect	bssBANK1
   696   000100                     __pbssBANK1:
   697                           	callstack 0
   698   000100                     	ds	11
   699   00010B                     _RealTimeClockDS1307_Str_Data:
   700                           	callstack 0
   701   00010B                     	ds	9
   702   000114                     	ds	6
   703   00011A                     	ds	4
   704   00011E                     _dbuf:
   705                           	callstack 0
   706   00011E                     	ds	32
   707   00013E                     _ccp1_obj:
   708                           	callstack 0
   709   00013E                     	ds	11
   710   000149                     _RealTimeClockDS1307_Time:
   711                           	callstack 0
   712   000149                     	ds	9
   713   000152                     _RealTimeClockDS1307_Data:
   714                           	callstack 0
   715   000152                     	ds	9
   716                           
   717                           	psect	dataBANK1
   718   00015B                     __pdataBANK1:
   719                           	callstack 0
   720   00015B                     _port_registers:
   721                           	callstack 0
   722   00015B                     	ds	10
   723   000165                     _tris_registers:
   724                           	callstack 0
   725   000165                     	ds	10
   726   00016F                     _lcd_1:
   727                           	callstack 0
   728   00016F                     	ds	6
   729   000175                     _adc_1:
   730                           	callstack 0
   731   000175                     	ds	7
   732                           
   733                           	psect	cstackBANK1
   734   00017C                     __pcstackBANK1:
   735                           	callstack 0
   736   00017C                     convert_uint16_to_string@value:
   737                           	callstack 0
   738                           
   739                           ; 2 bytes @ 0x0
   740   00017C                     	ds	2
   741   00017E                     convert_uint16_to_string@str:
   742                           	callstack 0
   743                           
   744                           ; 2 bytes @ 0x2
   745   00017E                     	ds	2
   746   000180                     convert_uint16_to_string@Temp_String:
   747                           	callstack 0
   748                           
   749                           ; 6 bytes @ 0x4
   750   000180                     	ds	6
   751   000186                     convert_uint16_to_string@ret:
   752                           	callstack 0
   753                           
   754                           ; 1 bytes @ 0xA
   755   000186                     	ds	1
   756   000187                     convert_uint16_to_string@DataCounter:
   757                           	callstack 0
   758                           
   759                           ; 1 bytes @ 0xB
   760   000187                     	ds	1
   761                           
   762                           	psect	cstackCOMRAM
   763   000001                     __pcstackCOMRAM:
   764                           	callstack 0
   765   000001                     RB4_ISR@RB4_source:
   766                           	callstack 0
   767   000001                     RB5_ISR@RB5_source:
   768                           	callstack 0
   769   000001                     RB6_ISR@RB6_source:
   770                           	callstack 0
   771   000001                     RB7_ISR@RB7_source:
   772                           	callstack 0
   773   000001                     CCP_Compare_Mode_Set_Value@_ccp_obj:
   774                           	callstack 0
   775   000001                     Timer3_Write_value@_timer:
   776                           	callstack 0
   777                           
   778                           ; 2 bytes @ 0x0
   779   000001                     	ds	2
   780   000003                     CCP_Compare_Mode_Set_Value@compare_value:
   781                           	callstack 0
   782   000003                     Timer3_Write_value@_value:
   783                           	callstack 0
   784                           
   785                           ; 2 bytes @ 0x2
   786   000003                     	ds	2
   787   000005                     
   788                           ; 1 bytes @ 0x4
   789   000005                     	ds	1
   790   000006                     CCP_Compare_Mode_Set_Value@capture_temp_value:
   791                           	callstack 0
   792                           
   793                           ; 2 bytes @ 0x5
   794   000006                     	ds	2
   795   000008                     ??_InterruptManagerHigh:
   796                           
   797                           ; 1 bytes @ 0x7
   798   000008                     	ds	4
   799   00000C                     ??_adc_input_channel_port_configure:
   800   00000C                     ?___awdiv:
   801                           	callstack 0
   802   00000C                     ?___awmod:
   803                           	callstack 0
   804   00000C                     ?___lwdiv:
   805                           	callstack 0
   806   00000C                     ?___xxtofl:
   807                           	callstack 0
   808   00000C                     ADC_StartConversion@_adc:
   809                           	callstack 0
   810   00000C                     ADC_GetConversionResult@_adc:
   811                           	callstack 0
   812   00000C                     select_result_format@_adc:
   813                           	callstack 0
   814   00000C                     configure_voltage_reference@_adc:
   815                           	callstack 0
   816   00000C                     gpio_pin_direction_intialize@_pin_config:
   817                           	callstack 0
   818   00000C                     gpio_pin_write_logic@_pin_config:
   819                           	callstack 0
   820   00000C                     EUSART_ASYNC_TX_Init@_eusart:
   821                           	callstack 0
   822   00000C                     EUSART_ASYNC_RX_Init@_eusart:
   823                           	callstack 0
   824   00000C                     ___awdiv@dividend:
   825                           	callstack 0
   826   00000C                     ___awmod@dividend:
   827                           	callstack 0
   828   00000C                     ___lwdiv@dividend:
   829                           	callstack 0
   830   00000C                     memset@dest:
   831                           	callstack 0
   832   00000C                     fputc@c:
   833                           	callstack 0
   834   00000C                     ___xxtofl@val:
   835                           	callstack 0
   836                           
   837                           ; 4 bytes @ 0xB
   838   00000C                     	ds	2
   839   00000E                     ??_gpio_pin_direction_intialize:
   840   00000E                     adc_input_channel_port_configure@channel:
   841                           	callstack 0
   842   00000E                     gpio_pin_write_logic@logic:
   843                           	callstack 0
   844   00000E                     ADC_GetConversionResult@conversion_result:
   845                           	callstack 0
   846   00000E                     ___awdiv@divisor:
   847                           	callstack 0
   848   00000E                     ___awmod@divisor:
   849                           	callstack 0
   850   00000E                     ___lwdiv@divisor:
   851                           	callstack 0
   852   00000E                     memset@c:
   853                           	callstack 0
   854   00000E                     fputc@fp:
   855                           	callstack 0
   856                           
   857                           ; 2 bytes @ 0xD
   858   00000E                     	ds	1
   859   00000F                     ??_gpio_pin_write_logic:
   860   00000F                     ADC_Init@_adc:
   861                           	callstack 0
   862   00000F                     ADC_SelectChannel@_adc:
   863                           	callstack 0
   864                           
   865                           ; 2 bytes @ 0xE
   866   00000F                     	ds	1
   867   000010                     ??_fputc:
   868   000010                     ??_ADC_GetConversionResult:
   869   000010                     ??___xxtofl:
   870   000010                     ___awdiv@counter:
   871                           	callstack 0
   872   000010                     ___awmod@counter:
   873                           	callstack 0
   874   000010                     ___lwdiv@quotient:
   875                           	callstack 0
   876   000010                     memset@n:
   877                           	callstack 0
   878                           
   879                           ; 2 bytes @ 0xF
   880   000010                     	ds	1
   881   000011                     ??_ADC_Init:
   882   000011                     ADC_SelectChannel@channel:
   883                           	callstack 0
   884   000011                     ___awdiv@sign:
   885                           	callstack 0
   886   000011                     ___awmod@sign:
   887                           	callstack 0
   888                           
   889                           ; 1 bytes @ 0x10
   890   000011                     	ds	1
   891   000012                     ??_memset:
   892   000012                     ??_ADC_SelectChannel:
   893   000012                     ?_abs:
   894                           	callstack 0
   895   000012                     ___lwdiv@counter:
   896                           	callstack 0
   897   000012                     ___awdiv@quotient:
   898                           	callstack 0
   899   000012                     abs@a:
   900                           	callstack 0
   901                           
   902                           ; 2 bytes @ 0x11
   903   000012                     	ds	1
   904   000013                     ADC_GetConversion_Blocking@_adc:
   905                           	callstack 0
   906                           
   907                           ; 2 bytes @ 0x12
   908   000013                     	ds	1
   909   000014                     ??_abs:
   910   000014                     ___xxtofl@sign:
   911                           	callstack 0
   912   000014                     memset@k:
   913                           	callstack 0
   914                           
   915                           ; 2 bytes @ 0x13
   916   000014                     	ds	1
   917   000015                     ADC_GetConversion_Blocking@channel:
   918                           	callstack 0
   919   000015                     ___xxtofl@exp:
   920                           	callstack 0
   921   000015                     lcd_8bit_send_enable_signal@lcd:
   922                           	callstack 0
   923   000015                     dc_motor_move_right@_motor:
   924                           	callstack 0
   925   000015                     dc_motor_stop@_motor:
   926                           	callstack 0
   927   000015                     gpio_pin_intialize@_pin_config:
   928                           	callstack 0
   929   000015                     fputs@s:
   930                           	callstack 0
   931                           
   932                           ; 2 bytes @ 0x14
   933   000015                     	ds	1
   934   000016                     ADC_GetConversion_Blocking@conversion_result:
   935                           	callstack 0
   936   000016                     memset@s:
   937                           	callstack 0
   938   000016                     ___xxtofl@arg:
   939                           	callstack 0
   940                           
   941                           ; 4 bytes @ 0x15
   942   000016                     	ds	1
   943   000017                     ??_gpio_pin_intialize:
   944   000017                     lcd_8bit_send_enable_signal@ret:
   945                           	callstack 0
   946   000017                     fputs@fp:
   947                           	callstack 0
   948                           
   949                           ; 2 bytes @ 0x16
   950   000017                     	ds	1
   951   000018                     ADC_GetConversion_Blocking@ret:
   952                           	callstack 0
   953   000018                     gpio_pin_intialize@ret:
   954                           	callstack 0
   955   000018                     lcd_8bit_send_command@lcd:
   956                           	callstack 0
   957   000018                     lcd_8bit_send_char_data@lcd:
   958                           	callstack 0
   959                           
   960                           ; 2 bytes @ 0x17
   961   000018                     	ds	1
   962   000019                     fputs@c:
   963                           	callstack 0
   964   000019                     dc_motor_initialize@_motor:
   965                           	callstack 0
   966                           
   967                           ; 2 bytes @ 0x18
   968   000019                     	ds	1
   969   00001A                     ?___fldiv:
   970                           	callstack 0
   971   00001A                     ?___flmul:
   972                           	callstack 0
   973   00001A                     lcd_8bit_send_command@command:
   974                           	callstack 0
   975   00001A                     lcd_8bit_send_char_data@data:
   976                           	callstack 0
   977   00001A                     fputs@i:
   978                           	callstack 0
   979   00001A                     ___fldiv@b:
   980                           	callstack 0
   981   00001A                     ___flmul@b:
   982                           	callstack 0
   983                           
   984                           ; 4 bytes @ 0x19
   985   00001A                     	ds	1
   986   00001B                     ??_lcd_8bit_send_command:
   987   00001B                     ??_lcd_8bit_send_char_data:
   988   00001B                     
   989                           ; 1 bytes @ 0x1A
   990   00001B                     	ds	1
   991   00001C                     pad@fp:
   992                           	callstack 0
   993                           
   994                           ; 2 bytes @ 0x1B
   995   00001C                     	ds	2
   996   00001E                     pad@buf:
   997                           	callstack 0
   998   00001E                     ___fldiv@a:
   999                           	callstack 0
  1000   00001E                     ___flmul@a:
  1001                           	callstack 0
  1002                           
  1003                           ; 4 bytes @ 0x1D
  1004   00001E                     	ds	1
  1005   00001F                     lcd_8bit_send_command@ret:
  1006                           	callstack 0
  1007   00001F                     lcd_8bit_send_char_data@ret:
  1008                           	callstack 0
  1009                           
  1010                           ; 1 bytes @ 0x1E
  1011   00001F                     	ds	1
  1012   000020                     lcd_8bit_send_command@l_pins_counter:
  1013                           	callstack 0
  1014   000020                     lcd_8bit_send_char_data@l_pins_counter:
  1015                           	callstack 0
  1016   000020                     pad@p:
  1017                           	callstack 0
  1018                           
  1019                           ; 2 bytes @ 0x1F
  1020   000020                     	ds	1
  1021   000021                     lcd_8bit_initialize@lcd:
  1022                           	callstack 0
  1023   000021                     lcd_8bit_set_cursor@lcd:
  1024                           	callstack 0
  1025                           
  1026                           ; 2 bytes @ 0x20
  1027   000021                     	ds	1
  1028   000022                     ??___fldiv:
  1029   000022                     ??___flmul:
  1030   000022                     ??_pad:
  1031                           
  1032                           ; 1 bytes @ 0x21
  1033   000022                     	ds	1
  1034   000023                     ??_lcd_8bit_initialize:
  1035   000023                     lcd_8bit_set_cursor@row:
  1036                           	callstack 0
  1037   000023                     pad@i:
  1038                           	callstack 0
  1039                           
  1040                           ; 2 bytes @ 0x22
  1041   000023                     	ds	1
  1042   000024                     lcd_8bit_set_cursor@coulmn:
  1043                           	callstack 0
  1044                           
  1045                           ; 1 bytes @ 0x23
  1046   000024                     	ds	1
  1047   000025                     ??_lcd_8bit_set_cursor:
  1048   000025                     lcd_8bit_initialize@l_data_pins_counter:
  1049                           	callstack 0
  1050   000025                     pad@w:
  1051                           	callstack 0
  1052                           
  1053                           ; 2 bytes @ 0x24
  1054   000025                     	ds	1
  1055   000026                     lcd_8bit_initialize@ret:
  1056                           	callstack 0
  1057   000026                     ___flmul@sign:
  1058                           	callstack 0
  1059   000026                     ___fldiv@rem:
  1060                           	callstack 0
  1061                           
  1062                           ; 4 bytes @ 0x25
  1063   000026                     	ds	1
  1064   000027                     lcd_8bit_send_string_pos@lcd:
  1065                           	callstack 0
  1066   000027                     dtoa@fp:
  1067                           	callstack 0
  1068   000027                     ___flmul@grs:
  1069                           	callstack 0
  1070                           
  1071                           ; 4 bytes @ 0x26
  1072   000027                     	ds	2
  1073   000029                     lcd_8bit_send_string_pos@row:
  1074                           	callstack 0
  1075   000029                     dtoa@d:
  1076                           	callstack 0
  1077                           
  1078                           ; 2 bytes @ 0x28
  1079   000029                     	ds	1
  1080   00002A                     lcd_8bit_send_string_pos@column:
  1081                           	callstack 0
  1082   00002A                     ___fldiv@sign:
  1083                           	callstack 0
  1084                           
  1085                           ; 1 bytes @ 0x29
  1086   00002A                     	ds	1
  1087   00002B                     ___flmul@aexp:
  1088                           	callstack 0
  1089   00002B                     lcd_8bit_send_string_pos@str:
  1090                           	callstack 0
  1091   00002B                     ___fldiv@new_exp:
  1092                           	callstack 0
  1093   00002B                     _dtoa$5127:
  1094                           	callstack 0
  1095                           
  1096                           ; 2 bytes @ 0x2A
  1097   00002B                     	ds	1
  1098   00002C                     ___flmul@bexp:
  1099                           	callstack 0
  1100                           
  1101                           ; 1 bytes @ 0x2B
  1102   00002C                     	ds	1
  1103   00002D                     lcd_8bit_send_string_pos@ret:
  1104                           	callstack 0
  1105   00002D                     dtoa@p:
  1106                           	callstack 0
  1107   00002D                     ___fldiv@grs:
  1108                           	callstack 0
  1109   00002D                     ___flmul@prod:
  1110                           	callstack 0
  1111                           
  1112                           ; 4 bytes @ 0x2C
  1113   00002D                     	ds	2
  1114   00002F                     dtoa@w:
  1115                           	callstack 0
  1116                           
  1117                           ; 2 bytes @ 0x2E
  1118   00002F                     	ds	2
  1119   000031                     ___fldiv@bexp:
  1120                           	callstack 0
  1121   000031                     dtoa@s:
  1122                           	callstack 0
  1123   000031                     ___flmul@temp:
  1124                           	callstack 0
  1125                           
  1126                           ; 2 bytes @ 0x30
  1127   000031                     	ds	1
  1128   000032                     ___fldiv@aexp:
  1129                           	callstack 0
  1130   000032                     dtoa@i:
  1131                           	callstack 0
  1132                           
  1133                           ; 2 bytes @ 0x31
  1134   000032                     	ds	1
  1135   000033                     ?___fladd:
  1136                           	callstack 0
  1137   000033                     ?___fltol:
  1138                           	callstack 0
  1139   000033                     ___fltol@f1:
  1140                           	callstack 0
  1141   000033                     ___fladd@b:
  1142                           	callstack 0
  1143                           
  1144                           ; 4 bytes @ 0x32
  1145   000033                     	ds	1
  1146   000034                     vfpfcnvrt@fp:
  1147                           	callstack 0
  1148                           
  1149                           ; 2 bytes @ 0x33
  1150   000034                     	ds	2
  1151   000036                     vfpfcnvrt@fmt:
  1152                           	callstack 0
  1153                           
  1154                           ; 2 bytes @ 0x35
  1155   000036                     	ds	1
  1156   000037                     ??___fltol:
  1157   000037                     ___fladd@a:
  1158                           	callstack 0
  1159                           
  1160                           ; 4 bytes @ 0x36
  1161   000037                     	ds	1
  1162   000038                     vfpfcnvrt@ap:
  1163                           	callstack 0
  1164                           
  1165                           ; 2 bytes @ 0x37
  1166   000038                     	ds	2
  1167   00003A                     ??_vfpfcnvrt:
  1168                           
  1169                           ; 1 bytes @ 0x39
  1170   00003A                     	ds	1
  1171   00003B                     ??___fladd:
  1172   00003B                     ___fltol@sign1:
  1173                           	callstack 0
  1174                           
  1175                           ; 1 bytes @ 0x3A
  1176   00003B                     	ds	1
  1177   00003C                     ___fltol@exp1:
  1178                           	callstack 0
  1179   00003C                     vfpfcnvrt@convarg:
  1180                           	callstack 0
  1181                           
  1182                           ; 4 bytes @ 0x3B
  1183   00003C                     	ds	3
  1184   00003F                     ___fladd@signs:
  1185                           	callstack 0
  1186                           
  1187                           ; 1 bytes @ 0x3E
  1188   00003F                     	ds	1
  1189   000040                     ___fladd@aexp:
  1190                           	callstack 0
  1191   000040                     vfpfcnvrt@cp:
  1192                           	callstack 0
  1193                           
  1194                           ; 2 bytes @ 0x3F
  1195   000040                     	ds	1
  1196   000041                     ___fladd@bexp:
  1197                           	callstack 0
  1198                           
  1199                           ; 1 bytes @ 0x40
  1200   000041                     	ds	1
  1201   000042                     ?_vfprintf:
  1202                           	callstack 0
  1203   000042                     ___fladd@grs:
  1204                           	callstack 0
  1205   000042                     vfprintf@fp:
  1206                           	callstack 0
  1207                           
  1208                           ; 2 bytes @ 0x41
  1209   000042                     	ds	1
  1210   000043                     EUSART_Baud_Rate_Calculation@_eusart:
  1211                           	callstack 0
  1212                           
  1213                           ; 2 bytes @ 0x42
  1214   000043                     	ds	1
  1215   000044                     vfprintf@fmt:
  1216                           	callstack 0
  1217                           
  1218                           ; 2 bytes @ 0x43
  1219   000044                     	ds	1
  1220   000045                     ??_EUSART_Baud_Rate_Calculation:
  1221                           
  1222                           ; 1 bytes @ 0x44
  1223   000045                     	ds	1
  1224   000046                     vfprintf@ap:
  1225                           	callstack 0
  1226                           
  1227                           ; 2 bytes @ 0x45
  1228   000046                     	ds	1
  1229   000047                     EUSART_Baud_Rate_Calculation@Baud_Rate_Temp:
  1230                           	callstack 0
  1231                           
  1232                           ; 4 bytes @ 0x46
  1233   000047                     	ds	1
  1234   000048                     vfprintf@cfmt:
  1235                           	callstack 0
  1236                           
  1237                           ; 2 bytes @ 0x47
  1238   000048                     	ds	2
  1239   00004A                     ?_sprintf:
  1240                           	callstack 0
  1241   00004A                     sprintf@s:
  1242                           	callstack 0
  1243                           
  1244                           ; 2 bytes @ 0x49
  1245   00004A                     	ds	1
  1246   00004B                     _EUSART_Baud_Rate_Calculation$5662:
  1247                           	callstack 0
  1248                           
  1249                           ; 4 bytes @ 0x4A
  1250   00004B                     	ds	1
  1251   00004C                     sprintf@fmt:
  1252                           	callstack 0
  1253                           
  1254                           ; 2 bytes @ 0x4B
  1255   00004C                     	ds	3
  1256   00004F                     EUSART_ASYNC_Init@_eusart:
  1257                           	callstack 0
  1258                           
  1259                           ; 2 bytes @ 0x4E
  1260   00004F                     	ds	1
  1261   000050                     sprintf@ap:
  1262                           	callstack 0
  1263                           
  1264                           ; 2 bytes @ 0x4F
  1265   000050                     	ds	1
  1266   000051                     
  1267                           ; 1 bytes @ 0x50
  1268   000051                     	ds	1
  1269   000052                     sprintf@f:
  1270                           	callstack 0
  1271                           
  1272                           ; 12 bytes @ 0x51
  1273   000052                     	ds	12
  1274   00005E                     ??_main:
  1275                           
  1276                           ; 1 bytes @ 0x5D
  1277   00005E                     	ds	1
  1278                           
  1279 ;;
  1280 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1281 ;;
  1282 ;; *************** function _main *****************
  1283 ;; Defined at:
  1284 ;;		line 27 in file "application.c"
  1285 ;; Parameters:    Size  Location     Type
  1286 ;;		None
  1287 ;; Auto vars:     Size  Location     Type
  1288 ;;		None
  1289 ;; Return value:  Size  Location     Type
  1290 ;;                  2  1780[None  ] int 
  1291 ;; Registers used:
  1292 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1293 ;; Tracked objects:
  1294 ;;		On entry : 0/0
  1295 ;;		On exit  : 0/0
  1296 ;;		Unchanged: 0/0
  1297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1300 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1301 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1302 ;;Total ram usage:        1 bytes
  1303 ;; Hardware stack levels required when called: 13
  1304 ;; This function calls:
  1305 ;;		_ADC_GetConversion_Blocking
  1306 ;;		___flmul
  1307 ;;		___fltol
  1308 ;;		___lwdiv
  1309 ;;		___xxtofl
  1310 ;;		_application_intialize
  1311 ;;		_convert_uint16_to_string
  1312 ;;		_dc_motor_move_right
  1313 ;;		_dc_motor_stop
  1314 ;;		_lcd_8bit_send_command
  1315 ;;		_lcd_8bit_send_string_pos
  1316 ;; This function is called by:
  1317 ;;		Startup code after reset
  1318 ;; This function uses a non-reentrant model
  1319 ;;
  1320                           
  1321                           	psect	text0
  1322   00105E                     __ptext0:
  1323                           	callstack 0
  1324   00105E                     _main:
  1325                           	callstack 18
  1326   00105E                     
  1327                           ;application.c: 30:     application_intialize();
  1328   00105E  EC9E  F023         	call	_application_intialize	;wreg free
  1329   001062                     l10013:
  1330                           
  1331                           ;application.c: 36:       ret=ADC_GetConversion_Blocking(&adc_1,ADC_CHANNEL_AN0,&adc_lm3
      +                          5_1) ;
  1332   001062  0E75               	movlw	low _adc_1
  1333   001064  6E13               	movwf	ADC_GetConversion_Blocking@_adc^0,c
  1334   001066  0E01               	movlw	high _adc_1
  1335   001068  6E14               	movwf	(ADC_GetConversion_Blocking@_adc+1)^0,c
  1336   00106A  0E00               	movlw	0
  1337   00106C  6E15               	movwf	ADC_GetConversion_Blocking@channel^0,c
  1338   00106E  0E6B               	movlw	low _adc_lm35_1
  1339   001070  6E16               	movwf	ADC_GetConversion_Blocking@conversion_result^0,c
  1340   001072  0E00               	movlw	high _adc_lm35_1
  1341   001074  6E17               	movwf	(ADC_GetConversion_Blocking@conversion_result+1)^0,c
  1342   001076  EC88  F020         	call	_ADC_GetConversion_Blocking	;wreg free
  1343   00107A  0100               	movlb	0	; () banked
  1344   00107C  6FEF               	movwf	_ret& (0+255),b
  1345   00107E                     
  1346                           ; BSR set to: 0
  1347                           ;application.c: 37:        adc_lm35_celsius=adc_lm35_1* 4.88f;
  1348   00107E  0EF6               	movlw	246
  1349   001080  6E1E               	movwf	___flmul@a^0,c
  1350   001082  0E28               	movlw	40
  1351   001084  6E1F               	movwf	(___flmul@a+1)^0,c
  1352   001086  0E9C               	movlw	156
  1353   001088  6E20               	movwf	(___flmul@a+2)^0,c
  1354   00108A  0E40               	movlw	64
  1355   00108C  6E21               	movwf	(___flmul@a+3)^0,c
  1356   00108E  C06B  F00C         	movff	_adc_lm35_1,___xxtofl@val
  1357   001092  C06C  F00D         	movff	_adc_lm35_1+1,___xxtofl@val+1
  1358   001096  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1359   001098  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1360   00109A  0E00               	movlw	0
  1361   00109C  EC83  F015         	call	___xxtofl
  1362   0010A0  C00C  F01A         	movff	?___xxtofl,___flmul@b
  1363   0010A4  C00D  F01B         	movff	?___xxtofl+1,___flmul@b+1
  1364   0010A8  C00E  F01C         	movff	?___xxtofl+2,___flmul@b+2
  1365   0010AC  C00F  F01D         	movff	?___xxtofl+3,___flmul@b+3
  1366   0010B0  EC9E  F00F         	call	___flmul	;wreg free
  1367   0010B4  C01A  F033         	movff	?___flmul,___fltol@f1
  1368   0010B8  C01B  F034         	movff	?___flmul+1,___fltol@f1+1
  1369   0010BC  C01C  F035         	movff	?___flmul+2,___fltol@f1+2
  1370   0010C0  C01D  F036         	movff	?___flmul+3,___fltol@f1+3
  1371   0010C4  EC3F  F01A         	call	___fltol	;wreg free
  1372   0010C8  C033  F071         	movff	?___fltol,_adc_lm35_celsius
  1373   0010CC  C034  F072         	movff	?___fltol+1,_adc_lm35_celsius+1
  1374                           
  1375                           ;application.c: 38:        adc_lm35_celsius/=10;
  1376   0010D0  C071  F00C         	movff	_adc_lm35_celsius,___lwdiv@dividend
  1377   0010D4  C072  F00D         	movff	_adc_lm35_celsius+1,___lwdiv@dividend+1
  1378   0010D8  0E00               	movlw	0
  1379   0010DA  6E0F               	movwf	(___lwdiv@divisor+1)^0,c
  1380   0010DC  0E0A               	movlw	10
  1381   0010DE  6E0E               	movwf	___lwdiv@divisor^0,c
  1382   0010E0  EC4E  F020         	call	___lwdiv	;wreg free
  1383   0010E4  C00C  F071         	movff	?___lwdiv,_adc_lm35_celsius
  1384   0010E8  C00D  F072         	movff	?___lwdiv+1,_adc_lm35_celsius+1
  1385   0010EC                     
  1386                           ;application.c: 39:         ret=convert_uint16_to_string( adc_lm35_celsius,adc_lm35_1_tx
      +                          t);
  1387   0010EC  C071  F17C         	movff	_adc_lm35_celsius,convert_uint16_to_string@value
  1388   0010F0  C072  F17D         	movff	_adc_lm35_celsius+1,convert_uint16_to_string@value+1
  1389   0010F4  0ED7               	movlw	low _adc_lm35_1_txt
  1390   0010F6  0101               	movlb	1	; () banked
  1391   0010F8  6F7E               	movwf	convert_uint16_to_string@str& (0+255),b
  1392   0010FA  0E00               	movlw	high _adc_lm35_1_txt
  1393   0010FC  6F7F               	movwf	(convert_uint16_to_string@str+1)& (0+255),b
  1394   0010FE  EC3D  F01D         	call	_convert_uint16_to_string	;wreg free
  1395   001102  0100               	movlb	0	; () banked
  1396   001104  6FEF               	movwf	_ret& (0+255),b
  1397   001106                     
  1398                           ; BSR set to: 0
  1399                           ;application.c: 40:        ret=lcd_8bit_send_string_pos(&lcd_2,1,1,"Temperature : ");
  1400   001106  0EF0               	movlw	low _lcd_2
  1401   001108  6E27               	movwf	lcd_8bit_send_string_pos@lcd^0,c
  1402   00110A  0E00               	movlw	high _lcd_2
  1403   00110C  6E28               	movwf	(lcd_8bit_send_string_pos@lcd+1)^0,c
  1404   00110E  0E01               	movlw	1
  1405   001110  6E29               	movwf	lcd_8bit_send_string_pos@row^0,c
  1406   001112  0E01               	movlw	1
  1407   001114  6E2A               	movwf	lcd_8bit_send_string_pos@column^0,c
  1408   001116  0E27               	movlw	low STR_6
  1409   001118  6E2B               	movwf	lcd_8bit_send_string_pos@str^0,c
  1410   00111A  0E10               	movlw	high STR_6
  1411   00111C  6E2C               	movwf	(lcd_8bit_send_string_pos@str+1)^0,c
  1412   00111E  ECF9  F01D         	call	_lcd_8bit_send_string_pos	;wreg free
  1413   001122  0100               	movlb	0	; () banked
  1414   001124  6FEF               	movwf	_ret& (0+255),b
  1415   001126                     
  1416                           ; BSR set to: 0
  1417                           ;application.c: 41:         ret=lcd_8bit_send_string_pos(&lcd_2,1,14,adc_lm35_1_txt);
  1418   001126  0EF0               	movlw	low _lcd_2
  1419   001128  6E27               	movwf	lcd_8bit_send_string_pos@lcd^0,c
  1420   00112A  0E00               	movlw	high _lcd_2
  1421   00112C  6E28               	movwf	(lcd_8bit_send_string_pos@lcd+1)^0,c
  1422   00112E  0E01               	movlw	1
  1423   001130  6E29               	movwf	lcd_8bit_send_string_pos@row^0,c
  1424   001132  0E0E               	movlw	14
  1425   001134  6E2A               	movwf	lcd_8bit_send_string_pos@column^0,c
  1426   001136  0ED7               	movlw	low _adc_lm35_1_txt
  1427   001138  6E2B               	movwf	lcd_8bit_send_string_pos@str^0,c
  1428   00113A  0E00               	movlw	high _adc_lm35_1_txt
  1429   00113C  6E2C               	movwf	(lcd_8bit_send_string_pos@str+1)^0,c
  1430   00113E  ECF9  F01D         	call	_lcd_8bit_send_string_pos	;wreg free
  1431   001142  0100               	movlb	0	; () banked
  1432   001144  6FEF               	movwf	_ret& (0+255),b
  1433   001146                     
  1434                           ; BSR set to: 0
  1435                           ;application.c: 42:         _delay((unsigned long)((50)*(4000000UL/4000.0)));
  1436   001146  0E41               	movlw	65
  1437   001148  6E5E               	movwf	??_main^0,c
  1438   00114A  0EEE               	movlw	238
  1439   00114C                     u9377:
  1440   00114C  2EE8               	decfsz	wreg,f,c
  1441   00114E  D7FE               	bra	u9377
  1442   001150  2E5E               	decfsz	??_main^0,f,c
  1443   001152  D7FC               	bra	u9377
  1444   001154  D000               	nop2	
  1445   001156                     
  1446                           ;application.c: 43:         if ( adc_lm35_celsius >30){
  1447   001156  5072               	movf	(_adc_lm35_celsius+1)^0,w,c
  1448   001158  E109               	bnz	u9320
  1449   00115A  0E1F               	movlw	31
  1450   00115C  5C71               	subwf	_adc_lm35_celsius^0,w,c
  1451   00115E  A0D8               	btfss	status,0,c
  1452   001160  EFB4  F008         	goto	u9321
  1453   001164  EFB6  F008         	goto	u9320
  1454   001168                     u9321:
  1455   001168  EF62  F009         	goto	l10051
  1456   00116C                     u9320:
  1457   00116C                     
  1458                           ;application.c: 44:             check2=0;
  1459   00116C  0E00               	movlw	0
  1460   00116E  6E60               	movwf	_check2^0,c	;volatile
  1461                           
  1462                           ;application.c: 45:             check3=0;
  1463   001170  0E00               	movlw	0
  1464   001172  6E5F               	movwf	_check3^0,c	;volatile
  1465                           
  1466                           ;application.c: 46:             if(check1==0){
  1467   001174  5061               	movf	_check1^0,w,c	;volatile
  1468   001176  A4D8               	btfss	status,2,c
  1469   001178  EFC0  F008         	goto	u9331
  1470   00117C  EFC2  F008         	goto	u9330
  1471   001180                     u9331:
  1472   001180  EF40  F009         	goto	l10045
  1473   001184                     u9330:
  1474   001184                     
  1475                           ;application.c: 47:              ret=lcd_8bit_send_command (&lcd_2,0x01);
  1476   001184  0EF0               	movlw	low _lcd_2
  1477   001186  6E18               	movwf	lcd_8bit_send_command@lcd^0,c
  1478   001188  0E00               	movlw	high _lcd_2
  1479   00118A  6E19               	movwf	(lcd_8bit_send_command@lcd+1)^0,c
  1480   00118C  0E01               	movlw	1
  1481   00118E  6E1A               	movwf	lcd_8bit_send_command@command^0,c
  1482   001190  EC3F  F01F         	call	_lcd_8bit_send_command	;wreg free
  1483   001194  0100               	movlb	0	; () banked
  1484   001196  6FEF               	movwf	_ret& (0+255),b
  1485   001198                     
  1486                           ; BSR set to: 0
  1487                           ;application.c: 48:              ret=lcd_8bit_send_string_pos(&lcd_2,1,1,"Temperature : 
      +                          ");
  1488   001198  0EF0               	movlw	low _lcd_2
  1489   00119A  6E27               	movwf	lcd_8bit_send_string_pos@lcd^0,c
  1490   00119C  0E00               	movlw	high _lcd_2
  1491   00119E  6E28               	movwf	(lcd_8bit_send_string_pos@lcd+1)^0,c
  1492   0011A0  0E01               	movlw	1
  1493   0011A2  6E29               	movwf	lcd_8bit_send_string_pos@row^0,c
  1494   0011A4  0E01               	movlw	1
  1495   0011A6  6E2A               	movwf	lcd_8bit_send_string_pos@column^0,c
  1496   0011A8  0E27               	movlw	low STR_6
  1497   0011AA  6E2B               	movwf	lcd_8bit_send_string_pos@str^0,c
  1498   0011AC  0E10               	movlw	high STR_6
  1499   0011AE  6E2C               	movwf	(lcd_8bit_send_string_pos@str+1)^0,c
  1500   0011B0  ECF9  F01D         	call	_lcd_8bit_send_string_pos	;wreg free
  1501   0011B4  0100               	movlb	0	; () banked
  1502   0011B6  6FEF               	movwf	_ret& (0+255),b
  1503   0011B8                     
  1504                           ; BSR set to: 0
  1505                           ;application.c: 49:              ret=ADC_GetConversion_Blocking(&adc_1,ADC_CHANNEL_AN0,&
      +                          adc_lm35_1) ;
  1506   0011B8  0E75               	movlw	low _adc_1
  1507   0011BA  6E13               	movwf	ADC_GetConversion_Blocking@_adc^0,c
  1508   0011BC  0E01               	movlw	high _adc_1
  1509   0011BE  6E14               	movwf	(ADC_GetConversion_Blocking@_adc+1)^0,c
  1510   0011C0  0E00               	movlw	0
  1511   0011C2  6E15               	movwf	ADC_GetConversion_Blocking@channel^0,c
  1512   0011C4  0E6B               	movlw	low _adc_lm35_1
  1513   0011C6  6E16               	movwf	ADC_GetConversion_Blocking@conversion_result^0,c
  1514   0011C8  0E00               	movlw	high _adc_lm35_1
  1515   0011CA  6E17               	movwf	(ADC_GetConversion_Blocking@conversion_result+1)^0,c
  1516   0011CC  EC88  F020         	call	_ADC_GetConversion_Blocking	;wreg free
  1517   0011D0  0100               	movlb	0	; () banked
  1518   0011D2  6FEF               	movwf	_ret& (0+255),b
  1519   0011D4                     
  1520                           ; BSR set to: 0
  1521                           ;application.c: 50:              adc_lm35_celsius=adc_lm35_1*4.88f;
  1522   0011D4  0EF6               	movlw	246
  1523   0011D6  6E1E               	movwf	___flmul@a^0,c
  1524   0011D8  0E28               	movlw	40
  1525   0011DA  6E1F               	movwf	(___flmul@a+1)^0,c
  1526   0011DC  0E9C               	movlw	156
  1527   0011DE  6E20               	movwf	(___flmul@a+2)^0,c
  1528   0011E0  0E40               	movlw	64
  1529   0011E2  6E21               	movwf	(___flmul@a+3)^0,c
  1530   0011E4  C06B  F00C         	movff	_adc_lm35_1,___xxtofl@val
  1531   0011E8  C06C  F00D         	movff	_adc_lm35_1+1,___xxtofl@val+1
  1532   0011EC  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1533   0011EE  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1534   0011F0  0E00               	movlw	0
  1535   0011F2  EC83  F015         	call	___xxtofl
  1536   0011F6  C00C  F01A         	movff	?___xxtofl,___flmul@b
  1537   0011FA  C00D  F01B         	movff	?___xxtofl+1,___flmul@b+1
  1538   0011FE  C00E  F01C         	movff	?___xxtofl+2,___flmul@b+2
  1539   001202  C00F  F01D         	movff	?___xxtofl+3,___flmul@b+3
  1540   001206  EC9E  F00F         	call	___flmul	;wreg free
  1541   00120A  C01A  F033         	movff	?___flmul,___fltol@f1
  1542   00120E  C01B  F034         	movff	?___flmul+1,___fltol@f1+1
  1543   001212  C01C  F035         	movff	?___flmul+2,___fltol@f1+2
  1544   001216  C01D  F036         	movff	?___flmul+3,___fltol@f1+3
  1545   00121A  EC3F  F01A         	call	___fltol	;wreg free
  1546   00121E  C033  F071         	movff	?___fltol,_adc_lm35_celsius
  1547   001222  C034  F072         	movff	?___fltol+1,_adc_lm35_celsius+1
  1548   001226                     
  1549                           ;application.c: 51:              adc_lm35_celsius/=10;
  1550   001226  C071  F00C         	movff	_adc_lm35_celsius,___lwdiv@dividend
  1551   00122A  C072  F00D         	movff	_adc_lm35_celsius+1,___lwdiv@dividend+1
  1552   00122E  0E00               	movlw	0
  1553   001230  6E0F               	movwf	(___lwdiv@divisor+1)^0,c
  1554   001232  0E0A               	movlw	10
  1555   001234  6E0E               	movwf	___lwdiv@divisor^0,c
  1556   001236  EC4E  F020         	call	___lwdiv	;wreg free
  1557   00123A  C00C  F071         	movff	?___lwdiv,_adc_lm35_celsius
  1558   00123E  C00D  F072         	movff	?___lwdiv+1,_adc_lm35_celsius+1
  1559   001242                     
  1560                           ;application.c: 52:              ret=convert_uint16_to_string( adc_lm35_celsius,adc_lm35
      +                          _1_txt);
  1561   001242  C071  F17C         	movff	_adc_lm35_celsius,convert_uint16_to_string@value
  1562   001246  C072  F17D         	movff	_adc_lm35_celsius+1,convert_uint16_to_string@value+1
  1563   00124A  0ED7               	movlw	low _adc_lm35_1_txt
  1564   00124C  0101               	movlb	1	; () banked
  1565   00124E  6F7E               	movwf	convert_uint16_to_string@str& (0+255),b
  1566   001250  0E00               	movlw	high _adc_lm35_1_txt
  1567   001252  6F7F               	movwf	(convert_uint16_to_string@str+1)& (0+255),b
  1568   001254  EC3D  F01D         	call	_convert_uint16_to_string	;wreg free
  1569   001258  0100               	movlb	0	; () banked
  1570   00125A  6FEF               	movwf	_ret& (0+255),b
  1571   00125C                     
  1572                           ; BSR set to: 0
  1573                           ;application.c: 53:              ret=lcd_8bit_send_string_pos(&lcd_2,1,14,adc_lm35_1_txt
      +                          );
  1574   00125C  0EF0               	movlw	low _lcd_2
  1575   00125E  6E27               	movwf	lcd_8bit_send_string_pos@lcd^0,c
  1576   001260  0E00               	movlw	high _lcd_2
  1577   001262  6E28               	movwf	(lcd_8bit_send_string_pos@lcd+1)^0,c
  1578   001264  0E01               	movlw	1
  1579   001266  6E29               	movwf	lcd_8bit_send_string_pos@row^0,c
  1580   001268  0E0E               	movlw	14
  1581   00126A  6E2A               	movwf	lcd_8bit_send_string_pos@column^0,c
  1582   00126C  0ED7               	movlw	low _adc_lm35_1_txt
  1583   00126E  6E2B               	movwf	lcd_8bit_send_string_pos@str^0,c
  1584   001270  0E00               	movlw	high _adc_lm35_1_txt
  1585   001272  6E2C               	movwf	(lcd_8bit_send_string_pos@str+1)^0,c
  1586   001274  ECF9  F01D         	call	_lcd_8bit_send_string_pos	;wreg free
  1587   001278  0100               	movlb	0	; () banked
  1588   00127A  6FEF               	movwf	_ret& (0+255),b
  1589   00127C                     
  1590                           ; BSR set to: 0
  1591                           ;application.c: 54:              check1=1;
  1592   00127C  0E01               	movlw	1
  1593   00127E  6E61               	movwf	_check1^0,c	;volatile
  1594   001280                     l10045:
  1595                           
  1596                           ;application.c: 56:             ret=lcd_8bit_send_string_pos(&lcd_2,2,1,"Fan ON ");
  1597   001280  0EF0               	movlw	low _lcd_2
  1598   001282  6E27               	movwf	lcd_8bit_send_string_pos@lcd^0,c
  1599   001284  0E00               	movlw	high _lcd_2
  1600   001286  6E28               	movwf	(lcd_8bit_send_string_pos@lcd+1)^0,c
  1601   001288  0E02               	movlw	2
  1602   00128A  6E29               	movwf	lcd_8bit_send_string_pos@row^0,c
  1603   00128C  0E01               	movlw	1
  1604   00128E  6E2A               	movwf	lcd_8bit_send_string_pos@column^0,c
  1605   001290  0E41               	movlw	low STR_8
  1606   001292  6E2B               	movwf	lcd_8bit_send_string_pos@str^0,c
  1607   001294  0E10               	movlw	high STR_8
  1608   001296  6E2C               	movwf	(lcd_8bit_send_string_pos@str+1)^0,c
  1609   001298  ECF9  F01D         	call	_lcd_8bit_send_string_pos	;wreg free
  1610   00129C  0100               	movlb	0	; () banked
  1611   00129E  6FEF               	movwf	_ret& (0+255),b
  1612   0012A0                     
  1613                           ; BSR set to: 0
  1614                           ;application.c: 57:             ret=dc_motor_move_right(&dc_motor1);
  1615   0012A0  0EFC               	movlw	low _dc_motor1
  1616   0012A2  6E15               	movwf	dc_motor_move_right@_motor^0,c
  1617   0012A4  0E00               	movlw	high _dc_motor1
  1618   0012A6  6E16               	movwf	(dc_motor_move_right@_motor+1)^0,c
  1619   0012A8  EC6D  F022         	call	_dc_motor_move_right	;wreg free
  1620   0012AC  0100               	movlb	0	; () banked
  1621   0012AE  6FEF               	movwf	_ret& (0+255),b
  1622   0012B0                     
  1623                           ; BSR set to: 0
  1624                           ;application.c: 58:             ret=dc_motor_stop(&dc_motor2);
  1625   0012B0  0EFA               	movlw	low _dc_motor2
  1626   0012B2  6E15               	movwf	dc_motor_stop@_motor^0,c
  1627   0012B4  0E00               	movlw	high _dc_motor2
  1628   0012B6  6E16               	movwf	(dc_motor_stop@_motor+1)^0,c
  1629   0012B8  EC4E  F022         	call	_dc_motor_stop	;wreg free
  1630   0012BC  0100               	movlb	0	; () banked
  1631   0012BE  6FEF               	movwf	_ret& (0+255),b
  1632                           
  1633                           ;application.c: 60:         }
  1634   0012C0  EF31  F008         	goto	l10013
  1635   0012C4                     l10051:
  1636   0012C4  5072               	movf	(_adc_lm35_celsius+1)^0,w,c
  1637   0012C6  E107               	bnz	u9341
  1638   0012C8  0E14               	movlw	20
  1639   0012CA  5C71               	subwf	_adc_lm35_celsius^0,w,c
  1640   0012CC  B0D8               	btfsc	status,0,c
  1641   0012CE  EF6B  F009         	goto	u9341
  1642   0012D2  EF6D  F009         	goto	u9340
  1643   0012D6                     u9341:
  1644   0012D6  EF19  F00A         	goto	l10077
  1645   0012DA                     u9340:
  1646   0012DA                     
  1647                           ;application.c: 62:             check1=0;
  1648   0012DA  0E00               	movlw	0
  1649   0012DC  6E61               	movwf	_check1^0,c	;volatile
  1650                           
  1651                           ;application.c: 63:             check3=0;
  1652   0012DE  0E00               	movlw	0
  1653   0012E0  6E5F               	movwf	_check3^0,c	;volatile
  1654   0012E2                     
  1655                           ;application.c: 64:              ret=dc_motor_move_right(&dc_motor2);
  1656   0012E2  0EFA               	movlw	low _dc_motor2
  1657   0012E4  6E15               	movwf	dc_motor_move_right@_motor^0,c
  1658   0012E6  0E00               	movlw	high _dc_motor2
  1659   0012E8  6E16               	movwf	(dc_motor_move_right@_motor+1)^0,c
  1660   0012EA  EC6D  F022         	call	_dc_motor_move_right	;wreg free
  1661   0012EE  0100               	movlb	0	; () banked
  1662   0012F0  6FEF               	movwf	_ret& (0+255),b
  1663   0012F2                     
  1664                           ; BSR set to: 0
  1665                           ;application.c: 65:              ret=dc_motor_stop(&dc_motor1);
  1666   0012F2  0EFC               	movlw	low _dc_motor1
  1667   0012F4  6E15               	movwf	dc_motor_stop@_motor^0,c
  1668   0012F6  0E00               	movlw	high _dc_motor1
  1669   0012F8  6E16               	movwf	(dc_motor_stop@_motor+1)^0,c
  1670   0012FA  EC4E  F022         	call	_dc_motor_stop	;wreg free
  1671   0012FE  0100               	movlb	0	; () banked
  1672   001300  6FEF               	movwf	_ret& (0+255),b
  1673                           
  1674                           ;application.c: 66:              if(check2==0){
  1675   001302  5060               	movf	_check2^0,w,c	;volatile
  1676   001304  A4D8               	btfss	status,2,c
  1677   001306  EF87  F009         	goto	u9351
  1678   00130A  EF89  F009         	goto	u9350
  1679   00130E                     u9351:
  1680   00130E  EF07  F00A         	goto	l10075
  1681   001312                     u9350:
  1682   001312                     
  1683                           ; BSR set to: 0
  1684                           ;application.c: 67:              ret=lcd_8bit_send_command (&lcd_2,0x01);
  1685   001312  0EF0               	movlw	low _lcd_2
  1686   001314  6E18               	movwf	lcd_8bit_send_command@lcd^0,c
  1687   001316  0E00               	movlw	high _lcd_2
  1688   001318  6E19               	movwf	(lcd_8bit_send_command@lcd+1)^0,c
  1689   00131A  0E01               	movlw	1
  1690   00131C  6E1A               	movwf	lcd_8bit_send_command@command^0,c
  1691   00131E  EC3F  F01F         	call	_lcd_8bit_send_command	;wreg free
  1692   001322  0100               	movlb	0	; () banked
  1693   001324  6FEF               	movwf	_ret& (0+255),b
  1694   001326                     
  1695                           ; BSR set to: 0
  1696                           ;application.c: 68:              ret=lcd_8bit_send_string_pos(&lcd_2,1,1,"Temperature : 
      +                          ");
  1697   001326  0EF0               	movlw	low _lcd_2
  1698   001328  6E27               	movwf	lcd_8bit_send_string_pos@lcd^0,c
  1699   00132A  0E00               	movlw	high _lcd_2
  1700   00132C  6E28               	movwf	(lcd_8bit_send_string_pos@lcd+1)^0,c
  1701   00132E  0E01               	movlw	1
  1702   001330  6E29               	movwf	lcd_8bit_send_string_pos@row^0,c
  1703   001332  0E01               	movlw	1
  1704   001334  6E2A               	movwf	lcd_8bit_send_string_pos@column^0,c
  1705   001336  0E27               	movlw	low STR_6
  1706   001338  6E2B               	movwf	lcd_8bit_send_string_pos@str^0,c
  1707   00133A  0E10               	movlw	high STR_6
  1708   00133C  6E2C               	movwf	(lcd_8bit_send_string_pos@str+1)^0,c
  1709   00133E  ECF9  F01D         	call	_lcd_8bit_send_string_pos	;wreg free
  1710   001342  0100               	movlb	0	; () banked
  1711   001344  6FEF               	movwf	_ret& (0+255),b
  1712   001346                     
  1713                           ; BSR set to: 0
  1714                           ;application.c: 69:              ret=ADC_GetConversion_Blocking(&adc_1,ADC_CHANNEL_AN0,&
      +                          adc_lm35_1) ;
  1715   001346  0E75               	movlw	low _adc_1
  1716   001348  6E13               	movwf	ADC_GetConversion_Blocking@_adc^0,c
  1717   00134A  0E01               	movlw	high _adc_1
  1718   00134C  6E14               	movwf	(ADC_GetConversion_Blocking@_adc+1)^0,c
  1719   00134E  0E00               	movlw	0
  1720   001350  6E15               	movwf	ADC_GetConversion_Blocking@channel^0,c
  1721   001352  0E6B               	movlw	low _adc_lm35_1
  1722   001354  6E16               	movwf	ADC_GetConversion_Blocking@conversion_result^0,c
  1723   001356  0E00               	movlw	high _adc_lm35_1
  1724   001358  6E17               	movwf	(ADC_GetConversion_Blocking@conversion_result+1)^0,c
  1725   00135A  EC88  F020         	call	_ADC_GetConversion_Blocking	;wreg free
  1726   00135E  0100               	movlb	0	; () banked
  1727   001360  6FEF               	movwf	_ret& (0+255),b
  1728   001362                     
  1729                           ; BSR set to: 0
  1730                           ;application.c: 70:              adc_lm35_celsius=adc_lm35_1*4.88f;
  1731   001362  0EF6               	movlw	246
  1732   001364  6E1E               	movwf	___flmul@a^0,c
  1733   001366  0E28               	movlw	40
  1734   001368  6E1F               	movwf	(___flmul@a+1)^0,c
  1735   00136A  0E9C               	movlw	156
  1736   00136C  6E20               	movwf	(___flmul@a+2)^0,c
  1737   00136E  0E40               	movlw	64
  1738   001370  6E21               	movwf	(___flmul@a+3)^0,c
  1739   001372  C06B  F00C         	movff	_adc_lm35_1,___xxtofl@val
  1740   001376  C06C  F00D         	movff	_adc_lm35_1+1,___xxtofl@val+1
  1741   00137A  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1742   00137C  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1743   00137E  0E00               	movlw	0
  1744   001380  EC83  F015         	call	___xxtofl
  1745   001384  C00C  F01A         	movff	?___xxtofl,___flmul@b
  1746   001388  C00D  F01B         	movff	?___xxtofl+1,___flmul@b+1
  1747   00138C  C00E  F01C         	movff	?___xxtofl+2,___flmul@b+2
  1748   001390  C00F  F01D         	movff	?___xxtofl+3,___flmul@b+3
  1749   001394  EC9E  F00F         	call	___flmul	;wreg free
  1750   001398  C01A  F033         	movff	?___flmul,___fltol@f1
  1751   00139C  C01B  F034         	movff	?___flmul+1,___fltol@f1+1
  1752   0013A0  C01C  F035         	movff	?___flmul+2,___fltol@f1+2
  1753   0013A4  C01D  F036         	movff	?___flmul+3,___fltol@f1+3
  1754   0013A8  EC3F  F01A         	call	___fltol	;wreg free
  1755   0013AC  C033  F071         	movff	?___fltol,_adc_lm35_celsius
  1756   0013B0  C034  F072         	movff	?___fltol+1,_adc_lm35_celsius+1
  1757   0013B4                     
  1758                           ;application.c: 71:              adc_lm35_celsius/=10;
  1759   0013B4  C071  F00C         	movff	_adc_lm35_celsius,___lwdiv@dividend
  1760   0013B8  C072  F00D         	movff	_adc_lm35_celsius+1,___lwdiv@dividend+1
  1761   0013BC  0E00               	movlw	0
  1762   0013BE  6E0F               	movwf	(___lwdiv@divisor+1)^0,c
  1763   0013C0  0E0A               	movlw	10
  1764   0013C2  6E0E               	movwf	___lwdiv@divisor^0,c
  1765   0013C4  EC4E  F020         	call	___lwdiv	;wreg free
  1766   0013C8  C00C  F071         	movff	?___lwdiv,_adc_lm35_celsius
  1767   0013CC  C00D  F072         	movff	?___lwdiv+1,_adc_lm35_celsius+1
  1768   0013D0                     
  1769                           ;application.c: 72:              ret=convert_uint16_to_string( adc_lm35_celsius,adc_lm35
      +                          _1_txt);
  1770   0013D0  C071  F17C         	movff	_adc_lm35_celsius,convert_uint16_to_string@value
  1771   0013D4  C072  F17D         	movff	_adc_lm35_celsius+1,convert_uint16_to_string@value+1
  1772   0013D8  0ED7               	movlw	low _adc_lm35_1_txt
  1773   0013DA  0101               	movlb	1	; () banked
  1774   0013DC  6F7E               	movwf	convert_uint16_to_string@str& (0+255),b
  1775   0013DE  0E00               	movlw	high _adc_lm35_1_txt
  1776   0013E0  6F7F               	movwf	(convert_uint16_to_string@str+1)& (0+255),b
  1777   0013E2  EC3D  F01D         	call	_convert_uint16_to_string	;wreg free
  1778   0013E6  0100               	movlb	0	; () banked
  1779   0013E8  6FEF               	movwf	_ret& (0+255),b
  1780   0013EA                     
  1781                           ; BSR set to: 0
  1782                           ;application.c: 73:              ret=lcd_8bit_send_string_pos(&lcd_2,1,14,adc_lm35_1_txt
      +                          );
  1783   0013EA  0EF0               	movlw	low _lcd_2
  1784   0013EC  6E27               	movwf	lcd_8bit_send_string_pos@lcd^0,c
  1785   0013EE  0E00               	movlw	high _lcd_2
  1786   0013F0  6E28               	movwf	(lcd_8bit_send_string_pos@lcd+1)^0,c
  1787   0013F2  0E01               	movlw	1
  1788   0013F4  6E29               	movwf	lcd_8bit_send_string_pos@row^0,c
  1789   0013F6  0E0E               	movlw	14
  1790   0013F8  6E2A               	movwf	lcd_8bit_send_string_pos@column^0,c
  1791   0013FA  0ED7               	movlw	low _adc_lm35_1_txt
  1792   0013FC  6E2B               	movwf	lcd_8bit_send_string_pos@str^0,c
  1793   0013FE  0E00               	movlw	high _adc_lm35_1_txt
  1794   001400  6E2C               	movwf	(lcd_8bit_send_string_pos@str+1)^0,c
  1795   001402  ECF9  F01D         	call	_lcd_8bit_send_string_pos	;wreg free
  1796   001406  0100               	movlb	0	; () banked
  1797   001408  6FEF               	movwf	_ret& (0+255),b
  1798   00140A                     
  1799                           ; BSR set to: 0
  1800                           ;application.c: 74:              check2=1;
  1801   00140A  0E01               	movlw	1
  1802   00140C  6E60               	movwf	_check2^0,c	;volatile
  1803   00140E                     l10075:
  1804                           
  1805                           ; BSR set to: 0
  1806                           ;application.c: 77:              ret=lcd_8bit_send_string_pos(&lcd_2,2,1,"Heater ON ");
  1807   00140E  0EF0               	movlw	low _lcd_2
  1808   001410  6E27               	movwf	lcd_8bit_send_string_pos@lcd^0,c
  1809   001412  0E00               	movlw	high _lcd_2
  1810   001414  6E28               	movwf	(lcd_8bit_send_string_pos@lcd+1)^0,c
  1811   001416  0E02               	movlw	2
  1812   001418  6E29               	movwf	lcd_8bit_send_string_pos@row^0,c
  1813   00141A  0E01               	movlw	1
  1814   00141C  6E2A               	movwf	lcd_8bit_send_string_pos@column^0,c
  1815   00141E  0E36               	movlw	low STR_10
  1816   001420  6E2B               	movwf	lcd_8bit_send_string_pos@str^0,c
  1817   001422  0E10               	movlw	high STR_10
  1818   001424  6E2C               	movwf	(lcd_8bit_send_string_pos@str+1)^0,c
  1819   001426  ECF9  F01D         	call	_lcd_8bit_send_string_pos	;wreg free
  1820   00142A  0100               	movlb	0	; () banked
  1821   00142C  6FEF               	movwf	_ret& (0+255),b
  1822                           
  1823                           ;application.c: 80:         }
  1824   00142E  EF31  F008         	goto	l10013
  1825   001432                     l10077:
  1826                           
  1827                           ;application.c: 82:              check1=0;
  1828   001432  0E00               	movlw	0
  1829   001434  6E61               	movwf	_check1^0,c	;volatile
  1830                           
  1831                           ;application.c: 83:              check2=0;
  1832   001436  0E00               	movlw	0
  1833   001438  6E60               	movwf	_check2^0,c	;volatile
  1834   00143A                     
  1835                           ;application.c: 84:              ret=dc_motor_stop(&dc_motor1);
  1836   00143A  0EFC               	movlw	low _dc_motor1
  1837   00143C  6E15               	movwf	dc_motor_stop@_motor^0,c
  1838   00143E  0E00               	movlw	high _dc_motor1
  1839   001440  6E16               	movwf	(dc_motor_stop@_motor+1)^0,c
  1840   001442  EC4E  F022         	call	_dc_motor_stop	;wreg free
  1841   001446  0100               	movlb	0	; () banked
  1842   001448  6FEF               	movwf	_ret& (0+255),b
  1843   00144A                     
  1844                           ; BSR set to: 0
  1845                           ;application.c: 85:              ret=dc_motor_stop(&dc_motor2);
  1846   00144A  0EFA               	movlw	low _dc_motor2
  1847   00144C  6E15               	movwf	dc_motor_stop@_motor^0,c
  1848   00144E  0E00               	movlw	high _dc_motor2
  1849   001450  6E16               	movwf	(dc_motor_stop@_motor+1)^0,c
  1850   001452  EC4E  F022         	call	_dc_motor_stop	;wreg free
  1851   001456  0100               	movlb	0	; () banked
  1852   001458  6FEF               	movwf	_ret& (0+255),b
  1853                           
  1854                           ;application.c: 86:              if(check3==0){
  1855   00145A  505F               	movf	_check3^0,w,c	;volatile
  1856   00145C  A4D8               	btfss	status,2,c
  1857   00145E  EF33  F00A         	goto	u9361
  1858   001462  EF35  F00A         	goto	u9360
  1859   001466                     u9361:
  1860   001466  EFB3  F00A         	goto	l10099
  1861   00146A                     u9360:
  1862   00146A                     
  1863                           ; BSR set to: 0
  1864                           ;application.c: 87:              ret=lcd_8bit_send_command (&lcd_2,0x01);
  1865   00146A  0EF0               	movlw	low _lcd_2
  1866   00146C  6E18               	movwf	lcd_8bit_send_command@lcd^0,c
  1867   00146E  0E00               	movlw	high _lcd_2
  1868   001470  6E19               	movwf	(lcd_8bit_send_command@lcd+1)^0,c
  1869   001472  0E01               	movlw	1
  1870   001474  6E1A               	movwf	lcd_8bit_send_command@command^0,c
  1871   001476  EC3F  F01F         	call	_lcd_8bit_send_command	;wreg free
  1872   00147A  0100               	movlb	0	; () banked
  1873   00147C  6FEF               	movwf	_ret& (0+255),b
  1874   00147E                     
  1875                           ; BSR set to: 0
  1876                           ;application.c: 88:              ret=lcd_8bit_send_string_pos(&lcd_2,1,1,"Temperature : 
      +                          ");
  1877   00147E  0EF0               	movlw	low _lcd_2
  1878   001480  6E27               	movwf	lcd_8bit_send_string_pos@lcd^0,c
  1879   001482  0E00               	movlw	high _lcd_2
  1880   001484  6E28               	movwf	(lcd_8bit_send_string_pos@lcd+1)^0,c
  1881   001486  0E01               	movlw	1
  1882   001488  6E29               	movwf	lcd_8bit_send_string_pos@row^0,c
  1883   00148A  0E01               	movlw	1
  1884   00148C  6E2A               	movwf	lcd_8bit_send_string_pos@column^0,c
  1885   00148E  0E27               	movlw	low STR_6
  1886   001490  6E2B               	movwf	lcd_8bit_send_string_pos@str^0,c
  1887   001492  0E10               	movlw	high STR_6
  1888   001494  6E2C               	movwf	(lcd_8bit_send_string_pos@str+1)^0,c
  1889   001496  ECF9  F01D         	call	_lcd_8bit_send_string_pos	;wreg free
  1890   00149A  0100               	movlb	0	; () banked
  1891   00149C  6FEF               	movwf	_ret& (0+255),b
  1892   00149E                     
  1893                           ; BSR set to: 0
  1894                           ;application.c: 89:              ret=ADC_GetConversion_Blocking(&adc_1,ADC_CHANNEL_AN0,&
      +                          adc_lm35_1) ;
  1895   00149E  0E75               	movlw	low _adc_1
  1896   0014A0  6E13               	movwf	ADC_GetConversion_Blocking@_adc^0,c
  1897   0014A2  0E01               	movlw	high _adc_1
  1898   0014A4  6E14               	movwf	(ADC_GetConversion_Blocking@_adc+1)^0,c
  1899   0014A6  0E00               	movlw	0
  1900   0014A8  6E15               	movwf	ADC_GetConversion_Blocking@channel^0,c
  1901   0014AA  0E6B               	movlw	low _adc_lm35_1
  1902   0014AC  6E16               	movwf	ADC_GetConversion_Blocking@conversion_result^0,c
  1903   0014AE  0E00               	movlw	high _adc_lm35_1
  1904   0014B0  6E17               	movwf	(ADC_GetConversion_Blocking@conversion_result+1)^0,c
  1905   0014B2  EC88  F020         	call	_ADC_GetConversion_Blocking	;wreg free
  1906   0014B6  0100               	movlb	0	; () banked
  1907   0014B8  6FEF               	movwf	_ret& (0+255),b
  1908   0014BA                     
  1909                           ; BSR set to: 0
  1910                           ;application.c: 90:              adc_lm35_celsius=adc_lm35_1 * 4.88f;
  1911   0014BA  0EF6               	movlw	246
  1912   0014BC  6E1E               	movwf	___flmul@a^0,c
  1913   0014BE  0E28               	movlw	40
  1914   0014C0  6E1F               	movwf	(___flmul@a+1)^0,c
  1915   0014C2  0E9C               	movlw	156
  1916   0014C4  6E20               	movwf	(___flmul@a+2)^0,c
  1917   0014C6  0E40               	movlw	64
  1918   0014C8  6E21               	movwf	(___flmul@a+3)^0,c
  1919   0014CA  C06B  F00C         	movff	_adc_lm35_1,___xxtofl@val
  1920   0014CE  C06C  F00D         	movff	_adc_lm35_1+1,___xxtofl@val+1
  1921   0014D2  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1922   0014D4  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1923   0014D6  0E00               	movlw	0
  1924   0014D8  EC83  F015         	call	___xxtofl
  1925   0014DC  C00C  F01A         	movff	?___xxtofl,___flmul@b
  1926   0014E0  C00D  F01B         	movff	?___xxtofl+1,___flmul@b+1
  1927   0014E4  C00E  F01C         	movff	?___xxtofl+2,___flmul@b+2
  1928   0014E8  C00F  F01D         	movff	?___xxtofl+3,___flmul@b+3
  1929   0014EC  EC9E  F00F         	call	___flmul	;wreg free
  1930   0014F0  C01A  F033         	movff	?___flmul,___fltol@f1
  1931   0014F4  C01B  F034         	movff	?___flmul+1,___fltol@f1+1
  1932   0014F8  C01C  F035         	movff	?___flmul+2,___fltol@f1+2
  1933   0014FC  C01D  F036         	movff	?___flmul+3,___fltol@f1+3
  1934   001500  EC3F  F01A         	call	___fltol	;wreg free
  1935   001504  C033  F071         	movff	?___fltol,_adc_lm35_celsius
  1936   001508  C034  F072         	movff	?___fltol+1,_adc_lm35_celsius+1
  1937   00150C                     
  1938                           ;application.c: 91:              adc_lm35_celsius/=10;
  1939   00150C  C071  F00C         	movff	_adc_lm35_celsius,___lwdiv@dividend
  1940   001510  C072  F00D         	movff	_adc_lm35_celsius+1,___lwdiv@dividend+1
  1941   001514  0E00               	movlw	0
  1942   001516  6E0F               	movwf	(___lwdiv@divisor+1)^0,c
  1943   001518  0E0A               	movlw	10
  1944   00151A  6E0E               	movwf	___lwdiv@divisor^0,c
  1945   00151C  EC4E  F020         	call	___lwdiv	;wreg free
  1946   001520  C00C  F071         	movff	?___lwdiv,_adc_lm35_celsius
  1947   001524  C00D  F072         	movff	?___lwdiv+1,_adc_lm35_celsius+1
  1948   001528                     
  1949                           ;application.c: 92:              ret=convert_uint16_to_string( adc_lm35_celsius,adc_lm35
      +                          _1_txt);
  1950   001528  C071  F17C         	movff	_adc_lm35_celsius,convert_uint16_to_string@value
  1951   00152C  C072  F17D         	movff	_adc_lm35_celsius+1,convert_uint16_to_string@value+1
  1952   001530  0ED7               	movlw	low _adc_lm35_1_txt
  1953   001532  0101               	movlb	1	; () banked
  1954   001534  6F7E               	movwf	convert_uint16_to_string@str& (0+255),b
  1955   001536  0E00               	movlw	high _adc_lm35_1_txt
  1956   001538  6F7F               	movwf	(convert_uint16_to_string@str+1)& (0+255),b
  1957   00153A  EC3D  F01D         	call	_convert_uint16_to_string	;wreg free
  1958   00153E  0100               	movlb	0	; () banked
  1959   001540  6FEF               	movwf	_ret& (0+255),b
  1960   001542                     
  1961                           ; BSR set to: 0
  1962                           ;application.c: 93:              ret=lcd_8bit_send_string_pos(&lcd_2,1,14,adc_lm35_1_txt
      +                          );
  1963   001542  0EF0               	movlw	low _lcd_2
  1964   001544  6E27               	movwf	lcd_8bit_send_string_pos@lcd^0,c
  1965   001546  0E00               	movlw	high _lcd_2
  1966   001548  6E28               	movwf	(lcd_8bit_send_string_pos@lcd+1)^0,c
  1967   00154A  0E01               	movlw	1
  1968   00154C  6E29               	movwf	lcd_8bit_send_string_pos@row^0,c
  1969   00154E  0E0E               	movlw	14
  1970   001550  6E2A               	movwf	lcd_8bit_send_string_pos@column^0,c
  1971   001552  0ED7               	movlw	low _adc_lm35_1_txt
  1972   001554  6E2B               	movwf	lcd_8bit_send_string_pos@str^0,c
  1973   001556  0E00               	movlw	high _adc_lm35_1_txt
  1974   001558  6E2C               	movwf	(lcd_8bit_send_string_pos@str+1)^0,c
  1975   00155A  ECF9  F01D         	call	_lcd_8bit_send_string_pos	;wreg free
  1976   00155E  0100               	movlb	0	; () banked
  1977   001560  6FEF               	movwf	_ret& (0+255),b
  1978   001562                     
  1979                           ; BSR set to: 0
  1980                           ;application.c: 94:              check3=1;
  1981   001562  0E01               	movlw	1
  1982   001564  6E5F               	movwf	_check3^0,c	;volatile
  1983   001566                     l10099:
  1984                           
  1985                           ; BSR set to: 0
  1986                           ;application.c: 96:              ret=lcd_8bit_send_string_pos(&lcd_2,2,1,"Fan OFF / Heat
      +                          er OFF ");
  1987   001566  0EF0               	movlw	low _lcd_2
  1988   001568  6E27               	movwf	lcd_8bit_send_string_pos@lcd^0,c
  1989   00156A  0E00               	movlw	high _lcd_2
  1990   00156C  6E28               	movwf	(lcd_8bit_send_string_pos@lcd+1)^0,c
  1991   00156E  0E02               	movlw	2
  1992   001570  6E29               	movwf	lcd_8bit_send_string_pos@row^0,c
  1993   001572  0E01               	movlw	1
  1994   001574  6E2A               	movwf	lcd_8bit_send_string_pos@column^0,c
  1995   001576  0E11               	movlw	low STR_12
  1996   001578  6E2B               	movwf	lcd_8bit_send_string_pos@str^0,c
  1997   00157A  0E10               	movlw	high STR_12
  1998   00157C  6E2C               	movwf	(lcd_8bit_send_string_pos@str+1)^0,c
  1999   00157E  ECF9  F01D         	call	_lcd_8bit_send_string_pos	;wreg free
  2000   001582  0100               	movlb	0	; () banked
  2001   001584  6FEF               	movwf	_ret& (0+255),b
  2002   001586  EF31  F008         	goto	l10013
  2003   00158A  EF03  F000         	goto	start
  2004   00158E                     __end_of_main:
  2005                           	callstack 0
  2006                           
  2007 ;; *************** function _lcd_8bit_send_string_pos *****************
  2008 ;; Defined at:
  2009 ;;		line 273 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  2010 ;; Parameters:    Size  Location     Type
  2011 ;;  lcd             2   38[COMRAM] PTR const struct .
  2012 ;;		 -> lcd_2(10), 
  2013 ;;  row             1   40[COMRAM] unsigned char 
  2014 ;;  column          1   41[COMRAM] unsigned char 
  2015 ;;  str             2   42[COMRAM] PTR unsigned char 
  2016 ;;		 -> STR_12(22), STR_11(15), STR_10(11), STR_9(15), 
  2017 ;;		 -> STR_8(8), STR_7(15), STR_6(15), adc_lm35_1_txt(7), 
  2018 ;;		 -> STR_5(8), STR_4(8), RealTimeClockDS1307_Time(9), RealTimeClockDS1307_Data(9), 
  2019 ;; Auto vars:     Size  Location     Type
  2020 ;;  ret             1   44[COMRAM] unsigned char 
  2021 ;; Return value:  Size  Location     Type
  2022 ;;                  1    wreg      unsigned char 
  2023 ;; Registers used:
  2024 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2025 ;; Tracked objects:
  2026 ;;		On entry : 0/0
  2027 ;;		On exit  : 0/0
  2028 ;;		Unchanged: 0/0
  2029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2030 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2031 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2033 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2034 ;;Total ram usage:        7 bytes
  2035 ;; Hardware stack levels used: 1
  2036 ;; Hardware stack levels required when called: 8
  2037 ;; This function calls:
  2038 ;;		_lcd_8bit_send_char_data
  2039 ;;		_lcd_8bit_set_cursor
  2040 ;; This function is called by:
  2041 ;;		_main
  2042 ;;		_Print_RealTimeClockDS1307
  2043 ;; This function uses a non-reentrant model
  2044 ;;
  2045                           
  2046                           	psect	text1
  2047   003BF2                     __ptext1:
  2048                           	callstack 0
  2049   003BF2                     _lcd_8bit_send_string_pos:
  2050                           	callstack 22
  2051   003BF2                     
  2052                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 275:     if((((void*)0) == lcd) ||(((void*)0) == str))
      +                          {
  2053   003BF2  5027               	movf	lcd_8bit_send_string_pos@lcd^0,w,c
  2054   003BF4  1028               	iorwf	(lcd_8bit_send_string_pos@lcd+1)^0,w,c
  2055   003BF6  B4D8               	btfsc	status,2,c
  2056   003BF8  EF00  F01E         	goto	u6481
  2057   003BFC  EF02  F01E         	goto	u6480
  2058   003C00                     u6481:
  2059   003C00  EF0B  F01E         	goto	l7669
  2060   003C04                     u6480:
  2061   003C04  502B               	movf	lcd_8bit_send_string_pos@str^0,w,c
  2062   003C06  102C               	iorwf	(lcd_8bit_send_string_pos@str+1)^0,w,c
  2063   003C08  A4D8               	btfss	status,2,c
  2064   003C0A  EF09  F01E         	goto	u6491
  2065   003C0E  EF0B  F01E         	goto	u6490
  2066   003C12                     u6491:
  2067   003C12  EF0F  F01E         	goto	l7671
  2068   003C16                     u6490:
  2069   003C16                     l7669:
  2070                           
  2071                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 276:         ret=(Std_ReturnType)0x01;
  2072   003C16  0E01               	movlw	1
  2073   003C18  6E2D               	movwf	lcd_8bit_send_string_pos@ret^0,c
  2074                           
  2075                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 277:     }
  2076   003C1A  EF50  F01E         	goto	l7679
  2077   003C1E                     l7671:
  2078                           
  2079                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 279:         ret=lcd_8bit_set_cursor(lcd ,row,column);
  2080   003C1E  C027  F021         	movff	lcd_8bit_send_string_pos@lcd,lcd_8bit_set_cursor@lcd
  2081   003C22  C028  F022         	movff	lcd_8bit_send_string_pos@lcd+1,lcd_8bit_set_cursor@lcd+1
  2082   003C26  C029  F023         	movff	lcd_8bit_send_string_pos@row,lcd_8bit_set_cursor@row
  2083   003C2A  C02A  F024         	movff	lcd_8bit_send_string_pos@column,lcd_8bit_set_cursor@coulmn
  2084   003C2E  ECAA  F01E         	call	_lcd_8bit_set_cursor	;wreg free
  2085   003C32  6E2D               	movwf	lcd_8bit_send_string_pos@ret^0,c
  2086                           
  2087                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 280:         while(*str){
  2088   003C34  EF37  F01E         	goto	l7677
  2089   003C38                     l7673:
  2090                           
  2091                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 281:             ret=lcd_8bit_send_char_data(lcd,*str+
      +                          +);
  2092   003C38  C027  F018         	movff	lcd_8bit_send_string_pos@lcd,lcd_8bit_send_char_data@lcd
  2093   003C3C  C028  F019         	movff	lcd_8bit_send_string_pos@lcd+1,lcd_8bit_send_char_data@lcd+1
  2094   003C40  C02B  FFF6         	movff	lcd_8bit_send_string_pos@str,tblptrl
  2095   003C44  C02C  FFF7         	movff	lcd_8bit_send_string_pos@str+1,tblptrh
  2096   003C48  0E00               	movlw	low (__smallconst shr (0+16))
  2097   003C4A  6EF8               	movwf	tblptru,c
  2098   003C4C  0E0F               	movlw	(high __ramtop+-1)
  2099   003C4E  64F7               	cpfsgt	tblptrh,c
  2100   003C50  D003               	bra	u6507
  2101   003C52  0008               	tblrd		*
  2102   003C54  50F5               	movf	tablat,w,c
  2103   003C56  D005               	bra	u6500
  2104   003C58                     u6507:
  2105   003C58  CFF6 FFE9          	movff	tblptrl,fsr0l
  2106   003C5C  CFF7 FFEA          	movff	tblptrh,fsr0h
  2107   003C60  50EF               	movf	indf0,w,c
  2108   003C62                     u6500:
  2109   003C62  6E1A               	movwf	lcd_8bit_send_char_data@data^0,c
  2110   003C64  ECF7  F01E         	call	_lcd_8bit_send_char_data	;wreg free
  2111   003C68  6E2D               	movwf	lcd_8bit_send_string_pos@ret^0,c
  2112   003C6A  4A2B               	infsnz	lcd_8bit_send_string_pos@str^0,f,c
  2113   003C6C  2A2C               	incf	(lcd_8bit_send_string_pos@str+1)^0,f,c
  2114   003C6E                     l7677:
  2115                           
  2116                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 280:         while(*str){
  2117   003C6E  C02B  FFF6         	movff	lcd_8bit_send_string_pos@str,tblptrl
  2118   003C72  C02C  FFF7         	movff	lcd_8bit_send_string_pos@str+1,tblptrh
  2119   003C76  0E00               	movlw	low (__smallconst shr (0+16))
  2120   003C78  6EF8               	movwf	tblptru,c
  2121   003C7A  0E0F               	movlw	(high __ramtop+-1)
  2122   003C7C  64F7               	cpfsgt	tblptrh,c
  2123   003C7E  D003               	bra	u6517
  2124   003C80  0008               	tblrd		*
  2125   003C82  50F5               	movf	tablat,w,c
  2126   003C84  D005               	bra	u6510
  2127   003C86                     u6517:
  2128   003C86  CFF6 FFE9          	movff	tblptrl,fsr0l
  2129   003C8A  CFF7 FFEA          	movff	tblptrh,fsr0h
  2130   003C8E  50EF               	movf	indf0,w,c
  2131   003C90                     u6510:
  2132   003C90  0900               	iorlw	0
  2133   003C92  A4D8               	btfss	status,2,c
  2134   003C94  EF4E  F01E         	goto	u6521
  2135   003C98  EF50  F01E         	goto	u6520
  2136   003C9C                     u6521:
  2137   003C9C  EF1C  F01E         	goto	l7673
  2138   003CA0                     u6520:
  2139   003CA0                     l7679:
  2140                           
  2141                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 286:     return ret;
  2142   003CA0  502D               	movf	lcd_8bit_send_string_pos@ret^0,w,c
  2143   003CA2  0012               	return		;funcret
  2144   003CA4                     __end_of_lcd_8bit_send_string_pos:
  2145                           	callstack 0
  2146                           
  2147 ;; *************** function _lcd_8bit_set_cursor *****************
  2148 ;; Defined at:
  2149 ;;		line 411 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;  lcd             2   32[COMRAM] PTR const struct .
  2152 ;;		 -> lcd_2(10), 
  2153 ;;  row             1   34[COMRAM] unsigned char 
  2154 ;;  coulmn          1   35[COMRAM] unsigned char 
  2155 ;; Auto vars:     Size  Location     Type
  2156 ;;  ret             1    0        unsigned char 
  2157 ;; Return value:  Size  Location     Type
  2158 ;;                  1    wreg      unsigned char 
  2159 ;; Registers used:
  2160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2161 ;; Tracked objects:
  2162 ;;		On entry : 0/0
  2163 ;;		On exit  : 0/0
  2164 ;;		Unchanged: 0/0
  2165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2166 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2168 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2169 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2170 ;;Total ram usage:        6 bytes
  2171 ;; Hardware stack levels used: 1
  2172 ;; Hardware stack levels required when called: 7
  2173 ;; This function calls:
  2174 ;;		_lcd_8bit_send_command
  2175 ;; This function is called by:
  2176 ;;		_lcd_8bit_send_string_pos
  2177 ;;		_lcd_8bit_send_char_data_pos
  2178 ;; This function uses a non-reentrant model
  2179 ;;
  2180                           
  2181                           	psect	text2
  2182   003D54                     __ptext2:
  2183                           	callstack 0
  2184   003D54                     _lcd_8bit_set_cursor:
  2185                           	callstack 22
  2186   003D54                     
  2187                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 413:     coulmn--;
  2188   003D54  0624               	decf	lcd_8bit_set_cursor@coulmn^0,f,c
  2189                           
  2190                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 414:     switch(row){
  2191   003D56  EFD9  F01E         	goto	l7495
  2192   003D5A                     l7487:
  2193   003D5A  C021  F018         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
  2194   003D5E  C022  F019         	movff	lcd_8bit_set_cursor@lcd+1,lcd_8bit_send_command@lcd+1
  2195   003D62  5024               	movf	lcd_8bit_set_cursor@coulmn^0,w,c
  2196   003D64  0F80               	addlw	128
  2197   003D66  6E1A               	movwf	lcd_8bit_send_command@command^0,c
  2198   003D68  EC3F  F01F         	call	_lcd_8bit_send_command	;wreg free
  2199   003D6C  EFF6  F01E         	goto	l215
  2200   003D70                     l7489:
  2201   003D70  C021  F018         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
  2202   003D74  C022  F019         	movff	lcd_8bit_set_cursor@lcd+1,lcd_8bit_send_command@lcd+1
  2203   003D78  5024               	movf	lcd_8bit_set_cursor@coulmn^0,w,c
  2204   003D7A  0FC0               	addlw	192
  2205   003D7C  6E1A               	movwf	lcd_8bit_send_command@command^0,c
  2206   003D7E  EC3F  F01F         	call	_lcd_8bit_send_command	;wreg free
  2207   003D82  EFF6  F01E         	goto	l215
  2208   003D86                     l7491:
  2209   003D86  C021  F018         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
  2210   003D8A  C022  F019         	movff	lcd_8bit_set_cursor@lcd+1,lcd_8bit_send_command@lcd+1
  2211   003D8E  5024               	movf	lcd_8bit_set_cursor@coulmn^0,w,c
  2212   003D90  0F94               	addlw	148
  2213   003D92  6E1A               	movwf	lcd_8bit_send_command@command^0,c
  2214   003D94  EC3F  F01F         	call	_lcd_8bit_send_command	;wreg free
  2215   003D98  EFF6  F01E         	goto	l215
  2216   003D9C                     l7493:
  2217   003D9C  C021  F018         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
  2218   003DA0  C022  F019         	movff	lcd_8bit_set_cursor@lcd+1,lcd_8bit_send_command@lcd+1
  2219   003DA4  5024               	movf	lcd_8bit_set_cursor@coulmn^0,w,c
  2220   003DA6  0FD4               	addlw	212
  2221   003DA8  6E1A               	movwf	lcd_8bit_send_command@command^0,c
  2222   003DAA  EC3F  F01F         	call	_lcd_8bit_send_command	;wreg free
  2223   003DAE  EFF6  F01E         	goto	l215
  2224   003DB2                     l7495:
  2225   003DB2  5023               	movf	lcd_8bit_set_cursor@row^0,w,c
  2226   003DB4  6E25               	movwf	??_lcd_8bit_set_cursor^0,c
  2227   003DB6  6A26               	clrf	(??_lcd_8bit_set_cursor+1)^0,c
  2228                           
  2229                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2230                           ; Switch size 1, requested type "simple"
  2231                           ; Number of cases is 1, Range of values is 0 to 0
  2232                           ; switch strategies available:
  2233                           ; Name         Instructions Cycles
  2234                           ; simple_byte            4     3 (average)
  2235                           ;	Chosen strategy is simple_byte
  2236   003DB8  5026               	movf	(??_lcd_8bit_set_cursor+1)^0,w,c
  2237   003DBA  0A00               	xorlw	0	; case 0
  2238   003DBC  B4D8               	btfsc	status,2,c
  2239   003DBE  EFE3  F01E         	goto	l10201
  2240   003DC2  EFF6  F01E         	goto	l215
  2241   003DC6                     l10201:
  2242                           
  2243                           ; Switch size 1, requested type "simple"
  2244                           ; Number of cases is 4, Range of values is 1 to 4
  2245                           ; switch strategies available:
  2246                           ; Name         Instructions Cycles
  2247                           ; simple_byte           13     7 (average)
  2248                           ;	Chosen strategy is simple_byte
  2249   003DC6  5025               	movf	??_lcd_8bit_set_cursor^0,w,c
  2250   003DC8  0A01               	xorlw	1	; case 1
  2251   003DCA  B4D8               	btfsc	status,2,c
  2252   003DCC  EFAD  F01E         	goto	l7487
  2253   003DD0  0A03               	xorlw	3	; case 2
  2254   003DD2  B4D8               	btfsc	status,2,c
  2255   003DD4  EFB8  F01E         	goto	l7489
  2256   003DD8  0A01               	xorlw	1	; case 3
  2257   003DDA  B4D8               	btfsc	status,2,c
  2258   003DDC  EFC3  F01E         	goto	l7491
  2259   003DE0  0A07               	xorlw	7	; case 4
  2260   003DE2  B4D8               	btfsc	status,2,c
  2261   003DE4  EFCE  F01E         	goto	l7493
  2262   003DE8  EFF6  F01E         	goto	l215
  2263   003DEC                     l215:
  2264   003DEC  0012               	return		;funcret
  2265   003DEE                     __end_of_lcd_8bit_set_cursor:
  2266                           	callstack 0
  2267                           
  2268 ;; *************** function _lcd_8bit_send_char_data *****************
  2269 ;; Defined at:
  2270 ;;		line 222 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  2271 ;; Parameters:    Size  Location     Type
  2272 ;;  lcd             2   23[COMRAM] PTR const struct .
  2273 ;;		 -> lcd_2(10), 
  2274 ;;  data            1   25[COMRAM] unsigned char 
  2275 ;; Auto vars:     Size  Location     Type
  2276 ;;  l_pins_count    1   31[COMRAM] unsigned char 
  2277 ;;  ret             1   30[COMRAM] unsigned char 
  2278 ;; Return value:  Size  Location     Type
  2279 ;;                  1    wreg      unsigned char 
  2280 ;; Registers used:
  2281 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2282 ;; Tracked objects:
  2283 ;;		On entry : 0/0
  2284 ;;		On exit  : 0/0
  2285 ;;		Unchanged: 0/0
  2286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2287 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2288 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2289 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2290 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2291 ;;Total ram usage:        9 bytes
  2292 ;; Hardware stack levels used: 1
  2293 ;; Hardware stack levels required when called: 6
  2294 ;; This function calls:
  2295 ;;		_gpio_pin_write_logic
  2296 ;;		_lcd_8bit_send_enable_signal
  2297 ;; This function is called by:
  2298 ;;		_lcd_8bit_send_string_pos
  2299 ;;		_lcd_8bit_send_char_data_pos
  2300 ;;		_lcd_8bit_send_string
  2301 ;;		_lcd_8bit_send_custom_char
  2302 ;; This function uses a non-reentrant model
  2303 ;;
  2304                           
  2305                           	psect	text3
  2306   003DEE                     __ptext3:
  2307                           	callstack 0
  2308   003DEE                     _lcd_8bit_send_char_data:
  2309                           	callstack 23
  2310   003DEE                     
  2311                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 224:     uint8 l_pins_counter= 0;
  2312   003DEE  0E00               	movlw	0
  2313   003DF0  6E20               	movwf	lcd_8bit_send_char_data@l_pins_counter^0,c
  2314   003DF2                     
  2315                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 225:     if(((void*)0) == lcd){
  2316   003DF2  5018               	movf	lcd_8bit_send_char_data@lcd^0,w,c
  2317   003DF4  1019               	iorwf	(lcd_8bit_send_char_data@lcd+1)^0,w,c
  2318   003DF6  A4D8               	btfss	status,2,c
  2319   003DF8  EF00  F01F         	goto	u6281
  2320   003DFC  EF02  F01F         	goto	u6280
  2321   003E00                     u6281:
  2322   003E00  EF06  F01F         	goto	l7463
  2323   003E04                     u6280:
  2324   003E04                     
  2325                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 226:         ret=(Std_ReturnType)0x01;
  2326   003E04  0E01               	movlw	1
  2327   003E06  6E1F               	movwf	lcd_8bit_send_char_data@ret^0,c
  2328                           
  2329                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 227:     }
  2330   003E08  EF3D  F01F         	goto	l7479
  2331   003E0C                     l7463:
  2332   003E0C  C018  F00C         	movff	lcd_8bit_send_char_data@lcd,gpio_pin_write_logic@_pin_config
  2333   003E10  C019  F00D         	movff	lcd_8bit_send_char_data@lcd+1,gpio_pin_write_logic@_pin_config+1
  2334   003E14  0E01               	movlw	1
  2335   003E16  6E0E               	movwf	gpio_pin_write_logic@logic^0,c
  2336   003E18  ECAD  F019         	call	_gpio_pin_write_logic	;wreg free
  2337   003E1C                     
  2338                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 230:         for(l_pins_counter=0;l_pins_counter<8; ++
      +                          l_pins_counter){
  2339   003E1C  0E00               	movlw	0
  2340   003E1E  6E20               	movwf	lcd_8bit_send_char_data@l_pins_counter^0,c
  2341   003E20                     l7471:
  2342   003E20  5020               	movf	lcd_8bit_send_char_data@l_pins_counter^0,w,c
  2343   003E22  2418               	addwf	lcd_8bit_send_char_data@lcd^0,w,c
  2344   003E24  6E1B               	movwf	??_lcd_8bit_send_char_data^0,c
  2345   003E26  0E00               	movlw	0
  2346   003E28  2019               	addwfc	(lcd_8bit_send_char_data@lcd+1)^0,w,c
  2347   003E2A  6E1C               	movwf	(??_lcd_8bit_send_char_data+1)^0,c
  2348   003E2C  0E02               	movlw	2
  2349   003E2E  241B               	addwf	??_lcd_8bit_send_char_data^0,w,c
  2350   003E30  6E0C               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2351   003E32  0E00               	movlw	0
  2352   003E34  201C               	addwfc	(??_lcd_8bit_send_char_data+1)^0,w,c
  2353   003E36  6E0D               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2354   003E38  C020  F01D         	movff	lcd_8bit_send_char_data@l_pins_counter,??_lcd_8bit_send_char_data+2
  2355   003E3C  C01A  F01E         	movff	lcd_8bit_send_char_data@data,??_lcd_8bit_send_char_data+3
  2356   003E40  2A1D               	incf	(??_lcd_8bit_send_char_data+2)^0,f,c
  2357   003E42  EF25  F01F         	goto	u6294
  2358   003E46                     u6295:
  2359   003E46  90D8               	bcf	status,0,c
  2360   003E48  321E               	rrcf	(??_lcd_8bit_send_char_data+3)^0,f,c
  2361   003E4A                     u6294:
  2362   003E4A  2E1D               	decfsz	(??_lcd_8bit_send_char_data+2)^0,f,c
  2363   003E4C  EF23  F01F         	goto	u6295
  2364   003E50  501E               	movf	(??_lcd_8bit_send_char_data+3)^0,w,c
  2365   003E52  0B01               	andlw	1
  2366   003E54  6E0E               	movwf	gpio_pin_write_logic@logic^0,c
  2367   003E56  ECAD  F019         	call	_gpio_pin_write_logic	;wreg free
  2368   003E5A                     
  2369                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 233:         }
  2370   003E5A  2A20               	incf	lcd_8bit_send_char_data@l_pins_counter^0,f,c
  2371   003E5C  0E07               	movlw	7
  2372   003E5E  6420               	cpfsgt	lcd_8bit_send_char_data@l_pins_counter^0,c
  2373   003E60  EF34  F01F         	goto	u6301
  2374   003E64  EF36  F01F         	goto	u6300
  2375   003E68                     u6301:
  2376   003E68  EF10  F01F         	goto	l7471
  2377   003E6C                     u6300:
  2378   003E6C                     
  2379                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 234:         ret=lcd_8bit_send_enable_signal(lcd);
  2380   003E6C  C018  F015         	movff	lcd_8bit_send_char_data@lcd,lcd_8bit_send_enable_signal@lcd
  2381   003E70  C019  F016         	movff	lcd_8bit_send_char_data@lcd+1,lcd_8bit_send_enable_signal@lcd+1
  2382   003E74  ECE0  F022         	call	_lcd_8bit_send_enable_signal	;wreg free
  2383   003E78  6E1F               	movwf	lcd_8bit_send_char_data@ret^0,c
  2384   003E7A                     l7479:
  2385                           
  2386                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 238:     return ret;
  2387   003E7A  501F               	movf	lcd_8bit_send_char_data@ret^0,w,c
  2388   003E7C  0012               	return		;funcret
  2389   003E7E                     __end_of_lcd_8bit_send_char_data:
  2390                           	callstack 0
  2391                           
  2392 ;; *************** function _dc_motor_stop *****************
  2393 ;; Defined at:
  2394 ;;		line 86 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
  2395 ;; Parameters:    Size  Location     Type
  2396 ;;  _motor          2   20[COMRAM] PTR const struct .
  2397 ;;		 -> dc_motor2(2), dc_motor1(2), 
  2398 ;; Auto vars:     Size  Location     Type
  2399 ;;  ret             1    0        unsigned char 
  2400 ;; Return value:  Size  Location     Type
  2401 ;;                  1    wreg      unsigned char 
  2402 ;; Registers used:
  2403 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2404 ;; Tracked objects:
  2405 ;;		On entry : 0/0
  2406 ;;		On exit  : 0/0
  2407 ;;		Unchanged: 0/0
  2408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2409 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2412 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2413 ;;Total ram usage:        2 bytes
  2414 ;; Hardware stack levels used: 1
  2415 ;; Hardware stack levels required when called: 5
  2416 ;; This function calls:
  2417 ;;		_gpio_pin_write_logic
  2418 ;; This function is called by:
  2419 ;;		_main
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           
  2423                           	psect	text4
  2424   00449C                     __ptext4:
  2425                           	callstack 0
  2426   00449C                     _dc_motor_stop:
  2427                           	callstack 25
  2428   00449C                     
  2429                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 88:     if(((void*)0)== _motor){
  2430   00449C  5015               	movf	dc_motor_stop@_motor^0,w,c
  2431   00449E  1016               	iorwf	(dc_motor_stop@_motor+1)^0,w,c
  2432   0044A0  A4D8               	btfss	status,2,c
  2433   0044A2  EF55  F022         	goto	u6571
  2434   0044A6  EF57  F022         	goto	u6570
  2435   0044AA                     u6571:
  2436   0044AA  EF59  F022         	goto	l7727
  2437   0044AE                     u6570:
  2438   0044AE                     
  2439                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 90:     }
  2440   0044AE  EF6B  F022         	goto	l7729
  2441   0044B2                     l7727:
  2442                           
  2443                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 92:         gpio_pin_write_logic(&(_motor->dc_motor_
      +                          pin[0x00U]),GPIO_LOW);
  2444   0044B2  C015  F00C         	movff	dc_motor_stop@_motor,gpio_pin_write_logic@_pin_config
  2445   0044B6  C016  F00D         	movff	dc_motor_stop@_motor+1,gpio_pin_write_logic@_pin_config+1
  2446   0044BA  0E00               	movlw	0
  2447   0044BC  6E0E               	movwf	gpio_pin_write_logic@logic^0,c
  2448   0044BE  ECAD  F019         	call	_gpio_pin_write_logic	;wreg free
  2449                           
  2450                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 93:         gpio_pin_write_logic(&(_motor->dc_motor_
      +                          pin[0x01U]),GPIO_LOW);
  2451   0044C2  0E01               	movlw	1
  2452   0044C4  2415               	addwf	dc_motor_stop@_motor^0,w,c
  2453   0044C6  6E0C               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2454   0044C8  0E00               	movlw	0
  2455   0044CA  2016               	addwfc	(dc_motor_stop@_motor+1)^0,w,c
  2456   0044CC  6E0D               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2457   0044CE  0E00               	movlw	0
  2458   0044D0  6E0E               	movwf	gpio_pin_write_logic@logic^0,c
  2459   0044D2  ECAD  F019         	call	_gpio_pin_write_logic	;wreg free
  2460   0044D6                     l7729:
  2461                           
  2462                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 97:     return ret;
  2463   0044D6  0E01               	movlw	1
  2464   0044D8  0012               	return		;funcret
  2465   0044DA                     __end_of_dc_motor_stop:
  2466                           	callstack 0
  2467                           
  2468 ;; *************** function _dc_motor_move_right *****************
  2469 ;; Defined at:
  2470 ;;		line 39 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
  2471 ;; Parameters:    Size  Location     Type
  2472 ;;  _motor          2   20[COMRAM] PTR const struct .
  2473 ;;		 -> dc_motor2(2), dc_motor1(2), 
  2474 ;; Auto vars:     Size  Location     Type
  2475 ;;  ret             1    0        unsigned char 
  2476 ;; Return value:  Size  Location     Type
  2477 ;;                  1    wreg      unsigned char 
  2478 ;; Registers used:
  2479 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2480 ;; Tracked objects:
  2481 ;;		On entry : 0/0
  2482 ;;		On exit  : 0/0
  2483 ;;		Unchanged: 0/0
  2484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2485 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2488 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2489 ;;Total ram usage:        2 bytes
  2490 ;; Hardware stack levels used: 1
  2491 ;; Hardware stack levels required when called: 5
  2492 ;; This function calls:
  2493 ;;		_gpio_pin_write_logic
  2494 ;; This function is called by:
  2495 ;;		_main
  2496 ;; This function uses a non-reentrant model
  2497 ;;
  2498                           
  2499                           	psect	text5
  2500   0044DA                     __ptext5:
  2501                           	callstack 0
  2502   0044DA                     _dc_motor_move_right:
  2503                           	callstack 25
  2504   0044DA                     
  2505                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 41:     if(((void*)0)== _motor){
  2506   0044DA  5015               	movf	dc_motor_move_right@_motor^0,w,c
  2507   0044DC  1016               	iorwf	(dc_motor_move_right@_motor+1)^0,w,c
  2508   0044DE  A4D8               	btfss	status,2,c
  2509   0044E0  EF74  F022         	goto	u6561
  2510   0044E4  EF76  F022         	goto	u6560
  2511   0044E8                     u6561:
  2512   0044E8  EF78  F022         	goto	l7715
  2513   0044EC                     u6560:
  2514   0044EC                     
  2515                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 43:     }
  2516   0044EC  EF8A  F022         	goto	l7717
  2517   0044F0                     l7715:
  2518                           
  2519                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 45:         gpio_pin_write_logic(&(_motor->dc_motor_
      +                          pin[0x00U]),GPIO_HIGH);
  2520   0044F0  C015  F00C         	movff	dc_motor_move_right@_motor,gpio_pin_write_logic@_pin_config
  2521   0044F4  C016  F00D         	movff	dc_motor_move_right@_motor+1,gpio_pin_write_logic@_pin_config+1
  2522   0044F8  0E01               	movlw	1
  2523   0044FA  6E0E               	movwf	gpio_pin_write_logic@logic^0,c
  2524   0044FC  ECAD  F019         	call	_gpio_pin_write_logic	;wreg free
  2525                           
  2526                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 46:         gpio_pin_write_logic(&(_motor->dc_motor_
      +                          pin[0x01U]),GPIO_LOW);
  2527   004500  0E01               	movlw	1
  2528   004502  2415               	addwf	dc_motor_move_right@_motor^0,w,c
  2529   004504  6E0C               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2530   004506  0E00               	movlw	0
  2531   004508  2016               	addwfc	(dc_motor_move_right@_motor+1)^0,w,c
  2532   00450A  6E0D               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2533   00450C  0E00               	movlw	0
  2534   00450E  6E0E               	movwf	gpio_pin_write_logic@logic^0,c
  2535   004510  ECAD  F019         	call	_gpio_pin_write_logic	;wreg free
  2536   004514                     l7717:
  2537                           
  2538                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 50:     return ret;
  2539   004514  0E01               	movlw	1
  2540   004516  0012               	return		;funcret
  2541   004518                     __end_of_dc_motor_move_right:
  2542                           	callstack 0
  2543                           
  2544 ;; *************** function _convert_uint16_to_string *****************
  2545 ;; Defined at:
  2546 ;;		line 334 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  2547 ;; Parameters:    Size  Location     Type
  2548 ;;  value           2    0[BANK1 ] unsigned short 
  2549 ;;  str             2    2[BANK1 ] PTR unsigned char 
  2550 ;;		 -> adc_lm35_1_txt(7), 
  2551 ;; Auto vars:     Size  Location     Type
  2552 ;;  Temp_String     6    4[BANK1 ] unsigned char [6]
  2553 ;;  DataCounter     1   11[BANK1 ] unsigned char 
  2554 ;;  ret             1   10[BANK1 ] unsigned char 
  2555 ;; Return value:  Size  Location     Type
  2556 ;;                  1    wreg      unsigned char 
  2557 ;; Registers used:
  2558 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2559 ;; Tracked objects:
  2560 ;;		On entry : 0/0
  2561 ;;		On exit  : 0/0
  2562 ;;		Unchanged: 0/0
  2563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2564 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2565 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2567 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2568 ;;Total ram usage:       12 bytes
  2569 ;; Hardware stack levels used: 1
  2570 ;; Hardware stack levels required when called: 12
  2571 ;; This function calls:
  2572 ;;		_memset
  2573 ;;		_sprintf
  2574 ;; This function is called by:
  2575 ;;		_main
  2576 ;; This function uses a non-reentrant model
  2577 ;;
  2578                           
  2579                           	psect	text6
  2580   003A7A                     __ptext6:
  2581                           	callstack 0
  2582   003A7A                     _convert_uint16_to_string:
  2583                           	callstack 18
  2584   003A7A                     
  2585                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 335:     Std_ReturnType ret=(Std_ReturnType)0x01;
  2586   003A7A  0E01               	movlw	1
  2587   003A7C  0101               	movlb	1	; () banked
  2588   003A7E  6F86               	movwf	convert_uint16_to_string@ret& (0+255),b
  2589   003A80                     
  2590                           ; BSR set to: 1
  2591                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 336:     uint8 Temp_String[6]={0};
  2592   003A80  EE21  F080         	lfsr	2,convert_uint16_to_string@Temp_String
  2593   003A84  0E05               	movlw	5
  2594   003A86                     u9241:
  2595   003A86  6ADE               	clrf	postinc2,c
  2596   003A88  06E8               	decf	wreg,f,c
  2597   003A8A  E2FD               	bc	u9241
  2598   003A8C                     
  2599                           ; BSR set to: 1
  2600                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 337:     uint8 DataCounter=0;
  2601   003A8C  0E00               	movlw	0
  2602   003A8E  6F87               	movwf	convert_uint16_to_string@DataCounter& (0+255),b
  2603   003A90                     
  2604                           ; BSR set to: 1
  2605                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 338:     if(((void*)0) == str){
  2606   003A90  517E               	movf	convert_uint16_to_string@str& (0+255),w,b
  2607   003A92  117F               	iorwf	(convert_uint16_to_string@str+1)& (0+255),w,b
  2608   003A94  A4D8               	btfss	status,2,c
  2609   003A96  EF4F  F01D         	goto	u9251
  2610   003A9A  EF51  F01D         	goto	u9250
  2611   003A9E                     u9251:
  2612   003A9E  EF55  F01D         	goto	l9955
  2613   003AA2                     u9250:
  2614   003AA2                     
  2615                           ; BSR set to: 1
  2616                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 339:         ret=(Std_ReturnType)0x01;
  2617   003AA2  0E01               	movlw	1
  2618   003AA4  6F86               	movwf	convert_uint16_to_string@ret& (0+255),b
  2619                           
  2620                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 340:     }
  2621   003AA6  EF99  F01D         	goto	l9967
  2622   003AAA                     l9955:
  2623                           
  2624                           ; BSR set to: 1
  2625                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 342:         memset(str,' ',5);
  2626   003AAA  C17E  F00C         	movff	convert_uint16_to_string@str,memset@dest
  2627   003AAE  C17F  F00D         	movff	convert_uint16_to_string@str+1,memset@dest+1
  2628   003AB2  0E00               	movlw	0
  2629   003AB4  6E0F               	movwf	(memset@c+1)^0,c
  2630   003AB6  0E20               	movlw	32
  2631   003AB8  6E0E               	movwf	memset@c^0,c
  2632   003ABA  0E00               	movlw	0
  2633   003ABC  6E11               	movwf	(memset@n+1)^0,c
  2634   003ABE  0E05               	movlw	5
  2635   003AC0  6E10               	movwf	memset@n^0,c
  2636   003AC2  EC28  F017         	call	_memset	;wreg free
  2637   003AC6                     
  2638                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 343:         str[5]='\0';
  2639   003AC6  0101               	movlb	1	; () banked
  2640   003AC8  EE20 F005          	lfsr	2,5
  2641   003ACC  517E               	movf	convert_uint16_to_string@str& (0+255),w,b
  2642   003ACE  26D9               	addwf	fsr2l,f,c
  2643   003AD0  517F               	movf	(convert_uint16_to_string@str+1)& (0+255),w,b
  2644   003AD2  22DA               	addwfc	fsr2h,f,c
  2645   003AD4  6ADF               	clrf	indf2,c
  2646   003AD6                     
  2647                           ; BSR set to: 1
  2648                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 344:         sprintf((char *)Temp_String,"%i",value);
  2649   003AD6  0E80               	movlw	low convert_uint16_to_string@Temp_String
  2650   003AD8  6E4A               	movwf	sprintf@s^0,c
  2651   003ADA  0E01               	movlw	high convert_uint16_to_string@Temp_String
  2652   003ADC  6E4B               	movwf	(sprintf@s+1)^0,c
  2653   003ADE  0E59               	movlw	low STR_1
  2654   003AE0  6E4C               	movwf	sprintf@fmt^0,c
  2655   003AE2  0E10               	movlw	high STR_1
  2656   003AE4  6E4D               	movwf	(sprintf@fmt+1)^0,c
  2657   003AE6  C17C  F04E         	movff	convert_uint16_to_string@value,?_sprintf+4
  2658   003AEA  C17D  F04F         	movff	convert_uint16_to_string@value+1,?_sprintf+5
  2659   003AEE  EC59  F021         	call	_sprintf	;wreg free
  2660                           
  2661                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 345:         while(Temp_String[DataCounter] != '\0'){
  2662   003AF2  EF8A  F01D         	goto	l9965
  2663   003AF6                     l9961:
  2664                           
  2665                           ; BSR set to: 1
  2666                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 346:             str[DataCounter]=Temp_String[DataCoun
      +                          ter];
  2667   003AF6  0E80               	movlw	low convert_uint16_to_string@Temp_String
  2668   003AF8  2587               	addwf	convert_uint16_to_string@DataCounter& (0+255),w,b
  2669   003AFA  6ED9               	movwf	fsr2l,c
  2670   003AFC  6ADA               	clrf	fsr2h,c
  2671   003AFE  0E01               	movlw	high convert_uint16_to_string@Temp_String
  2672   003B00  22DA               	addwfc	fsr2h,f,c
  2673   003B02  5187               	movf	convert_uint16_to_string@DataCounter& (0+255),w,b
  2674   003B04  257E               	addwf	convert_uint16_to_string@str& (0+255),w,b
  2675   003B06  6EE1               	movwf	fsr1l,c
  2676   003B08  0E00               	movlw	0
  2677   003B0A  217F               	addwfc	(convert_uint16_to_string@str+1)& (0+255),w,b
  2678   003B0C  6EE2               	movwf	fsr1h,c
  2679   003B0E  CFDF FFE7          	movff	indf2,indf1
  2680   003B12                     
  2681                           ; BSR set to: 1
  2682                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 347:             DataCounter++;
  2683   003B12  2B87               	incf	convert_uint16_to_string@DataCounter& (0+255),f,b
  2684   003B14                     l9965:
  2685                           
  2686                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 345:         while(Temp_String[DataCounter] != '\0'){
  2687   003B14  0E80               	movlw	low convert_uint16_to_string@Temp_String
  2688   003B16  0101               	movlb	1	; () banked
  2689   003B18  2587               	addwf	convert_uint16_to_string@DataCounter& (0+255),w,b
  2690   003B1A  6ED9               	movwf	fsr2l,c
  2691   003B1C  6ADA               	clrf	fsr2h,c
  2692   003B1E  0E01               	movlw	high convert_uint16_to_string@Temp_String
  2693   003B20  22DA               	addwfc	fsr2h,f,c
  2694   003B22  50DF               	movf	indf2,w,c
  2695   003B24  A4D8               	btfss	status,2,c
  2696   003B26  EF97  F01D         	goto	u9261
  2697   003B2A  EF99  F01D         	goto	u9260
  2698   003B2E                     u9261:
  2699   003B2E  EF7B  F01D         	goto	l9961
  2700   003B32                     u9260:
  2701   003B32                     l9967:
  2702                           
  2703                           ; BSR set to: 1
  2704                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 352:     return ret;
  2705   003B32  5186               	movf	convert_uint16_to_string@ret& (0+255),w,b
  2706   003B34                     
  2707                           ; BSR set to: 1
  2708   003B34  0012               	return		;funcret
  2709   003B36                     __end_of_convert_uint16_to_string:
  2710                           	callstack 0
  2711                           
  2712 ;; *************** function _sprintf *****************
  2713 ;; Defined at:
  2714 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
  2715 ;; Parameters:    Size  Location     Type
  2716 ;;  s               2   73[COMRAM] PTR unsigned char 
  2717 ;;		 -> convert_uint32_to_string@Temp_String(11), convert_uint16_to_string@Temp_String(6), convert_uint8_to_string@Temp_
      +String(4), 
  2718 ;;  fmt             2   75[COMRAM] PTR const unsigned char 
  2719 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2720 ;; Auto vars:     Size  Location     Type
  2721 ;;  f              12   81[COMRAM] struct _IO_FILE
  2722 ;;  ap              2   79[COMRAM] PTR void [1]
  2723 ;;		 -> ?_sprintf(2), 
  2724 ;;  ret             2    0        int 
  2725 ;; Return value:  Size  Location     Type
  2726 ;;                  2   73[COMRAM] int 
  2727 ;; Registers used:
  2728 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2729 ;; Tracked objects:
  2730 ;;		On entry : 0/0
  2731 ;;		On exit  : 0/0
  2732 ;;		Unchanged: 0/0
  2733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2734 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2735 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2737 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2738 ;;Total ram usage:       20 bytes
  2739 ;; Hardware stack levels used: 1
  2740 ;; Hardware stack levels required when called: 11
  2741 ;; This function calls:
  2742 ;;		_vfprintf
  2743 ;; This function is called by:
  2744 ;;		_convert_uint16_to_string
  2745 ;;		_convert_uint8_to_string
  2746 ;;		_convert_uint32_to_string
  2747 ;; This function uses a non-reentrant model
  2748 ;;
  2749                           
  2750                           	psect	text7
  2751   0042B2                     __ptext7:
  2752                           	callstack 0
  2753   0042B2                     _sprintf:
  2754                           	callstack 18
  2755   0042B2  0E4E               	movlw	low (?_sprintf+4)
  2756   0042B4  6E50               	movwf	sprintf@ap^0,c
  2757   0042B6  0E00               	movlw	high (?_sprintf+4)
  2758   0042B8  6E51               	movwf	(sprintf@ap+1)^0,c
  2759   0042BA  C04A  F052         	movff	sprintf@s,sprintf@f
  2760   0042BE  C04B  F053         	movff	sprintf@s+1,sprintf@f+1
  2761   0042C2  0E00               	movlw	0
  2762   0042C4  6E56               	movwf	(sprintf@f+4)^0,c
  2763   0042C6  0E00               	movlw	0
  2764   0042C8  6E55               	movwf	(sprintf@f+3)^0,c
  2765   0042CA  0E00               	movlw	0
  2766   0042CC  6E5D               	movwf	(sprintf@f+11)^0,c
  2767   0042CE  0E00               	movlw	0
  2768   0042D0  6E5C               	movwf	(sprintf@f+10)^0,c
  2769   0042D2  0E52               	movlw	low sprintf@f
  2770   0042D4  6E42               	movwf	vfprintf@fp^0,c
  2771   0042D6  0E00               	movlw	high sprintf@f
  2772   0042D8  6E43               	movwf	(vfprintf@fp+1)^0,c
  2773   0042DA  C04C  F044         	movff	sprintf@fmt,vfprintf@fmt
  2774   0042DE  C04D  F045         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2775   0042E2  0E50               	movlw	low sprintf@ap
  2776   0042E4  6E46               	movwf	vfprintf@ap^0,c
  2777   0042E6  0E00               	movlw	high sprintf@ap
  2778   0042E8  6E47               	movwf	(vfprintf@ap+1)^0,c
  2779   0042EA  EC31  F021         	call	_vfprintf	;wreg free
  2780   0042EE  5055               	movf	(sprintf@f+3)^0,w,c
  2781   0042F0  244A               	addwf	sprintf@s^0,w,c
  2782   0042F2  6ED9               	movwf	fsr2l,c
  2783   0042F4  5056               	movf	(sprintf@f+4)^0,w,c
  2784   0042F6  204B               	addwfc	(sprintf@s+1)^0,w,c
  2785   0042F8  6EDA               	movwf	fsr2h,c
  2786   0042FA  6ADF               	clrf	indf2,c
  2787   0042FC  0012               	return		;funcret
  2788   0042FE                     __end_of_sprintf:
  2789                           	callstack 0
  2790                           
  2791 ;; *************** function _vfprintf *****************
  2792 ;; Defined at:
  2793 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2794 ;; Parameters:    Size  Location     Type
  2795 ;;  fp              2   65[COMRAM] PTR struct _IO_FILE
  2796 ;;		 -> sprintf@f(12), 
  2797 ;;  fmt             2   67[COMRAM] PTR const unsigned char 
  2798 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2799 ;;  ap              2   69[COMRAM] PTR PTR void 
  2800 ;;		 -> sprintf@ap(2), 
  2801 ;; Auto vars:     Size  Location     Type
  2802 ;;  cfmt            2   71[COMRAM] PTR unsigned char 
  2803 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2804 ;; Return value:  Size  Location     Type
  2805 ;;                  2   65[COMRAM] int 
  2806 ;; Registers used:
  2807 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2808 ;; Tracked objects:
  2809 ;;		On entry : 0/0
  2810 ;;		On exit  : 0/0
  2811 ;;		Unchanged: 0/0
  2812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2813 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2814 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2816 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2817 ;;Total ram usage:        8 bytes
  2818 ;; Hardware stack levels used: 1
  2819 ;; Hardware stack levels required when called: 10
  2820 ;; This function calls:
  2821 ;;		_vfpfcnvrt
  2822 ;; This function is called by:
  2823 ;;		_sprintf
  2824 ;; This function uses a non-reentrant model
  2825 ;;
  2826                           
  2827                           	psect	text8
  2828   004262                     __ptext8:
  2829                           	callstack 0
  2830   004262                     _vfprintf:
  2831                           	callstack 18
  2832   004262                     
  2833                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  2834   004262  C044  F048         	movff	vfprintf@fmt,vfprintf@cfmt
  2835   004266  C045  F049         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2836                           
  2837                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2838   00426A  EF45  F021         	goto	l9895
  2839   00426E                     l9893:
  2840                           
  2841                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2842   00426E  C042  F034         	movff	vfprintf@fp,vfpfcnvrt@fp
  2843   004272  C043  F035         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2844   004276  0E48               	movlw	low vfprintf@cfmt
  2845   004278  6E36               	movwf	vfpfcnvrt@fmt^0,c
  2846   00427A  0E00               	movlw	high vfprintf@cfmt
  2847   00427C  6E37               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2848   00427E  C046  F038         	movff	vfprintf@ap,vfpfcnvrt@ap
  2849   004282  C047  F039         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2850   004286  EC81  F018         	call	_vfpfcnvrt	;wreg free
  2851   00428A                     l9895:
  2852                           
  2853                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2854   00428A  C048  FFF6         	movff	vfprintf@cfmt,tblptrl
  2855   00428E  C049  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2856   004292                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2857   004292  6AF8               	clrf	tblptru,c
  2858   004294                     	endif
  2859   004294                     	if	0	;tblptru may be non-zero
  2860   004294                     	endif
  2861   004294  0008               	tblrd		*
  2862   004296  50F5               	movf	tablat,w,c
  2863   004298  0900               	iorlw	0
  2864   00429A  A4D8               	btfss	status,2,c
  2865   00429C  EF52  F021         	goto	u9181
  2866   0042A0  EF54  F021         	goto	u9180
  2867   0042A4                     u9181:
  2868   0042A4  EF37  F021         	goto	l9893
  2869   0042A8                     u9180:
  2870   0042A8                     
  2871                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  2872   0042A8  0E00               	movlw	0
  2873   0042AA  6E43               	movwf	(?_vfprintf+1)^0,c
  2874   0042AC  0E00               	movlw	0
  2875   0042AE  6E42               	movwf	?_vfprintf^0,c
  2876   0042B0  0012               	return		;funcret
  2877   0042B2                     __end_of_vfprintf:
  2878                           	callstack 0
  2879                           
  2880 ;; *************** function _vfpfcnvrt *****************
  2881 ;; Defined at:
  2882 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2883 ;; Parameters:    Size  Location     Type
  2884 ;;  fp              2   51[COMRAM] PTR struct _IO_FILE
  2885 ;;		 -> sprintf@f(12), 
  2886 ;;  fmt             2   53[COMRAM] PTR PTR unsigned char 
  2887 ;;		 -> vfprintf@cfmt(2), 
  2888 ;;  ap              2   55[COMRAM] PTR PTR void 
  2889 ;;		 -> sprintf@ap(2), 
  2890 ;; Auto vars:     Size  Location     Type
  2891 ;;  convarg         4   59[COMRAM] struct .
  2892 ;;  cp              2   63[COMRAM] PTR unsigned char 
  2893 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2894 ;;  i               2    0        int 
  2895 ;;  done            2    0        int 
  2896 ;;  c               1    0        unsigned char 
  2897 ;; Return value:  Size  Location     Type
  2898 ;;                  1    wreg      void 
  2899 ;; Registers used:
  2900 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2901 ;; Tracked objects:
  2902 ;;		On entry : 0/0
  2903 ;;		On exit  : 0/0
  2904 ;;		Unchanged: 0/0
  2905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2906 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2907 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2908 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2909 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2910 ;;Total ram usage:       14 bytes
  2911 ;; Hardware stack levels used: 1
  2912 ;; Hardware stack levels required when called: 9
  2913 ;; This function calls:
  2914 ;;		_dtoa
  2915 ;;		_fputc
  2916 ;; This function is called by:
  2917 ;;		_vfprintf
  2918 ;; This function uses a non-reentrant model
  2919 ;;
  2920                           
  2921                           	psect	text9
  2922   003102                     __ptext9:
  2923                           	callstack 0
  2924   003102                     _vfpfcnvrt:
  2925                           	callstack 18
  2926   003102                     
  2927                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  2928   003102  C036  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2929   003106  C037  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2930   00310A  CFDE FFF6          	movff	postinc2,tblptrl
  2931   00310E  CFDD FFF7          	movff	postdec2,tblptrh
  2932   003112                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2933   003112  6AF8               	clrf	tblptru,c
  2934   003114                     	endif
  2935   003114                     	if	0	;tblptru may be non-zero
  2936   003114                     	endif
  2937   003114  0008               	tblrd		*
  2938   003116  50F5               	movf	tablat,w,c
  2939   003118  0A25               	xorlw	37
  2940   00311A  A4D8               	btfss	status,2,c
  2941   00311C  EF92  F018         	goto	u9151
  2942   003120  EF94  F018         	goto	u9150
  2943   003124                     u9151:
  2944   003124  EF01  F019         	goto	l9885
  2945   003128                     u9150:
  2946   003128                     
  2947                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  2948   003128  C036  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2949   00312C  C037  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2950   003130  2ADE               	incf	postinc2,f,c
  2951   003132  0E00               	movlw	0
  2952   003134  22DD               	addwfc	postdec2,f,c
  2953   003136                     
  2954                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  2955   003136  0E00               	movlw	0
  2956   003138  0100               	movlb	0	; () banked
  2957   00313A  6F87               	movwf	(_width+1)& (0+255),b
  2958   00313C  0E00               	movlw	0
  2959   00313E  6F86               	movwf	_width& (0+255),b
  2960   003140  C086  F0C4         	movff	_width,_flags
  2961   003144                     
  2962                           ; BSR set to: 0
  2963                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  2964   003144  6988               	setf	_prec& (0+255),b
  2965   003146  6989               	setf	(_prec+1)& (0+255),b
  2966   003148                     
  2967                           ; BSR set to: 0
  2968                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  2969   003148  C036  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2970   00314C  C037  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2971   003150  CFDE F040          	movff	postinc2,vfpfcnvrt@cp
  2972   003154  CFDD F041          	movff	postdec2,vfpfcnvrt@cp+1
  2973   003158                     
  2974                           ; BSR set to: 0
  2975                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2976   003158  C040  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2977   00315C  C041  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2978   003160                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2979   003160  6AF8               	clrf	tblptru,c
  2980   003162                     	endif
  2981   003162                     	if	0	;tblptru may be non-zero
  2982   003162                     	endif
  2983   003162  0008               	tblrd		*
  2984   003164  50F5               	movf	tablat,w,c
  2985   003166  0A64               	xorlw	100
  2986   003168  B4D8               	btfsc	status,2,c
  2987   00316A  EFB9  F018         	goto	u9161
  2988   00316E  EFBB  F018         	goto	u9160
  2989   003172                     u9161:
  2990   003172  EFCA  F018         	goto	l9875
  2991   003176                     u9160:
  2992   003176                     
  2993                           ; BSR set to: 0
  2994   003176  C040  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2995   00317A  C041  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2996   00317E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2997   00317E  6AF8               	clrf	tblptru,c
  2998   003180                     	endif
  2999   003180                     	if	0	;tblptru may be non-zero
  3000   003180                     	endif
  3001   003180  0008               	tblrd		*
  3002   003182  50F5               	movf	tablat,w,c
  3003   003184  0A69               	xorlw	105
  3004   003186  A4D8               	btfss	status,2,c
  3005   003188  EFC8  F018         	goto	u9171
  3006   00318C  EFCA  F018         	goto	u9170
  3007   003190                     u9171:
  3008   003190  EFF8  F018         	goto	l9881
  3009   003194                     u9170:
  3010   003194                     l9875:
  3011                           
  3012                           ; BSR set to: 0
  3013                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1256:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3014   003194  C038  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3015   003198  C039  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3016   00319C  CFDF F03A          	movff	indf2,??_vfpfcnvrt
  3017   0031A0  0E02               	movlw	2
  3018   0031A2  26DE               	addwf	postinc2,f,c
  3019   0031A4  CFDF F03B          	movff	indf2,??_vfpfcnvrt+1
  3020   0031A8  0E00               	movlw	0
  3021   0031AA  22DD               	addwfc	postdec2,f,c
  3022   0031AC  C03A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3023   0031B0  C03B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3024   0031B4  CFDE F03C          	movff	postinc2,vfpfcnvrt@convarg
  3025   0031B8  CFDD F03D          	movff	postdec2,vfpfcnvrt@convarg+1
  3026                           
  3027                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  3028   0031BC  0E01               	movlw	1
  3029   0031BE  2440               	addwf	vfpfcnvrt@cp^0,w,c
  3030   0031C0  6E3A               	movwf	??_vfpfcnvrt^0,c
  3031   0031C2  0E00               	movlw	0
  3032   0031C4  2041               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  3033   0031C6  6E3B               	movwf	(??_vfpfcnvrt+1)^0,c
  3034   0031C8  C036  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3035   0031CC  C037  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3036   0031D0  C03A  FFDE         	movff	??_vfpfcnvrt,postinc2
  3037   0031D4  C03B  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  3038   0031D8                     
  3039                           ; BSR set to: 0
  3040                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  3041   0031D8  C034  F027         	movff	vfpfcnvrt@fp,dtoa@fp
  3042   0031DC  C035  F028         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3043   0031E0  C03C  F029         	movff	vfpfcnvrt@convarg,dtoa@d
  3044   0031E4  C03D  F02A         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  3045   0031E8  EC5D  F016         	call	_dtoa	;wreg free
  3046   0031EC  EF16  F019         	goto	l2537
  3047   0031F0                     l9881:
  3048                           
  3049                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  3050   0031F0  C036  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3051   0031F4  C037  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3052   0031F8  2ADE               	incf	postinc2,f,c
  3053   0031FA  0E00               	movlw	0
  3054   0031FC  22DD               	addwfc	postdec2,f,c
  3055   0031FE  EF16  F019         	goto	l2537
  3056   003202                     l9885:
  3057                           
  3058                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  3059   003202  C036  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3060   003206  C037  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3061   00320A  CFDE FFF6          	movff	postinc2,tblptrl
  3062   00320E  CFDD FFF7          	movff	postdec2,tblptrh
  3063   003212                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3064   003212  6AF8               	clrf	tblptru,c
  3065   003214                     	endif
  3066   003214                     	if	0	;tblptru may be non-zero
  3067   003214                     	endif
  3068   003214  0008               	tblrd		*
  3069   003216  50F5               	movf	tablat,w,c
  3070   003218  6E0C               	movwf	fputc@c^0,c
  3071   00321A  6A0D               	clrf	(fputc@c+1)^0,c
  3072   00321C  C034  F00E         	movff	vfpfcnvrt@fp,fputc@fp
  3073   003220  C035  F00F         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3074   003224  EC16  F01C         	call	_fputc	;wreg free
  3075   003228  EFF8  F018         	goto	l9881
  3076   00322C                     l2537:
  3077   00322C  0012               	return		;funcret
  3078   00322E                     __end_of_vfpfcnvrt:
  3079                           	callstack 0
  3080                           
  3081 ;; *************** function _dtoa *****************
  3082 ;; Defined at:
  3083 ;;		line 470 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  3084 ;; Parameters:    Size  Location     Type
  3085 ;;  fp              2   38[COMRAM] PTR struct _IO_FILE
  3086 ;;		 -> sprintf@f(12), 
  3087 ;;  d               2   40[COMRAM] int 
  3088 ;; Auto vars:     Size  Location     Type
  3089 ;;  i               2   49[COMRAM] int 
  3090 ;;  w               2   46[COMRAM] int 
  3091 ;;  p               2   44[COMRAM] int 
  3092 ;;  s               1   48[COMRAM] unsigned char 
  3093 ;; Return value:  Size  Location     Type
  3094 ;;                  1    wreg      void 
  3095 ;; Registers used:
  3096 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3097 ;; Tracked objects:
  3098 ;;		On entry : 0/0
  3099 ;;		On exit  : 0/0
  3100 ;;		Unchanged: 0/0
  3101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3102 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3103 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3105 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3106 ;;Total ram usage:       13 bytes
  3107 ;; Hardware stack levels used: 1
  3108 ;; Hardware stack levels required when called: 8
  3109 ;; This function calls:
  3110 ;;		___awdiv
  3111 ;;		___awmod
  3112 ;;		_abs
  3113 ;;		_pad
  3114 ;; This function is called by:
  3115 ;;		_vfpfcnvrt
  3116 ;; This function uses a non-reentrant model
  3117 ;;
  3118                           
  3119                           	psect	text10
  3120   002CBA                     __ptext10:
  3121                           	callstack 0
  3122   002CBA                     _dtoa:
  3123                           	callstack 18
  3124   002CBA                     
  3125                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 471: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           472:  char s;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           476:     s = d < 0 ? 1 : 0;
  3126   002CBA  BE2A               	btfsc	(dtoa@d+1)^0,7,c
  3127   002CBC  EF62  F016         	goto	u9051
  3128   002CC0  EF65  F016         	goto	u9050
  3129   002CC4                     u9051:
  3130   002CC4  0E01               	movlw	1
  3131   002CC6  EF66  F016         	goto	u9060
  3132   002CCA                     u9050:
  3133   002CCA  0E00               	movlw	0
  3134   002CCC                     u9060:
  3135   002CCC  6E31               	movwf	dtoa@s^0,c
  3136   002CCE                     
  3137                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  3138   002CCE  5031               	movf	dtoa@s^0,w,c
  3139   002CD0  B4D8               	btfsc	status,2,c
  3140   002CD2  EF6D  F016         	goto	u9071
  3141   002CD6  EF6F  F016         	goto	u9070
  3142   002CDA                     u9071:
  3143   002CDA  EF73  F016         	goto	l9817
  3144   002CDE                     u9070:
  3145   002CDE                     
  3146                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
  3147   002CDE  6C29               	negf	dtoa@d^0,c
  3148   002CE0  1E2A               	comf	(dtoa@d+1)^0,f,c
  3149   002CE2  B0D8               	btfsc	status,0,c
  3150   002CE4  2A2A               	incf	(dtoa@d+1)^0,f,c
  3151   002CE6                     l9817:
  3152                           
  3153                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
  3154   002CE6  0100               	movlb	0	; () banked
  3155   002CE8  BF89               	btfsc	(_prec+1)& (0+255),7,b
  3156   002CEA  EF7B  F016         	goto	u9080
  3157   002CEE  EF79  F016         	goto	u9081
  3158   002CF2                     u9081:
  3159   002CF2  EF81  F016         	goto	l2516
  3160   002CF6                     u9080:
  3161   002CF6                     
  3162                           ; BSR set to: 0
  3163   002CF6  0E00               	movlw	0
  3164   002CF8  6E2E               	movwf	(dtoa@p+1)^0,c
  3165   002CFA  0E01               	movlw	1
  3166   002CFC  6E2D               	movwf	dtoa@p^0,c
  3167   002CFE  EF85  F016         	goto	l2518
  3168   002D02                     l2516:
  3169                           
  3170                           ; BSR set to: 0
  3171   002D02  C088  F02D         	movff	_prec,dtoa@p
  3172   002D06  C089  F02E         	movff	_prec+1,dtoa@p+1
  3173   002D0A                     l2518:
  3174                           
  3175                           ; BSR set to: 0
  3176                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
  3177   002D0A  C086  F02F         	movff	_width,dtoa@w
  3178   002D0E  C087  F030         	movff	_width+1,dtoa@w+1
  3179   002D12                     
  3180                           ; BSR set to: 0
  3181                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
  3182   002D12  5031               	movf	dtoa@s^0,w,c
  3183   002D14  B4D8               	btfsc	status,2,c
  3184   002D16  EF8F  F016         	goto	u9091
  3185   002D1A  EF91  F016         	goto	u9090
  3186   002D1E                     u9091:
  3187   002D1E  EFA8  F016         	goto	l2519
  3188   002D22                     u9090:
  3189   002D22                     
  3190                           ; BSR set to: 0
  3191                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
  3192   002D22  062F               	decf	dtoa@w^0,f,c
  3193   002D24  A0D8               	btfss	status,0,c
  3194   002D26  0630               	decf	(dtoa@w+1)^0,f,c
  3195   002D28                     
  3196                           ; BSR set to: 0
  3197                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
  3198   002D28  5031               	movf	dtoa@s^0,w,c
  3199   002D2A  A4D8               	btfss	status,2,c
  3200   002D2C  EF9A  F016         	goto	u9101
  3201   002D30  EF9C  F016         	goto	u9100
  3202   002D34                     u9101:
  3203   002D34  EFA2  F016         	goto	l9829
  3204   002D38                     u9100:
  3205   002D38                     
  3206                           ; BSR set to: 0
  3207   002D38  0E00               	movlw	0
  3208   002D3A  6E2C               	movwf	(_dtoa$5127+1)^0,c
  3209   002D3C  0E2B               	movlw	43
  3210   002D3E  6E2B               	movwf	_dtoa$5127^0,c
  3211   002D40  EFA6  F016         	goto	l9831
  3212   002D44                     l9829:
  3213                           
  3214                           ; BSR set to: 0
  3215   002D44  0E00               	movlw	0
  3216   002D46  6E2C               	movwf	(_dtoa$5127+1)^0,c
  3217   002D48  0E2D               	movlw	45
  3218   002D4A  6E2B               	movwf	_dtoa$5127^0,c
  3219   002D4C                     l9831:
  3220                           
  3221                           ; BSR set to: 0
  3222   002D4C  C02B  F031         	movff	_dtoa$5127,dtoa@s
  3223   002D50                     l2519:
  3224                           
  3225                           ; BSR set to: 0
  3226                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
  3227   002D50  0E00               	movlw	0
  3228   002D52  6E33               	movwf	(dtoa@i+1)^0,c
  3229   002D54  0E1F               	movlw	31
  3230   002D56  6E32               	movwf	dtoa@i^0,c
  3231   002D58                     
  3232                           ; BSR set to: 0
  3233                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
  3234   002D58  0E00               	movlw	0
  3235   002D5A  0101               	movlb	1	; () banked
  3236   002D5C  6F3D               	movwf	(_dbuf+31)& (0+255),b
  3237                           
  3238                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  3239   002D5E  EFE1  F016         	goto	l9845
  3240   002D62                     l9835:
  3241                           
  3242                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
  3243   002D62  0632               	decf	dtoa@i^0,f,c
  3244   002D64  A0D8               	btfss	status,0,c
  3245   002D66  0633               	decf	(dtoa@i+1)^0,f,c
  3246   002D68                     
  3247                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  3248   002D68  0E1E               	movlw	low _dbuf
  3249   002D6A  2432               	addwf	dtoa@i^0,w,c
  3250   002D6C  6ED9               	movwf	fsr2l,c
  3251   002D6E  0E01               	movlw	high _dbuf
  3252   002D70  2033               	addwfc	(dtoa@i+1)^0,w,c
  3253   002D72  6EDA               	movwf	fsr2h,c
  3254   002D74  C029  F00C         	movff	dtoa@d,___awmod@dividend
  3255   002D78  C02A  F00D         	movff	dtoa@d+1,___awmod@dividend+1
  3256   002D7C  0E00               	movlw	0
  3257   002D7E  6E0F               	movwf	(___awmod@divisor+1)^0,c
  3258   002D80  0E0A               	movlw	10
  3259   002D82  6E0E               	movwf	___awmod@divisor^0,c
  3260   002D84  EC52  F01E         	call	___awmod	;wreg free
  3261   002D88  C00C  F012         	movff	?___awmod,abs@a
  3262   002D8C  C00D  F013         	movff	?___awmod+1,abs@a+1
  3263   002D90  EC2E  F022         	call	_abs	;wreg free
  3264   002D94  5012               	movf	?_abs^0,w,c
  3265   002D96  0F30               	addlw	48
  3266   002D98  6EDF               	movwf	indf2,c
  3267   002D9A                     
  3268                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
  3269   002D9A  062D               	decf	dtoa@p^0,f,c
  3270   002D9C  A0D8               	btfss	status,0,c
  3271   002D9E  062E               	decf	(dtoa@p+1)^0,f,c
  3272   002DA0                     
  3273                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
  3274   002DA0  062F               	decf	dtoa@w^0,f,c
  3275   002DA2  A0D8               	btfss	status,0,c
  3276   002DA4  0630               	decf	(dtoa@w+1)^0,f,c
  3277   002DA6                     
  3278                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
  3279   002DA6  C029  F00C         	movff	dtoa@d,___awdiv@dividend
  3280   002DAA  C02A  F00D         	movff	dtoa@d+1,___awdiv@dividend+1
  3281   002DAE  0E00               	movlw	0
  3282   002DB0  6E0F               	movwf	(___awdiv@divisor+1)^0,c
  3283   002DB2  0E0A               	movlw	10
  3284   002DB4  6E0E               	movwf	___awdiv@divisor^0,c
  3285   002DB6  EC7B  F01C         	call	___awdiv	;wreg free
  3286   002DBA  C00C  F029         	movff	?___awdiv,dtoa@d
  3287   002DBE  C00D  F02A         	movff	?___awdiv+1,dtoa@d+1
  3288   002DC2                     l9845:
  3289                           
  3290                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  3291   002DC2  BE33               	btfsc	(dtoa@i+1)^0,7,c
  3292   002DC4  EFEC  F016         	goto	u9111
  3293   002DC8  5033               	movf	(dtoa@i+1)^0,w,c
  3294   002DCA  E108               	bnz	u9110
  3295   002DCC  0432               	decf	dtoa@i^0,w,c
  3296   002DCE  A0D8               	btfss	status,0,c
  3297   002DD0  EFEC  F016         	goto	u9111
  3298   002DD4  EFEE  F016         	goto	u9110
  3299   002DD8                     u9111:
  3300   002DD8  EF04  F017         	goto	l9851
  3301   002DDC                     u9110:
  3302   002DDC  5029               	movf	dtoa@d^0,w,c
  3303   002DDE  102A               	iorwf	(dtoa@d+1)^0,w,c
  3304   002DE0  A4D8               	btfss	status,2,c
  3305   002DE2  EFF5  F016         	goto	u9121
  3306   002DE6  EFF7  F016         	goto	u9120
  3307   002DEA                     u9121:
  3308   002DEA  EFB1  F016         	goto	l9835
  3309   002DEE                     u9120:
  3310   002DEE  BE2E               	btfsc	(dtoa@p+1)^0,7,c
  3311   002DF0  EF04  F017         	goto	u9130
  3312   002DF4  502E               	movf	(dtoa@p+1)^0,w,c
  3313   002DF6  E106               	bnz	u9131
  3314   002DF8  042D               	decf	dtoa@p^0,w,c
  3315   002DFA  B0D8               	btfsc	status,0,c
  3316   002DFC  EF02  F017         	goto	u9131
  3317   002E00  EF04  F017         	goto	u9130
  3318   002E04                     u9131:
  3319   002E04  EFB1  F016         	goto	l9835
  3320   002E08                     u9130:
  3321   002E08                     l9851:
  3322                           
  3323                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
  3324   002E08  5031               	movf	dtoa@s^0,w,c
  3325   002E0A  B4D8               	btfsc	status,2,c
  3326   002E0C  EF0A  F017         	goto	u9141
  3327   002E10  EF0C  F017         	goto	u9140
  3328   002E14                     u9141:
  3329   002E14  EF17  F017         	goto	l9857
  3330   002E18                     u9140:
  3331   002E18                     
  3332                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
  3333   002E18  0632               	decf	dtoa@i^0,f,c
  3334   002E1A  A0D8               	btfss	status,0,c
  3335   002E1C  0633               	decf	(dtoa@i+1)^0,f,c
  3336   002E1E                     
  3337                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
  3338   002E1E  0E1E               	movlw	low _dbuf
  3339   002E20  2432               	addwf	dtoa@i^0,w,c
  3340   002E22  6ED9               	movwf	fsr2l,c
  3341   002E24  0E01               	movlw	high _dbuf
  3342   002E26  2033               	addwfc	(dtoa@i+1)^0,w,c
  3343   002E28  6EDA               	movwf	fsr2h,c
  3344   002E2A  C031  FFDF         	movff	dtoa@s,indf2
  3345   002E2E                     l9857:
  3346                           
  3347                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
  3348   002E2E  C027  F01C         	movff	dtoa@fp,pad@fp
  3349   002E32  C028  F01D         	movff	dtoa@fp+1,pad@fp+1
  3350   002E36  0E1E               	movlw	low _dbuf
  3351   002E38  2432               	addwf	dtoa@i^0,w,c
  3352   002E3A  6E1E               	movwf	pad@buf^0,c
  3353   002E3C  0E01               	movlw	high _dbuf
  3354   002E3E  2033               	addwfc	(dtoa@i+1)^0,w,c
  3355   002E40  6E1F               	movwf	(pad@buf+1)^0,c
  3356   002E42  C02F  F020         	movff	dtoa@w,pad@p
  3357   002E46  C030  F021         	movff	dtoa@w+1,pad@p+1
  3358   002E4A  EC11  F020         	call	_pad	;wreg free
  3359   002E4E  0012               	return		;funcret
  3360   002E50                     __end_of_dtoa:
  3361                           	callstack 0
  3362                           
  3363 ;; *************** function _pad *****************
  3364 ;; Defined at:
  3365 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  3366 ;; Parameters:    Size  Location     Type
  3367 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  3368 ;;		 -> sprintf@f(12), 
  3369 ;;  buf             2   29[COMRAM] PTR unsigned char 
  3370 ;;		 -> dbuf(32), 
  3371 ;;  p               2   31[COMRAM] int 
  3372 ;; Auto vars:     Size  Location     Type
  3373 ;;  w               2   36[COMRAM] int 
  3374 ;;  i               2   34[COMRAM] int 
  3375 ;; Return value:  Size  Location     Type
  3376 ;;                  1    wreg      void 
  3377 ;; Registers used:
  3378 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3379 ;; Tracked objects:
  3380 ;;		On entry : 0/0
  3381 ;;		On exit  : 0/0
  3382 ;;		Unchanged: 0/0
  3383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3384 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3385 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3386 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3387 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3388 ;;Total ram usage:       11 bytes
  3389 ;; Hardware stack levels used: 1
  3390 ;; Hardware stack levels required when called: 7
  3391 ;; This function calls:
  3392 ;;		_fputc
  3393 ;;		_fputs
  3394 ;; This function is called by:
  3395 ;;		_dtoa
  3396 ;; This function uses a non-reentrant model
  3397 ;;
  3398                           
  3399                           	psect	text11
  3400   004022                     __ptext11:
  3401                           	callstack 0
  3402   004022                     _pad:
  3403                           	callstack 18
  3404   004022                     
  3405                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 164:     w = (p < 0) ? 0 : p;
  3406   004022  BE21               	btfsc	(pad@p+1)^0,7,c
  3407   004024  EF16  F020         	goto	u9021
  3408   004028  EF18  F020         	goto	u9020
  3409   00402C                     u9021:
  3410   00402C  EF1E  F020         	goto	l9797
  3411   004030                     u9020:
  3412   004030  C020  F025         	movff	pad@p,pad@w
  3413   004034  C021  F026         	movff	pad@p+1,pad@w+1
  3414   004038  EF22  F020         	goto	l2507
  3415   00403C                     l9797:
  3416   00403C  0E00               	movlw	0
  3417   00403E  6E26               	movwf	(pad@w+1)^0,c
  3418   004040  0E00               	movlw	0
  3419   004042  6E25               	movwf	pad@w^0,c
  3420   004044                     l2507:
  3421                           
  3422                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  3423   004044  0E00               	movlw	0
  3424   004046  6E24               	movwf	(pad@i+1)^0,c
  3425   004048  0E00               	movlw	0
  3426   00404A  6E23               	movwf	pad@i^0,c
  3427                           
  3428                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  3429   00404C  EF34  F020         	goto	l9803
  3430   004050                     l9799:
  3431                           
  3432                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  3433   004050  0E00               	movlw	0
  3434   004052  6E0D               	movwf	(fputc@c+1)^0,c
  3435   004054  0E20               	movlw	32
  3436   004056  6E0C               	movwf	fputc@c^0,c
  3437   004058  C01C  F00E         	movff	pad@fp,fputc@fp
  3438   00405C  C01D  F00F         	movff	pad@fp+1,fputc@fp+1
  3439   004060  EC16  F01C         	call	_fputc	;wreg free
  3440   004064                     
  3441                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  3442   004064  4A23               	infsnz	pad@i^0,f,c
  3443   004066  2A24               	incf	(pad@i+1)^0,f,c
  3444   004068                     l9803:
  3445                           
  3446                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  3447   004068  5025               	movf	pad@w^0,w,c
  3448   00406A  5C23               	subwf	pad@i^0,w,c
  3449   00406C  5024               	movf	(pad@i+1)^0,w,c
  3450   00406E  0A80               	xorlw	128
  3451   004070  6E22               	movwf	??_pad^0,c
  3452   004072  5026               	movf	(pad@w+1)^0,w,c
  3453   004074  0A80               	xorlw	128
  3454   004076  5822               	subwfb	??_pad^0,w,c
  3455   004078  A0D8               	btfss	status,0,c
  3456   00407A  EF41  F020         	goto	u9031
  3457   00407E  EF43  F020         	goto	u9030
  3458   004082                     u9031:
  3459   004082  EF28  F020         	goto	l9799
  3460   004086                     u9030:
  3461   004086                     
  3462                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  3463   004086  C01E  F015         	movff	pad@buf,fputs@s
  3464   00408A  C01F  F016         	movff	pad@buf+1,fputs@s+1
  3465   00408E  C01C  F017         	movff	pad@fp,fputs@fp
  3466   004092  C01D  F018         	movff	pad@fp+1,fputs@fp+1
  3467   004096  ECC9  F021         	call	_fputs	;wreg free
  3468   00409A  0012               	return		;funcret
  3469   00409C                     __end_of_pad:
  3470                           	callstack 0
  3471                           
  3472 ;; *************** function _fputs *****************
  3473 ;; Defined at:
  3474 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  3475 ;; Parameters:    Size  Location     Type
  3476 ;;  s               2   20[COMRAM] PTR const unsigned char 
  3477 ;;		 -> dbuf(32), 
  3478 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  3479 ;;		 -> sprintf@f(12), 
  3480 ;; Auto vars:     Size  Location     Type
  3481 ;;  i               2   25[COMRAM] int 
  3482 ;;  c               1   24[COMRAM] unsigned char 
  3483 ;; Return value:  Size  Location     Type
  3484 ;;                  2   20[COMRAM] int 
  3485 ;; Registers used:
  3486 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3487 ;; Tracked objects:
  3488 ;;		On entry : 0/0
  3489 ;;		On exit  : 0/0
  3490 ;;		Unchanged: 0/0
  3491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3492 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3493 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3495 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3496 ;;Total ram usage:        7 bytes
  3497 ;; Hardware stack levels used: 1
  3498 ;; Hardware stack levels required when called: 6
  3499 ;; This function calls:
  3500 ;;		_fputc
  3501 ;; This function is called by:
  3502 ;;		_pad
  3503 ;; This function uses a non-reentrant model
  3504 ;;
  3505                           
  3506                           	psect	text12
  3507   004392                     __ptext12:
  3508                           	callstack 0
  3509   004392                     _fputs:
  3510                           	callstack 18
  3511   004392  0E00               	movlw	0
  3512   004394  6E1B               	movwf	(fputs@i+1)^0,c
  3513   004396  0E00               	movlw	0
  3514   004398  6E1A               	movwf	fputs@i^0,c
  3515   00439A  EFDA  F021         	goto	l9711
  3516   00439E                     l9707:
  3517   00439E  C019  F00C         	movff	fputs@c,fputc@c
  3518   0043A2  6A0D               	clrf	(fputc@c+1)^0,c
  3519   0043A4  C017  F00E         	movff	fputs@fp,fputc@fp
  3520   0043A8  C018  F00F         	movff	fputs@fp+1,fputc@fp+1
  3521   0043AC  EC16  F01C         	call	_fputc	;wreg free
  3522   0043B0  4A1A               	infsnz	fputs@i^0,f,c
  3523   0043B2  2A1B               	incf	(fputs@i+1)^0,f,c
  3524   0043B4                     l9711:
  3525   0043B4  501A               	movf	fputs@i^0,w,c
  3526   0043B6  2415               	addwf	fputs@s^0,w,c
  3527   0043B8  6ED9               	movwf	fsr2l,c
  3528   0043BA  501B               	movf	(fputs@i+1)^0,w,c
  3529   0043BC  2016               	addwfc	(fputs@s+1)^0,w,c
  3530   0043BE  6EDA               	movwf	fsr2h,c
  3531   0043C0  50DF               	movf	indf2,w,c
  3532   0043C2  6E19               	movwf	fputs@c^0,c
  3533   0043C4  5019               	movf	fputs@c^0,w,c
  3534   0043C6  A4D8               	btfss	status,2,c
  3535   0043C8  EFE8  F021         	goto	u8891
  3536   0043CC  EFEA  F021         	goto	u8890
  3537   0043D0                     u8891:
  3538   0043D0  EFCF  F021         	goto	l9707
  3539   0043D4                     u8890:
  3540   0043D4  0012               	return		;funcret
  3541   0043D6                     __end_of_fputs:
  3542                           	callstack 0
  3543                           
  3544 ;; *************** function _fputc *****************
  3545 ;; Defined at:
  3546 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  3547 ;; Parameters:    Size  Location     Type
  3548 ;;  c               2   11[COMRAM] int 
  3549 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  3550 ;;		 -> sprintf@f(12), 
  3551 ;; Auto vars:     Size  Location     Type
  3552 ;;		None
  3553 ;; Return value:  Size  Location     Type
  3554 ;;                  2   11[COMRAM] int 
  3555 ;; Registers used:
  3556 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3557 ;; Tracked objects:
  3558 ;;		On entry : 0/0
  3559 ;;		On exit  : 0/0
  3560 ;;		Unchanged: 0/0
  3561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3562 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3564 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3565 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3566 ;;Total ram usage:        9 bytes
  3567 ;; Hardware stack levels used: 1
  3568 ;; Hardware stack levels required when called: 5
  3569 ;; This function calls:
  3570 ;;		_putch
  3571 ;; This function is called by:
  3572 ;;		_pad
  3573 ;;		_vfpfcnvrt
  3574 ;;		_fputs
  3575 ;; This function uses a non-reentrant model
  3576 ;;
  3577                           
  3578                           	psect	text13
  3579   00382C                     __ptext13:
  3580                           	callstack 0
  3581   00382C                     _fputc:
  3582                           	callstack 21
  3583   00382C  500E               	movf	fputc@fp^0,w,c
  3584   00382E  100F               	iorwf	(fputc@fp+1)^0,w,c
  3585   003830  B4D8               	btfsc	status,2,c
  3586   003832  EF1D  F01C         	goto	u8851
  3587   003836  EF1F  F01C         	goto	u8850
  3588   00383A                     u8851:
  3589   00383A  EF28  F01C         	goto	l9695
  3590   00383E                     u8850:
  3591   00383E  500E               	movf	fputc@fp^0,w,c
  3592   003840  100F               	iorwf	(fputc@fp+1)^0,w,c
  3593   003842  A4D8               	btfss	status,2,c
  3594   003844  EF26  F01C         	goto	u8861
  3595   003848  EF28  F01C         	goto	u8860
  3596   00384C                     u8861:
  3597   00384C  EF2D  F01C         	goto	l9697
  3598   003850                     u8860:
  3599   003850                     l9695:
  3600   003850  500C               	movf	fputc@c^0,w,c
  3601   003852  ECB3  F023         	call	_putch
  3602   003856  EF7A  F01C         	goto	l2562
  3603   00385A                     l9697:
  3604   00385A  EE20 F00A          	lfsr	2,10
  3605   00385E  500E               	movf	fputc@fp^0,w,c
  3606   003860  26D9               	addwf	fsr2l,f,c
  3607   003862  500F               	movf	(fputc@fp+1)^0,w,c
  3608   003864  22DA               	addwfc	fsr2h,f,c
  3609   003866  50DE               	movf	postinc2,w,c
  3610   003868  10DE               	iorwf	postinc2,w,c
  3611   00386A  B4D8               	btfsc	status,2,c
  3612   00386C  EF3A  F01C         	goto	u8871
  3613   003870  EF3C  F01C         	goto	u8870
  3614   003874                     u8871:
  3615   003874  EF57  F01C         	goto	l9701
  3616   003878                     u8870:
  3617   003878  EE20 F00A          	lfsr	2,10
  3618   00387C  500E               	movf	fputc@fp^0,w,c
  3619   00387E  26D9               	addwf	fsr2l,f,c
  3620   003880  500F               	movf	(fputc@fp+1)^0,w,c
  3621   003882  22DA               	addwfc	fsr2h,f,c
  3622   003884  EE10 F003          	lfsr	1,3
  3623   003888  500E               	movf	fputc@fp^0,w,c
  3624   00388A  26E1               	addwf	fsr1l,f,c
  3625   00388C  500F               	movf	(fputc@fp+1)^0,w,c
  3626   00388E  22E2               	addwfc	fsr1h,f,c
  3627   003890  50DE               	movf	postinc2,w,c
  3628   003892  5CE6               	subwf	postinc1,w,c
  3629   003894  50E6               	movf	postinc1,w,c
  3630   003896  0A80               	xorlw	128
  3631   003898  6E14               	movwf	(??_fputc+4)^0,c
  3632   00389A  50DE               	movf	postinc2,w,c
  3633   00389C  0A80               	xorlw	128
  3634   00389E  5814               	subwfb	(??_fputc+4)^0,w,c
  3635   0038A0  B0D8               	btfsc	status,0,c
  3636   0038A2  EF55  F01C         	goto	u8881
  3637   0038A6  EF57  F01C         	goto	u8880
  3638   0038AA                     u8881:
  3639   0038AA  EF7A  F01C         	goto	l2562
  3640   0038AE                     u8880:
  3641   0038AE                     l9701:
  3642   0038AE  EE20 F003          	lfsr	2,3
  3643   0038B2  500E               	movf	fputc@fp^0,w,c
  3644   0038B4  26D9               	addwf	fsr2l,f,c
  3645   0038B6  500F               	movf	(fputc@fp+1)^0,w,c
  3646   0038B8  22DA               	addwfc	fsr2h,f,c
  3647   0038BA  CFDE F010          	movff	postinc2,??_fputc
  3648   0038BE  CFDD F011          	movff	postdec2,??_fputc+1
  3649   0038C2  C00E  FFD9         	movff	fputc@fp,fsr2l
  3650   0038C6  C00F  FFDA         	movff	fputc@fp+1,fsr2h
  3651   0038CA  CFDE F012          	movff	postinc2,??_fputc+2
  3652   0038CE  CFDD F013          	movff	postdec2,??_fputc+3
  3653   0038D2  5010               	movf	??_fputc^0,w,c
  3654   0038D4  2412               	addwf	(??_fputc+2)^0,w,c
  3655   0038D6  6ED9               	movwf	fsr2l,c
  3656   0038D8  5011               	movf	(??_fputc+1)^0,w,c
  3657   0038DA  2013               	addwfc	(??_fputc+3)^0,w,c
  3658   0038DC  6EDA               	movwf	fsr2h,c
  3659   0038DE  C00C  FFDF         	movff	fputc@c,indf2
  3660   0038E2  EE20 F003          	lfsr	2,3
  3661   0038E6  500E               	movf	fputc@fp^0,w,c
  3662   0038E8  26D9               	addwf	fsr2l,f,c
  3663   0038EA  500F               	movf	(fputc@fp+1)^0,w,c
  3664   0038EC  22DA               	addwfc	fsr2h,f,c
  3665   0038EE  2ADE               	incf	postinc2,f,c
  3666   0038F0  0E00               	movlw	0
  3667   0038F2  22DD               	addwfc	postdec2,f,c
  3668   0038F4                     l2562:
  3669   0038F4  0012               	return		;funcret
  3670   0038F6                     __end_of_fputc:
  3671                           	callstack 0
  3672                           
  3673 ;; *************** function _putch *****************
  3674 ;; Defined at:
  3675 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  3676 ;; Parameters:    Size  Location     Type
  3677 ;;  c               1    wreg     unsigned char 
  3678 ;; Auto vars:     Size  Location     Type
  3679 ;;  c               1    0[COMRAM] unsigned char 
  3680 ;; Return value:  Size  Location     Type
  3681 ;;                  1    wreg      void 
  3682 ;; Registers used:
  3683 ;;		wreg
  3684 ;; Tracked objects:
  3685 ;;		On entry : 0/0
  3686 ;;		On exit  : 0/0
  3687 ;;		Unchanged: 0/0
  3688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3693 ;;Total ram usage:        0 bytes
  3694 ;; Hardware stack levels used: 1
  3695 ;; Hardware stack levels required when called: 4
  3696 ;; This function calls:
  3697 ;;		Nothing
  3698 ;; This function is called by:
  3699 ;;		_fputc
  3700 ;; This function uses a non-reentrant model
  3701 ;;
  3702                           
  3703                           	psect	text14
  3704   004766                     __ptext14:
  3705                           	callstack 0
  3706   004766                     _putch:
  3707                           	callstack 21
  3708   004766  0012               	return		;funcret
  3709   004768                     __end_of_putch:
  3710                           	callstack 0
  3711                           
  3712 ;; *************** function _abs *****************
  3713 ;; Defined at:
  3714 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  3715 ;; Parameters:    Size  Location     Type
  3716 ;;  a               2   17[COMRAM] int 
  3717 ;; Auto vars:     Size  Location     Type
  3718 ;;		None
  3719 ;; Return value:  Size  Location     Type
  3720 ;;                  2   17[COMRAM] int 
  3721 ;; Registers used:
  3722 ;;		wreg, status,2, status,0
  3723 ;; Tracked objects:
  3724 ;;		On entry : 0/0
  3725 ;;		On exit  : 0/0
  3726 ;;		Unchanged: 0/0
  3727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3728 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3730 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3731 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3732 ;;Total ram usage:        4 bytes
  3733 ;; Hardware stack levels used: 1
  3734 ;; Hardware stack levels required when called: 4
  3735 ;; This function calls:
  3736 ;;		Nothing
  3737 ;; This function is called by:
  3738 ;;		_dtoa
  3739 ;; This function uses a non-reentrant model
  3740 ;;
  3741                           
  3742                           	psect	text15
  3743   00445C                     __ptext15:
  3744                           	callstack 0
  3745   00445C                     _abs:
  3746                           	callstack 21
  3747   00445C  BE13               	btfsc	(abs@a+1)^0,7,c
  3748   00445E  EF3B  F022         	goto	u9040
  3749   004462  5013               	movf	(abs@a+1)^0,w,c
  3750   004464  E106               	bnz	u9041
  3751   004466  0412               	decf	abs@a^0,w,c
  3752   004468  B0D8               	btfsc	status,0,c
  3753   00446A  EF39  F022         	goto	u9041
  3754   00446E  EF3B  F022         	goto	u9040
  3755   004472                     u9041:
  3756   004472  EF49  F022         	goto	l2547
  3757   004476                     u9040:
  3758   004476  C012  F014         	movff	abs@a,??_abs
  3759   00447A  C013  F015         	movff	abs@a+1,??_abs+1
  3760   00447E  1E14               	comf	??_abs^0,f,c
  3761   004480  1E15               	comf	(??_abs+1)^0,f,c
  3762   004482  4A14               	infsnz	??_abs^0,f,c
  3763   004484  2A15               	incf	(??_abs+1)^0,f,c
  3764   004486  C014  F012         	movff	??_abs,?_abs
  3765   00448A  C015  F013         	movff	??_abs+1,?_abs+1
  3766   00448E  EF4D  F022         	goto	l2550
  3767   004492                     l2547:
  3768   004492  C012  F012         	movff	abs@a,?_abs
  3769   004496  C013  F013         	movff	abs@a+1,?_abs+1
  3770   00449A                     l2550:
  3771   00449A  0012               	return		;funcret
  3772   00449C                     __end_of_abs:
  3773                           	callstack 0
  3774                           
  3775 ;; *************** function ___awmod *****************
  3776 ;; Defined at:
  3777 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  3778 ;; Parameters:    Size  Location     Type
  3779 ;;  dividend        2   11[COMRAM] int 
  3780 ;;  divisor         2   13[COMRAM] int 
  3781 ;; Auto vars:     Size  Location     Type
  3782 ;;  sign            1   16[COMRAM] unsigned char 
  3783 ;;  counter         1   15[COMRAM] unsigned char 
  3784 ;; Return value:  Size  Location     Type
  3785 ;;                  2   11[COMRAM] int 
  3786 ;; Registers used:
  3787 ;;		wreg, status,2, status,0
  3788 ;; Tracked objects:
  3789 ;;		On entry : 0/0
  3790 ;;		On exit  : 0/0
  3791 ;;		Unchanged: 0/0
  3792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3793 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3794 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3796 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3797 ;;Total ram usage:        6 bytes
  3798 ;; Hardware stack levels used: 1
  3799 ;; Hardware stack levels required when called: 4
  3800 ;; This function calls:
  3801 ;;		Nothing
  3802 ;; This function is called by:
  3803 ;;		_dtoa
  3804 ;; This function uses a non-reentrant model
  3805 ;;
  3806                           
  3807                           	psect	text16
  3808   003CA4                     __ptext16:
  3809                           	callstack 0
  3810   003CA4                     ___awmod:
  3811                           	callstack 21
  3812   003CA4  0E00               	movlw	0
  3813   003CA6  6E11               	movwf	___awmod@sign^0,c
  3814   003CA8  BE0D               	btfsc	(___awmod@dividend+1)^0,7,c
  3815   003CAA  EF5B  F01E         	goto	u8960
  3816   003CAE  EF59  F01E         	goto	u8961
  3817   003CB2                     u8961:
  3818   003CB2  EF61  F01E         	goto	l9765
  3819   003CB6                     u8960:
  3820   003CB6  6C0C               	negf	___awmod@dividend^0,c
  3821   003CB8  1E0D               	comf	(___awmod@dividend+1)^0,f,c
  3822   003CBA  B0D8               	btfsc	status,0,c
  3823   003CBC  2A0D               	incf	(___awmod@dividend+1)^0,f,c
  3824   003CBE  0E01               	movlw	1
  3825   003CC0  6E11               	movwf	___awmod@sign^0,c
  3826   003CC2                     l9765:
  3827   003CC2  BE0F               	btfsc	(___awmod@divisor+1)^0,7,c
  3828   003CC4  EF68  F01E         	goto	u8970
  3829   003CC8  EF66  F01E         	goto	u8971
  3830   003CCC                     u8971:
  3831   003CCC  EF6C  F01E         	goto	l9769
  3832   003CD0                     u8970:
  3833   003CD0  6C0E               	negf	___awmod@divisor^0,c
  3834   003CD2  1E0F               	comf	(___awmod@divisor+1)^0,f,c
  3835   003CD4  B0D8               	btfsc	status,0,c
  3836   003CD6  2A0F               	incf	(___awmod@divisor+1)^0,f,c
  3837   003CD8                     l9769:
  3838   003CD8  500E               	movf	___awmod@divisor^0,w,c
  3839   003CDA  100F               	iorwf	(___awmod@divisor+1)^0,w,c
  3840   003CDC  B4D8               	btfsc	status,2,c
  3841   003CDE  EF73  F01E         	goto	u8981
  3842   003CE2  EF75  F01E         	goto	u8980
  3843   003CE6                     u8981:
  3844   003CE6  EF99  F01E         	goto	l9785
  3845   003CEA                     u8980:
  3846   003CEA  0E01               	movlw	1
  3847   003CEC  6E10               	movwf	___awmod@counter^0,c
  3848   003CEE  EF7D  F01E         	goto	l9775
  3849   003CF2                     l9773:
  3850   003CF2  90D8               	bcf	status,0,c
  3851   003CF4  360E               	rlcf	___awmod@divisor^0,f,c
  3852   003CF6  360F               	rlcf	(___awmod@divisor+1)^0,f,c
  3853   003CF8  2A10               	incf	___awmod@counter^0,f,c
  3854   003CFA                     l9775:
  3855   003CFA  AE0F               	btfss	(___awmod@divisor+1)^0,7,c
  3856   003CFC  EF82  F01E         	goto	u8991
  3857   003D00  EF84  F01E         	goto	u8990
  3858   003D04                     u8991:
  3859   003D04  EF79  F01E         	goto	l9773
  3860   003D08                     u8990:
  3861   003D08                     l9777:
  3862   003D08  500E               	movf	___awmod@divisor^0,w,c
  3863   003D0A  5C0C               	subwf	___awmod@dividend^0,w,c
  3864   003D0C  500F               	movf	(___awmod@divisor+1)^0,w,c
  3865   003D0E  580D               	subwfb	(___awmod@dividend+1)^0,w,c
  3866   003D10  A0D8               	btfss	status,0,c
  3867   003D12  EF8D  F01E         	goto	u9001
  3868   003D16  EF8F  F01E         	goto	u9000
  3869   003D1A                     u9001:
  3870   003D1A  EF93  F01E         	goto	l9781
  3871   003D1E                     u9000:
  3872   003D1E  500E               	movf	___awmod@divisor^0,w,c
  3873   003D20  5E0C               	subwf	___awmod@dividend^0,f,c
  3874   003D22  500F               	movf	(___awmod@divisor+1)^0,w,c
  3875   003D24  5A0D               	subwfb	(___awmod@dividend+1)^0,f,c
  3876   003D26                     l9781:
  3877   003D26  90D8               	bcf	status,0,c
  3878   003D28  320F               	rrcf	(___awmod@divisor+1)^0,f,c
  3879   003D2A  320E               	rrcf	___awmod@divisor^0,f,c
  3880   003D2C  2E10               	decfsz	___awmod@counter^0,f,c
  3881   003D2E  EF84  F01E         	goto	l9777
  3882   003D32                     l9785:
  3883   003D32  5011               	movf	___awmod@sign^0,w,c
  3884   003D34  B4D8               	btfsc	status,2,c
  3885   003D36  EF9F  F01E         	goto	u9011
  3886   003D3A  EFA1  F01E         	goto	u9010
  3887   003D3E                     u9011:
  3888   003D3E  EFA5  F01E         	goto	l9789
  3889   003D42                     u9010:
  3890   003D42  6C0C               	negf	___awmod@dividend^0,c
  3891   003D44  1E0D               	comf	(___awmod@dividend+1)^0,f,c
  3892   003D46  B0D8               	btfsc	status,0,c
  3893   003D48  2A0D               	incf	(___awmod@dividend+1)^0,f,c
  3894   003D4A                     l9789:
  3895   003D4A  C00C  F00C         	movff	___awmod@dividend,?___awmod
  3896   003D4E  C00D  F00D         	movff	___awmod@dividend+1,?___awmod+1
  3897   003D52  0012               	return		;funcret
  3898   003D54                     __end_of___awmod:
  3899                           	callstack 0
  3900                           
  3901 ;; *************** function ___awdiv *****************
  3902 ;; Defined at:
  3903 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  3904 ;; Parameters:    Size  Location     Type
  3905 ;;  dividend        2   11[COMRAM] int 
  3906 ;;  divisor         2   13[COMRAM] int 
  3907 ;; Auto vars:     Size  Location     Type
  3908 ;;  quotient        2   17[COMRAM] int 
  3909 ;;  sign            1   16[COMRAM] unsigned char 
  3910 ;;  counter         1   15[COMRAM] unsigned char 
  3911 ;; Return value:  Size  Location     Type
  3912 ;;                  2   11[COMRAM] int 
  3913 ;; Registers used:
  3914 ;;		wreg, status,2, status,0
  3915 ;; Tracked objects:
  3916 ;;		On entry : 0/0
  3917 ;;		On exit  : 0/0
  3918 ;;		Unchanged: 0/0
  3919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3920 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3921 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3923 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3924 ;;Total ram usage:        8 bytes
  3925 ;; Hardware stack levels used: 1
  3926 ;; Hardware stack levels required when called: 4
  3927 ;; This function calls:
  3928 ;;		Nothing
  3929 ;; This function is called by:
  3930 ;;		_dtoa
  3931 ;; This function uses a non-reentrant model
  3932 ;;
  3933                           
  3934                           	psect	text17
  3935   0038F6                     __ptext17:
  3936                           	callstack 0
  3937   0038F6                     ___awdiv:
  3938                           	callstack 21
  3939   0038F6  0E00               	movlw	0
  3940   0038F8  6E11               	movwf	___awdiv@sign^0,c
  3941   0038FA  BE0F               	btfsc	(___awdiv@divisor+1)^0,7,c
  3942   0038FC  EF84  F01C         	goto	u8900
  3943   003900  EF82  F01C         	goto	u8901
  3944   003904                     u8901:
  3945   003904  EF8A  F01C         	goto	l9721
  3946   003908                     u8900:
  3947   003908  6C0E               	negf	___awdiv@divisor^0,c
  3948   00390A  1E0F               	comf	(___awdiv@divisor+1)^0,f,c
  3949   00390C  B0D8               	btfsc	status,0,c
  3950   00390E  2A0F               	incf	(___awdiv@divisor+1)^0,f,c
  3951   003910  0E01               	movlw	1
  3952   003912  6E11               	movwf	___awdiv@sign^0,c
  3953   003914                     l9721:
  3954   003914  BE0D               	btfsc	(___awdiv@dividend+1)^0,7,c
  3955   003916  EF91  F01C         	goto	u8910
  3956   00391A  EF8F  F01C         	goto	u8911
  3957   00391E                     u8911:
  3958   00391E  EF97  F01C         	goto	l9727
  3959   003922                     u8910:
  3960   003922  6C0C               	negf	___awdiv@dividend^0,c
  3961   003924  1E0D               	comf	(___awdiv@dividend+1)^0,f,c
  3962   003926  B0D8               	btfsc	status,0,c
  3963   003928  2A0D               	incf	(___awdiv@dividend+1)^0,f,c
  3964   00392A  0E01               	movlw	1
  3965   00392C  1A11               	xorwf	___awdiv@sign^0,f,c
  3966   00392E                     l9727:
  3967   00392E  0E00               	movlw	0
  3968   003930  6E13               	movwf	(___awdiv@quotient+1)^0,c
  3969   003932  0E00               	movlw	0
  3970   003934  6E12               	movwf	___awdiv@quotient^0,c
  3971   003936  500E               	movf	___awdiv@divisor^0,w,c
  3972   003938  100F               	iorwf	(___awdiv@divisor+1)^0,w,c
  3973   00393A  B4D8               	btfsc	status,2,c
  3974   00393C  EFA2  F01C         	goto	u8921
  3975   003940  EFA4  F01C         	goto	u8920
  3976   003944                     u8921:
  3977   003944  EFCC  F01C         	goto	l9749
  3978   003948                     u8920:
  3979   003948  0E01               	movlw	1
  3980   00394A  6E10               	movwf	___awdiv@counter^0,c
  3981   00394C  EFAC  F01C         	goto	l9735
  3982   003950                     l9733:
  3983   003950  90D8               	bcf	status,0,c
  3984   003952  360E               	rlcf	___awdiv@divisor^0,f,c
  3985   003954  360F               	rlcf	(___awdiv@divisor+1)^0,f,c
  3986   003956  2A10               	incf	___awdiv@counter^0,f,c
  3987   003958                     l9735:
  3988   003958  AE0F               	btfss	(___awdiv@divisor+1)^0,7,c
  3989   00395A  EFB1  F01C         	goto	u8931
  3990   00395E  EFB3  F01C         	goto	u8930
  3991   003962                     u8931:
  3992   003962  EFA8  F01C         	goto	l9733
  3993   003966                     u8930:
  3994   003966                     l9737:
  3995   003966  90D8               	bcf	status,0,c
  3996   003968  3612               	rlcf	___awdiv@quotient^0,f,c
  3997   00396A  3613               	rlcf	(___awdiv@quotient+1)^0,f,c
  3998   00396C  500E               	movf	___awdiv@divisor^0,w,c
  3999   00396E  5C0C               	subwf	___awdiv@dividend^0,w,c
  4000   003970  500F               	movf	(___awdiv@divisor+1)^0,w,c
  4001   003972  580D               	subwfb	(___awdiv@dividend+1)^0,w,c
  4002   003974  A0D8               	btfss	status,0,c
  4003   003976  EFBF  F01C         	goto	u8941
  4004   00397A  EFC1  F01C         	goto	u8940
  4005   00397E                     u8941:
  4006   00397E  EFC6  F01C         	goto	l9745
  4007   003982                     u8940:
  4008   003982  500E               	movf	___awdiv@divisor^0,w,c
  4009   003984  5E0C               	subwf	___awdiv@dividend^0,f,c
  4010   003986  500F               	movf	(___awdiv@divisor+1)^0,w,c
  4011   003988  5A0D               	subwfb	(___awdiv@dividend+1)^0,f,c
  4012   00398A  8012               	bsf	___awdiv@quotient^0,0,c
  4013   00398C                     l9745:
  4014   00398C  90D8               	bcf	status,0,c
  4015   00398E  320F               	rrcf	(___awdiv@divisor+1)^0,f,c
  4016   003990  320E               	rrcf	___awdiv@divisor^0,f,c
  4017   003992  2E10               	decfsz	___awdiv@counter^0,f,c
  4018   003994  EFB3  F01C         	goto	l9737
  4019   003998                     l9749:
  4020   003998  5011               	movf	___awdiv@sign^0,w,c
  4021   00399A  B4D8               	btfsc	status,2,c
  4022   00399C  EFD2  F01C         	goto	u8951
  4023   0039A0  EFD4  F01C         	goto	u8950
  4024   0039A4                     u8951:
  4025   0039A4  EFD8  F01C         	goto	l9753
  4026   0039A8                     u8950:
  4027   0039A8  6C12               	negf	___awdiv@quotient^0,c
  4028   0039AA  1E13               	comf	(___awdiv@quotient+1)^0,f,c
  4029   0039AC  B0D8               	btfsc	status,0,c
  4030   0039AE  2A13               	incf	(___awdiv@quotient+1)^0,f,c
  4031   0039B0                     l9753:
  4032   0039B0  C012  F00C         	movff	___awdiv@quotient,?___awdiv
  4033   0039B4  C013  F00D         	movff	___awdiv@quotient+1,?___awdiv+1
  4034   0039B8  0012               	return		;funcret
  4035   0039BA                     __end_of___awdiv:
  4036                           	callstack 0
  4037                           
  4038 ;; *************** function _memset *****************
  4039 ;; Defined at:
  4040 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\memset.c"
  4041 ;; Parameters:    Size  Location     Type
  4042 ;;  dest            2   11[COMRAM] PTR void 
  4043 ;;		 -> adc_lm35_1_txt(7), 
  4044 ;;  c               2   13[COMRAM] int 
  4045 ;;  n               2   15[COMRAM] unsigned int 
  4046 ;; Auto vars:     Size  Location     Type
  4047 ;;  s               2   21[COMRAM] PTR unsigned char 
  4048 ;;		 -> adc_lm35_1_txt(7), 
  4049 ;;  k               2   19[COMRAM] unsigned int 
  4050 ;; Return value:  Size  Location     Type
  4051 ;;                  2   11[COMRAM] PTR void 
  4052 ;; Registers used:
  4053 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4054 ;; Tracked objects:
  4055 ;;		On entry : 0/0
  4056 ;;		On exit  : 0/0
  4057 ;;		Unchanged: 0/0
  4058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4059 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4060 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4061 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4062 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4063 ;;Total ram usage:       12 bytes
  4064 ;; Hardware stack levels used: 1
  4065 ;; Hardware stack levels required when called: 4
  4066 ;; This function calls:
  4067 ;;		Nothing
  4068 ;; This function is called by:
  4069 ;;		_convert_uint16_to_string
  4070 ;;		_convert_uint8_to_string
  4071 ;;		_convert_uint32_to_string
  4072 ;; This function uses a non-reentrant model
  4073 ;;
  4074                           
  4075                           	psect	text18
  4076   002E50                     __ptext18:
  4077                           	callstack 0
  4078   002E50                     _memset:
  4079                           	callstack 25
  4080   002E50  C00C  F016         	movff	memset@dest,memset@s
  4081   002E54  C00D  F017         	movff	memset@dest+1,memset@s+1
  4082   002E58  5010               	movf	memset@n^0,w,c
  4083   002E5A  1011               	iorwf	(memset@n+1)^0,w,c
  4084   002E5C  A4D8               	btfss	status,2,c
  4085   002E5E  EF33  F017         	goto	u9191
  4086   002E62  EF35  F017         	goto	u9190
  4087   002E66                     u9191:
  4088   002E66  EF37  F017         	goto	l9905
  4089   002E6A                     u9190:
  4090   002E6A  EFE2  F017         	goto	l2472
  4091   002E6E                     l9905:
  4092   002E6E  C016  FFD9         	movff	memset@s,fsr2l
  4093   002E72  C017  FFDA         	movff	memset@s+1,fsr2h
  4094   002E76  C00E  FFDF         	movff	memset@c,indf2
  4095   002E7A  5010               	movf	memset@n^0,w,c
  4096   002E7C  2416               	addwf	memset@s^0,w,c
  4097   002E7E  6E12               	movwf	??_memset^0,c
  4098   002E80  5011               	movf	(memset@n+1)^0,w,c
  4099   002E82  2017               	addwfc	(memset@s+1)^0,w,c
  4100   002E84  6E13               	movwf	(??_memset+1)^0,c
  4101   002E86  0EFF               	movlw	255
  4102   002E88  2412               	addwf	??_memset^0,w,c
  4103   002E8A  6ED9               	movwf	fsr2l,c
  4104   002E8C  0EFF               	movlw	255
  4105   002E8E  2013               	addwfc	(??_memset+1)^0,w,c
  4106   002E90  6EDA               	movwf	fsr2h,c
  4107   002E92  C00E  FFDF         	movff	memset@c,indf2
  4108   002E96  5011               	movf	(memset@n+1)^0,w,c
  4109   002E98  E107               	bnz	u9201
  4110   002E9A  0E03               	movlw	3
  4111   002E9C  5C10               	subwf	memset@n^0,w,c
  4112   002E9E  B0D8               	btfsc	status,0,c
  4113   002EA0  EF54  F017         	goto	u9201
  4114   002EA4  EF56  F017         	goto	u9200
  4115   002EA8                     u9201:
  4116   002EA8  EF58  F017         	goto	l9911
  4117   002EAC                     u9200:
  4118   002EAC  EFE2  F017         	goto	l2472
  4119   002EB0                     l9911:
  4120   002EB0  EE20 F001          	lfsr	2,1
  4121   002EB4  5016               	movf	memset@s^0,w,c
  4122   002EB6  26D9               	addwf	fsr2l,f,c
  4123   002EB8  5017               	movf	(memset@s+1)^0,w,c
  4124   002EBA  22DA               	addwfc	fsr2h,f,c
  4125   002EBC  C00E  FFDF         	movff	memset@c,indf2
  4126   002EC0  EE20 F002          	lfsr	2,2
  4127   002EC4  5016               	movf	memset@s^0,w,c
  4128   002EC6  26D9               	addwf	fsr2l,f,c
  4129   002EC8  5017               	movf	(memset@s+1)^0,w,c
  4130   002ECA  22DA               	addwfc	fsr2h,f,c
  4131   002ECC  C00E  FFDF         	movff	memset@c,indf2
  4132   002ED0  5010               	movf	memset@n^0,w,c
  4133   002ED2  2416               	addwf	memset@s^0,w,c
  4134   002ED4  6E12               	movwf	??_memset^0,c
  4135   002ED6  5011               	movf	(memset@n+1)^0,w,c
  4136   002ED8  2017               	addwfc	(memset@s+1)^0,w,c
  4137   002EDA  6E13               	movwf	(??_memset+1)^0,c
  4138   002EDC  0EFE               	movlw	254
  4139   002EDE  2412               	addwf	??_memset^0,w,c
  4140   002EE0  6ED9               	movwf	fsr2l,c
  4141   002EE2  0EFF               	movlw	255
  4142   002EE4  2013               	addwfc	(??_memset+1)^0,w,c
  4143   002EE6  6EDA               	movwf	fsr2h,c
  4144   002EE8  C00E  FFDF         	movff	memset@c,indf2
  4145   002EEC  5010               	movf	memset@n^0,w,c
  4146   002EEE  2416               	addwf	memset@s^0,w,c
  4147   002EF0  6E12               	movwf	??_memset^0,c
  4148   002EF2  5011               	movf	(memset@n+1)^0,w,c
  4149   002EF4  2017               	addwfc	(memset@s+1)^0,w,c
  4150   002EF6  6E13               	movwf	(??_memset+1)^0,c
  4151   002EF8  0EFD               	movlw	253
  4152   002EFA  2412               	addwf	??_memset^0,w,c
  4153   002EFC  6ED9               	movwf	fsr2l,c
  4154   002EFE  0EFF               	movlw	255
  4155   002F00  2013               	addwfc	(??_memset+1)^0,w,c
  4156   002F02  6EDA               	movwf	fsr2h,c
  4157   002F04  C00E  FFDF         	movff	memset@c,indf2
  4158   002F08  5011               	movf	(memset@n+1)^0,w,c
  4159   002F0A  E107               	bnz	u9211
  4160   002F0C  0E07               	movlw	7
  4161   002F0E  5C10               	subwf	memset@n^0,w,c
  4162   002F10  B0D8               	btfsc	status,0,c
  4163   002F12  EF8D  F017         	goto	u9211
  4164   002F16  EF8F  F017         	goto	u9210
  4165   002F1A                     u9211:
  4166   002F1A  EF91  F017         	goto	l9917
  4167   002F1E                     u9210:
  4168   002F1E  EFE2  F017         	goto	l2472
  4169   002F22                     l9917:
  4170   002F22  EE20 F003          	lfsr	2,3
  4171   002F26  5016               	movf	memset@s^0,w,c
  4172   002F28  26D9               	addwf	fsr2l,f,c
  4173   002F2A  5017               	movf	(memset@s+1)^0,w,c
  4174   002F2C  22DA               	addwfc	fsr2h,f,c
  4175   002F2E  C00E  FFDF         	movff	memset@c,indf2
  4176   002F32  5010               	movf	memset@n^0,w,c
  4177   002F34  2416               	addwf	memset@s^0,w,c
  4178   002F36  6E12               	movwf	??_memset^0,c
  4179   002F38  5011               	movf	(memset@n+1)^0,w,c
  4180   002F3A  2017               	addwfc	(memset@s+1)^0,w,c
  4181   002F3C  6E13               	movwf	(??_memset+1)^0,c
  4182   002F3E  0EFC               	movlw	252
  4183   002F40  2412               	addwf	??_memset^0,w,c
  4184   002F42  6ED9               	movwf	fsr2l,c
  4185   002F44  0EFF               	movlw	255
  4186   002F46  2013               	addwfc	(??_memset+1)^0,w,c
  4187   002F48  6EDA               	movwf	fsr2h,c
  4188   002F4A  C00E  FFDF         	movff	memset@c,indf2
  4189   002F4E  5011               	movf	(memset@n+1)^0,w,c
  4190   002F50  E107               	bnz	u9221
  4191   002F52  0E09               	movlw	9
  4192   002F54  5C10               	subwf	memset@n^0,w,c
  4193   002F56  B0D8               	btfsc	status,0,c
  4194   002F58  EFB0  F017         	goto	u9221
  4195   002F5C  EFB2  F017         	goto	u9220
  4196   002F60                     u9221:
  4197   002F60  EFB4  F017         	goto	l9923
  4198   002F64                     u9220:
  4199   002F64  EFE2  F017         	goto	l2472
  4200   002F68                     l9923:
  4201   002F68  C016  F012         	movff	memset@s,??_memset
  4202   002F6C  C017  F013         	movff	memset@s+1,??_memset+1
  4203   002F70  1E12               	comf	??_memset^0,f,c
  4204   002F72  1E13               	comf	(??_memset+1)^0,f,c
  4205   002F74  4A12               	infsnz	??_memset^0,f,c
  4206   002F76  2A13               	incf	(??_memset+1)^0,f,c
  4207   002F78  0E03               	movlw	3
  4208   002F7A  1412               	andwf	??_memset^0,w,c
  4209   002F7C  6E14               	movwf	memset@k^0,c
  4210   002F7E  6A15               	clrf	(memset@k+1)^0,c
  4211   002F80  5014               	movf	memset@k^0,w,c
  4212   002F82  2616               	addwf	memset@s^0,f,c
  4213   002F84  5015               	movf	(memset@k+1)^0,w,c
  4214   002F86  2217               	addwfc	(memset@s+1)^0,f,c
  4215   002F88  5014               	movf	memset@k^0,w,c
  4216   002F8A  5E10               	subwf	memset@n^0,f,c
  4217   002F8C  5015               	movf	(memset@k+1)^0,w,c
  4218   002F8E  5A11               	subwfb	(memset@n+1)^0,f,c
  4219   002F90  0EFC               	movlw	252
  4220   002F92  1610               	andwf	memset@n^0,f,c
  4221   002F94  0EFF               	movlw	255
  4222   002F96  1611               	andwf	(memset@n+1)^0,f,c
  4223   002F98  EFD9  F017         	goto	l9931
  4224   002F9C                     l9925:
  4225   002F9C  C016  FFD9         	movff	memset@s,fsr2l
  4226   002FA0  C017  FFDA         	movff	memset@s+1,fsr2h
  4227   002FA4  C00E  FFDF         	movff	memset@c,indf2
  4228   002FA8  0610               	decf	memset@n^0,f,c
  4229   002FAA  A0D8               	btfss	status,0,c
  4230   002FAC  0611               	decf	(memset@n+1)^0,f,c
  4231   002FAE  4A16               	infsnz	memset@s^0,f,c
  4232   002FB0  2A17               	incf	(memset@s+1)^0,f,c
  4233   002FB2                     l9931:
  4234   002FB2  5010               	movf	memset@n^0,w,c
  4235   002FB4  1011               	iorwf	(memset@n+1)^0,w,c
  4236   002FB6  A4D8               	btfss	status,2,c
  4237   002FB8  EFE0  F017         	goto	u9231
  4238   002FBC  EFE2  F017         	goto	u9230
  4239   002FC0                     u9231:
  4240   002FC0  EFCE  F017         	goto	l9925
  4241   002FC4                     u9230:
  4242   002FC4                     l2472:
  4243   002FC4  0012               	return		;funcret
  4244   002FC6                     __end_of_memset:
  4245                           	callstack 0
  4246                           
  4247 ;; *************** function _application_intialize *****************
  4248 ;; Defined at:
  4249 ;;		line 109 in file "application.c"
  4250 ;; Parameters:    Size  Location     Type
  4251 ;;		None
  4252 ;; Auto vars:     Size  Location     Type
  4253 ;;		None
  4254 ;; Return value:  Size  Location     Type
  4255 ;;                  1    wreg      void 
  4256 ;; Registers used:
  4257 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4258 ;; Tracked objects:
  4259 ;;		On entry : 0/0
  4260 ;;		On exit  : 0/0
  4261 ;;		Unchanged: 0/0
  4262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4267 ;;Total ram usage:        0 bytes
  4268 ;; Hardware stack levels used: 1
  4269 ;; Hardware stack levels required when called: 9
  4270 ;; This function calls:
  4271 ;;		_ecu_layer_intialize
  4272 ;; This function is called by:
  4273 ;;		_main
  4274 ;; This function uses a non-reentrant model
  4275 ;;
  4276                           
  4277                           	psect	text19
  4278   00473C                     __ptext19:
  4279                           	callstack 0
  4280   00473C                     _application_intialize:
  4281                           	callstack 21
  4282   00473C                     
  4283                           ;application.c: 110:  ecu_layer_intialize();
  4284   00473C  EC0D  F022         	call	_ecu_layer_intialize	;wreg free
  4285   004740  0012               	return		;funcret
  4286   004742                     __end_of_application_intialize:
  4287                           	callstack 0
  4288                           
  4289 ;; *************** function _ecu_layer_intialize *****************
  4290 ;; Defined at:
  4291 ;;		line 195 in file "ECU_Layer/ecu_layer_init.c"
  4292 ;; Parameters:    Size  Location     Type
  4293 ;;		None
  4294 ;; Auto vars:     Size  Location     Type
  4295 ;;  ret             1    0        unsigned char 
  4296 ;; Return value:  Size  Location     Type
  4297 ;;                  1    wreg      void 
  4298 ;; Registers used:
  4299 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4300 ;; Tracked objects:
  4301 ;;		On entry : 0/0
  4302 ;;		On exit  : 0/0
  4303 ;;		Unchanged: 0/0
  4304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4309 ;;Total ram usage:        0 bytes
  4310 ;; Hardware stack levels used: 1
  4311 ;; Hardware stack levels required when called: 8
  4312 ;; This function calls:
  4313 ;;		_ADC_Init
  4314 ;;		_EUSART_ASYNC_Init
  4315 ;;		_dc_motor_initialize
  4316 ;;		_lcd_8bit_initialize
  4317 ;;		_usart_model_init
  4318 ;; This function is called by:
  4319 ;;		_application_intialize
  4320 ;; This function uses a non-reentrant model
  4321 ;;
  4322                           
  4323                           	psect	text20
  4324   00441A                     __ptext20:
  4325                           	callstack 0
  4326   00441A                     _ecu_layer_intialize:
  4327                           	callstack 21
  4328   00441A                     
  4329                           ;ECU_Layer/ecu_layer_init.c: 198:     usart_model_init();
  4330   00441A  EC8C  F022         	call	_usart_model_init	;wreg free
  4331   00441E  0EFC               	movlw	low _dc_motor1
  4332   004420  6E19               	movwf	dc_motor_initialize@_motor^0,c
  4333   004422  0E00               	movlw	high _dc_motor1
  4334   004424  6E1A               	movwf	(dc_motor_initialize@_motor+1)^0,c
  4335   004426  ECAA  F022         	call	_dc_motor_initialize	;wreg free
  4336   00442A  0EFA               	movlw	low _dc_motor2
  4337   00442C  6E19               	movwf	dc_motor_initialize@_motor^0,c
  4338   00442E  0E00               	movlw	high _dc_motor2
  4339   004430  6E1A               	movwf	(dc_motor_initialize@_motor+1)^0,c
  4340   004432  ECAA  F022         	call	_dc_motor_initialize	;wreg free
  4341   004436  0EC7               	movlw	low _usart_obj
  4342   004438  6E4F               	movwf	EUSART_ASYNC_Init@_eusart^0,c
  4343   00443A  0E00               	movlw	high _usart_obj
  4344   00443C  6E50               	movwf	(EUSART_ASYNC_Init@_eusart+1)^0,c
  4345   00443E  EC7F  F021         	call	_EUSART_ASYNC_Init	;wreg free
  4346   004442  0EF0               	movlw	low _lcd_2
  4347   004444  6E21               	movwf	lcd_8bit_initialize@lcd^0,c
  4348   004446  0E00               	movlw	high _lcd_2
  4349   004448  6E22               	movwf	(lcd_8bit_initialize@lcd+1)^0,c
  4350   00444A  EC17  F019         	call	_lcd_8bit_initialize	;wreg free
  4351   00444E  0E75               	movlw	low _adc_1
  4352   004450  6E0F               	movwf	ADC_Init@_adc^0,c
  4353   004452  0E01               	movlw	high _adc_1
  4354   004454  6E10               	movwf	(ADC_Init@_adc+1)^0,c
  4355   004456  EC9B  F01D         	call	_ADC_Init	;wreg free
  4356   00445A  0012               	return		;funcret
  4357   00445C                     __end_of_ecu_layer_intialize:
  4358                           	callstack 0
  4359                           
  4360 ;; *************** function _usart_model_init *****************
  4361 ;; Defined at:
  4362 ;;		line 95 in file "ECU_Layer/ecu_layer_init.c"
  4363 ;; Parameters:    Size  Location     Type
  4364 ;;		None
  4365 ;; Auto vars:     Size  Location     Type
  4366 ;;		None
  4367 ;; Return value:  Size  Location     Type
  4368 ;;                  1    wreg      void 
  4369 ;; Registers used:
  4370 ;;		wreg, status,2, status,0
  4371 ;; Tracked objects:
  4372 ;;		On entry : 0/0
  4373 ;;		On exit  : 0/0
  4374 ;;		Unchanged: 0/0
  4375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4380 ;;Total ram usage:        0 bytes
  4381 ;; Hardware stack levels used: 1
  4382 ;; Hardware stack levels required when called: 4
  4383 ;; This function calls:
  4384 ;;		Nothing
  4385 ;; This function is called by:
  4386 ;;		_ecu_layer_intialize
  4387 ;; This function uses a non-reentrant model
  4388 ;;
  4389                           
  4390                           	psect	text21
  4391   004518                     __ptext21:
  4392                           	callstack 0
  4393   004518                     _usart_model_init:
  4394                           	callstack 24
  4395   004518                     
  4396                           ;ECU_Layer/ecu_layer_init.c: 97:     usart_obj.baudrate=9600;
  4397   004518  0E25               	movlw	37
  4398   00451A  0100               	movlb	0	; () banked
  4399   00451C  6FC8               	movwf	(_usart_obj+1)& (0+255),b
  4400   00451E  0E80               	movlw	128
  4401   004520  6FC7               	movwf	_usart_obj& (0+255),b
  4402                           
  4403                           ;ECU_Layer/ecu_layer_init.c: 98:     usart_obj.baudrate_gen_config =BAUDRATE_ASYN_8BIT_L
      +                          OW_SPEED;
  4404   004522  0E00               	movlw	0
  4405   004524  6FC9               	movwf	(_usart_obj+2)& (0+255),b
  4406   004526                     
  4407                           ; BSR set to: 0
  4408                           ;ECU_Layer/ecu_layer_init.c: 100:     usart_obj.usart_tx_cfg.usart_tx_enable=1;
  4409   004526  8BCA               	bsf	(_usart_obj+3)& (0+255),5,b
  4410   004528                     
  4411                           ; BSR set to: 0
  4412                           ;ECU_Layer/ecu_layer_init.c: 101:     usart_obj.usart_tx_cfg.usart_tx_interrupt_enable=0
      +                          ,
  4413   004528  9DCA               	bcf	(_usart_obj+3)& (0+255),6,b
  4414   00452A                     
  4415                           ; BSR set to: 0
  4416   00452A  9FCA               	bcf	(_usart_obj+3)& (0+255),7,b
  4417   00452C                     
  4418                           ; BSR set to: 0
  4419                           ;ECU_Layer/ecu_layer_init.c: 104:     usart_obj.usart_rx_cfg.usart_rx_enable=1;
  4420   00452C  8BCC               	bsf	(_usart_obj+5)& (0+255),5,b
  4421   00452E                     
  4422                           ; BSR set to: 0
  4423                           ;ECU_Layer/ecu_layer_init.c: 105:     usart_obj.usart_rx_cfg.usart_rx_interrupt_enable=0
      +                          ,
  4424   00452E  9DCC               	bcf	(_usart_obj+5)& (0+255),6,b
  4425   004530                     
  4426                           ; BSR set to: 0
  4427   004530  9FCC               	bcf	(_usart_obj+5)& (0+255),7,b
  4428   004532                     
  4429                           ; BSR set to: 0
  4430                           ;ECU_Layer/ecu_layer_init.c: 108:     usart_obj.EUSART_TxDefaultInterruptHandler = ((voi
      +                          d*)0);
  4431   004532  0E00               	movlw	0
  4432   004534  6FCF               	movwf	(_usart_obj+8)& (0+255),b
  4433   004536  0E00               	movlw	0
  4434   004538  6FD0               	movwf	(_usart_obj+9)& (0+255),b
  4435   00453A                     
  4436                           ; BSR set to: 0
  4437                           ;ECU_Layer/ecu_layer_init.c: 109:     usart_obj.EUSART_RxDefaultInterruptHandler = ((voi
      +                          d*)0);
  4438   00453A  0E00               	movlw	0
  4439   00453C  6FD1               	movwf	(_usart_obj+10)& (0+255),b
  4440   00453E  0E00               	movlw	0
  4441   004540  6FD2               	movwf	(_usart_obj+11)& (0+255),b
  4442   004542                     
  4443                           ; BSR set to: 0
  4444                           ;ECU_Layer/ecu_layer_init.c: 110:     usart_obj.EUSART_FramingErrorHandler = ((void*)0);
  4445   004542  0E00               	movlw	0
  4446   004544  6FD3               	movwf	(_usart_obj+12)& (0+255),b
  4447   004546  0E00               	movlw	0
  4448   004548  6FD4               	movwf	(_usart_obj+13)& (0+255),b
  4449   00454A                     
  4450                           ; BSR set to: 0
  4451                           ;ECU_Layer/ecu_layer_init.c: 111:     usart_obj.EUSART_OverrunErrorHandler = ((void*)0);
  4452   00454A  0E00               	movlw	0
  4453   00454C  6FD5               	movwf	(_usart_obj+14)& (0+255),b
  4454   00454E  0E00               	movlw	0
  4455   004550  6FD6               	movwf	(_usart_obj+15)& (0+255),b
  4456   004552                     
  4457                           ; BSR set to: 0
  4458   004552  0012               	return		;funcret
  4459   004554                     __end_of_usart_model_init:
  4460                           	callstack 0
  4461                           
  4462 ;; *************** function _lcd_8bit_initialize *****************
  4463 ;; Defined at:
  4464 ;;		line 160 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  4465 ;; Parameters:    Size  Location     Type
  4466 ;;  lcd             2   32[COMRAM] PTR const struct .
  4467 ;;		 -> lcd_2(10), 
  4468 ;; Auto vars:     Size  Location     Type
  4469 ;;  ret             1   37[COMRAM] unsigned char 
  4470 ;;  l_data_pins_    1   36[COMRAM] unsigned char 
  4471 ;; Return value:  Size  Location     Type
  4472 ;;                  1    wreg      unsigned char 
  4473 ;; Registers used:
  4474 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4475 ;; Tracked objects:
  4476 ;;		On entry : 0/0
  4477 ;;		On exit  : 0/0
  4478 ;;		Unchanged: 0/0
  4479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4480 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4481 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4482 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4483 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4484 ;;Total ram usage:        6 bytes
  4485 ;; Hardware stack levels used: 1
  4486 ;; Hardware stack levels required when called: 7
  4487 ;; This function calls:
  4488 ;;		_gpio_pin_intialize
  4489 ;;		_lcd_8bit_send_command
  4490 ;; This function is called by:
  4491 ;;		_ecu_layer_intialize
  4492 ;; This function uses a non-reentrant model
  4493 ;;
  4494                           
  4495                           	psect	text22
  4496   00322E                     __ptext22:
  4497                           	callstack 0
  4498   00322E                     _lcd_8bit_initialize:
  4499                           	callstack 21
  4500   00322E                     
  4501                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 162:     uint8 l_data_pins_counter= 0;
  4502   00322E  0E00               	movlw	0
  4503   003230  6E25               	movwf	lcd_8bit_initialize@l_data_pins_counter^0,c
  4504   003232                     
  4505                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 163:     if(((void*)0) == lcd){
  4506   003232  5021               	movf	lcd_8bit_initialize@lcd^0,w,c
  4507   003234  1022               	iorwf	(lcd_8bit_initialize@lcd+1)^0,w,c
  4508   003236  A4D8               	btfss	status,2,c
  4509   003238  EF20  F019         	goto	u6171
  4510   00323C  EF22  F019         	goto	u6170
  4511   003240                     u6171:
  4512   003240  EF26  F019         	goto	l7253
  4513   003244                     u6170:
  4514   003244                     
  4515                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 164:         ret=(Std_ReturnType)0x01;
  4516   003244  0E01               	movlw	1
  4517   003246  6E26               	movwf	lcd_8bit_initialize@ret^0,c
  4518                           
  4519                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 165:     }
  4520   003248  EFAB  F019         	goto	l7289
  4521   00324C                     l7253:
  4522                           
  4523                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 167:         ret=gpio_pin_intialize(&(lcd->lcd_rs));
  4524   00324C  C021  F015         	movff	lcd_8bit_initialize@lcd,gpio_pin_intialize@_pin_config
  4525   003250  C022  F016         	movff	lcd_8bit_initialize@lcd+1,gpio_pin_intialize@_pin_config+1
  4526   003254  ECFB  F020         	call	_gpio_pin_intialize	;wreg free
  4527   003258  6E26               	movwf	lcd_8bit_initialize@ret^0,c
  4528                           
  4529                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 168:         ret=gpio_pin_intialize(&(lcd->lcd_en));
  4530   00325A  0E01               	movlw	1
  4531   00325C  2421               	addwf	lcd_8bit_initialize@lcd^0,w,c
  4532   00325E  6E15               	movwf	gpio_pin_intialize@_pin_config^0,c
  4533   003260  0E00               	movlw	0
  4534   003262  2022               	addwfc	(lcd_8bit_initialize@lcd+1)^0,w,c
  4535   003264  6E16               	movwf	(gpio_pin_intialize@_pin_config+1)^0,c
  4536   003266  ECFB  F020         	call	_gpio_pin_intialize	;wreg free
  4537   00326A  6E26               	movwf	lcd_8bit_initialize@ret^0,c
  4538   00326C                     
  4539                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 170:         for(l_data_pins_counter=0;l_data_pins_cou
      +                          nter<8;++l_data_pins_counter){
  4540   00326C  0E00               	movlw	0
  4541   00326E  6E25               	movwf	lcd_8bit_initialize@l_data_pins_counter^0,c
  4542   003270                     l7261:
  4543   003270  5025               	movf	lcd_8bit_initialize@l_data_pins_counter^0,w,c
  4544   003272  2421               	addwf	lcd_8bit_initialize@lcd^0,w,c
  4545   003274  6E23               	movwf	??_lcd_8bit_initialize^0,c
  4546   003276  0E00               	movlw	0
  4547   003278  2022               	addwfc	(lcd_8bit_initialize@lcd+1)^0,w,c
  4548   00327A  6E24               	movwf	(??_lcd_8bit_initialize+1)^0,c
  4549   00327C  0E02               	movlw	2
  4550   00327E  2423               	addwf	??_lcd_8bit_initialize^0,w,c
  4551   003280  6E15               	movwf	gpio_pin_intialize@_pin_config^0,c
  4552   003282  0E00               	movlw	0
  4553   003284  2024               	addwfc	(??_lcd_8bit_initialize+1)^0,w,c
  4554   003286  6E16               	movwf	(gpio_pin_intialize@_pin_config+1)^0,c
  4555   003288  ECFB  F020         	call	_gpio_pin_intialize	;wreg free
  4556   00328C                     
  4557                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 173:         }
  4558   00328C  2A25               	incf	lcd_8bit_initialize@l_data_pins_counter^0,f,c
  4559   00328E  0E07               	movlw	7
  4560   003290  6425               	cpfsgt	lcd_8bit_initialize@l_data_pins_counter^0,c
  4561   003292  EF4D  F019         	goto	u6181
  4562   003296  EF4F  F019         	goto	u6180
  4563   00329A                     u6181:
  4564   00329A  EF38  F019         	goto	l7261
  4565   00329E                     u6180:
  4566   00329E                     
  4567                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 176:          _delay((unsigned long)((20)*(4000000UL/4
      +                          000.0)));
  4568   00329E  0E1A               	movlw	26
  4569   0032A0  6E23               	movwf	??_lcd_8bit_initialize^0,c
  4570   0032A2  0EF8               	movlw	248
  4571   0032A4                     u9387:
  4572   0032A4  2EE8               	decfsz	wreg,f,c
  4573   0032A6  D7FE               	bra	u9387
  4574   0032A8  2E23               	decfsz	??_lcd_8bit_initialize^0,f,c
  4575   0032AA  D7FC               	bra	u9387
  4576   0032AC  D000               	nop2	
  4577   0032AE  C021  F018         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  4578   0032B2  C022  F019         	movff	lcd_8bit_initialize@lcd+1,lcd_8bit_send_command@lcd+1
  4579   0032B6  0E38               	movlw	56
  4580   0032B8  6E1A               	movwf	lcd_8bit_send_command@command^0,c
  4581   0032BA  EC3F  F01F         	call	_lcd_8bit_send_command	;wreg free
  4582   0032BE                     
  4583                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 179:         _delay((unsigned long)((5)*(4000000UL/400
      +                          0.0)));
  4584   0032BE  0E07               	movlw	7
  4585   0032C0  6E23               	movwf	??_lcd_8bit_initialize^0,c
  4586   0032C2  0E7D               	movlw	125
  4587   0032C4                     u9397:
  4588   0032C4  2EE8               	decfsz	wreg,f,c
  4589   0032C6  D7FE               	bra	u9397
  4590   0032C8  2E23               	decfsz	??_lcd_8bit_initialize^0,f,c
  4591   0032CA  D7FC               	bra	u9397
  4592   0032CC  F000               	nop	
  4593   0032CE  C021  F018         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  4594   0032D2  C022  F019         	movff	lcd_8bit_initialize@lcd+1,lcd_8bit_send_command@lcd+1
  4595   0032D6  0E38               	movlw	56
  4596   0032D8  6E1A               	movwf	lcd_8bit_send_command@command^0,c
  4597   0032DA  EC3F  F01F         	call	_lcd_8bit_send_command	;wreg free
  4598   0032DE                     
  4599                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 182:          _delay((unsigned long)((150)*(4000000UL/
      +                          4000000.0)));
  4600   0032DE  0E32               	movlw	50
  4601   0032E0                     u9407:
  4602   0032E0  2EE8               	decfsz	wreg,f,c
  4603   0032E2  D7FE               	bra	u9407
  4604   0032E4  C021  F018         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  4605   0032E8  C022  F019         	movff	lcd_8bit_initialize@lcd+1,lcd_8bit_send_command@lcd+1
  4606   0032EC  0E38               	movlw	56
  4607   0032EE  6E1A               	movwf	lcd_8bit_send_command@command^0,c
  4608   0032F0  EC3F  F01F         	call	_lcd_8bit_send_command	;wreg free
  4609   0032F4  C021  F018         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  4610   0032F8  C022  F019         	movff	lcd_8bit_initialize@lcd+1,lcd_8bit_send_command@lcd+1
  4611   0032FC  0E01               	movlw	1
  4612   0032FE  6E1A               	movwf	lcd_8bit_send_command@command^0,c
  4613   003300  EC3F  F01F         	call	_lcd_8bit_send_command	;wreg free
  4614   003304  C021  F018         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  4615   003308  C022  F019         	movff	lcd_8bit_initialize@lcd+1,lcd_8bit_send_command@lcd+1
  4616   00330C  0E02               	movlw	2
  4617   00330E  6E1A               	movwf	lcd_8bit_send_command@command^0,c
  4618   003310  EC3F  F01F         	call	_lcd_8bit_send_command	;wreg free
  4619   003314  C021  F018         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  4620   003318  C022  F019         	movff	lcd_8bit_initialize@lcd+1,lcd_8bit_send_command@lcd+1
  4621   00331C  0E06               	movlw	6
  4622   00331E  6E1A               	movwf	lcd_8bit_send_command@command^0,c
  4623   003320  EC3F  F01F         	call	_lcd_8bit_send_command	;wreg free
  4624   003324  C021  F018         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  4625   003328  C022  F019         	movff	lcd_8bit_initialize@lcd+1,lcd_8bit_send_command@lcd+1
  4626   00332C  0E0C               	movlw	12
  4627   00332E  6E1A               	movwf	lcd_8bit_send_command@command^0,c
  4628   003330  EC3F  F01F         	call	_lcd_8bit_send_command	;wreg free
  4629   003334  C021  F018         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  4630   003338  C022  F019         	movff	lcd_8bit_initialize@lcd+1,lcd_8bit_send_command@lcd+1
  4631   00333C  0E38               	movlw	56
  4632   00333E  6E1A               	movwf	lcd_8bit_send_command@command^0,c
  4633   003340  EC3F  F01F         	call	_lcd_8bit_send_command	;wreg free
  4634   003344                     
  4635                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 191:         ret=lcd_8bit_send_command(lcd,0x80);
  4636   003344  C021  F018         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  4637   003348  C022  F019         	movff	lcd_8bit_initialize@lcd+1,lcd_8bit_send_command@lcd+1
  4638   00334C  0E80               	movlw	128
  4639   00334E  6E1A               	movwf	lcd_8bit_send_command@command^0,c
  4640   003350  EC3F  F01F         	call	_lcd_8bit_send_command	;wreg free
  4641   003354  6E26               	movwf	lcd_8bit_initialize@ret^0,c
  4642   003356                     l7289:
  4643                           
  4644                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 196:     return ret;
  4645   003356  5026               	movf	lcd_8bit_initialize@ret^0,w,c
  4646   003358  0012               	return		;funcret
  4647   00335A                     __end_of_lcd_8bit_initialize:
  4648                           	callstack 0
  4649                           
  4650 ;; *************** function _lcd_8bit_send_command *****************
  4651 ;; Defined at:
  4652 ;;		line 200 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  4653 ;; Parameters:    Size  Location     Type
  4654 ;;  lcd             2   23[COMRAM] PTR const struct .
  4655 ;;		 -> lcd_2(10), 
  4656 ;;  command         1   25[COMRAM] unsigned char 
  4657 ;; Auto vars:     Size  Location     Type
  4658 ;;  l_pins_count    1   31[COMRAM] unsigned char 
  4659 ;;  ret             1   30[COMRAM] unsigned char 
  4660 ;; Return value:  Size  Location     Type
  4661 ;;                  1    wreg      unsigned char 
  4662 ;; Registers used:
  4663 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4664 ;; Tracked objects:
  4665 ;;		On entry : 0/0
  4666 ;;		On exit  : 0/0
  4667 ;;		Unchanged: 0/0
  4668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4669 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4670 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4671 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4672 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4673 ;;Total ram usage:        9 bytes
  4674 ;; Hardware stack levels used: 1
  4675 ;; Hardware stack levels required when called: 6
  4676 ;; This function calls:
  4677 ;;		_gpio_pin_write_logic
  4678 ;;		_lcd_8bit_send_enable_signal
  4679 ;; This function is called by:
  4680 ;;		_lcd_8bit_initialize
  4681 ;;		_lcd_8bit_set_cursor
  4682 ;;		_main
  4683 ;;		_lcd_8bit_send_custom_char
  4684 ;; This function uses a non-reentrant model
  4685 ;;
  4686                           
  4687                           	psect	text23
  4688   003E7E                     __ptext23:
  4689                           	callstack 0
  4690   003E7E                     _lcd_8bit_send_command:
  4691                           	callstack 22
  4692   003E7E                     
  4693                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 202:     uint8 l_pins_counter= 0;
  4694   003E7E  0E00               	movlw	0
  4695   003E80  6E20               	movwf	lcd_8bit_send_command@l_pins_counter^0,c
  4696   003E82                     
  4697                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 203:     if(((void*)0) == lcd){
  4698   003E82  5018               	movf	lcd_8bit_send_command@lcd^0,w,c
  4699   003E84  1019               	iorwf	(lcd_8bit_send_command@lcd+1)^0,w,c
  4700   003E86  A4D8               	btfss	status,2,c
  4701   003E88  EF48  F01F         	goto	u5951
  4702   003E8C  EF4A  F01F         	goto	u5950
  4703   003E90                     u5951:
  4704   003E90  EF4E  F01F         	goto	l7067
  4705   003E94                     u5950:
  4706   003E94                     
  4707                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 204:         ret=(Std_ReturnType)0x01;
  4708   003E94  0E01               	movlw	1
  4709   003E96  6E1F               	movwf	lcd_8bit_send_command@ret^0,c
  4710                           
  4711                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 205:     }
  4712   003E98  EF85  F01F         	goto	l7083
  4713   003E9C                     l7067:
  4714   003E9C  C018  F00C         	movff	lcd_8bit_send_command@lcd,gpio_pin_write_logic@_pin_config
  4715   003EA0  C019  F00D         	movff	lcd_8bit_send_command@lcd+1,gpio_pin_write_logic@_pin_config+1
  4716   003EA4  0E00               	movlw	0
  4717   003EA6  6E0E               	movwf	gpio_pin_write_logic@logic^0,c
  4718   003EA8  ECAD  F019         	call	_gpio_pin_write_logic	;wreg free
  4719   003EAC                     
  4720                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 208:         for(l_pins_counter=0;l_pins_counter<8;++l
      +                          _pins_counter){
  4721   003EAC  0E00               	movlw	0
  4722   003EAE  6E20               	movwf	lcd_8bit_send_command@l_pins_counter^0,c
  4723   003EB0                     l7075:
  4724   003EB0  5020               	movf	lcd_8bit_send_command@l_pins_counter^0,w,c
  4725   003EB2  2418               	addwf	lcd_8bit_send_command@lcd^0,w,c
  4726   003EB4  6E1B               	movwf	??_lcd_8bit_send_command^0,c
  4727   003EB6  0E00               	movlw	0
  4728   003EB8  2019               	addwfc	(lcd_8bit_send_command@lcd+1)^0,w,c
  4729   003EBA  6E1C               	movwf	(??_lcd_8bit_send_command+1)^0,c
  4730   003EBC  0E02               	movlw	2
  4731   003EBE  241B               	addwf	??_lcd_8bit_send_command^0,w,c
  4732   003EC0  6E0C               	movwf	gpio_pin_write_logic@_pin_config^0,c
  4733   003EC2  0E00               	movlw	0
  4734   003EC4  201C               	addwfc	(??_lcd_8bit_send_command+1)^0,w,c
  4735   003EC6  6E0D               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  4736   003EC8  C020  F01D         	movff	lcd_8bit_send_command@l_pins_counter,??_lcd_8bit_send_command+2
  4737   003ECC  C01A  F01E         	movff	lcd_8bit_send_command@command,??_lcd_8bit_send_command+3
  4738   003ED0  2A1D               	incf	(??_lcd_8bit_send_command+2)^0,f,c
  4739   003ED2  EF6D  F01F         	goto	u5964
  4740   003ED6                     u5965:
  4741   003ED6  90D8               	bcf	status,0,c
  4742   003ED8  321E               	rrcf	(??_lcd_8bit_send_command+3)^0,f,c
  4743   003EDA                     u5964:
  4744   003EDA  2E1D               	decfsz	(??_lcd_8bit_send_command+2)^0,f,c
  4745   003EDC  EF6B  F01F         	goto	u5965
  4746   003EE0  501E               	movf	(??_lcd_8bit_send_command+3)^0,w,c
  4747   003EE2  0B01               	andlw	1
  4748   003EE4  6E0E               	movwf	gpio_pin_write_logic@logic^0,c
  4749   003EE6  ECAD  F019         	call	_gpio_pin_write_logic	;wreg free
  4750   003EEA                     
  4751                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 211:         }
  4752   003EEA  2A20               	incf	lcd_8bit_send_command@l_pins_counter^0,f,c
  4753   003EEC  0E07               	movlw	7
  4754   003EEE  6420               	cpfsgt	lcd_8bit_send_command@l_pins_counter^0,c
  4755   003EF0  EF7C  F01F         	goto	u5971
  4756   003EF4  EF7E  F01F         	goto	u5970
  4757   003EF8                     u5971:
  4758   003EF8  EF58  F01F         	goto	l7075
  4759   003EFC                     u5970:
  4760   003EFC                     
  4761                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 212:         ret=lcd_8bit_send_enable_signal(lcd);
  4762   003EFC  C018  F015         	movff	lcd_8bit_send_command@lcd,lcd_8bit_send_enable_signal@lcd
  4763   003F00  C019  F016         	movff	lcd_8bit_send_command@lcd+1,lcd_8bit_send_enable_signal@lcd+1
  4764   003F04  ECE0  F022         	call	_lcd_8bit_send_enable_signal	;wreg free
  4765   003F08  6E1F               	movwf	lcd_8bit_send_command@ret^0,c
  4766   003F0A                     l7083:
  4767                           
  4768                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 218:     return ret;
  4769   003F0A  501F               	movf	lcd_8bit_send_command@ret^0,w,c
  4770   003F0C  0012               	return		;funcret
  4771   003F0E                     __end_of_lcd_8bit_send_command:
  4772                           	callstack 0
  4773                           
  4774 ;; *************** function _lcd_8bit_send_enable_signal *****************
  4775 ;; Defined at:
  4776 ;;		line 401 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  4777 ;; Parameters:    Size  Location     Type
  4778 ;;  lcd             2   20[COMRAM] PTR const struct .
  4779 ;;		 -> lcd_2(10), 
  4780 ;; Auto vars:     Size  Location     Type
  4781 ;;  ret             1   22[COMRAM] unsigned char 
  4782 ;; Return value:  Size  Location     Type
  4783 ;;                  1    wreg      unsigned char 
  4784 ;; Registers used:
  4785 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4786 ;; Tracked objects:
  4787 ;;		On entry : 0/0
  4788 ;;		On exit  : 0/0
  4789 ;;		Unchanged: 0/0
  4790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4791 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4792 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4794 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4795 ;;Total ram usage:        3 bytes
  4796 ;; Hardware stack levels used: 1
  4797 ;; Hardware stack levels required when called: 5
  4798 ;; This function calls:
  4799 ;;		_gpio_pin_write_logic
  4800 ;; This function is called by:
  4801 ;;		_lcd_8bit_send_command
  4802 ;;		_lcd_8bit_send_char_data
  4803 ;; This function uses a non-reentrant model
  4804 ;;
  4805                           
  4806                           	psect	text24
  4807   0045C0                     __ptext24:
  4808                           	callstack 0
  4809   0045C0                     _lcd_8bit_send_enable_signal:
  4810                           	callstack 22
  4811   0045C0  0E01               	movlw	1
  4812   0045C2  2415               	addwf	lcd_8bit_send_enable_signal@lcd^0,w,c
  4813   0045C4  6E0C               	movwf	gpio_pin_write_logic@_pin_config^0,c
  4814   0045C6  0E00               	movlw	0
  4815   0045C8  2016               	addwfc	(lcd_8bit_send_enable_signal@lcd+1)^0,w,c
  4816   0045CA  6E0D               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  4817   0045CC  0E01               	movlw	1
  4818   0045CE  6E0E               	movwf	gpio_pin_write_logic@logic^0,c
  4819   0045D0  ECAD  F019         	call	_gpio_pin_write_logic	;wreg free
  4820   0045D4                     
  4821                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 405:     _delay((unsigned long)((5)*(4000000UL/4000000
      +                          .0)));
  4822   0045D4  D000               	nop2		;2 cycle nop
  4823   0045D6  D000               	nop2		;2 cycle nop
  4824   0045D8  F000               	nop	
  4825   0045DA                     
  4826                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 406:     ret=gpio_pin_write_logic(&(lcd->lcd_en),GPIO_
      +                          LOW);
  4827   0045DA  0E01               	movlw	1
  4828   0045DC  2415               	addwf	lcd_8bit_send_enable_signal@lcd^0,w,c
  4829   0045DE  6E0C               	movwf	gpio_pin_write_logic@_pin_config^0,c
  4830   0045E0  0E00               	movlw	0
  4831   0045E2  2016               	addwfc	(lcd_8bit_send_enable_signal@lcd+1)^0,w,c
  4832   0045E4  6E0D               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  4833   0045E6  0E00               	movlw	0
  4834   0045E8  6E0E               	movwf	gpio_pin_write_logic@logic^0,c
  4835   0045EA  ECAD  F019         	call	_gpio_pin_write_logic	;wreg free
  4836   0045EE  6E17               	movwf	lcd_8bit_send_enable_signal@ret^0,c
  4837                           
  4838                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 408:     return ret;
  4839   0045F0  5017               	movf	lcd_8bit_send_enable_signal@ret^0,w,c
  4840   0045F2  0012               	return		;funcret
  4841   0045F4                     __end_of_lcd_8bit_send_enable_signal:
  4842                           	callstack 0
  4843                           
  4844 ;; *************** function _dc_motor_initialize *****************
  4845 ;; Defined at:
  4846 ;;		line 18 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
  4847 ;; Parameters:    Size  Location     Type
  4848 ;;  _motor          2   24[COMRAM] PTR const struct .
  4849 ;;		 -> dc_motor2(2), dc_motor1(2), 
  4850 ;; Auto vars:     Size  Location     Type
  4851 ;;  ret             1    0        unsigned char 
  4852 ;; Return value:  Size  Location     Type
  4853 ;;                  1    wreg      unsigned char 
  4854 ;; Registers used:
  4855 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4856 ;; Tracked objects:
  4857 ;;		On entry : 0/0
  4858 ;;		On exit  : 0/0
  4859 ;;		Unchanged: 0/0
  4860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4861 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4864 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4865 ;;Total ram usage:        2 bytes
  4866 ;; Hardware stack levels used: 1
  4867 ;; Hardware stack levels required when called: 6
  4868 ;; This function calls:
  4869 ;;		_gpio_pin_intialize
  4870 ;; This function is called by:
  4871 ;;		_ecu_layer_intialize
  4872 ;; This function uses a non-reentrant model
  4873 ;;
  4874                           
  4875                           	psect	text25
  4876   004554                     __ptext25:
  4877                           	callstack 0
  4878   004554                     _dc_motor_initialize:
  4879                           	callstack 22
  4880   004554                     
  4881                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 20:     if(((void*)0)== _motor){
  4882   004554  5019               	movf	dc_motor_initialize@_motor^0,w,c
  4883   004556  101A               	iorwf	(dc_motor_initialize@_motor+1)^0,w,c
  4884   004558  A4D8               	btfss	status,2,c
  4885   00455A  EFB1  F022         	goto	u6191
  4886   00455E  EFB3  F022         	goto	u6190
  4887   004562                     u6191:
  4888   004562  EFB5  F022         	goto	l7299
  4889   004566                     u6190:
  4890   004566                     
  4891                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 22:     }
  4892   004566  EFC3  F022         	goto	l7301
  4893   00456A                     l7299:
  4894                           
  4895                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 25:         gpio_pin_intialize(&(_motor->dc_motor_pi
      +                          n[0x00U]));
  4896   00456A  C019  F015         	movff	dc_motor_initialize@_motor,gpio_pin_intialize@_pin_config
  4897   00456E  C01A  F016         	movff	dc_motor_initialize@_motor+1,gpio_pin_intialize@_pin_config+1
  4898   004572  ECFB  F020         	call	_gpio_pin_intialize	;wreg free
  4899                           
  4900                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 26:         gpio_pin_intialize(&(_motor->dc_motor_pi
      +                          n[0x01U]));
  4901   004576  0E01               	movlw	1
  4902   004578  2419               	addwf	dc_motor_initialize@_motor^0,w,c
  4903   00457A  6E15               	movwf	gpio_pin_intialize@_pin_config^0,c
  4904   00457C  0E00               	movlw	0
  4905   00457E  201A               	addwfc	(dc_motor_initialize@_motor+1)^0,w,c
  4906   004580  6E16               	movwf	(gpio_pin_intialize@_pin_config+1)^0,c
  4907   004582  ECFB  F020         	call	_gpio_pin_intialize	;wreg free
  4908   004586                     l7301:
  4909                           
  4910                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 29:     return ret;
  4911   004586  0E01               	movlw	1
  4912   004588  0012               	return		;funcret
  4913   00458A                     __end_of_dc_motor_initialize:
  4914                           	callstack 0
  4915                           
  4916 ;; *************** function _gpio_pin_intialize *****************
  4917 ;; Defined at:
  4918 ;;		line 153 in file "MCAL_Layer/GPIO/hal_gpio.c"
  4919 ;; Parameters:    Size  Location     Type
  4920 ;;  _pin_config     2   20[COMRAM] PTR const struct .
  4921 ;;		 -> dc_motor2.dc_motor_pin(2), dc_motor2(2), dc_motor1.dc_motor_pin(2), dc_motor1(2), 
  4922 ;;		 -> lcd_2.lcd_data(8), relay_initialize@pin_obj(1), lcd_2(10), led_initialize@pin_obj(1), 
  4923 ;; Auto vars:     Size  Location     Type
  4924 ;;  ret             1   23[COMRAM] unsigned char 
  4925 ;; Return value:  Size  Location     Type
  4926 ;;                  1    wreg      unsigned char 
  4927 ;; Registers used:
  4928 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4929 ;; Tracked objects:
  4930 ;;		On entry : 0/0
  4931 ;;		On exit  : 0/0
  4932 ;;		Unchanged: 0/0
  4933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4934 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4935 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4936 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4937 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4938 ;;Total ram usage:        4 bytes
  4939 ;; Hardware stack levels used: 1
  4940 ;; Hardware stack levels required when called: 5
  4941 ;; This function calls:
  4942 ;;		_gpio_pin_direction_intialize
  4943 ;;		_gpio_pin_write_logic
  4944 ;; This function is called by:
  4945 ;;		_lcd_8bit_initialize
  4946 ;;		_dc_motor_initialize
  4947 ;;		_seven_segment_initialize
  4948 ;;		_lcd_4bit_initialize
  4949 ;;		_keypad_initialize
  4950 ;;		_led_initialize
  4951 ;;		_relay_initialize
  4952 ;;		_CCP_Init
  4953 ;; This function uses a non-reentrant model
  4954 ;;
  4955                           
  4956                           	psect	text26
  4957   0041F6                     __ptext26:
  4958                           	callstack 0
  4959   0041F6                     _gpio_pin_intialize:
  4960                           	callstack 22
  4961   0041F6                     
  4962                           ;MCAL_Layer/GPIO/hal_gpio.c: 155:     if(((void*)0)==_pin_config || _pin_config->pin >8 
      +                          -1){
  4963   0041F6  5015               	movf	gpio_pin_intialize@_pin_config^0,w,c
  4964   0041F8  1016               	iorwf	(gpio_pin_intialize@_pin_config+1)^0,w,c
  4965   0041FA  B4D8               	btfsc	status,2,c
  4966   0041FC  EF02  F021         	goto	u5931
  4967   004200  EF04  F021         	goto	u5930
  4968   004204                     u5931:
  4969   004204  EF15  F021         	goto	l7053
  4970   004208                     u5930:
  4971   004208  C015  FFD9         	movff	gpio_pin_intialize@_pin_config,fsr2l
  4972   00420C  C016  FFDA         	movff	gpio_pin_intialize@_pin_config+1,fsr2h
  4973   004210  30DF               	rrcf	223,w,c
  4974   004212  32E8               	rrcf	wreg,f,c
  4975   004214  32E8               	rrcf	wreg,f,c
  4976   004216  0B07               	andlw	7
  4977   004218  6E17               	movwf	??_gpio_pin_intialize^0,c
  4978   00421A  0E07               	movlw	7
  4979   00421C  6417               	cpfsgt	??_gpio_pin_intialize^0,c
  4980   00421E  EF13  F021         	goto	u5941
  4981   004222  EF15  F021         	goto	u5940
  4982   004226                     u5941:
  4983   004226  EF19  F021         	goto	l7055
  4984   00422A                     u5940:
  4985   00422A                     l7053:
  4986                           
  4987                           ;MCAL_Layer/GPIO/hal_gpio.c: 156:         ret=(Std_ReturnType)0x01;
  4988   00422A  0E01               	movlw	1
  4989   00422C  6E18               	movwf	gpio_pin_intialize@ret^0,c
  4990                           
  4991                           ;MCAL_Layer/GPIO/hal_gpio.c: 157:     }
  4992   00422E  EF2F  F021         	goto	l7057
  4993   004232                     l7055:
  4994                           
  4995                           ;MCAL_Layer/GPIO/hal_gpio.c: 159:          ret=gpio_pin_direction_intialize(_pin_config)
      +                          ;
  4996   004232  C015  F00C         	movff	gpio_pin_intialize@_pin_config,gpio_pin_direction_intialize@_pin_config
  4997   004236  C016  F00D         	movff	gpio_pin_intialize@_pin_config+1,gpio_pin_direction_intialize@_pin_config+1
  4998   00423A  ECE3  F017         	call	_gpio_pin_direction_intialize	;wreg free
  4999   00423E  6E18               	movwf	gpio_pin_intialize@ret^0,c
  5000                           
  5001                           ;MCAL_Layer/GPIO/hal_gpio.c: 160:          ret=gpio_pin_write_logic(_pin_config,_pin_con
      +                          fig->logic);
  5002   004240  C015  F00C         	movff	gpio_pin_intialize@_pin_config,gpio_pin_write_logic@_pin_config
  5003   004244  C016  F00D         	movff	gpio_pin_intialize@_pin_config+1,gpio_pin_write_logic@_pin_config+1
  5004   004248  C015  FFD9         	movff	gpio_pin_intialize@_pin_config,fsr2l
  5005   00424C  C016  FFDA         	movff	gpio_pin_intialize@_pin_config+1,fsr2h
  5006   004250  0E00               	movlw	0
  5007   004252  BEDF               	btfsc	indf2,7,c
  5008   004254  0E01               	movlw	1
  5009   004256  6E0E               	movwf	gpio_pin_write_logic@logic^0,c
  5010   004258  ECAD  F019         	call	_gpio_pin_write_logic	;wreg free
  5011   00425C  6E18               	movwf	gpio_pin_intialize@ret^0,c
  5012   00425E                     l7057:
  5013                           
  5014                           ;MCAL_Layer/GPIO/hal_gpio.c: 164:      return ret;
  5015   00425E  5018               	movf	gpio_pin_intialize@ret^0,w,c
  5016   004260  0012               	return		;funcret
  5017   004262                     __end_of_gpio_pin_intialize:
  5018                           	callstack 0
  5019                           
  5020 ;; *************** function _gpio_pin_write_logic *****************
  5021 ;; Defined at:
  5022 ;;		line 77 in file "MCAL_Layer/GPIO/hal_gpio.c"
  5023 ;; Parameters:    Size  Location     Type
  5024 ;;  _pin_config     2   11[COMRAM] PTR const struct .
  5025 ;;		 -> dc_motor2.dc_motor_pin(2), dc_motor2(2), dc_motor1.dc_motor_pin(2), dc_motor1(2), 
  5026 ;;		 -> lcd_2.lcd_data(8), relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), relay_initialize@pin_obj(1), 
  5027 ;;		 -> lcd_2(10), led_turn_off@pin_obj(1), led_turn_on@pin_obj(1), led_initialize@pin_obj(1), 
  5028 ;;  logic           1   13[COMRAM] enum E2968
  5029 ;; Auto vars:     Size  Location     Type
  5030 ;;  ret             1    0        unsigned char 
  5031 ;; Return value:  Size  Location     Type
  5032 ;;                  1    wreg      unsigned char 
  5033 ;; Registers used:
  5034 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5035 ;; Tracked objects:
  5036 ;;		On entry : 0/0
  5037 ;;		On exit  : 0/0
  5038 ;;		Unchanged: 0/0
  5039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5040 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5042 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5043 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5044 ;;Total ram usage:        9 bytes
  5045 ;; Hardware stack levels used: 1
  5046 ;; Hardware stack levels required when called: 4
  5047 ;; This function calls:
  5048 ;;		Nothing
  5049 ;; This function is called by:
  5050 ;;		_lcd_8bit_send_command
  5051 ;;		_lcd_8bit_send_char_data
  5052 ;;		_lcd_8bit_send_enable_signal
  5053 ;;		_dc_motor_move_right
  5054 ;;		_dc_motor_stop
  5055 ;;		_gpio_pin_intialize
  5056 ;;		_seven_segment_write_number
  5057 ;;		_lcd_4bit_send_command
  5058 ;;		_lcd_4bit_send_char_data
  5059 ;;		_lcd_send_4bits
  5060 ;;		_lcd_4bit_send_enable_signal
  5061 ;;		_dc_motor_move_left
  5062 ;;		_keypad_get_value
  5063 ;;		_led_turn_on
  5064 ;;		_led_turn_off
  5065 ;;		_relay_turn_on
  5066 ;;		_relay_turn_off
  5067 ;; This function uses a non-reentrant model
  5068 ;;
  5069                           
  5070                           	psect	text27
  5071   00335A                     __ptext27:
  5072                           	callstack 0
  5073   00335A                     _gpio_pin_write_logic:
  5074                           	callstack 22
  5075   00335A                     
  5076                           ;MCAL_Layer/GPIO/hal_gpio.c: 79:     if(((void*)0)==_pin_config || _pin_config->pin >8 -
      +                          1){
  5077   00335A  500C               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  5078   00335C  100D               	iorwf	(gpio_pin_write_logic@_pin_config+1)^0,w,c
  5079   00335E  B4D8               	btfsc	status,2,c
  5080   003360  EFB4  F019         	goto	u4791
  5081   003364  EFB6  F019         	goto	u4790
  5082   003368                     u4791:
  5083   003368  EFC7  F019         	goto	l6417
  5084   00336C                     u4790:
  5085   00336C  C00C  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  5086   003370  C00D  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  5087   003374  30DF               	rrcf	223,w,c
  5088   003376  32E8               	rrcf	wreg,f,c
  5089   003378  32E8               	rrcf	wreg,f,c
  5090   00337A  0B07               	andlw	7
  5091   00337C  6E0F               	movwf	??_gpio_pin_write_logic^0,c
  5092   00337E  0E07               	movlw	7
  5093   003380  640F               	cpfsgt	??_gpio_pin_write_logic^0,c
  5094   003382  EFC5  F019         	goto	u4801
  5095   003386  EFC7  F019         	goto	u4800
  5096   00338A                     u4801:
  5097   00338A  EF28  F01A         	goto	l6425
  5098   00338E                     u4800:
  5099   00338E                     l6417:
  5100                           
  5101                           ;MCAL_Layer/GPIO/hal_gpio.c: 81:     }
  5102   00338E  EF3D  F01A         	goto	l6427
  5103   003392                     l6419:
  5104                           
  5105                           ;MCAL_Layer/GPIO/hal_gpio.c: 85:                 (*lat_registers[_pin_config->port] |= (
      +                          (uint8)1<<_pin_config->pin));
  5106   003392  C00C  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  5107   003396  C00D  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  5108   00339A  30DF               	rrcf	223,w,c
  5109   00339C  32E8               	rrcf	wreg,f,c
  5110   00339E  32E8               	rrcf	wreg,f,c
  5111   0033A0  0B07               	andlw	7
  5112   0033A2  6E0F               	movwf	??_gpio_pin_write_logic^0,c
  5113   0033A4  0E01               	movlw	1
  5114   0033A6  6E10               	movwf	(??_gpio_pin_write_logic+1)^0,c
  5115   0033A8  2A0F               	incf	??_gpio_pin_write_logic^0,f,c
  5116   0033AA  EFD9  F019         	goto	u4814
  5117   0033AE                     u4815:
  5118   0033AE  90D8               	bcf	status,0,c
  5119   0033B0  3610               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  5120   0033B2                     u4814:
  5121   0033B2  2E0F               	decfsz	??_gpio_pin_write_logic^0,f,c
  5122   0033B4  EFD7  F019         	goto	u4815
  5123   0033B8  C00C  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  5124   0033BC  C00D  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  5125   0033C0  50DF               	movf	223,w,c
  5126   0033C2  0B07               	andlw	7
  5127   0033C4  6E11               	movwf	(??_gpio_pin_write_logic+2)^0,c
  5128   0033C6  5011               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  5129   0033C8  0D02               	mullw	2
  5130   0033CA  0EE5               	movlw	low _lat_registers
  5131   0033CC  24F3               	addwf	243,w,c
  5132   0033CE  6ED9               	movwf	fsr2l,c
  5133   0033D0  0E00               	movlw	high _lat_registers
  5134   0033D2  20F4               	addwfc	prodh,w,c
  5135   0033D4  6EDA               	movwf	fsr2h,c
  5136   0033D6  CFDE F012          	movff	postinc2,??_gpio_pin_write_logic+3
  5137   0033DA  CFDD F013          	movff	postdec2,??_gpio_pin_write_logic+4
  5138   0033DE  C012  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  5139   0033E2  C013  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  5140   0033E6  5010               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  5141   0033E8  12DF               	iorwf	indf2,f,c
  5142                           
  5143                           ;MCAL_Layer/GPIO/hal_gpio.c: 87:                 break;
  5144   0033EA  EF3D  F01A         	goto	l6427
  5145   0033EE                     l6421:
  5146                           
  5147                           ;MCAL_Layer/GPIO/hal_gpio.c: 89:                 (*lat_registers[_pin_config->port] &= ~
      +                           ((uint8)1<<_pin_config->pin)) ;
  5148   0033EE  C00C  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  5149   0033F2  C00D  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  5150   0033F6  30DF               	rrcf	223,w,c
  5151   0033F8  32E8               	rrcf	wreg,f,c
  5152   0033FA  32E8               	rrcf	wreg,f,c
  5153   0033FC  0B07               	andlw	7
  5154   0033FE  6E0F               	movwf	??_gpio_pin_write_logic^0,c
  5155   003400  0E01               	movlw	1
  5156   003402  6E10               	movwf	(??_gpio_pin_write_logic+1)^0,c
  5157   003404  2A0F               	incf	??_gpio_pin_write_logic^0,f,c
  5158   003406  EF07  F01A         	goto	u4824
  5159   00340A                     u4825:
  5160   00340A  90D8               	bcf	status,0,c
  5161   00340C  3610               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  5162   00340E                     u4824:
  5163   00340E  2E0F               	decfsz	??_gpio_pin_write_logic^0,f,c
  5164   003410  EF05  F01A         	goto	u4825
  5165   003414  5010               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  5166   003416  0AFF               	xorlw	255
  5167   003418  6E11               	movwf	(??_gpio_pin_write_logic+2)^0,c
  5168   00341A  C00C  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  5169   00341E  C00D  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  5170   003422  50DF               	movf	223,w,c
  5171   003424  0B07               	andlw	7
  5172   003426  6E12               	movwf	(??_gpio_pin_write_logic+3)^0,c
  5173   003428  5012               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  5174   00342A  0D02               	mullw	2
  5175   00342C  0EE5               	movlw	low _lat_registers
  5176   00342E  24F3               	addwf	243,w,c
  5177   003430  6ED9               	movwf	fsr2l,c
  5178   003432  0E00               	movlw	high _lat_registers
  5179   003434  20F4               	addwfc	prodh,w,c
  5180   003436  6EDA               	movwf	fsr2h,c
  5181   003438  CFDE F013          	movff	postinc2,??_gpio_pin_write_logic+4
  5182   00343C  CFDD F014          	movff	postdec2,??_gpio_pin_write_logic+5
  5183   003440  C013  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  5184   003444  C014  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  5185   003448  5011               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  5186   00344A  16DF               	andwf	indf2,f,c
  5187                           
  5188                           ;MCAL_Layer/GPIO/hal_gpio.c: 91:                 break;
  5189   00344C  EF3D  F01A         	goto	l6427
  5190   003450                     l6425:
  5191   003450  500E               	movf	gpio_pin_write_logic@logic^0,w,c
  5192   003452  6E0F               	movwf	??_gpio_pin_write_logic^0,c
  5193   003454  6A10               	clrf	(??_gpio_pin_write_logic+1)^0,c
  5194                           
  5195                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5196                           ; Switch size 1, requested type "simple"
  5197                           ; Number of cases is 1, Range of values is 0 to 0
  5198                           ; switch strategies available:
  5199                           ; Name         Instructions Cycles
  5200                           ; simple_byte            4     3 (average)
  5201                           ;	Chosen strategy is simple_byte
  5202   003456  5010               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  5203   003458  0A00               	xorlw	0	; case 0
  5204   00345A  B4D8               	btfsc	status,2,c
  5205   00345C  EF32  F01A         	goto	l10203
  5206   003460  EFC7  F019         	goto	l6417
  5207   003464                     l10203:
  5208                           
  5209                           ; Switch size 1, requested type "simple"
  5210                           ; Number of cases is 2, Range of values is 0 to 1
  5211                           ; switch strategies available:
  5212                           ; Name         Instructions Cycles
  5213                           ; simple_byte            7     4 (average)
  5214                           ;	Chosen strategy is simple_byte
  5215   003464  500F               	movf	??_gpio_pin_write_logic^0,w,c
  5216   003466  0A00               	xorlw	0	; case 0
  5217   003468  B4D8               	btfsc	status,2,c
  5218   00346A  EFF7  F019         	goto	l6421
  5219   00346E  0A01               	xorlw	1	; case 1
  5220   003470  B4D8               	btfsc	status,2,c
  5221   003472  EFC9  F019         	goto	l6419
  5222   003476  EFC7  F019         	goto	l6417
  5223   00347A                     l6427:
  5224                           
  5225                           ;MCAL_Layer/GPIO/hal_gpio.c: 96:      return ret;
  5226   00347A  0E01               	movlw	1
  5227   00347C  0012               	return		;funcret
  5228   00347E                     __end_of_gpio_pin_write_logic:
  5229                           	callstack 0
  5230                           
  5231 ;; *************** function _gpio_pin_direction_intialize *****************
  5232 ;; Defined at:
  5233 ;;		line 24 in file "MCAL_Layer/GPIO/hal_gpio.c"
  5234 ;; Parameters:    Size  Location     Type
  5235 ;;  _pin_config     2   11[COMRAM] PTR const struct .
  5236 ;;		 -> dc_motor2.dc_motor_pin(2), dc_motor2(2), dc_motor1.dc_motor_pin(2), dc_motor1(2), 
  5237 ;;		 -> lcd_2.lcd_data(8), relay_initialize@pin_obj(1), lcd_2(10), led_initialize@pin_obj(1), 
  5238 ;; Auto vars:     Size  Location     Type
  5239 ;;  ret             1    0        unsigned char 
  5240 ;; Return value:  Size  Location     Type
  5241 ;;                  1    wreg      unsigned char 
  5242 ;; Registers used:
  5243 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5244 ;; Tracked objects:
  5245 ;;		On entry : 0/0
  5246 ;;		On exit  : 0/0
  5247 ;;		Unchanged: 0/0
  5248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5249 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5251 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5252 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5253 ;;Total ram usage:        8 bytes
  5254 ;; Hardware stack levels used: 1
  5255 ;; Hardware stack levels required when called: 4
  5256 ;; This function calls:
  5257 ;;		Nothing
  5258 ;; This function is called by:
  5259 ;;		_gpio_pin_intialize
  5260 ;;		_button_initialize
  5261 ;;		_keypad_initialize
  5262 ;;		_Interrupt_INTx_Pin_Init
  5263 ;;		_Interrupt_RBx_Pin_Init
  5264 ;; This function uses a non-reentrant model
  5265 ;;
  5266                           
  5267                           	psect	text28
  5268   002FC6                     __ptext28:
  5269                           	callstack 0
  5270   002FC6                     _gpio_pin_direction_intialize:
  5271                           	callstack 22
  5272   002FC6                     
  5273                           ;MCAL_Layer/GPIO/hal_gpio.c: 27:     if(((void*)0)==_pin_config || _pin_config->pin >8 -
      +                          1){
  5274   002FC6  500C               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  5275   002FC8  100D               	iorwf	(gpio_pin_direction_intialize@_pin_config+1)^0,w,c
  5276   002FCA  B4D8               	btfsc	status,2,c
  5277   002FCC  EFEA  F017         	goto	u4981
  5278   002FD0  EFEC  F017         	goto	u4980
  5279   002FD4                     u4981:
  5280   002FD4  EFFD  F017         	goto	l6539
  5281   002FD8                     u4980:
  5282   002FD8  C00C  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  5283   002FDC  C00D  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  5284   002FE0  30DF               	rrcf	223,w,c
  5285   002FE2  32E8               	rrcf	wreg,f,c
  5286   002FE4  32E8               	rrcf	wreg,f,c
  5287   002FE6  0B07               	andlw	7
  5288   002FE8  6E0E               	movwf	??_gpio_pin_direction_intialize^0,c
  5289   002FEA  0E07               	movlw	7
  5290   002FEC  640E               	cpfsgt	??_gpio_pin_direction_intialize^0,c
  5291   002FEE  EFFB  F017         	goto	u4991
  5292   002FF2  EFFD  F017         	goto	u4990
  5293   002FF6                     u4991:
  5294   002FF6  EF5E  F018         	goto	l6547
  5295   002FFA                     u4990:
  5296   002FFA                     l6539:
  5297                           
  5298                           ;MCAL_Layer/GPIO/hal_gpio.c: 29:     }
  5299   002FFA  EF7F  F018         	goto	l6549
  5300   002FFE                     l6541:
  5301                           
  5302                           ;MCAL_Layer/GPIO/hal_gpio.c: 33:            (*tris_registers[_pin_config->port] &= ~ ((u
      +                          int8)1<<_pin_config->pin)) ;
  5303   002FFE  C00C  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  5304   003002  C00D  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  5305   003006  30DF               	rrcf	223,w,c
  5306   003008  32E8               	rrcf	wreg,f,c
  5307   00300A  32E8               	rrcf	wreg,f,c
  5308   00300C  0B07               	andlw	7
  5309   00300E  6E0E               	movwf	??_gpio_pin_direction_intialize^0,c
  5310   003010  0E01               	movlw	1
  5311   003012  6E0F               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  5312   003014  2A0E               	incf	??_gpio_pin_direction_intialize^0,f,c
  5313   003016  EF0F  F018         	goto	u5004
  5314   00301A                     u5005:
  5315   00301A  90D8               	bcf	status,0,c
  5316   00301C  360F               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  5317   00301E                     u5004:
  5318   00301E  2E0E               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  5319   003020  EF0D  F018         	goto	u5005
  5320   003024  500F               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  5321   003026  0AFF               	xorlw	255
  5322   003028  6E10               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  5323   00302A  C00C  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  5324   00302E  C00D  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  5325   003032  50DF               	movf	223,w,c
  5326   003034  0B07               	andlw	7
  5327   003036  6E11               	movwf	(??_gpio_pin_direction_intialize+3)^0,c
  5328   003038  5011               	movf	(??_gpio_pin_direction_intialize+3)^0,w,c
  5329   00303A  0D02               	mullw	2
  5330   00303C  0E65               	movlw	low _tris_registers
  5331   00303E  24F3               	addwf	243,w,c
  5332   003040  6ED9               	movwf	fsr2l,c
  5333   003042  0E01               	movlw	high _tris_registers
  5334   003044  20F4               	addwfc	prodh,w,c
  5335   003046  6EDA               	movwf	fsr2h,c
  5336   003048  CFDE F012          	movff	postinc2,??_gpio_pin_direction_intialize+4
  5337   00304C  CFDD F013          	movff	postdec2,??_gpio_pin_direction_intialize+5
  5338   003050  C012  FFD9         	movff	??_gpio_pin_direction_intialize+4,fsr2l
  5339   003054  C013  FFDA         	movff	??_gpio_pin_direction_intialize+5,fsr2h
  5340   003058  5010               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  5341   00305A  16DF               	andwf	indf2,f,c
  5342                           
  5343                           ;MCAL_Layer/GPIO/hal_gpio.c: 34:                 break;
  5344   00305C  EF7F  F018         	goto	l6549
  5345   003060                     l6543:
  5346                           
  5347                           ;MCAL_Layer/GPIO/hal_gpio.c: 36:             (*tris_registers[_pin_config->port] |= ((ui
      +                          nt8)1<<_pin_config->pin));
  5348   003060  C00C  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  5349   003064  C00D  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  5350   003068  30DF               	rrcf	223,w,c
  5351   00306A  32E8               	rrcf	wreg,f,c
  5352   00306C  32E8               	rrcf	wreg,f,c
  5353   00306E  0B07               	andlw	7
  5354   003070  6E0E               	movwf	??_gpio_pin_direction_intialize^0,c
  5355   003072  0E01               	movlw	1
  5356   003074  6E0F               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  5357   003076  2A0E               	incf	??_gpio_pin_direction_intialize^0,f,c
  5358   003078  EF40  F018         	goto	u5014
  5359   00307C                     u5015:
  5360   00307C  90D8               	bcf	status,0,c
  5361   00307E  360F               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  5362   003080                     u5014:
  5363   003080  2E0E               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  5364   003082  EF3E  F018         	goto	u5015
  5365   003086  C00C  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  5366   00308A  C00D  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  5367   00308E  50DF               	movf	223,w,c
  5368   003090  0B07               	andlw	7
  5369   003092  6E10               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  5370   003094  5010               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  5371   003096  0D02               	mullw	2
  5372   003098  0E65               	movlw	low _tris_registers
  5373   00309A  24F3               	addwf	243,w,c
  5374   00309C  6ED9               	movwf	fsr2l,c
  5375   00309E  0E01               	movlw	high _tris_registers
  5376   0030A0  20F4               	addwfc	prodh,w,c
  5377   0030A2  6EDA               	movwf	fsr2h,c
  5378   0030A4  CFDE F011          	movff	postinc2,??_gpio_pin_direction_intialize+3
  5379   0030A8  CFDD F012          	movff	postdec2,??_gpio_pin_direction_intialize+4
  5380   0030AC  C011  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  5381   0030B0  C012  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  5382   0030B4  500F               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  5383   0030B6  12DF               	iorwf	indf2,f,c
  5384                           
  5385                           ;MCAL_Layer/GPIO/hal_gpio.c: 37:                 break;
  5386   0030B8  EF7F  F018         	goto	l6549
  5387   0030BC                     l6547:
  5388   0030BC  C00C  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  5389   0030C0  C00D  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  5390   0030C4  BCDF               	btfsc	indf2,6,c
  5391   0030C6  EF67  F018         	goto	u5021
  5392   0030CA  EF6A  F018         	goto	u5020
  5393   0030CE                     u5021:
  5394   0030CE  0E01               	movlw	1
  5395   0030D0  EF6B  F018         	goto	u5030
  5396   0030D4                     u5020:
  5397   0030D4  0E00               	movlw	0
  5398   0030D6                     u5030:
  5399   0030D6  6E0E               	movwf	??_gpio_pin_direction_intialize^0,c
  5400   0030D8  6A0F               	clrf	(??_gpio_pin_direction_intialize+1)^0,c
  5401                           
  5402                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5403                           ; Switch size 1, requested type "simple"
  5404                           ; Number of cases is 1, Range of values is 0 to 0
  5405                           ; switch strategies available:
  5406                           ; Name         Instructions Cycles
  5407                           ; simple_byte            4     3 (average)
  5408                           ;	Chosen strategy is simple_byte
  5409   0030DA  500F               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  5410   0030DC  0A00               	xorlw	0	; case 0
  5411   0030DE  B4D8               	btfsc	status,2,c
  5412   0030E0  EF74  F018         	goto	l10205
  5413   0030E4  EFFD  F017         	goto	l6539
  5414   0030E8                     l10205:
  5415                           
  5416                           ; Switch size 1, requested type "simple"
  5417                           ; Number of cases is 2, Range of values is 0 to 1
  5418                           ; switch strategies available:
  5419                           ; Name         Instructions Cycles
  5420                           ; simple_byte            7     4 (average)
  5421                           ;	Chosen strategy is simple_byte
  5422   0030E8  500E               	movf	??_gpio_pin_direction_intialize^0,w,c
  5423   0030EA  0A00               	xorlw	0	; case 0
  5424   0030EC  B4D8               	btfsc	status,2,c
  5425   0030EE  EFFF  F017         	goto	l6541
  5426   0030F2  0A01               	xorlw	1	; case 1
  5427   0030F4  B4D8               	btfsc	status,2,c
  5428   0030F6  EF30  F018         	goto	l6543
  5429   0030FA  EFFD  F017         	goto	l6539
  5430   0030FE                     l6549:
  5431                           
  5432                           ;MCAL_Layer/GPIO/hal_gpio.c: 42:     return ret;
  5433   0030FE  0E01               	movlw	1
  5434   003100  0012               	return		;funcret
  5435   003102                     __end_of_gpio_pin_direction_intialize:
  5436                           	callstack 0
  5437                           
  5438 ;; *************** function _EUSART_ASYNC_Init *****************
  5439 ;; Defined at:
  5440 ;;		line 20 in file "MCAL_Layer/USART/hal_usart.c"
  5441 ;; Parameters:    Size  Location     Type
  5442 ;;  _eusart         2   78[COMRAM] PTR const struct .
  5443 ;;		 -> usart_obj(16), 
  5444 ;; Auto vars:     Size  Location     Type
  5445 ;;  ret             1    0        unsigned char 
  5446 ;; Return value:  Size  Location     Type
  5447 ;;                  1    wreg      unsigned char 
  5448 ;; Registers used:
  5449 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5450 ;; Tracked objects:
  5451 ;;		On entry : 0/0
  5452 ;;		On exit  : 0/0
  5453 ;;		Unchanged: 0/0
  5454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5455 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5458 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5459 ;;Total ram usage:        2 bytes
  5460 ;; Hardware stack levels used: 1
  5461 ;; Hardware stack levels required when called: 6
  5462 ;; This function calls:
  5463 ;;		_EUSART_ASYNC_RX_Init
  5464 ;;		_EUSART_ASYNC_TX_Init
  5465 ;;		_EUSART_Baud_Rate_Calculation
  5466 ;; This function is called by:
  5467 ;;		_ecu_layer_intialize
  5468 ;; This function uses a non-reentrant model
  5469 ;;
  5470                           
  5471                           	psect	text29
  5472   0042FE                     __ptext29:
  5473                           	callstack 0
  5474   0042FE                     _EUSART_ASYNC_Init:
  5475                           	callstack 22
  5476   0042FE                     
  5477                           ;MCAL_Layer/USART/hal_usart.c: 23:     if(((void*)0) == _eusart){
  5478   0042FE  504F               	movf	EUSART_ASYNC_Init@_eusart^0,w,c
  5479   004300  1050               	iorwf	(EUSART_ASYNC_Init@_eusart+1)^0,w,c
  5480   004302  A4D8               	btfss	status,2,c
  5481   004304  EF86  F021         	goto	u6241
  5482   004308  EF88  F021         	goto	u6240
  5483   00430C                     u6241:
  5484   00430C  EF8A  F021         	goto	l7365
  5485   004310                     u6240:
  5486   004310                     l7363:
  5487                           
  5488                           ;MCAL_Layer/USART/hal_usart.c: 25:     }
  5489   004310  EFA2  F021         	goto	l7377
  5490   004314                     l7365:
  5491                           
  5492                           ;MCAL_Layer/USART/hal_usart.c: 27:         EUSART_Baud_Rate_Calculation(_eusart);
  5493   004314  C04F  F043         	movff	EUSART_ASYNC_Init@_eusart,EUSART_Baud_Rate_Calculation@_eusart
  5494   004318  C050  F044         	movff	EUSART_ASYNC_Init@_eusart+1,EUSART_Baud_Rate_Calculation@_eusart+1
  5495   00431C  ECC7  F00A         	call	_EUSART_Baud_Rate_Calculation	;wreg free
  5496   004320                     
  5497                           ;MCAL_Layer/USART/hal_usart.c: 28:         RCSTAbits.SPEN=0;
  5498   004320  9EAB               	bcf	171,7,c	;volatile
  5499   004322                     
  5500                           ;MCAL_Layer/USART/hal_usart.c: 29:         TRISCbits.RC6=1;
  5501   004322  8C94               	bsf	148,6,c	;volatile
  5502   004324                     
  5503                           ;MCAL_Layer/USART/hal_usart.c: 30:         TRISCbits.RC7=1;
  5504   004324  8E94               	bsf	148,7,c	;volatile
  5505                           
  5506                           ;MCAL_Layer/USART/hal_usart.c: 31:         EUSART_ASYNC_TX_Init(_eusart);
  5507   004326  C04F  F00C         	movff	EUSART_ASYNC_Init@_eusart,EUSART_ASYNC_TX_Init@_eusart
  5508   00432A  C050  F00D         	movff	EUSART_ASYNC_Init@_eusart+1,EUSART_ASYNC_TX_Init@_eusart+1
  5509   00432E  ECAC  F01B         	call	_EUSART_ASYNC_TX_Init	;wreg free
  5510                           
  5511                           ;MCAL_Layer/USART/hal_usart.c: 32:         EUSART_ASYNC_RX_Init(_eusart);
  5512   004332  C04F  F00C         	movff	EUSART_ASYNC_Init@_eusart,EUSART_ASYNC_RX_Init@_eusart
  5513   004336  C050  F00D         	movff	EUSART_ASYNC_Init@_eusart+1,EUSART_ASYNC_RX_Init@_eusart+1
  5514   00433A  ECC2  F01A         	call	_EUSART_ASYNC_RX_Init	;wreg free
  5515   00433E                     
  5516                           ;MCAL_Layer/USART/hal_usart.c: 33:         RCSTAbits.SPEN=1;
  5517   00433E  8EAB               	bsf	171,7,c	;volatile
  5518   004340  EF88  F021         	goto	l7363
  5519   004344                     l7377:
  5520                           
  5521                           ;MCAL_Layer/USART/hal_usart.c: 36:     return ret;
  5522   004344  0E01               	movlw	1
  5523   004346  0012               	return		;funcret
  5524   004348                     __end_of_EUSART_ASYNC_Init:
  5525                           	callstack 0
  5526                           
  5527 ;; *************** function _EUSART_Baud_Rate_Calculation *****************
  5528 ;; Defined at:
  5529 ;;		line 121 in file "MCAL_Layer/USART/hal_usart.c"
  5530 ;; Parameters:    Size  Location     Type
  5531 ;;  _eusart         2   66[COMRAM] PTR const struct .
  5532 ;;		 -> usart_obj(16), 
  5533 ;; Auto vars:     Size  Location     Type
  5534 ;;  Baud_Rate_Te    4   70[COMRAM] float 
  5535 ;; Return value:  Size  Location     Type
  5536 ;;                  1    wreg      void 
  5537 ;; Registers used:
  5538 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5539 ;; Tracked objects:
  5540 ;;		On entry : 0/0
  5541 ;;		On exit  : 0/0
  5542 ;;		Unchanged: 0/0
  5543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5544 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5545 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5546 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5547 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5548 ;;Total ram usage:       12 bytes
  5549 ;; Hardware stack levels used: 1
  5550 ;; Hardware stack levels required when called: 5
  5551 ;; This function calls:
  5552 ;;		___fladd
  5553 ;;		___fldiv
  5554 ;;		___fltol
  5555 ;;		___xxtofl
  5556 ;; This function is called by:
  5557 ;;		_EUSART_ASYNC_Init
  5558 ;; This function uses a non-reentrant model
  5559 ;;
  5560                           
  5561                           	psect	text30
  5562   00158E                     __ptext30:
  5563                           	callstack 0
  5564   00158E                     _EUSART_Baud_Rate_Calculation:
  5565                           	callstack 22
  5566   00158E                     
  5567                           ;MCAL_Layer/USART/hal_usart.c: 122:     float Baud_Rate_Temp=0;
  5568   00158E  0E00               	movlw	0
  5569   001590  6E47               	movwf	EUSART_Baud_Rate_Calculation@Baud_Rate_Temp^0,c
  5570   001592  0E00               	movlw	0
  5571   001594  6E48               	movwf	(EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+1)^0,c
  5572   001596  0E00               	movlw	0
  5573   001598  6E49               	movwf	(EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+2)^0,c
  5574   00159A  0E00               	movlw	0
  5575   00159C  6E4A               	movwf	(EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+3)^0,c
  5576                           
  5577                           ;MCAL_Layer/USART/hal_usart.c: 123:     switch(_eusart->baudrate_gen_config){
  5578   00159E  EFF7  F00C         	goto	l7161
  5579   0015A2                     l1680:
  5580                           
  5581                           ;MCAL_Layer/USART/hal_usart.c: 125:             TXSTAbits.SYNC= 0;
  5582   0015A2  98AC               	bcf	172,4,c	;volatile
  5583                           
  5584                           ;MCAL_Layer/USART/hal_usart.c: 126:             TXSTAbits.BRGH= 0;
  5585   0015A4  94AC               	bcf	172,2,c	;volatile
  5586                           
  5587                           ;MCAL_Layer/USART/hal_usart.c: 127:             BAUDCONbits.BRG16 = 0;
  5588   0015A6  96B8               	bcf	184,3,c	;volatile
  5589   0015A8                     
  5590                           ;MCAL_Layer/USART/hal_usart.c: 128:             Baud_Rate_Temp=((4000000UL / (float)_eus
      +                          art->baudrate) /64) - 1;
  5591   0015A8  C043  FFD9         	movff	EUSART_Baud_Rate_Calculation@_eusart,fsr2l
  5592   0015AC  C044  FFDA         	movff	EUSART_Baud_Rate_Calculation@_eusart+1,fsr2h
  5593   0015B0  CFDE F045          	movff	postinc2,??_EUSART_Baud_Rate_Calculation
  5594   0015B4  CFDD F046          	movff	postdec2,??_EUSART_Baud_Rate_Calculation+1
  5595   0015B8  C045  F00C         	movff	??_EUSART_Baud_Rate_Calculation,___xxtofl@val
  5596   0015BC  C046  F00D         	movff	??_EUSART_Baud_Rate_Calculation+1,___xxtofl@val+1
  5597   0015C0  6A0E               	clrf	(___xxtofl@val+2)^0,c
  5598   0015C2  6A0F               	clrf	(___xxtofl@val+3)^0,c
  5599   0015C4  0E00               	movlw	0
  5600   0015C6  EC83  F015         	call	___xxtofl
  5601   0015CA  C00C  F01E         	movff	?___xxtofl,___fldiv@a
  5602   0015CE  C00D  F01F         	movff	?___xxtofl+1,___fldiv@a+1
  5603   0015D2  C00E  F020         	movff	?___xxtofl+2,___fldiv@a+2
  5604   0015D6  C00F  F021         	movff	?___xxtofl+3,___fldiv@a+3
  5605   0015DA  0E00               	movlw	0
  5606   0015DC  6E1A               	movwf	___fldiv@b^0,c
  5607   0015DE  0E24               	movlw	36
  5608   0015E0  6E1B               	movwf	(___fldiv@b+1)^0,c
  5609   0015E2  0E74               	movlw	116
  5610   0015E4  6E1C               	movwf	(___fldiv@b+2)^0,c
  5611   0015E6  0E4A               	movlw	74
  5612   0015E8  6E1D               	movwf	(___fldiv@b+3)^0,c
  5613   0015EA  ECB6  F013         	call	___fldiv	;wreg free
  5614   0015EE  C01A  F04B         	movff	?___fldiv,_EUSART_Baud_Rate_Calculation$5662
  5615   0015F2  C01B  F04C         	movff	?___fldiv+1,_EUSART_Baud_Rate_Calculation$5662+1
  5616   0015F6  C01C  F04D         	movff	?___fldiv+2,_EUSART_Baud_Rate_Calculation$5662+2
  5617   0015FA  C01D  F04E         	movff	?___fldiv+3,_EUSART_Baud_Rate_Calculation$5662+3
  5618   0015FE                     
  5619                           ;MCAL_Layer/USART/hal_usart.c: 128:             Baud_Rate_Temp=((4000000UL / (float)_eus
      +                          art->baudrate) /64) - 1;
  5620   0015FE  0E00               	movlw	0
  5621   001600  6E1E               	movwf	___fldiv@a^0,c
  5622   001602  0E00               	movlw	0
  5623   001604  6E1F               	movwf	(___fldiv@a+1)^0,c
  5624   001606  0E80               	movlw	128
  5625   001608  6E20               	movwf	(___fldiv@a+2)^0,c
  5626   00160A  0E42               	movlw	66
  5627   00160C  6E21               	movwf	(___fldiv@a+3)^0,c
  5628   00160E  C04B  F01A         	movff	_EUSART_Baud_Rate_Calculation$5662,___fldiv@b
  5629   001612  C04C  F01B         	movff	_EUSART_Baud_Rate_Calculation$5662+1,___fldiv@b+1
  5630   001616  C04D  F01C         	movff	_EUSART_Baud_Rate_Calculation$5662+2,___fldiv@b+2
  5631   00161A  C04E  F01D         	movff	_EUSART_Baud_Rate_Calculation$5662+3,___fldiv@b+3
  5632   00161E  ECB6  F013         	call	___fldiv	;wreg free
  5633   001622  C01A  F033         	movff	?___fldiv,___fladd@b
  5634   001626  C01B  F034         	movff	?___fldiv+1,___fladd@b+1
  5635   00162A  C01C  F035         	movff	?___fldiv+2,___fladd@b+2
  5636   00162E  C01D  F036         	movff	?___fldiv+3,___fladd@b+3
  5637   001632  0E00               	movlw	0
  5638   001634  6E37               	movwf	___fladd@a^0,c
  5639   001636  0E00               	movlw	0
  5640   001638  6E38               	movwf	(___fladd@a+1)^0,c
  5641   00163A  0E80               	movlw	128
  5642   00163C  6E39               	movwf	(___fladd@a+2)^0,c
  5643   00163E  0EBF               	movlw	191
  5644   001640  6E3A               	movwf	(___fladd@a+3)^0,c
  5645   001642  EC3E  F00D         	call	___fladd	;wreg free
  5646   001646  C033  F047         	movff	?___fladd,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp
  5647   00164A  C034  F048         	movff	?___fladd+1,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+1
  5648   00164E  C035  F049         	movff	?___fladd+2,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+2
  5649   001652  C036  F04A         	movff	?___fladd+3,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+3
  5650                           
  5651                           ;MCAL_Layer/USART/hal_usart.c: 129:             break;
  5652   001656  EF22  F00D         	goto	l7163
  5653   00165A                     l1682:
  5654                           
  5655                           ;MCAL_Layer/USART/hal_usart.c: 131:             TXSTAbits.SYNC= 0;
  5656   00165A  98AC               	bcf	172,4,c	;volatile
  5657                           
  5658                           ;MCAL_Layer/USART/hal_usart.c: 132:             TXSTAbits.BRGH= 1;
  5659   00165C  84AC               	bsf	172,2,c	;volatile
  5660                           
  5661                           ;MCAL_Layer/USART/hal_usart.c: 133:             BAUDCONbits.BRG16 = 0;
  5662   00165E  96B8               	bcf	184,3,c	;volatile
  5663   001660                     
  5664                           ;MCAL_Layer/USART/hal_usart.c: 134:             Baud_Rate_Temp=((4000000UL / (float)_eus
      +                          art->baudrate) /16) - 1;
  5665   001660  C043  FFD9         	movff	EUSART_Baud_Rate_Calculation@_eusart,fsr2l
  5666   001664  C044  FFDA         	movff	EUSART_Baud_Rate_Calculation@_eusart+1,fsr2h
  5667   001668  CFDE F045          	movff	postinc2,??_EUSART_Baud_Rate_Calculation
  5668   00166C  CFDD F046          	movff	postdec2,??_EUSART_Baud_Rate_Calculation+1
  5669   001670  C045  F00C         	movff	??_EUSART_Baud_Rate_Calculation,___xxtofl@val
  5670   001674  C046  F00D         	movff	??_EUSART_Baud_Rate_Calculation+1,___xxtofl@val+1
  5671   001678  6A0E               	clrf	(___xxtofl@val+2)^0,c
  5672   00167A  6A0F               	clrf	(___xxtofl@val+3)^0,c
  5673   00167C  0E00               	movlw	0
  5674   00167E  EC83  F015         	call	___xxtofl
  5675   001682  C00C  F01E         	movff	?___xxtofl,___fldiv@a
  5676   001686  C00D  F01F         	movff	?___xxtofl+1,___fldiv@a+1
  5677   00168A  C00E  F020         	movff	?___xxtofl+2,___fldiv@a+2
  5678   00168E  C00F  F021         	movff	?___xxtofl+3,___fldiv@a+3
  5679   001692  0E00               	movlw	0
  5680   001694  6E1A               	movwf	___fldiv@b^0,c
  5681   001696  0E24               	movlw	36
  5682   001698  6E1B               	movwf	(___fldiv@b+1)^0,c
  5683   00169A  0E74               	movlw	116
  5684   00169C  6E1C               	movwf	(___fldiv@b+2)^0,c
  5685   00169E  0E4A               	movlw	74
  5686   0016A0  6E1D               	movwf	(___fldiv@b+3)^0,c
  5687   0016A2  ECB6  F013         	call	___fldiv	;wreg free
  5688   0016A6  C01A  F04B         	movff	?___fldiv,_EUSART_Baud_Rate_Calculation$5662
  5689   0016AA  C01B  F04C         	movff	?___fldiv+1,_EUSART_Baud_Rate_Calculation$5662+1
  5690   0016AE  C01C  F04D         	movff	?___fldiv+2,_EUSART_Baud_Rate_Calculation$5662+2
  5691   0016B2  C01D  F04E         	movff	?___fldiv+3,_EUSART_Baud_Rate_Calculation$5662+3
  5692   0016B6                     
  5693                           ;MCAL_Layer/USART/hal_usart.c: 134:             Baud_Rate_Temp=((4000000UL / (float)_eus
      +                          art->baudrate) /16) - 1;
  5694   0016B6  0E00               	movlw	0
  5695   0016B8  6E1E               	movwf	___fldiv@a^0,c
  5696   0016BA  0E00               	movlw	0
  5697   0016BC  6E1F               	movwf	(___fldiv@a+1)^0,c
  5698   0016BE  0E80               	movlw	128
  5699   0016C0  6E20               	movwf	(___fldiv@a+2)^0,c
  5700   0016C2  0E41               	movlw	65
  5701   0016C4  6E21               	movwf	(___fldiv@a+3)^0,c
  5702   0016C6  C04B  F01A         	movff	_EUSART_Baud_Rate_Calculation$5662,___fldiv@b
  5703   0016CA  C04C  F01B         	movff	_EUSART_Baud_Rate_Calculation$5662+1,___fldiv@b+1
  5704   0016CE  C04D  F01C         	movff	_EUSART_Baud_Rate_Calculation$5662+2,___fldiv@b+2
  5705   0016D2  C04E  F01D         	movff	_EUSART_Baud_Rate_Calculation$5662+3,___fldiv@b+3
  5706   0016D6  ECB6  F013         	call	___fldiv	;wreg free
  5707   0016DA  C01A  F033         	movff	?___fldiv,___fladd@b
  5708   0016DE  C01B  F034         	movff	?___fldiv+1,___fladd@b+1
  5709   0016E2  C01C  F035         	movff	?___fldiv+2,___fladd@b+2
  5710   0016E6  C01D  F036         	movff	?___fldiv+3,___fladd@b+3
  5711   0016EA  0E00               	movlw	0
  5712   0016EC  6E37               	movwf	___fladd@a^0,c
  5713   0016EE  0E00               	movlw	0
  5714   0016F0  6E38               	movwf	(___fladd@a+1)^0,c
  5715   0016F2  0E80               	movlw	128
  5716   0016F4  6E39               	movwf	(___fladd@a+2)^0,c
  5717   0016F6  0EBF               	movlw	191
  5718   0016F8  6E3A               	movwf	(___fladd@a+3)^0,c
  5719   0016FA  EC3E  F00D         	call	___fladd	;wreg free
  5720   0016FE  C033  F047         	movff	?___fladd,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp
  5721   001702  C034  F048         	movff	?___fladd+1,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+1
  5722   001706  C035  F049         	movff	?___fladd+2,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+2
  5723   00170A  C036  F04A         	movff	?___fladd+3,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+3
  5724                           
  5725                           ;MCAL_Layer/USART/hal_usart.c: 135:             break;
  5726   00170E  EF22  F00D         	goto	l7163
  5727   001712                     l1683:
  5728                           
  5729                           ;MCAL_Layer/USART/hal_usart.c: 137:             TXSTAbits.SYNC= 0;
  5730   001712  98AC               	bcf	172,4,c	;volatile
  5731                           
  5732                           ;MCAL_Layer/USART/hal_usart.c: 138:             TXSTAbits.BRGH= 0;
  5733   001714  94AC               	bcf	172,2,c	;volatile
  5734                           
  5735                           ;MCAL_Layer/USART/hal_usart.c: 139:             BAUDCONbits.BRG16 = 1;
  5736   001716  86B8               	bsf	184,3,c	;volatile
  5737   001718                     
  5738                           ;MCAL_Layer/USART/hal_usart.c: 140:             Baud_Rate_Temp=((4000000UL / (float)_eus
      +                          art->baudrate) /16) - 1;
  5739   001718  C043  FFD9         	movff	EUSART_Baud_Rate_Calculation@_eusart,fsr2l
  5740   00171C  C044  FFDA         	movff	EUSART_Baud_Rate_Calculation@_eusart+1,fsr2h
  5741   001720  CFDE F045          	movff	postinc2,??_EUSART_Baud_Rate_Calculation
  5742   001724  CFDD F046          	movff	postdec2,??_EUSART_Baud_Rate_Calculation+1
  5743   001728  C045  F00C         	movff	??_EUSART_Baud_Rate_Calculation,___xxtofl@val
  5744   00172C  C046  F00D         	movff	??_EUSART_Baud_Rate_Calculation+1,___xxtofl@val+1
  5745   001730  6A0E               	clrf	(___xxtofl@val+2)^0,c
  5746   001732  6A0F               	clrf	(___xxtofl@val+3)^0,c
  5747   001734  0E00               	movlw	0
  5748   001736  EC83  F015         	call	___xxtofl
  5749   00173A  C00C  F01E         	movff	?___xxtofl,___fldiv@a
  5750   00173E  C00D  F01F         	movff	?___xxtofl+1,___fldiv@a+1
  5751   001742  C00E  F020         	movff	?___xxtofl+2,___fldiv@a+2
  5752   001746  C00F  F021         	movff	?___xxtofl+3,___fldiv@a+3
  5753   00174A  0E00               	movlw	0
  5754   00174C  6E1A               	movwf	___fldiv@b^0,c
  5755   00174E  0E24               	movlw	36
  5756   001750  6E1B               	movwf	(___fldiv@b+1)^0,c
  5757   001752  0E74               	movlw	116
  5758   001754  6E1C               	movwf	(___fldiv@b+2)^0,c
  5759   001756  0E4A               	movlw	74
  5760   001758  6E1D               	movwf	(___fldiv@b+3)^0,c
  5761   00175A  ECB6  F013         	call	___fldiv	;wreg free
  5762   00175E  C01A  F04B         	movff	?___fldiv,_EUSART_Baud_Rate_Calculation$5662
  5763   001762  C01B  F04C         	movff	?___fldiv+1,_EUSART_Baud_Rate_Calculation$5662+1
  5764   001766  C01C  F04D         	movff	?___fldiv+2,_EUSART_Baud_Rate_Calculation$5662+2
  5765   00176A  C01D  F04E         	movff	?___fldiv+3,_EUSART_Baud_Rate_Calculation$5662+3
  5766   00176E                     
  5767                           ;MCAL_Layer/USART/hal_usart.c: 140:             Baud_Rate_Temp=((4000000UL / (float)_eus
      +                          art->baudrate) /16) - 1;
  5768   00176E  0E00               	movlw	0
  5769   001770  6E1E               	movwf	___fldiv@a^0,c
  5770   001772  0E00               	movlw	0
  5771   001774  6E1F               	movwf	(___fldiv@a+1)^0,c
  5772   001776  0E80               	movlw	128
  5773   001778  6E20               	movwf	(___fldiv@a+2)^0,c
  5774   00177A  0E41               	movlw	65
  5775   00177C  6E21               	movwf	(___fldiv@a+3)^0,c
  5776   00177E  C04B  F01A         	movff	_EUSART_Baud_Rate_Calculation$5662,___fldiv@b
  5777   001782  C04C  F01B         	movff	_EUSART_Baud_Rate_Calculation$5662+1,___fldiv@b+1
  5778   001786  C04D  F01C         	movff	_EUSART_Baud_Rate_Calculation$5662+2,___fldiv@b+2
  5779   00178A  C04E  F01D         	movff	_EUSART_Baud_Rate_Calculation$5662+3,___fldiv@b+3
  5780   00178E  ECB6  F013         	call	___fldiv	;wreg free
  5781   001792  C01A  F033         	movff	?___fldiv,___fladd@b
  5782   001796  C01B  F034         	movff	?___fldiv+1,___fladd@b+1
  5783   00179A  C01C  F035         	movff	?___fldiv+2,___fladd@b+2
  5784   00179E  C01D  F036         	movff	?___fldiv+3,___fladd@b+3
  5785   0017A2  0E00               	movlw	0
  5786   0017A4  6E37               	movwf	___fladd@a^0,c
  5787   0017A6  0E00               	movlw	0
  5788   0017A8  6E38               	movwf	(___fladd@a+1)^0,c
  5789   0017AA  0E80               	movlw	128
  5790   0017AC  6E39               	movwf	(___fladd@a+2)^0,c
  5791   0017AE  0EBF               	movlw	191
  5792   0017B0  6E3A               	movwf	(___fladd@a+3)^0,c
  5793   0017B2  EC3E  F00D         	call	___fladd	;wreg free
  5794   0017B6  C033  F047         	movff	?___fladd,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp
  5795   0017BA  C034  F048         	movff	?___fladd+1,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+1
  5796   0017BE  C035  F049         	movff	?___fladd+2,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+2
  5797   0017C2  C036  F04A         	movff	?___fladd+3,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+3
  5798                           
  5799                           ;MCAL_Layer/USART/hal_usart.c: 141:             break;
  5800   0017C6  EF22  F00D         	goto	l7163
  5801   0017CA                     l1684:
  5802                           
  5803                           ;MCAL_Layer/USART/hal_usart.c: 143:             TXSTAbits.SYNC= 0;
  5804   0017CA  98AC               	bcf	172,4,c	;volatile
  5805                           
  5806                           ;MCAL_Layer/USART/hal_usart.c: 144:             TXSTAbits.BRGH= 1;
  5807   0017CC  84AC               	bsf	172,2,c	;volatile
  5808                           
  5809                           ;MCAL_Layer/USART/hal_usart.c: 145:             BAUDCONbits.BRG16 = 1;
  5810   0017CE  86B8               	bsf	184,3,c	;volatile
  5811   0017D0                     
  5812                           ;MCAL_Layer/USART/hal_usart.c: 146:             Baud_Rate_Temp=((4000000UL / (float)_eus
      +                          art->baudrate) /4) - 1;
  5813   0017D0  C043  FFD9         	movff	EUSART_Baud_Rate_Calculation@_eusart,fsr2l
  5814   0017D4  C044  FFDA         	movff	EUSART_Baud_Rate_Calculation@_eusart+1,fsr2h
  5815   0017D8  CFDE F045          	movff	postinc2,??_EUSART_Baud_Rate_Calculation
  5816   0017DC  CFDD F046          	movff	postdec2,??_EUSART_Baud_Rate_Calculation+1
  5817   0017E0  C045  F00C         	movff	??_EUSART_Baud_Rate_Calculation,___xxtofl@val
  5818   0017E4  C046  F00D         	movff	??_EUSART_Baud_Rate_Calculation+1,___xxtofl@val+1
  5819   0017E8  6A0E               	clrf	(___xxtofl@val+2)^0,c
  5820   0017EA  6A0F               	clrf	(___xxtofl@val+3)^0,c
  5821   0017EC  0E00               	movlw	0
  5822   0017EE  EC83  F015         	call	___xxtofl
  5823   0017F2  C00C  F01E         	movff	?___xxtofl,___fldiv@a
  5824   0017F6  C00D  F01F         	movff	?___xxtofl+1,___fldiv@a+1
  5825   0017FA  C00E  F020         	movff	?___xxtofl+2,___fldiv@a+2
  5826   0017FE  C00F  F021         	movff	?___xxtofl+3,___fldiv@a+3
  5827   001802  0E00               	movlw	0
  5828   001804  6E1A               	movwf	___fldiv@b^0,c
  5829   001806  0E24               	movlw	36
  5830   001808  6E1B               	movwf	(___fldiv@b+1)^0,c
  5831   00180A  0E74               	movlw	116
  5832   00180C  6E1C               	movwf	(___fldiv@b+2)^0,c
  5833   00180E  0E4A               	movlw	74
  5834   001810  6E1D               	movwf	(___fldiv@b+3)^0,c
  5835   001812  ECB6  F013         	call	___fldiv	;wreg free
  5836   001816  C01A  F04B         	movff	?___fldiv,_EUSART_Baud_Rate_Calculation$5662
  5837   00181A  C01B  F04C         	movff	?___fldiv+1,_EUSART_Baud_Rate_Calculation$5662+1
  5838   00181E  C01C  F04D         	movff	?___fldiv+2,_EUSART_Baud_Rate_Calculation$5662+2
  5839   001822  C01D  F04E         	movff	?___fldiv+3,_EUSART_Baud_Rate_Calculation$5662+3
  5840   001826                     
  5841                           ;MCAL_Layer/USART/hal_usart.c: 146:             Baud_Rate_Temp=((4000000UL / (float)_eus
      +                          art->baudrate) /4) - 1;
  5842   001826  0E00               	movlw	0
  5843   001828  6E1E               	movwf	___fldiv@a^0,c
  5844   00182A  0E00               	movlw	0
  5845   00182C  6E1F               	movwf	(___fldiv@a+1)^0,c
  5846   00182E  0E80               	movlw	128
  5847   001830  6E20               	movwf	(___fldiv@a+2)^0,c
  5848   001832  0E40               	movlw	64
  5849   001834  6E21               	movwf	(___fldiv@a+3)^0,c
  5850   001836  C04B  F01A         	movff	_EUSART_Baud_Rate_Calculation$5662,___fldiv@b
  5851   00183A  C04C  F01B         	movff	_EUSART_Baud_Rate_Calculation$5662+1,___fldiv@b+1
  5852   00183E  C04D  F01C         	movff	_EUSART_Baud_Rate_Calculation$5662+2,___fldiv@b+2
  5853   001842  C04E  F01D         	movff	_EUSART_Baud_Rate_Calculation$5662+3,___fldiv@b+3
  5854   001846  ECB6  F013         	call	___fldiv	;wreg free
  5855   00184A  C01A  F033         	movff	?___fldiv,___fladd@b
  5856   00184E  C01B  F034         	movff	?___fldiv+1,___fladd@b+1
  5857   001852  C01C  F035         	movff	?___fldiv+2,___fladd@b+2
  5858   001856  C01D  F036         	movff	?___fldiv+3,___fladd@b+3
  5859   00185A  0E00               	movlw	0
  5860   00185C  6E37               	movwf	___fladd@a^0,c
  5861   00185E  0E00               	movlw	0
  5862   001860  6E38               	movwf	(___fladd@a+1)^0,c
  5863   001862  0E80               	movlw	128
  5864   001864  6E39               	movwf	(___fladd@a+2)^0,c
  5865   001866  0EBF               	movlw	191
  5866   001868  6E3A               	movwf	(___fladd@a+3)^0,c
  5867   00186A  EC3E  F00D         	call	___fladd	;wreg free
  5868   00186E  C033  F047         	movff	?___fladd,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp
  5869   001872  C034  F048         	movff	?___fladd+1,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+1
  5870   001876  C035  F049         	movff	?___fladd+2,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+2
  5871   00187A  C036  F04A         	movff	?___fladd+3,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+3
  5872                           
  5873                           ;MCAL_Layer/USART/hal_usart.c: 147:             break;
  5874   00187E  EF22  F00D         	goto	l7163
  5875   001882                     l1685:
  5876                           
  5877                           ;MCAL_Layer/USART/hal_usart.c: 149:             TXSTAbits.SYNC= 1;
  5878   001882  88AC               	bsf	172,4,c	;volatile
  5879                           
  5880                           ;MCAL_Layer/USART/hal_usart.c: 150:             BAUDCONbits.BRG16 = 0;
  5881   001884  96B8               	bcf	184,3,c	;volatile
  5882   001886                     
  5883                           ;MCAL_Layer/USART/hal_usart.c: 151:             Baud_Rate_Temp=((4000000UL / (float)_eus
      +                          art->baudrate) /4) - 1;
  5884   001886  C043  FFD9         	movff	EUSART_Baud_Rate_Calculation@_eusart,fsr2l
  5885   00188A  C044  FFDA         	movff	EUSART_Baud_Rate_Calculation@_eusart+1,fsr2h
  5886   00188E  CFDE F045          	movff	postinc2,??_EUSART_Baud_Rate_Calculation
  5887   001892  CFDD F046          	movff	postdec2,??_EUSART_Baud_Rate_Calculation+1
  5888   001896  C045  F00C         	movff	??_EUSART_Baud_Rate_Calculation,___xxtofl@val
  5889   00189A  C046  F00D         	movff	??_EUSART_Baud_Rate_Calculation+1,___xxtofl@val+1
  5890   00189E  6A0E               	clrf	(___xxtofl@val+2)^0,c
  5891   0018A0  6A0F               	clrf	(___xxtofl@val+3)^0,c
  5892   0018A2  0E00               	movlw	0
  5893   0018A4  EC83  F015         	call	___xxtofl
  5894   0018A8  C00C  F01E         	movff	?___xxtofl,___fldiv@a
  5895   0018AC  C00D  F01F         	movff	?___xxtofl+1,___fldiv@a+1
  5896   0018B0  C00E  F020         	movff	?___xxtofl+2,___fldiv@a+2
  5897   0018B4  C00F  F021         	movff	?___xxtofl+3,___fldiv@a+3
  5898   0018B8  0E00               	movlw	0
  5899   0018BA  6E1A               	movwf	___fldiv@b^0,c
  5900   0018BC  0E24               	movlw	36
  5901   0018BE  6E1B               	movwf	(___fldiv@b+1)^0,c
  5902   0018C0  0E74               	movlw	116
  5903   0018C2  6E1C               	movwf	(___fldiv@b+2)^0,c
  5904   0018C4  0E4A               	movlw	74
  5905   0018C6  6E1D               	movwf	(___fldiv@b+3)^0,c
  5906   0018C8  ECB6  F013         	call	___fldiv	;wreg free
  5907   0018CC  C01A  F04B         	movff	?___fldiv,_EUSART_Baud_Rate_Calculation$5662
  5908   0018D0  C01B  F04C         	movff	?___fldiv+1,_EUSART_Baud_Rate_Calculation$5662+1
  5909   0018D4  C01C  F04D         	movff	?___fldiv+2,_EUSART_Baud_Rate_Calculation$5662+2
  5910   0018D8  C01D  F04E         	movff	?___fldiv+3,_EUSART_Baud_Rate_Calculation$5662+3
  5911   0018DC                     
  5912                           ;MCAL_Layer/USART/hal_usart.c: 151:             Baud_Rate_Temp=((4000000UL / (float)_eus
      +                          art->baudrate) /4) - 1;
  5913   0018DC  0E00               	movlw	0
  5914   0018DE  6E1E               	movwf	___fldiv@a^0,c
  5915   0018E0  0E00               	movlw	0
  5916   0018E2  6E1F               	movwf	(___fldiv@a+1)^0,c
  5917   0018E4  0E80               	movlw	128
  5918   0018E6  6E20               	movwf	(___fldiv@a+2)^0,c
  5919   0018E8  0E40               	movlw	64
  5920   0018EA  6E21               	movwf	(___fldiv@a+3)^0,c
  5921   0018EC  C04B  F01A         	movff	_EUSART_Baud_Rate_Calculation$5662,___fldiv@b
  5922   0018F0  C04C  F01B         	movff	_EUSART_Baud_Rate_Calculation$5662+1,___fldiv@b+1
  5923   0018F4  C04D  F01C         	movff	_EUSART_Baud_Rate_Calculation$5662+2,___fldiv@b+2
  5924   0018F8  C04E  F01D         	movff	_EUSART_Baud_Rate_Calculation$5662+3,___fldiv@b+3
  5925   0018FC  ECB6  F013         	call	___fldiv	;wreg free
  5926   001900  C01A  F033         	movff	?___fldiv,___fladd@b
  5927   001904  C01B  F034         	movff	?___fldiv+1,___fladd@b+1
  5928   001908  C01C  F035         	movff	?___fldiv+2,___fladd@b+2
  5929   00190C  C01D  F036         	movff	?___fldiv+3,___fladd@b+3
  5930   001910  0E00               	movlw	0
  5931   001912  6E37               	movwf	___fladd@a^0,c
  5932   001914  0E00               	movlw	0
  5933   001916  6E38               	movwf	(___fladd@a+1)^0,c
  5934   001918  0E80               	movlw	128
  5935   00191A  6E39               	movwf	(___fladd@a+2)^0,c
  5936   00191C  0EBF               	movlw	191
  5937   00191E  6E3A               	movwf	(___fladd@a+3)^0,c
  5938   001920  EC3E  F00D         	call	___fladd	;wreg free
  5939   001924  C033  F047         	movff	?___fladd,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp
  5940   001928  C034  F048         	movff	?___fladd+1,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+1
  5941   00192C  C035  F049         	movff	?___fladd+2,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+2
  5942   001930  C036  F04A         	movff	?___fladd+3,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+3
  5943                           
  5944                           ;MCAL_Layer/USART/hal_usart.c: 152:             break;
  5945   001934  EF22  F00D         	goto	l7163
  5946   001938                     l1686:
  5947                           
  5948                           ;MCAL_Layer/USART/hal_usart.c: 154:             TXSTAbits.SYNC= 1;
  5949   001938  88AC               	bsf	172,4,c	;volatile
  5950                           
  5951                           ;MCAL_Layer/USART/hal_usart.c: 155:             BAUDCONbits.BRG16 = 1;
  5952   00193A  86B8               	bsf	184,3,c	;volatile
  5953   00193C                     
  5954                           ;MCAL_Layer/USART/hal_usart.c: 156:             Baud_Rate_Temp=((4000000UL / (float)_eus
      +                          art->baudrate) /4) - 1;
  5955   00193C  C043  FFD9         	movff	EUSART_Baud_Rate_Calculation@_eusart,fsr2l
  5956   001940  C044  FFDA         	movff	EUSART_Baud_Rate_Calculation@_eusart+1,fsr2h
  5957   001944  CFDE F045          	movff	postinc2,??_EUSART_Baud_Rate_Calculation
  5958   001948  CFDD F046          	movff	postdec2,??_EUSART_Baud_Rate_Calculation+1
  5959   00194C  C045  F00C         	movff	??_EUSART_Baud_Rate_Calculation,___xxtofl@val
  5960   001950  C046  F00D         	movff	??_EUSART_Baud_Rate_Calculation+1,___xxtofl@val+1
  5961   001954  6A0E               	clrf	(___xxtofl@val+2)^0,c
  5962   001956  6A0F               	clrf	(___xxtofl@val+3)^0,c
  5963   001958  0E00               	movlw	0
  5964   00195A  EC83  F015         	call	___xxtofl
  5965   00195E  C00C  F01E         	movff	?___xxtofl,___fldiv@a
  5966   001962  C00D  F01F         	movff	?___xxtofl+1,___fldiv@a+1
  5967   001966  C00E  F020         	movff	?___xxtofl+2,___fldiv@a+2
  5968   00196A  C00F  F021         	movff	?___xxtofl+3,___fldiv@a+3
  5969   00196E  0E00               	movlw	0
  5970   001970  6E1A               	movwf	___fldiv@b^0,c
  5971   001972  0E24               	movlw	36
  5972   001974  6E1B               	movwf	(___fldiv@b+1)^0,c
  5973   001976  0E74               	movlw	116
  5974   001978  6E1C               	movwf	(___fldiv@b+2)^0,c
  5975   00197A  0E4A               	movlw	74
  5976   00197C  6E1D               	movwf	(___fldiv@b+3)^0,c
  5977   00197E  ECB6  F013         	call	___fldiv	;wreg free
  5978   001982  C01A  F04B         	movff	?___fldiv,_EUSART_Baud_Rate_Calculation$5662
  5979   001986  C01B  F04C         	movff	?___fldiv+1,_EUSART_Baud_Rate_Calculation$5662+1
  5980   00198A  C01C  F04D         	movff	?___fldiv+2,_EUSART_Baud_Rate_Calculation$5662+2
  5981   00198E  C01D  F04E         	movff	?___fldiv+3,_EUSART_Baud_Rate_Calculation$5662+3
  5982   001992                     
  5983                           ;MCAL_Layer/USART/hal_usart.c: 156:             Baud_Rate_Temp=((4000000UL / (float)_eus
      +                          art->baudrate) /4) - 1;
  5984   001992  0E00               	movlw	0
  5985   001994  6E1E               	movwf	___fldiv@a^0,c
  5986   001996  0E00               	movlw	0
  5987   001998  6E1F               	movwf	(___fldiv@a+1)^0,c
  5988   00199A  0E80               	movlw	128
  5989   00199C  6E20               	movwf	(___fldiv@a+2)^0,c
  5990   00199E  0E40               	movlw	64
  5991   0019A0  6E21               	movwf	(___fldiv@a+3)^0,c
  5992   0019A2  C04B  F01A         	movff	_EUSART_Baud_Rate_Calculation$5662,___fldiv@b
  5993   0019A6  C04C  F01B         	movff	_EUSART_Baud_Rate_Calculation$5662+1,___fldiv@b+1
  5994   0019AA  C04D  F01C         	movff	_EUSART_Baud_Rate_Calculation$5662+2,___fldiv@b+2
  5995   0019AE  C04E  F01D         	movff	_EUSART_Baud_Rate_Calculation$5662+3,___fldiv@b+3
  5996   0019B2  ECB6  F013         	call	___fldiv	;wreg free
  5997   0019B6  C01A  F033         	movff	?___fldiv,___fladd@b
  5998   0019BA  C01B  F034         	movff	?___fldiv+1,___fladd@b+1
  5999   0019BE  C01C  F035         	movff	?___fldiv+2,___fladd@b+2
  6000   0019C2  C01D  F036         	movff	?___fldiv+3,___fladd@b+3
  6001   0019C6  0E00               	movlw	0
  6002   0019C8  6E37               	movwf	___fladd@a^0,c
  6003   0019CA  0E00               	movlw	0
  6004   0019CC  6E38               	movwf	(___fladd@a+1)^0,c
  6005   0019CE  0E80               	movlw	128
  6006   0019D0  6E39               	movwf	(___fladd@a+2)^0,c
  6007   0019D2  0EBF               	movlw	191
  6008   0019D4  6E3A               	movwf	(___fladd@a+3)^0,c
  6009   0019D6  EC3E  F00D         	call	___fladd	;wreg free
  6010   0019DA  C033  F047         	movff	?___fladd,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp
  6011   0019DE  C034  F048         	movff	?___fladd+1,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+1
  6012   0019E2  C035  F049         	movff	?___fladd+2,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+2
  6013   0019E6  C036  F04A         	movff	?___fladd+3,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+3
  6014                           
  6015                           ;MCAL_Layer/USART/hal_usart.c: 157:             break;
  6016   0019EA  EF22  F00D         	goto	l7163
  6017   0019EE                     l7161:
  6018   0019EE  EE20 F002          	lfsr	2,2
  6019   0019F2  5043               	movf	EUSART_Baud_Rate_Calculation@_eusart^0,w,c
  6020   0019F4  26D9               	addwf	fsr2l,f,c
  6021   0019F6  5044               	movf	(EUSART_Baud_Rate_Calculation@_eusart+1)^0,w,c
  6022   0019F8  22DA               	addwfc	fsr2h,f,c
  6023   0019FA  50DF               	movf	indf2,w,c
  6024   0019FC  6E45               	movwf	??_EUSART_Baud_Rate_Calculation^0,c
  6025   0019FE  6A46               	clrf	(??_EUSART_Baud_Rate_Calculation+1)^0,c
  6026                           
  6027                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6028                           ; Switch size 1, requested type "simple"
  6029                           ; Number of cases is 1, Range of values is 0 to 0
  6030                           ; switch strategies available:
  6031                           ; Name         Instructions Cycles
  6032                           ; simple_byte            4     3 (average)
  6033                           ;	Chosen strategy is simple_byte
  6034   001A00  5046               	movf	(??_EUSART_Baud_Rate_Calculation+1)^0,w,c
  6035   001A02  0A00               	xorlw	0	; case 0
  6036   001A04  B4D8               	btfsc	status,2,c
  6037   001A06  EF07  F00D         	goto	l10207
  6038   001A0A  EF22  F00D         	goto	l7163
  6039   001A0E                     l10207:
  6040                           
  6041                           ; Switch size 1, requested type "simple"
  6042                           ; Number of cases is 6, Range of values is 0 to 5
  6043                           ; switch strategies available:
  6044                           ; Name         Instructions Cycles
  6045                           ; simple_byte           19    10 (average)
  6046                           ;	Chosen strategy is simple_byte
  6047   001A0E  5045               	movf	??_EUSART_Baud_Rate_Calculation^0,w,c
  6048   001A10  0A00               	xorlw	0	; case 0
  6049   001A12  B4D8               	btfsc	status,2,c
  6050   001A14  EFD1  F00A         	goto	l1680
  6051   001A18  0A01               	xorlw	1	; case 1
  6052   001A1A  B4D8               	btfsc	status,2,c
  6053   001A1C  EF2D  F00B         	goto	l1682
  6054   001A20  0A03               	xorlw	3	; case 2
  6055   001A22  B4D8               	btfsc	status,2,c
  6056   001A24  EF89  F00B         	goto	l1683
  6057   001A28  0A01               	xorlw	1	; case 3
  6058   001A2A  B4D8               	btfsc	status,2,c
  6059   001A2C  EFE5  F00B         	goto	l1684
  6060   001A30  0A07               	xorlw	7	; case 4
  6061   001A32  B4D8               	btfsc	status,2,c
  6062   001A34  EF41  F00C         	goto	l1685
  6063   001A38  0A01               	xorlw	1	; case 5
  6064   001A3A  B4D8               	btfsc	status,2,c
  6065   001A3C  EF9C  F00C         	goto	l1686
  6066   001A40  EF22  F00D         	goto	l7163
  6067   001A44                     l7163:
  6068                           
  6069                           ;MCAL_Layer/USART/hal_usart.c: 160:     SPBRG= (uint8)((uint32)Baud_Rate_Temp);
  6070   001A44  C047  F033         	movff	EUSART_Baud_Rate_Calculation@Baud_Rate_Temp,___fltol@f1
  6071   001A48  C048  F034         	movff	EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+1,___fltol@f1+1
  6072   001A4C  C049  F035         	movff	EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+2,___fltol@f1+2
  6073   001A50  C04A  F036         	movff	EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+3,___fltol@f1+3
  6074   001A54  EC3F  F01A         	call	___fltol	;wreg free
  6075   001A58  5033               	movf	?___fltol^0,w,c
  6076   001A5A  6EAF               	movwf	175,c	;volatile
  6077                           
  6078                           ;MCAL_Layer/USART/hal_usart.c: 161:     SPBRGH= (uint8)(((uint32)Baud_Rate_Temp) >> 8);
  6079   001A5C  C047  F033         	movff	EUSART_Baud_Rate_Calculation@Baud_Rate_Temp,___fltol@f1
  6080   001A60  C048  F034         	movff	EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+1,___fltol@f1+1
  6081   001A64  C049  F035         	movff	EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+2,___fltol@f1+2
  6082   001A68  C04A  F036         	movff	EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+3,___fltol@f1+3
  6083   001A6C  EC3F  F01A         	call	___fltol	;wreg free
  6084   001A70  C034  F033         	movff	?___fltol+1,?___fltol
  6085   001A74  6A34               	clrf	(?___fltol+1)^0,c
  6086   001A76  5033               	movf	?___fltol^0,w,c
  6087   001A78  6EB0               	movwf	176,c	;volatile
  6088   001A7A  0012               	return		;funcret
  6089   001A7C                     __end_of_EUSART_Baud_Rate_Calculation:
  6090                           	callstack 0
  6091                           
  6092 ;; *************** function ___xxtofl *****************
  6093 ;; Defined at:
  6094 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\xxtofl.c"
  6095 ;; Parameters:    Size  Location     Type
  6096 ;;  sign            1    wreg     unsigned char 
  6097 ;;  val             4   11[COMRAM] long 
  6098 ;; Auto vars:     Size  Location     Type
  6099 ;;  sign            1   19[COMRAM] unsigned char 
  6100 ;;  arg             4   21[COMRAM] unsigned long 
  6101 ;;  exp             1   20[COMRAM] unsigned char 
  6102 ;; Return value:  Size  Location     Type
  6103 ;;                  4   11[COMRAM] unsigned char 
  6104 ;; Registers used:
  6105 ;;		wreg, status,2, status,0
  6106 ;; Tracked objects:
  6107 ;;		On entry : 0/0
  6108 ;;		On exit  : 0/0
  6109 ;;		Unchanged: 0/0
  6110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6111 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6112 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6113 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6114 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6115 ;;Total ram usage:       14 bytes
  6116 ;; Hardware stack levels used: 1
  6117 ;; Hardware stack levels required when called: 4
  6118 ;; This function calls:
  6119 ;;		Nothing
  6120 ;; This function is called by:
  6121 ;;		_EUSART_Baud_Rate_Calculation
  6122 ;;		_main
  6123 ;;		_MSSP_I2C_Master_Mode_Clock_CFG
  6124 ;; This function uses a non-reentrant model
  6125 ;;
  6126                           
  6127                           	psect	text31
  6128   002B06                     __ptext31:
  6129                           	callstack 0
  6130   002B06                     ___xxtofl:
  6131                           	callstack 22
  6132                           
  6133                           ;incstack = 0
  6134                           ;___xxtofl@sign stored from wreg
  6135   002B06  6E14               	movwf	___xxtofl@sign^0,c
  6136   002B08  5014               	movf	___xxtofl@sign^0,w,c
  6137   002B0A  B4D8               	btfsc	status,2,c
  6138   002B0C  EF8A  F015         	goto	u5731
  6139   002B10  EF8C  F015         	goto	u5730
  6140   002B14                     u5731:
  6141   002B14  EFAE  F015         	goto	l2452
  6142   002B18                     u5730:
  6143   002B18  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  6144   002B1A  EF93  F015         	goto	u5740
  6145   002B1E  EF91  F015         	goto	u5741
  6146   002B22                     u5741:
  6147   002B22  EFAE  F015         	goto	l2452
  6148   002B26                     u5740:
  6149   002B26  C00C  F010         	movff	___xxtofl@val,??___xxtofl
  6150   002B2A  C00D  F011         	movff	___xxtofl@val+1,??___xxtofl+1
  6151   002B2E  C00E  F012         	movff	___xxtofl@val+2,??___xxtofl+2
  6152   002B32  C00F  F013         	movff	___xxtofl@val+3,??___xxtofl+3
  6153   002B36  1E10               	comf	??___xxtofl^0,f,c
  6154   002B38  1E11               	comf	(??___xxtofl+1)^0,f,c
  6155   002B3A  1E12               	comf	(??___xxtofl+2)^0,f,c
  6156   002B3C  1E13               	comf	(??___xxtofl+3)^0,f,c
  6157   002B3E  2A10               	incf	??___xxtofl^0,f,c
  6158   002B40  0E00               	movlw	0
  6159   002B42  2211               	addwfc	(??___xxtofl+1)^0,f,c
  6160   002B44  2212               	addwfc	(??___xxtofl+2)^0,f,c
  6161   002B46  2213               	addwfc	(??___xxtofl+3)^0,f,c
  6162   002B48  C010  F016         	movff	??___xxtofl,___xxtofl@arg
  6163   002B4C  C011  F017         	movff	??___xxtofl+1,___xxtofl@arg+1
  6164   002B50  C012  F018         	movff	??___xxtofl+2,___xxtofl@arg+2
  6165   002B54  C013  F019         	movff	??___xxtofl+3,___xxtofl@arg+3
  6166   002B58  EFB6  F015         	goto	l6957
  6167   002B5C                     l2452:
  6168   002B5C  C00C  F016         	movff	___xxtofl@val,___xxtofl@arg
  6169   002B60  C00D  F017         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6170   002B64  C00E  F018         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6171   002B68  C00F  F019         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6172   002B6C                     l6957:
  6173   002B6C  500C               	movf	___xxtofl@val^0,w,c
  6174   002B6E  100D               	iorwf	(___xxtofl@val+1)^0,w,c
  6175   002B70  100E               	iorwf	(___xxtofl@val+2)^0,w,c
  6176   002B72  100F               	iorwf	(___xxtofl@val+3)^0,w,c
  6177   002B74  A4D8               	btfss	status,2,c
  6178   002B76  EFBF  F015         	goto	u5751
  6179   002B7A  EFC1  F015         	goto	u5750
  6180   002B7E                     u5751:
  6181   002B7E  EFCB  F015         	goto	l6963
  6182   002B82                     u5750:
  6183   002B82  0E00               	movlw	0
  6184   002B84  6E0C               	movwf	?___xxtofl^0,c
  6185   002B86  0E00               	movlw	0
  6186   002B88  6E0D               	movwf	(?___xxtofl+1)^0,c
  6187   002B8A  0E00               	movlw	0
  6188   002B8C  6E0E               	movwf	(?___xxtofl+2)^0,c
  6189   002B8E  0E00               	movlw	0
  6190   002B90  6E0F               	movwf	(?___xxtofl+3)^0,c
  6191   002B92  EF5C  F016         	goto	l2455
  6192   002B96                     l6963:
  6193   002B96  0E96               	movlw	150
  6194   002B98  6E15               	movwf	___xxtofl@exp^0,c
  6195   002B9A  EFD5  F015         	goto	l6967
  6196   002B9E                     l6965:
  6197   002B9E  2A15               	incf	___xxtofl@exp^0,f,c
  6198   002BA0  90D8               	bcf	status,0,c
  6199   002BA2  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  6200   002BA4  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  6201   002BA6  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  6202   002BA8  3216               	rrcf	___xxtofl@arg^0,f,c
  6203   002BAA                     l6967:
  6204   002BAA  0E00               	movlw	0
  6205   002BAC  1416               	andwf	___xxtofl@arg^0,w,c
  6206   002BAE  6E10               	movwf	??___xxtofl^0,c
  6207   002BB0  0E00               	movlw	0
  6208   002BB2  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  6209   002BB4  6E11               	movwf	(??___xxtofl+1)^0,c
  6210   002BB6  0E00               	movlw	0
  6211   002BB8  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  6212   002BBA  6E12               	movwf	(??___xxtofl+2)^0,c
  6213   002BBC  0EFE               	movlw	254
  6214   002BBE  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  6215   002BC0  6E13               	movwf	(??___xxtofl+3)^0,c
  6216   002BC2  5010               	movf	??___xxtofl^0,w,c
  6217   002BC4  1011               	iorwf	(??___xxtofl+1)^0,w,c
  6218   002BC6  1012               	iorwf	(??___xxtofl+2)^0,w,c
  6219   002BC8  1013               	iorwf	(??___xxtofl+3)^0,w,c
  6220   002BCA  A4D8               	btfss	status,2,c
  6221   002BCC  EFEA  F015         	goto	u5761
  6222   002BD0  EFEC  F015         	goto	u5760
  6223   002BD4                     u5761:
  6224   002BD4  EFCF  F015         	goto	l6965
  6225   002BD8                     u5760:
  6226   002BD8  EFFA  F015         	goto	l2459
  6227   002BDC                     l6969:
  6228   002BDC  2A15               	incf	___xxtofl@exp^0,f,c
  6229   002BDE  0E01               	movlw	1
  6230   002BE0  2616               	addwf	___xxtofl@arg^0,f,c
  6231   002BE2  0E00               	movlw	0
  6232   002BE4  2217               	addwfc	(___xxtofl@arg+1)^0,f,c
  6233   002BE6  2218               	addwfc	(___xxtofl@arg+2)^0,f,c
  6234   002BE8  2219               	addwfc	(___xxtofl@arg+3)^0,f,c
  6235   002BEA  90D8               	bcf	status,0,c
  6236   002BEC  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  6237   002BEE  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  6238   002BF0  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  6239   002BF2  3216               	rrcf	___xxtofl@arg^0,f,c
  6240   002BF4                     l2459:
  6241   002BF4  0E00               	movlw	0
  6242   002BF6  1416               	andwf	___xxtofl@arg^0,w,c
  6243   002BF8  6E10               	movwf	??___xxtofl^0,c
  6244   002BFA  0E00               	movlw	0
  6245   002BFC  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  6246   002BFE  6E11               	movwf	(??___xxtofl+1)^0,c
  6247   002C00  0E00               	movlw	0
  6248   002C02  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  6249   002C04  6E12               	movwf	(??___xxtofl+2)^0,c
  6250   002C06  0EFF               	movlw	255
  6251   002C08  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  6252   002C0A  6E13               	movwf	(??___xxtofl+3)^0,c
  6253   002C0C  5010               	movf	??___xxtofl^0,w,c
  6254   002C0E  1011               	iorwf	(??___xxtofl+1)^0,w,c
  6255   002C10  1012               	iorwf	(??___xxtofl+2)^0,w,c
  6256   002C12  1013               	iorwf	(??___xxtofl+3)^0,w,c
  6257   002C14  A4D8               	btfss	status,2,c
  6258   002C16  EF0F  F016         	goto	u5771
  6259   002C1A  EF11  F016         	goto	u5770
  6260   002C1E                     u5771:
  6261   002C1E  EFEE  F015         	goto	l6969
  6262   002C22                     u5770:
  6263   002C22  EF19  F016         	goto	l6977
  6264   002C26                     l6975:
  6265   002C26  0615               	decf	___xxtofl@exp^0,f,c
  6266   002C28  90D8               	bcf	status,0,c
  6267   002C2A  3616               	rlcf	___xxtofl@arg^0,f,c
  6268   002C2C  3617               	rlcf	(___xxtofl@arg+1)^0,f,c
  6269   002C2E  3618               	rlcf	(___xxtofl@arg+2)^0,f,c
  6270   002C30  3619               	rlcf	(___xxtofl@arg+3)^0,f,c
  6271   002C32                     l6977:
  6272   002C32  BE18               	btfsc	(___xxtofl@arg+2)^0,7,c
  6273   002C34  EF1E  F016         	goto	u5781
  6274   002C38  EF20  F016         	goto	u5780
  6275   002C3C                     u5781:
  6276   002C3C  EF28  F016         	goto	l2466
  6277   002C40                     u5780:
  6278   002C40  0E02               	movlw	2
  6279   002C42  6015               	cpfslt	___xxtofl@exp^0,c
  6280   002C44  EF26  F016         	goto	u5791
  6281   002C48  EF28  F016         	goto	u5790
  6282   002C4C                     u5791:
  6283   002C4C  EF13  F016         	goto	l6975
  6284   002C50                     u5790:
  6285   002C50                     l2466:
  6286   002C50  B015               	btfsc	___xxtofl@exp^0,0,c
  6287   002C52  EF2D  F016         	goto	u5801
  6288   002C56  EF2F  F016         	goto	u5800
  6289   002C5A                     u5801:
  6290   002C5A  EF30  F016         	goto	l6983
  6291   002C5E                     u5800:
  6292   002C5E  9E18               	bcf	(___xxtofl@arg+2)^0,7,c
  6293   002C60                     l6983:
  6294   002C60  90D8               	bcf	status,0,c
  6295   002C62  3215               	rrcf	___xxtofl@exp^0,f,c
  6296   002C64  C015  F010         	movff	___xxtofl@exp,??___xxtofl
  6297   002C68  6A11               	clrf	(??___xxtofl+1)^0,c
  6298   002C6A  6A12               	clrf	(??___xxtofl+2)^0,c
  6299   002C6C  6A13               	clrf	(??___xxtofl+3)^0,c
  6300   002C6E  C010  F013         	movff	??___xxtofl,??___xxtofl+3
  6301   002C72  6A12               	clrf	(??___xxtofl+2)^0,c
  6302   002C74  6A11               	clrf	(??___xxtofl+1)^0,c
  6303   002C76  6A10               	clrf	??___xxtofl^0,c
  6304   002C78  5010               	movf	??___xxtofl^0,w,c
  6305   002C7A  1216               	iorwf	___xxtofl@arg^0,f,c
  6306   002C7C  5011               	movf	(??___xxtofl+1)^0,w,c
  6307   002C7E  1217               	iorwf	(___xxtofl@arg+1)^0,f,c
  6308   002C80  5012               	movf	(??___xxtofl+2)^0,w,c
  6309   002C82  1218               	iorwf	(___xxtofl@arg+2)^0,f,c
  6310   002C84  5013               	movf	(??___xxtofl+3)^0,w,c
  6311   002C86  1219               	iorwf	(___xxtofl@arg+3)^0,f,c
  6312   002C88  5014               	movf	___xxtofl@sign^0,w,c
  6313   002C8A  B4D8               	btfsc	status,2,c
  6314   002C8C  EF4A  F016         	goto	u5811
  6315   002C90  EF4C  F016         	goto	u5810
  6316   002C94                     u5811:
  6317   002C94  EF54  F016         	goto	l6993
  6318   002C98                     u5810:
  6319   002C98  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  6320   002C9A  EF53  F016         	goto	u5820
  6321   002C9E  EF51  F016         	goto	u5821
  6322   002CA2                     u5821:
  6323   002CA2  EF54  F016         	goto	l6993
  6324   002CA6                     u5820:
  6325   002CA6  8E19               	bsf	(___xxtofl@arg+3)^0,7,c
  6326   002CA8                     l6993:
  6327   002CA8  C016  F00C         	movff	___xxtofl@arg,?___xxtofl
  6328   002CAC  C017  F00D         	movff	___xxtofl@arg+1,?___xxtofl+1
  6329   002CB0  C018  F00E         	movff	___xxtofl@arg+2,?___xxtofl+2
  6330   002CB4  C019  F00F         	movff	___xxtofl@arg+3,?___xxtofl+3
  6331   002CB8                     l2455:
  6332   002CB8  0012               	return		;funcret
  6333   002CBA                     __end_of___xxtofl:
  6334                           	callstack 0
  6335                           
  6336 ;; *************** function ___fltol *****************
  6337 ;; Defined at:
  6338 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
  6339 ;; Parameters:    Size  Location     Type
  6340 ;;  f1              4   50[COMRAM] unsigned char 
  6341 ;; Auto vars:     Size  Location     Type
  6342 ;;  exp1            1   59[COMRAM] unsigned char 
  6343 ;;  sign1           1   58[COMRAM] unsigned char 
  6344 ;; Return value:  Size  Location     Type
  6345 ;;                  4   50[COMRAM] long 
  6346 ;; Registers used:
  6347 ;;		wreg, status,2, status,0
  6348 ;; Tracked objects:
  6349 ;;		On entry : 0/0
  6350 ;;		On exit  : 0/0
  6351 ;;		Unchanged: 0/0
  6352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6353 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6354 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6355 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6356 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6357 ;;Total ram usage:       10 bytes
  6358 ;; Hardware stack levels used: 1
  6359 ;; Hardware stack levels required when called: 4
  6360 ;; This function calls:
  6361 ;;		Nothing
  6362 ;; This function is called by:
  6363 ;;		_EUSART_Baud_Rate_Calculation
  6364 ;;		_main
  6365 ;;		_MSSP_I2C_Master_Mode_Clock_CFG
  6366 ;; This function uses a non-reentrant model
  6367 ;;
  6368                           
  6369                           	psect	text32
  6370   00347E                     __ptext32:
  6371                           	callstack 0
  6372   00347E                     ___fltol:
  6373                           	callstack 22
  6374   00347E  3435               	rlcf	(___fltol@f1+2)^0,w,c
  6375   003480  3436               	rlcf	(___fltol@f1+3)^0,w,c
  6376   003482  6E3C               	movwf	___fltol@exp1^0,c
  6377   003484  503C               	movf	___fltol@exp1^0,w,c
  6378   003486  A4D8               	btfss	status,2,c
  6379   003488  EF48  F01A         	goto	u5661
  6380   00348C  EF4A  F01A         	goto	u5660
  6381   003490                     u5661:
  6382   003490  EF54  F01A         	goto	l6913
  6383   003494                     u5660:
  6384   003494                     l6909:
  6385   003494  0E00               	movlw	0
  6386   003496  6E33               	movwf	?___fltol^0,c
  6387   003498  0E00               	movlw	0
  6388   00349A  6E34               	movwf	(?___fltol+1)^0,c
  6389   00349C  0E00               	movlw	0
  6390   00349E  6E35               	movwf	(?___fltol+2)^0,c
  6391   0034A0  0E00               	movlw	0
  6392   0034A2  6E36               	movwf	(?___fltol+3)^0,c
  6393   0034A4  EFC1  F01A         	goto	l2094
  6394   0034A8                     l6913:
  6395   0034A8  C033  F037         	movff	___fltol@f1,??___fltol
  6396   0034AC  C034  F038         	movff	___fltol@f1+1,??___fltol+1
  6397   0034B0  C035  F039         	movff	___fltol@f1+2,??___fltol+2
  6398   0034B4  C036  F03A         	movff	___fltol@f1+3,??___fltol+3
  6399   0034B8  0E20               	movlw	32
  6400   0034BA  EF64  F01A         	goto	u5670
  6401   0034BE                     u5675:
  6402   0034BE  90D8               	bcf	status,0,c
  6403   0034C0  323A               	rrcf	(??___fltol+3)^0,f,c
  6404   0034C2  3239               	rrcf	(??___fltol+2)^0,f,c
  6405   0034C4  3238               	rrcf	(??___fltol+1)^0,f,c
  6406   0034C6  3237               	rrcf	??___fltol^0,f,c
  6407   0034C8                     u5670:
  6408   0034C8  2EE8               	decfsz	wreg,f,c
  6409   0034CA  EF5F  F01A         	goto	u5675
  6410   0034CE  5037               	movf	??___fltol^0,w,c
  6411   0034D0  6E3B               	movwf	___fltol@sign1^0,c
  6412   0034D2  8E35               	bsf	(___fltol@f1+2)^0,7,c
  6413   0034D4  0EFF               	movlw	255
  6414   0034D6  1633               	andwf	___fltol@f1^0,f,c
  6415   0034D8  0EFF               	movlw	255
  6416   0034DA  1634               	andwf	(___fltol@f1+1)^0,f,c
  6417   0034DC  0EFF               	movlw	255
  6418   0034DE  1635               	andwf	(___fltol@f1+2)^0,f,c
  6419   0034E0  0E00               	movlw	0
  6420   0034E2  1636               	andwf	(___fltol@f1+3)^0,f,c
  6421   0034E4  0E96               	movlw	150
  6422   0034E6  5E3C               	subwf	___fltol@exp1^0,f,c
  6423   0034E8  BE3C               	btfsc	___fltol@exp1^0,7,c
  6424   0034EA  EF7B  F01A         	goto	u5680
  6425   0034EE  EF79  F01A         	goto	u5681
  6426   0034F2                     u5681:
  6427   0034F2  EF91  F01A         	goto	l6933
  6428   0034F6                     u5680:
  6429   0034F6  503C               	movf	___fltol@exp1^0,w,c
  6430   0034F8  0A80               	xorlw	128
  6431   0034FA  0F97               	addlw	151
  6432   0034FC  B0D8               	btfsc	status,0,c
  6433   0034FE  EF83  F01A         	goto	u5691
  6434   003502  EF85  F01A         	goto	u5690
  6435   003506                     u5691:
  6436   003506  EF87  F01A         	goto	l6929
  6437   00350A                     u5690:
  6438   00350A  EF4A  F01A         	goto	l6909
  6439   00350E                     l6929:
  6440   00350E  90D8               	bcf	status,0,c
  6441   003510  3236               	rrcf	(___fltol@f1+3)^0,f,c
  6442   003512  3235               	rrcf	(___fltol@f1+2)^0,f,c
  6443   003514  3234               	rrcf	(___fltol@f1+1)^0,f,c
  6444   003516  3233               	rrcf	___fltol@f1^0,f,c
  6445   003518  3E3C               	incfsz	___fltol@exp1^0,f,c
  6446   00351A  EF87  F01A         	goto	l6929
  6447   00351E  EFA9  F01A         	goto	l6943
  6448   003522                     l6933:
  6449   003522  0E1F               	movlw	31
  6450   003524  643C               	cpfsgt	___fltol@exp1^0,c
  6451   003526  EF97  F01A         	goto	u5701
  6452   00352A  EF99  F01A         	goto	u5700
  6453   00352E                     u5701:
  6454   00352E  EFA1  F01A         	goto	l6941
  6455   003532                     u5700:
  6456   003532  EF4A  F01A         	goto	l6909
  6457   003536                     l6939:
  6458   003536  90D8               	bcf	status,0,c
  6459   003538  3633               	rlcf	___fltol@f1^0,f,c
  6460   00353A  3634               	rlcf	(___fltol@f1+1)^0,f,c
  6461   00353C  3635               	rlcf	(___fltol@f1+2)^0,f,c
  6462   00353E  3636               	rlcf	(___fltol@f1+3)^0,f,c
  6463   003540  063C               	decf	___fltol@exp1^0,f,c
  6464   003542                     l6941:
  6465   003542  503C               	movf	___fltol@exp1^0,w,c
  6466   003544  A4D8               	btfss	status,2,c
  6467   003546  EFA7  F01A         	goto	u5711
  6468   00354A  EFA9  F01A         	goto	u5710
  6469   00354E                     u5711:
  6470   00354E  EF9B  F01A         	goto	l6939
  6471   003552                     u5710:
  6472   003552                     l6943:
  6473   003552  503B               	movf	___fltol@sign1^0,w,c
  6474   003554  B4D8               	btfsc	status,2,c
  6475   003556  EFAF  F01A         	goto	u5721
  6476   00355A  EFB1  F01A         	goto	u5720
  6477   00355E                     u5721:
  6478   00355E  EFB9  F01A         	goto	l6947
  6479   003562                     u5720:
  6480   003562  1E36               	comf	(___fltol@f1+3)^0,f,c
  6481   003564  1E35               	comf	(___fltol@f1+2)^0,f,c
  6482   003566  1E34               	comf	(___fltol@f1+1)^0,f,c
  6483   003568  6C33               	negf	___fltol@f1^0,c
  6484   00356A  0E00               	movlw	0
  6485   00356C  2234               	addwfc	(___fltol@f1+1)^0,f,c
  6486   00356E  2235               	addwfc	(___fltol@f1+2)^0,f,c
  6487   003570  2236               	addwfc	(___fltol@f1+3)^0,f,c
  6488   003572                     l6947:
  6489   003572  C033  F033         	movff	___fltol@f1,?___fltol
  6490   003576  C034  F034         	movff	___fltol@f1+1,?___fltol+1
  6491   00357A  C035  F035         	movff	___fltol@f1+2,?___fltol+2
  6492   00357E  C036  F036         	movff	___fltol@f1+3,?___fltol+3
  6493   003582                     l2094:
  6494   003582  0012               	return		;funcret
  6495   003584                     __end_of___fltol:
  6496                           	callstack 0
  6497                           
  6498 ;; *************** function ___fldiv *****************
  6499 ;; Defined at:
  6500 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcdiv.c"
  6501 ;; Parameters:    Size  Location     Type
  6502 ;;  b               4   25[COMRAM] long 
  6503 ;;  a               4   29[COMRAM] long 
  6504 ;; Auto vars:     Size  Location     Type
  6505 ;;  grs             4   44[COMRAM] unsigned long 
  6506 ;;  rem             4   37[COMRAM] unsigned long 
  6507 ;;  new_exp         2   42[COMRAM] short 
  6508 ;;  aexp            1   49[COMRAM] unsigned char 
  6509 ;;  bexp            1   48[COMRAM] unsigned char 
  6510 ;;  sign            1   41[COMRAM] unsigned char 
  6511 ;; Return value:  Size  Location     Type
  6512 ;;                  4   25[COMRAM] unsigned char 
  6513 ;; Registers used:
  6514 ;;		wreg, status,2, status,0
  6515 ;; Tracked objects:
  6516 ;;		On entry : 0/0
  6517 ;;		On exit  : 0/0
  6518 ;;		Unchanged: 0/0
  6519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6520 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6521 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6522 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6523 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6524 ;;Total ram usage:       25 bytes
  6525 ;; Hardware stack levels used: 1
  6526 ;; Hardware stack levels required when called: 4
  6527 ;; This function calls:
  6528 ;;		Nothing
  6529 ;; This function is called by:
  6530 ;;		_EUSART_Baud_Rate_Calculation
  6531 ;;		_MSSP_I2C_Master_Mode_Clock_CFG
  6532 ;; This function uses a non-reentrant model
  6533 ;;
  6534                           
  6535                           	psect	text33
  6536   00276C                     __ptext33:
  6537                           	callstack 0
  6538   00276C                     ___fldiv:
  6539                           	callstack 22
  6540   00276C  501D               	movf	(___fldiv@b+3)^0,w,c
  6541   00276E  0B80               	andlw	128
  6542   002770  6E2A               	movwf	___fldiv@sign^0,c
  6543   002772  501D               	movf	(___fldiv@b+3)^0,w,c
  6544   002774  241D               	addwf	(___fldiv@b+3)^0,w,c
  6545   002776  6E31               	movwf	___fldiv@bexp^0,c
  6546   002778  AE1C               	btfss	(___fldiv@b+2)^0,7,c
  6547   00277A  EFC1  F013         	goto	u5431
  6548   00277E  EFC3  F013         	goto	u5430
  6549   002782                     u5431:
  6550   002782  EFC4  F013         	goto	l6775
  6551   002786                     u5430:
  6552   002786  8031               	bsf	___fldiv@bexp^0,0,c
  6553   002788                     l6775:
  6554   002788  5031               	movf	___fldiv@bexp^0,w,c
  6555   00278A  B4D8               	btfsc	status,2,c
  6556   00278C  EFCA  F013         	goto	u5441
  6557   002790  EFCC  F013         	goto	u5440
  6558   002794                     u5441:
  6559   002794  EFE1  F013         	goto	l6785
  6560   002798                     u5440:
  6561   002798  2831               	incf	___fldiv@bexp^0,w,c
  6562   00279A  A4D8               	btfss	status,2,c
  6563   00279C  EFD2  F013         	goto	u5451
  6564   0027A0  EFD4  F013         	goto	u5450
  6565   0027A4                     u5451:
  6566   0027A4  EFDC  F013         	goto	l6781
  6567   0027A8                     u5450:
  6568   0027A8  0E00               	movlw	0
  6569   0027AA  6E1A               	movwf	___fldiv@b^0,c
  6570   0027AC  0E00               	movlw	0
  6571   0027AE  6E1B               	movwf	(___fldiv@b+1)^0,c
  6572   0027B0  0E00               	movlw	0
  6573   0027B2  6E1C               	movwf	(___fldiv@b+2)^0,c
  6574   0027B4  0E00               	movlw	0
  6575   0027B6  6E1D               	movwf	(___fldiv@b+3)^0,c
  6576   0027B8                     l6781:
  6577   0027B8  8E1C               	bsf	(___fldiv@b+2)^0,7,c
  6578   0027BA  0E00               	movlw	0
  6579   0027BC  6E1D               	movwf	(___fldiv@b+3)^0,c
  6580   0027BE  EFE9  F013         	goto	l6787
  6581   0027C2                     l6785:
  6582   0027C2  0E00               	movlw	0
  6583   0027C4  6E1A               	movwf	___fldiv@b^0,c
  6584   0027C6  0E00               	movlw	0
  6585   0027C8  6E1B               	movwf	(___fldiv@b+1)^0,c
  6586   0027CA  0E00               	movlw	0
  6587   0027CC  6E1C               	movwf	(___fldiv@b+2)^0,c
  6588   0027CE  0E00               	movlw	0
  6589   0027D0  6E1D               	movwf	(___fldiv@b+3)^0,c
  6590   0027D2                     l6787:
  6591   0027D2  5021               	movf	(___fldiv@a+3)^0,w,c
  6592   0027D4  0B80               	andlw	128
  6593   0027D6  1A2A               	xorwf	___fldiv@sign^0,f,c
  6594   0027D8  5021               	movf	(___fldiv@a+3)^0,w,c
  6595   0027DA  2421               	addwf	(___fldiv@a+3)^0,w,c
  6596   0027DC  6E32               	movwf	___fldiv@aexp^0,c
  6597   0027DE  AE20               	btfss	(___fldiv@a+2)^0,7,c
  6598   0027E0  EFF4  F013         	goto	u5461
  6599   0027E4  EFF6  F013         	goto	u5460
  6600   0027E8                     u5461:
  6601   0027E8  EFF7  F013         	goto	l6795
  6602   0027EC                     u5460:
  6603   0027EC  8032               	bsf	___fldiv@aexp^0,0,c
  6604   0027EE                     l6795:
  6605   0027EE  5032               	movf	___fldiv@aexp^0,w,c
  6606   0027F0  B4D8               	btfsc	status,2,c
  6607   0027F2  EFFD  F013         	goto	u5471
  6608   0027F6  EFFF  F013         	goto	u5470
  6609   0027FA                     u5471:
  6610   0027FA  EF14  F014         	goto	l6805
  6611   0027FE                     u5470:
  6612   0027FE  2832               	incf	___fldiv@aexp^0,w,c
  6613   002800  A4D8               	btfss	status,2,c
  6614   002802  EF05  F014         	goto	u5481
  6615   002806  EF07  F014         	goto	u5480
  6616   00280A                     u5481:
  6617   00280A  EF0F  F014         	goto	l6801
  6618   00280E                     u5480:
  6619   00280E  0E00               	movlw	0
  6620   002810  6E1E               	movwf	___fldiv@a^0,c
  6621   002812  0E00               	movlw	0
  6622   002814  6E1F               	movwf	(___fldiv@a+1)^0,c
  6623   002816  0E00               	movlw	0
  6624   002818  6E20               	movwf	(___fldiv@a+2)^0,c
  6625   00281A  0E00               	movlw	0
  6626   00281C  6E21               	movwf	(___fldiv@a+3)^0,c
  6627   00281E                     l6801:
  6628   00281E  8E20               	bsf	(___fldiv@a+2)^0,7,c
  6629   002820  0E00               	movlw	0
  6630   002822  6E21               	movwf	(___fldiv@a+3)^0,c
  6631   002824  EF1C  F014         	goto	l6807
  6632   002828                     l6805:
  6633   002828  0E00               	movlw	0
  6634   00282A  6E1E               	movwf	___fldiv@a^0,c
  6635   00282C  0E00               	movlw	0
  6636   00282E  6E1F               	movwf	(___fldiv@a+1)^0,c
  6637   002830  0E00               	movlw	0
  6638   002832  6E20               	movwf	(___fldiv@a+2)^0,c
  6639   002834  0E00               	movlw	0
  6640   002836  6E21               	movwf	(___fldiv@a+3)^0,c
  6641   002838                     l6807:
  6642   002838  501E               	movf	___fldiv@a^0,w,c
  6643   00283A  101F               	iorwf	(___fldiv@a+1)^0,w,c
  6644   00283C  1020               	iorwf	(___fldiv@a+2)^0,w,c
  6645   00283E  1021               	iorwf	(___fldiv@a+3)^0,w,c
  6646   002840  A4D8               	btfss	status,2,c
  6647   002842  EF25  F014         	goto	u5491
  6648   002846  EF27  F014         	goto	u5490
  6649   00284A                     u5491:
  6650   00284A  EF3F  F014         	goto	l6819
  6651   00284E                     u5490:
  6652   00284E  0E00               	movlw	0
  6653   002850  6E1A               	movwf	___fldiv@b^0,c
  6654   002852  0E00               	movlw	0
  6655   002854  6E1B               	movwf	(___fldiv@b+1)^0,c
  6656   002856  0E00               	movlw	0
  6657   002858  6E1C               	movwf	(___fldiv@b+2)^0,c
  6658   00285A  0E00               	movlw	0
  6659   00285C  6E1D               	movwf	(___fldiv@b+3)^0,c
  6660   00285E  0E80               	movlw	128
  6661   002860  121C               	iorwf	(___fldiv@b+2)^0,f,c
  6662   002862  0E7F               	movlw	127
  6663   002864  121D               	iorwf	(___fldiv@b+3)^0,f,c
  6664   002866                     l6813:
  6665   002866  502A               	movf	___fldiv@sign^0,w,c
  6666   002868  121D               	iorwf	(___fldiv@b+3)^0,f,c
  6667   00286A  C01A  F01A         	movff	___fldiv@b,?___fldiv
  6668   00286E  C01B  F01B         	movff	___fldiv@b+1,?___fldiv+1
  6669   002872  C01C  F01C         	movff	___fldiv@b+2,?___fldiv+2
  6670   002876  C01D  F01D         	movff	___fldiv@b+3,?___fldiv+3
  6671   00287A  EF82  F015         	goto	l2379
  6672   00287E                     l6819:
  6673   00287E  5031               	movf	___fldiv@bexp^0,w,c
  6674   002880  A4D8               	btfss	status,2,c
  6675   002882  EF45  F014         	goto	u5501
  6676   002886  EF47  F014         	goto	u5500
  6677   00288A                     u5501:
  6678   00288A  EF51  F014         	goto	l6827
  6679   00288E                     u5500:
  6680   00288E  0E00               	movlw	0
  6681   002890  6E1A               	movwf	?___fldiv^0,c
  6682   002892  0E00               	movlw	0
  6683   002894  6E1B               	movwf	(?___fldiv+1)^0,c
  6684   002896  0E00               	movlw	0
  6685   002898  6E1C               	movwf	(?___fldiv+2)^0,c
  6686   00289A  0E00               	movlw	0
  6687   00289C  6E1D               	movwf	(?___fldiv+3)^0,c
  6688   00289E  EF82  F015         	goto	l2379
  6689   0028A2                     l6827:
  6690   0028A2  5032               	movf	___fldiv@aexp^0,w,c
  6691   0028A4  C031  F022         	movff	___fldiv@bexp,??___fldiv
  6692   0028A8  6A23               	clrf	(??___fldiv+1)^0,c
  6693   0028AA  5E22               	subwf	??___fldiv^0,f,c
  6694   0028AC  0E00               	movlw	0
  6695   0028AE  5A23               	subwfb	(??___fldiv+1)^0,f,c
  6696   0028B0  0E7F               	movlw	127
  6697   0028B2  2422               	addwf	??___fldiv^0,w,c
  6698   0028B4  6E2B               	movwf	___fldiv@new_exp^0,c
  6699   0028B6  0E00               	movlw	0
  6700   0028B8  2023               	addwfc	(??___fldiv+1)^0,w,c
  6701   0028BA  6E2C               	movwf	(___fldiv@new_exp+1)^0,c
  6702   0028BC  C01A  F026         	movff	___fldiv@b,___fldiv@rem
  6703   0028C0  C01B  F027         	movff	___fldiv@b+1,___fldiv@rem+1
  6704   0028C4  C01C  F028         	movff	___fldiv@b+2,___fldiv@rem+2
  6705   0028C8  C01D  F029         	movff	___fldiv@b+3,___fldiv@rem+3
  6706   0028CC  0E00               	movlw	0
  6707   0028CE  6E1A               	movwf	___fldiv@b^0,c
  6708   0028D0  0E00               	movlw	0
  6709   0028D2  6E1B               	movwf	(___fldiv@b+1)^0,c
  6710   0028D4  0E00               	movlw	0
  6711   0028D6  6E1C               	movwf	(___fldiv@b+2)^0,c
  6712   0028D8  0E00               	movlw	0
  6713   0028DA  6E1D               	movwf	(___fldiv@b+3)^0,c
  6714   0028DC  0E00               	movlw	0
  6715   0028DE  6E2D               	movwf	___fldiv@grs^0,c
  6716   0028E0  0E00               	movlw	0
  6717   0028E2  6E2E               	movwf	(___fldiv@grs+1)^0,c
  6718   0028E4  0E00               	movlw	0
  6719   0028E6  6E2F               	movwf	(___fldiv@grs+2)^0,c
  6720   0028E8  0E00               	movlw	0
  6721   0028EA  6E30               	movwf	(___fldiv@grs+3)^0,c
  6722   0028EC  0E00               	movlw	0
  6723   0028EE  6E32               	movwf	___fldiv@aexp^0,c
  6724   0028F0  EFB2  F014         	goto	l2381
  6725   0028F4                     l6837:
  6726   0028F4  5032               	movf	___fldiv@aexp^0,w,c
  6727   0028F6  B4D8               	btfsc	status,2,c
  6728   0028F8  EF80  F014         	goto	u5511
  6729   0028FC  EF82  F014         	goto	u5510
  6730   002900                     u5511:
  6731   002900  EF99  F014         	goto	l6845
  6732   002904                     u5510:
  6733   002904  90D8               	bcf	status,0,c
  6734   002906  3626               	rlcf	___fldiv@rem^0,f,c
  6735   002908  3627               	rlcf	(___fldiv@rem+1)^0,f,c
  6736   00290A  3628               	rlcf	(___fldiv@rem+2)^0,f,c
  6737   00290C  3629               	rlcf	(___fldiv@rem+3)^0,f,c
  6738   00290E  90D8               	bcf	status,0,c
  6739   002910  361A               	rlcf	___fldiv@b^0,f,c
  6740   002912  361B               	rlcf	(___fldiv@b+1)^0,f,c
  6741   002914  361C               	rlcf	(___fldiv@b+2)^0,f,c
  6742   002916  361D               	rlcf	(___fldiv@b+3)^0,f,c
  6743   002918  AE30               	btfss	(___fldiv@grs+3)^0,7,c
  6744   00291A  EF91  F014         	goto	u5521
  6745   00291E  EF93  F014         	goto	u5520
  6746   002922                     u5521:
  6747   002922  EF94  F014         	goto	l2384
  6748   002926                     u5520:
  6749   002926  801A               	bsf	___fldiv@b^0,0,c
  6750   002928                     l2384:
  6751   002928  90D8               	bcf	status,0,c
  6752   00292A  362D               	rlcf	___fldiv@grs^0,f,c
  6753   00292C  362E               	rlcf	(___fldiv@grs+1)^0,f,c
  6754   00292E  362F               	rlcf	(___fldiv@grs+2)^0,f,c
  6755   002930  3630               	rlcf	(___fldiv@grs+3)^0,f,c
  6756   002932                     l6845:
  6757   002932  501E               	movf	___fldiv@a^0,w,c
  6758   002934  5C26               	subwf	___fldiv@rem^0,w,c
  6759   002936  501F               	movf	(___fldiv@a+1)^0,w,c
  6760   002938  5827               	subwfb	(___fldiv@rem+1)^0,w,c
  6761   00293A  5020               	movf	(___fldiv@a+2)^0,w,c
  6762   00293C  5828               	subwfb	(___fldiv@rem+2)^0,w,c
  6763   00293E  5021               	movf	(___fldiv@a+3)^0,w,c
  6764   002940  5829               	subwfb	(___fldiv@rem+3)^0,w,c
  6765   002942  A0D8               	btfss	status,0,c
  6766   002944  EFA6  F014         	goto	u5531
  6767   002948  EFA8  F014         	goto	u5530
  6768   00294C                     u5531:
  6769   00294C  EFB1  F014         	goto	l6851
  6770   002950                     u5530:
  6771   002950  8C30               	bsf	(___fldiv@grs+3)^0,6,c
  6772   002952  501E               	movf	___fldiv@a^0,w,c
  6773   002954  5E26               	subwf	___fldiv@rem^0,f,c
  6774   002956  501F               	movf	(___fldiv@a+1)^0,w,c
  6775   002958  5A27               	subwfb	(___fldiv@rem+1)^0,f,c
  6776   00295A  5020               	movf	(___fldiv@a+2)^0,w,c
  6777   00295C  5A28               	subwfb	(___fldiv@rem+2)^0,f,c
  6778   00295E  5021               	movf	(___fldiv@a+3)^0,w,c
  6779   002960  5A29               	subwfb	(___fldiv@rem+3)^0,f,c
  6780   002962                     l6851:
  6781   002962  2A32               	incf	___fldiv@aexp^0,f,c
  6782   002964                     l2381:
  6783   002964  0E19               	movlw	25
  6784   002966  6432               	cpfsgt	___fldiv@aexp^0,c
  6785   002968  EFB8  F014         	goto	u5541
  6786   00296C  EFBA  F014         	goto	u5540
  6787   002970                     u5541:
  6788   002970  EF7A  F014         	goto	l6837
  6789   002974                     u5540:
  6790   002974  5026               	movf	___fldiv@rem^0,w,c
  6791   002976  1027               	iorwf	(___fldiv@rem+1)^0,w,c
  6792   002978  1028               	iorwf	(___fldiv@rem+2)^0,w,c
  6793   00297A  1029               	iorwf	(___fldiv@rem+3)^0,w,c
  6794   00297C  B4D8               	btfsc	status,2,c
  6795   00297E  EFC3  F014         	goto	u5551
  6796   002982  EFC5  F014         	goto	u5550
  6797   002986                     u5551:
  6798   002986  EFDD  F014         	goto	l6863
  6799   00298A                     u5550:
  6800   00298A  802D               	bsf	___fldiv@grs^0,0,c
  6801   00298C  EFDD  F014         	goto	l6863
  6802   002990                     l6857:
  6803   002990  90D8               	bcf	status,0,c
  6804   002992  361A               	rlcf	___fldiv@b^0,f,c
  6805   002994  361B               	rlcf	(___fldiv@b+1)^0,f,c
  6806   002996  361C               	rlcf	(___fldiv@b+2)^0,f,c
  6807   002998  361D               	rlcf	(___fldiv@b+3)^0,f,c
  6808   00299A  AE30               	btfss	(___fldiv@grs+3)^0,7,c
  6809   00299C  EFD2  F014         	goto	u5561
  6810   0029A0  EFD4  F014         	goto	u5560
  6811   0029A4                     u5561:
  6812   0029A4  EFD5  F014         	goto	l2390
  6813   0029A8                     u5560:
  6814   0029A8  801A               	bsf	___fldiv@b^0,0,c
  6815   0029AA                     l2390:
  6816   0029AA  90D8               	bcf	status,0,c
  6817   0029AC  362D               	rlcf	___fldiv@grs^0,f,c
  6818   0029AE  362E               	rlcf	(___fldiv@grs+1)^0,f,c
  6819   0029B0  362F               	rlcf	(___fldiv@grs+2)^0,f,c
  6820   0029B2  3630               	rlcf	(___fldiv@grs+3)^0,f,c
  6821   0029B4  062B               	decf	___fldiv@new_exp^0,f,c
  6822   0029B6  A0D8               	btfss	status,0,c
  6823   0029B8  062C               	decf	(___fldiv@new_exp+1)^0,f,c
  6824   0029BA                     l6863:
  6825   0029BA  AE1C               	btfss	(___fldiv@b+2)^0,7,c
  6826   0029BC  EFE2  F014         	goto	u5571
  6827   0029C0  EFE4  F014         	goto	u5570
  6828   0029C4                     u5571:
  6829   0029C4  EFC8  F014         	goto	l6857
  6830   0029C8                     u5570:
  6831   0029C8  0E00               	movlw	0
  6832   0029CA  6E32               	movwf	___fldiv@aexp^0,c
  6833   0029CC  AE30               	btfss	(___fldiv@grs+3)^0,7,c
  6834   0029CE  EFEB  F014         	goto	u5581
  6835   0029D2  EFED  F014         	goto	u5580
  6836   0029D6                     u5581:
  6837   0029D6  EF11  F015         	goto	l2392
  6838   0029DA                     u5580:
  6839   0029DA  0EFF               	movlw	255
  6840   0029DC  142D               	andwf	___fldiv@grs^0,w,c
  6841   0029DE  6E22               	movwf	??___fldiv^0,c
  6842   0029E0  0EFF               	movlw	255
  6843   0029E2  142E               	andwf	(___fldiv@grs+1)^0,w,c
  6844   0029E4  6E23               	movwf	(??___fldiv+1)^0,c
  6845   0029E6  0EFF               	movlw	255
  6846   0029E8  142F               	andwf	(___fldiv@grs+2)^0,w,c
  6847   0029EA  6E24               	movwf	(??___fldiv+2)^0,c
  6848   0029EC  0E7F               	movlw	127
  6849   0029EE  1430               	andwf	(___fldiv@grs+3)^0,w,c
  6850   0029F0  6E25               	movwf	(??___fldiv+3)^0,c
  6851   0029F2  5022               	movf	??___fldiv^0,w,c
  6852   0029F4  1023               	iorwf	(??___fldiv+1)^0,w,c
  6853   0029F6  1024               	iorwf	(??___fldiv+2)^0,w,c
  6854   0029F8  1025               	iorwf	(??___fldiv+3)^0,w,c
  6855   0029FA  B4D8               	btfsc	status,2,c
  6856   0029FC  EF02  F015         	goto	u5591
  6857   002A00  EF04  F015         	goto	u5590
  6858   002A04                     u5591:
  6859   002A04  EF08  F015         	goto	l2393
  6860   002A08                     u5590:
  6861   002A08                     l6871:
  6862   002A08  0E01               	movlw	1
  6863   002A0A  6E32               	movwf	___fldiv@aexp^0,c
  6864   002A0C  EF11  F015         	goto	l2392
  6865   002A10                     l2393:
  6866   002A10  A01A               	btfss	___fldiv@b^0,0,c
  6867   002A12  EF0D  F015         	goto	u5601
  6868   002A16  EF0F  F015         	goto	u5600
  6869   002A1A                     u5601:
  6870   002A1A  EF11  F015         	goto	l2392
  6871   002A1E                     u5600:
  6872   002A1E  EF04  F015         	goto	l6871
  6873   002A22                     l2392:
  6874   002A22  5032               	movf	___fldiv@aexp^0,w,c
  6875   002A24  B4D8               	btfsc	status,2,c
  6876   002A26  EF17  F015         	goto	u5611
  6877   002A2A  EF19  F015         	goto	u5610
  6878   002A2E                     u5611:
  6879   002A2E  EF3D  F015         	goto	l6883
  6880   002A32                     u5610:
  6881   002A32  0E01               	movlw	1
  6882   002A34  261A               	addwf	___fldiv@b^0,f,c
  6883   002A36  0E00               	movlw	0
  6884   002A38  221B               	addwfc	(___fldiv@b+1)^0,f,c
  6885   002A3A  221C               	addwfc	(___fldiv@b+2)^0,f,c
  6886   002A3C  221D               	addwfc	(___fldiv@b+3)^0,f,c
  6887   002A3E  A01D               	btfss	(___fldiv@b+3)^0,0,c
  6888   002A40  EF24  F015         	goto	u5621
  6889   002A44  EF26  F015         	goto	u5620
  6890   002A48                     u5621:
  6891   002A48  EF3D  F015         	goto	l6883
  6892   002A4C                     u5620:
  6893   002A4C  C01A  F022         	movff	___fldiv@b,??___fldiv
  6894   002A50  C01B  F023         	movff	___fldiv@b+1,??___fldiv+1
  6895   002A54  C01C  F024         	movff	___fldiv@b+2,??___fldiv+2
  6896   002A58  C01D  F025         	movff	___fldiv@b+3,??___fldiv+3
  6897   002A5C  3425               	rlcf	(??___fldiv+3)^0,w,c
  6898   002A5E  3225               	rrcf	(??___fldiv+3)^0,f,c
  6899   002A60  3224               	rrcf	(??___fldiv+2)^0,f,c
  6900   002A62  3223               	rrcf	(??___fldiv+1)^0,f,c
  6901   002A64  3222               	rrcf	??___fldiv^0,f,c
  6902   002A66  C022  F01A         	movff	??___fldiv,___fldiv@b
  6903   002A6A  C023  F01B         	movff	??___fldiv+1,___fldiv@b+1
  6904   002A6E  C024  F01C         	movff	??___fldiv+2,___fldiv@b+2
  6905   002A72  C025  F01D         	movff	??___fldiv+3,___fldiv@b+3
  6906   002A76  4A2B               	infsnz	___fldiv@new_exp^0,f,c
  6907   002A78  2A2C               	incf	(___fldiv@new_exp+1)^0,f,c
  6908   002A7A                     l6883:
  6909   002A7A  BE2C               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6910   002A7C  EF48  F015         	goto	u5631
  6911   002A80  502C               	movf	(___fldiv@new_exp+1)^0,w,c
  6912   002A82  E108               	bnz	u5630
  6913   002A84  282B               	incf	___fldiv@new_exp^0,w,c
  6914   002A86  A0D8               	btfss	status,0,c
  6915   002A88  EF48  F015         	goto	u5631
  6916   002A8C  EF4A  F015         	goto	u5630
  6917   002A90                     u5631:
  6918   002A90  EF55  F015         	goto	l6887
  6919   002A94                     u5630:
  6920   002A94  0E00               	movlw	0
  6921   002A96  6E2C               	movwf	(___fldiv@new_exp+1)^0,c
  6922   002A98  682B               	setf	___fldiv@new_exp^0,c
  6923   002A9A  0E00               	movlw	0
  6924   002A9C  6E1A               	movwf	___fldiv@b^0,c
  6925   002A9E  0E00               	movlw	0
  6926   002AA0  6E1B               	movwf	(___fldiv@b+1)^0,c
  6927   002AA2  0E00               	movlw	0
  6928   002AA4  6E1C               	movwf	(___fldiv@b+2)^0,c
  6929   002AA6  0E00               	movlw	0
  6930   002AA8  6E1D               	movwf	(___fldiv@b+3)^0,c
  6931   002AAA                     l6887:
  6932   002AAA  BE2C               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6933   002AAC  EF62  F015         	goto	u5640
  6934   002AB0  502C               	movf	(___fldiv@new_exp+1)^0,w,c
  6935   002AB2  E106               	bnz	u5641
  6936   002AB4  042B               	decf	___fldiv@new_exp^0,w,c
  6937   002AB6  B0D8               	btfsc	status,0,c
  6938   002AB8  EF60  F015         	goto	u5641
  6939   002ABC  EF62  F015         	goto	u5640
  6940   002AC0                     u5641:
  6941   002AC0  EF70  F015         	goto	l6891
  6942   002AC4                     u5640:
  6943   002AC4  0E00               	movlw	0
  6944   002AC6  6E2C               	movwf	(___fldiv@new_exp+1)^0,c
  6945   002AC8  0E00               	movlw	0
  6946   002ACA  6E2B               	movwf	___fldiv@new_exp^0,c
  6947   002ACC  0E00               	movlw	0
  6948   002ACE  6E1A               	movwf	___fldiv@b^0,c
  6949   002AD0  0E00               	movlw	0
  6950   002AD2  6E1B               	movwf	(___fldiv@b+1)^0,c
  6951   002AD4  0E00               	movlw	0
  6952   002AD6  6E1C               	movwf	(___fldiv@b+2)^0,c
  6953   002AD8  0E00               	movlw	0
  6954   002ADA  6E1D               	movwf	(___fldiv@b+3)^0,c
  6955   002ADC  0E00               	movlw	0
  6956   002ADE  6E2A               	movwf	___fldiv@sign^0,c
  6957   002AE0                     l6891:
  6958   002AE0  C02B  F031         	movff	___fldiv@new_exp,___fldiv@bexp
  6959   002AE4  A031               	btfss	___fldiv@bexp^0,0,c
  6960   002AE6  EF77  F015         	goto	u5651
  6961   002AEA  EF79  F015         	goto	u5650
  6962   002AEE                     u5651:
  6963   002AEE  EF7C  F015         	goto	l6897
  6964   002AF2                     u5650:
  6965   002AF2  8E1C               	bsf	(___fldiv@b+2)^0,7,c
  6966   002AF4  EF7D  F015         	goto	l6899
  6967   002AF8                     l6897:
  6968   002AF8  9E1C               	bcf	(___fldiv@b+2)^0,7,c
  6969   002AFA                     l6899:
  6970   002AFA  90D8               	bcf	status,0,c
  6971   002AFC  3031               	rrcf	___fldiv@bexp^0,w,c
  6972   002AFE  6E1D               	movwf	(___fldiv@b+3)^0,c
  6973   002B00  EF33  F014         	goto	l6813
  6974   002B04                     l2379:
  6975   002B04  0012               	return		;funcret
  6976   002B06                     __end_of___fldiv:
  6977                           	callstack 0
  6978                           
  6979 ;; *************** function ___fladd *****************
  6980 ;; Defined at:
  6981 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
  6982 ;; Parameters:    Size  Location     Type
  6983 ;;  b               4   50[COMRAM] unsigned char 
  6984 ;;  a               4   54[COMRAM] unsigned char 
  6985 ;; Auto vars:     Size  Location     Type
  6986 ;;  grs             1   65[COMRAM] unsigned char 
  6987 ;;  bexp            1   64[COMRAM] unsigned char 
  6988 ;;  aexp            1   63[COMRAM] unsigned char 
  6989 ;;  signs           1   62[COMRAM] unsigned char 
  6990 ;; Return value:  Size  Location     Type
  6991 ;;                  4   50[COMRAM] unsigned char 
  6992 ;; Registers used:
  6993 ;;		wreg, status,2, status,0
  6994 ;; Tracked objects:
  6995 ;;		On entry : 0/0
  6996 ;;		On exit  : 0/0
  6997 ;;		Unchanged: 0/0
  6998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6999 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7000 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7001 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7002 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7003 ;;Total ram usage:       16 bytes
  7004 ;; Hardware stack levels used: 1
  7005 ;; Hardware stack levels required when called: 4
  7006 ;; This function calls:
  7007 ;;		Nothing
  7008 ;; This function is called by:
  7009 ;;		_EUSART_Baud_Rate_Calculation
  7010 ;;		_MSSP_I2C_Master_Mode_Clock_CFG
  7011 ;; This function uses a non-reentrant model
  7012 ;;
  7013                           
  7014                           	psect	text34
  7015   001A7C                     __ptext34:
  7016                           	callstack 0
  7017   001A7C                     ___fladd:
  7018                           	callstack 22
  7019   001A7C  5036               	movf	(___fladd@b+3)^0,w,c
  7020   001A7E  0B80               	andlw	128
  7021   001A80  6E3F               	movwf	___fladd@signs^0,c
  7022   001A82  5036               	movf	(___fladd@b+3)^0,w,c
  7023   001A84  2436               	addwf	(___fladd@b+3)^0,w,c
  7024   001A86  6E41               	movwf	___fladd@bexp^0,c
  7025   001A88  AE35               	btfss	(___fladd@b+2)^0,7,c
  7026   001A8A  EF49  F00D         	goto	u5041
  7027   001A8E  EF4B  F00D         	goto	u5040
  7028   001A92                     u5041:
  7029   001A92  EF4C  F00D         	goto	l6573
  7030   001A96                     u5040:
  7031   001A96  8041               	bsf	___fladd@bexp^0,0,c
  7032   001A98                     l6573:
  7033   001A98  5041               	movf	___fladd@bexp^0,w,c
  7034   001A9A  B4D8               	btfsc	status,2,c
  7035   001A9C  EF52  F00D         	goto	u5051
  7036   001AA0  EF54  F00D         	goto	u5050
  7037   001AA4                     u5051:
  7038   001AA4  EF69  F00D         	goto	l6583
  7039   001AA8                     u5050:
  7040   001AA8  2841               	incf	___fladd@bexp^0,w,c
  7041   001AAA  A4D8               	btfss	status,2,c
  7042   001AAC  EF5A  F00D         	goto	u5061
  7043   001AB0  EF5C  F00D         	goto	u5060
  7044   001AB4                     u5061:
  7045   001AB4  EF64  F00D         	goto	l6579
  7046   001AB8                     u5060:
  7047   001AB8  0E00               	movlw	0
  7048   001ABA  6E33               	movwf	___fladd@b^0,c
  7049   001ABC  0E00               	movlw	0
  7050   001ABE  6E34               	movwf	(___fladd@b+1)^0,c
  7051   001AC0  0E00               	movlw	0
  7052   001AC2  6E35               	movwf	(___fladd@b+2)^0,c
  7053   001AC4  0E00               	movlw	0
  7054   001AC6  6E36               	movwf	(___fladd@b+3)^0,c
  7055   001AC8                     l6579:
  7056   001AC8  8E35               	bsf	(___fladd@b+2)^0,7,c
  7057   001ACA  0E00               	movlw	0
  7058   001ACC  6E36               	movwf	(___fladd@b+3)^0,c
  7059   001ACE  EF71  F00D         	goto	l6585
  7060   001AD2                     l6583:
  7061   001AD2  0E00               	movlw	0
  7062   001AD4  6E33               	movwf	___fladd@b^0,c
  7063   001AD6  0E00               	movlw	0
  7064   001AD8  6E34               	movwf	(___fladd@b+1)^0,c
  7065   001ADA  0E00               	movlw	0
  7066   001ADC  6E35               	movwf	(___fladd@b+2)^0,c
  7067   001ADE  0E00               	movlw	0
  7068   001AE0  6E36               	movwf	(___fladd@b+3)^0,c
  7069   001AE2                     l6585:
  7070   001AE2  503A               	movf	(___fladd@a+3)^0,w,c
  7071   001AE4  0B80               	andlw	128
  7072   001AE6  6E40               	movwf	___fladd@aexp^0,c
  7073   001AE8  503F               	movf	___fladd@signs^0,w,c
  7074   001AEA  1840               	xorwf	___fladd@aexp^0,w,c
  7075   001AEC  B4D8               	btfsc	status,2,c
  7076   001AEE  EF7B  F00D         	goto	u5071
  7077   001AF2  EF7D  F00D         	goto	u5070
  7078   001AF6                     u5071:
  7079   001AF6  EF7E  F00D         	goto	l6591
  7080   001AFA                     u5070:
  7081   001AFA  8C3F               	bsf	___fladd@signs^0,6,c
  7082   001AFC                     l6591:
  7083   001AFC  503A               	movf	(___fladd@a+3)^0,w,c
  7084   001AFE  243A               	addwf	(___fladd@a+3)^0,w,c
  7085   001B00  6E40               	movwf	___fladd@aexp^0,c
  7086   001B02  AE39               	btfss	(___fladd@a+2)^0,7,c
  7087   001B04  EF86  F00D         	goto	u5081
  7088   001B08  EF88  F00D         	goto	u5080
  7089   001B0C                     u5081:
  7090   001B0C  EF89  F00D         	goto	l6597
  7091   001B10                     u5080:
  7092   001B10  8040               	bsf	___fladd@aexp^0,0,c
  7093   001B12                     l6597:
  7094   001B12  5040               	movf	___fladd@aexp^0,w,c
  7095   001B14  B4D8               	btfsc	status,2,c
  7096   001B16  EF8F  F00D         	goto	u5091
  7097   001B1A  EF91  F00D         	goto	u5090
  7098   001B1E                     u5091:
  7099   001B1E  EFA6  F00D         	goto	l6607
  7100   001B22                     u5090:
  7101   001B22  2840               	incf	___fladd@aexp^0,w,c
  7102   001B24  A4D8               	btfss	status,2,c
  7103   001B26  EF97  F00D         	goto	u5101
  7104   001B2A  EF99  F00D         	goto	u5100
  7105   001B2E                     u5101:
  7106   001B2E  EFA1  F00D         	goto	l6603
  7107   001B32                     u5100:
  7108   001B32  0E00               	movlw	0
  7109   001B34  6E37               	movwf	___fladd@a^0,c
  7110   001B36  0E00               	movlw	0
  7111   001B38  6E38               	movwf	(___fladd@a+1)^0,c
  7112   001B3A  0E00               	movlw	0
  7113   001B3C  6E39               	movwf	(___fladd@a+2)^0,c
  7114   001B3E  0E00               	movlw	0
  7115   001B40  6E3A               	movwf	(___fladd@a+3)^0,c
  7116   001B42                     l6603:
  7117   001B42  8E39               	bsf	(___fladd@a+2)^0,7,c
  7118   001B44  0E00               	movlw	0
  7119   001B46  6E3A               	movwf	(___fladd@a+3)^0,c
  7120   001B48  EFAE  F00D         	goto	l6609
  7121   001B4C                     l6607:
  7122   001B4C  0E00               	movlw	0
  7123   001B4E  6E37               	movwf	___fladd@a^0,c
  7124   001B50  0E00               	movlw	0
  7125   001B52  6E38               	movwf	(___fladd@a+1)^0,c
  7126   001B54  0E00               	movlw	0
  7127   001B56  6E39               	movwf	(___fladd@a+2)^0,c
  7128   001B58  0E00               	movlw	0
  7129   001B5A  6E3A               	movwf	(___fladd@a+3)^0,c
  7130   001B5C                     l6609:
  7131   001B5C  5041               	movf	___fladd@bexp^0,w,c
  7132   001B5E  5C40               	subwf	___fladd@aexp^0,w,c
  7133   001B60  B0D8               	btfsc	status,0,c
  7134   001B62  EFB5  F00D         	goto	u5111
  7135   001B66  EFB7  F00D         	goto	u5110
  7136   001B6A                     u5111:
  7137   001B6A  EFDE  F00D         	goto	l6645
  7138   001B6E                     u5110:
  7139   001B6E  AC3F               	btfss	___fladd@signs^0,6,c
  7140   001B70  EFBC  F00D         	goto	u5121
  7141   001B74  EFBE  F00D         	goto	u5120
  7142   001B78                     u5121:
  7143   001B78  EFC0  F00D         	goto	l6615
  7144   001B7C                     u5120:
  7145   001B7C  0E80               	movlw	128
  7146   001B7E  1A3F               	xorwf	___fladd@signs^0,f,c
  7147   001B80                     l6615:
  7148   001B80  C041  F042         	movff	___fladd@bexp,___fladd@grs
  7149   001B84  C040  F041         	movff	___fladd@aexp,___fladd@bexp
  7150   001B88  C042  F040         	movff	___fladd@grs,___fladd@aexp
  7151   001B8C  C033  F042         	movff	___fladd@b,___fladd@grs
  7152   001B90  C037  F033         	movff	___fladd@a,___fladd@b
  7153   001B94  C042  F037         	movff	___fladd@grs,___fladd@a
  7154   001B98  C034  F042         	movff	___fladd@b+1,___fladd@grs
  7155   001B9C  C038  F034         	movff	___fladd@a+1,___fladd@b+1
  7156   001BA0  C042  F038         	movff	___fladd@grs,___fladd@a+1
  7157   001BA4  C035  F042         	movff	___fladd@b+2,___fladd@grs
  7158   001BA8  C039  F035         	movff	___fladd@a+2,___fladd@b+2
  7159   001BAC  C042  F039         	movff	___fladd@grs,___fladd@a+2
  7160   001BB0  C036  F042         	movff	___fladd@b+3,___fladd@grs
  7161   001BB4  C03A  F036         	movff	___fladd@a+3,___fladd@b+3
  7162   001BB8  C042  F03A         	movff	___fladd@grs,___fladd@a+3
  7163   001BBC                     l6645:
  7164   001BBC  0E00               	movlw	0
  7165   001BBE  6E42               	movwf	___fladd@grs^0,c
  7166   001BC0  5041               	movf	___fladd@bexp^0,w,c
  7167   001BC2  C040  F03B         	movff	___fladd@aexp,??___fladd
  7168   001BC6  6A3C               	clrf	(??___fladd+1)^0,c
  7169   001BC8  5E3B               	subwf	??___fladd^0,f,c
  7170   001BCA  0E00               	movlw	0
  7171   001BCC  5A3C               	subwfb	(??___fladd+1)^0,f,c
  7172   001BCE  BE3C               	btfsc	(??___fladd+1)^0,7,c
  7173   001BD0  EFF3  F00D         	goto	u5131
  7174   001BD4  503C               	movf	(??___fladd+1)^0,w,c
  7175   001BD6  E109               	bnz	u5130
  7176   001BD8  0E1A               	movlw	26
  7177   001BDA  5C3B               	subwf	??___fladd^0,w,c
  7178   001BDC  A0D8               	btfss	status,0,c
  7179   001BDE  EFF3  F00D         	goto	u5131
  7180   001BE2  EFF5  F00D         	goto	u5130
  7181   001BE6                     u5131:
  7182   001BE6  EF2C  F00E         	goto	l2326
  7183   001BEA                     u5130:
  7184   001BEA  5033               	movf	___fladd@b^0,w,c
  7185   001BEC  1034               	iorwf	(___fladd@b+1)^0,w,c
  7186   001BEE  1035               	iorwf	(___fladd@b+2)^0,w,c
  7187   001BF0  1036               	iorwf	(___fladd@b+3)^0,w,c
  7188   001BF2  A4D8               	btfss	status,2,c
  7189   001BF4  EFFE  F00D         	goto	u5141
  7190   001BF8  EF01  F00E         	goto	u5140
  7191   001BFC                     u5141:
  7192   001BFC  0E01               	movlw	1
  7193   001BFE  EF02  F00E         	goto	u5150
  7194   001C02                     u5140:
  7195   001C02  0E00               	movlw	0
  7196   001C04                     u5150:
  7197   001C04  6E42               	movwf	___fladd@grs^0,c
  7198   001C06  0E00               	movlw	0
  7199   001C08  6E33               	movwf	___fladd@b^0,c
  7200   001C0A  0E00               	movlw	0
  7201   001C0C  6E34               	movwf	(___fladd@b+1)^0,c
  7202   001C0E  0E00               	movlw	0
  7203   001C10  6E35               	movwf	(___fladd@b+2)^0,c
  7204   001C12  0E00               	movlw	0
  7205   001C14  6E36               	movwf	(___fladd@b+3)^0,c
  7206   001C16  C040  F041         	movff	___fladd@aexp,___fladd@bexp
  7207   001C1A  EF35  F00E         	goto	l2325
  7208   001C1E                     l2327:
  7209   001C1E  A042               	btfss	___fladd@grs^0,0,c
  7210   001C20  EF14  F00E         	goto	u5161
  7211   001C24  EF16  F00E         	goto	u5160
  7212   001C28                     u5161:
  7213   001C28  EF1C  F00E         	goto	l6657
  7214   001C2C                     u5160:
  7215   001C2C  90D8               	bcf	status,0,c
  7216   001C2E  3042               	rrcf	___fladd@grs^0,w,c
  7217   001C30  0901               	iorlw	1
  7218   001C32  6E42               	movwf	___fladd@grs^0,c
  7219   001C34  EF1E  F00E         	goto	l6659
  7220   001C38                     l6657:
  7221   001C38  90D8               	bcf	status,0,c
  7222   001C3A  3242               	rrcf	___fladd@grs^0,f,c
  7223   001C3C                     l6659:
  7224   001C3C  A033               	btfss	___fladd@b^0,0,c
  7225   001C3E  EF23  F00E         	goto	u5171
  7226   001C42  EF25  F00E         	goto	u5170
  7227   001C46                     u5171:
  7228   001C46  EF26  F00E         	goto	l6663
  7229   001C4A                     u5170:
  7230   001C4A  8E42               	bsf	___fladd@grs^0,7,c
  7231   001C4C                     l6663:
  7232   001C4C  3436               	rlcf	(___fladd@b+3)^0,w,c
  7233   001C4E  3236               	rrcf	(___fladd@b+3)^0,f,c
  7234   001C50  3235               	rrcf	(___fladd@b+2)^0,f,c
  7235   001C52  3234               	rrcf	(___fladd@b+1)^0,f,c
  7236   001C54  3233               	rrcf	___fladd@b^0,f,c
  7237   001C56  2A41               	incf	___fladd@bexp^0,f,c
  7238   001C58                     l2326:
  7239   001C58  5040               	movf	___fladd@aexp^0,w,c
  7240   001C5A  5C41               	subwf	___fladd@bexp^0,w,c
  7241   001C5C  A0D8               	btfss	status,0,c
  7242   001C5E  EF33  F00E         	goto	u5181
  7243   001C62  EF35  F00E         	goto	u5180
  7244   001C66                     u5181:
  7245   001C66  EF0F  F00E         	goto	l2327
  7246   001C6A                     u5180:
  7247   001C6A                     l2325:
  7248   001C6A  BC3F               	btfsc	___fladd@signs^0,6,c
  7249   001C6C  EF3A  F00E         	goto	u5191
  7250   001C70  EF3C  F00E         	goto	u5190
  7251   001C74                     u5191:
  7252   001C74  EF7C  F00E         	goto	l6691
  7253   001C78                     u5190:
  7254   001C78  5041               	movf	___fladd@bexp^0,w,c
  7255   001C7A  A4D8               	btfss	status,2,c
  7256   001C7C  EF42  F00E         	goto	u5201
  7257   001C80  EF44  F00E         	goto	u5200
  7258   001C84                     u5201:
  7259   001C84  EF4E  F00E         	goto	l6673
  7260   001C88                     u5200:
  7261   001C88  0E00               	movlw	0
  7262   001C8A  6E33               	movwf	?___fladd^0,c
  7263   001C8C  0E00               	movlw	0
  7264   001C8E  6E34               	movwf	(?___fladd+1)^0,c
  7265   001C90  0E00               	movlw	0
  7266   001C92  6E35               	movwf	(?___fladd+2)^0,c
  7267   001C94  0E00               	movlw	0
  7268   001C96  6E36               	movwf	(?___fladd+3)^0,c
  7269   001C98  EF9D  F00F         	goto	l2334
  7270   001C9C                     l6673:
  7271   001C9C  5037               	movf	___fladd@a^0,w,c
  7272   001C9E  2633               	addwf	___fladd@b^0,f,c
  7273   001CA0  5038               	movf	(___fladd@a+1)^0,w,c
  7274   001CA2  2234               	addwfc	(___fladd@b+1)^0,f,c
  7275   001CA4  5039               	movf	(___fladd@a+2)^0,w,c
  7276   001CA6  2235               	addwfc	(___fladd@b+2)^0,f,c
  7277   001CA8  503A               	movf	(___fladd@a+3)^0,w,c
  7278   001CAA  2236               	addwfc	(___fladd@b+3)^0,f,c
  7279   001CAC  A036               	btfss	(___fladd@b+3)^0,0,c
  7280   001CAE  EF5B  F00E         	goto	u5211
  7281   001CB2  EF5D  F00E         	goto	u5210
  7282   001CB6                     u5211:
  7283   001CB6  EF09  F00F         	goto	l6727
  7284   001CBA                     u5210:
  7285   001CBA  A042               	btfss	___fladd@grs^0,0,c
  7286   001CBC  EF62  F00E         	goto	u5221
  7287   001CC0  EF64  F00E         	goto	u5220
  7288   001CC4                     u5221:
  7289   001CC4  EF6A  F00E         	goto	l6681
  7290   001CC8                     u5220:
  7291   001CC8  90D8               	bcf	status,0,c
  7292   001CCA  3042               	rrcf	___fladd@grs^0,w,c
  7293   001CCC  0901               	iorlw	1
  7294   001CCE  6E42               	movwf	___fladd@grs^0,c
  7295   001CD0  EF6C  F00E         	goto	l6683
  7296   001CD4                     l6681:
  7297   001CD4  90D8               	bcf	status,0,c
  7298   001CD6  3242               	rrcf	___fladd@grs^0,f,c
  7299   001CD8                     l6683:
  7300   001CD8  A033               	btfss	___fladd@b^0,0,c
  7301   001CDA  EF71  F00E         	goto	u5231
  7302   001CDE  EF73  F00E         	goto	u5230
  7303   001CE2                     u5231:
  7304   001CE2  EF74  F00E         	goto	l6687
  7305   001CE6                     u5230:
  7306   001CE6  8E42               	bsf	___fladd@grs^0,7,c
  7307   001CE8                     l6687:
  7308   001CE8  3436               	rlcf	(___fladd@b+3)^0,w,c
  7309   001CEA  3236               	rrcf	(___fladd@b+3)^0,f,c
  7310   001CEC  3235               	rrcf	(___fladd@b+2)^0,f,c
  7311   001CEE  3234               	rrcf	(___fladd@b+1)^0,f,c
  7312   001CF0  3233               	rrcf	___fladd@b^0,f,c
  7313   001CF2  2A41               	incf	___fladd@bexp^0,f,c
  7314   001CF4  EF09  F00F         	goto	l6727
  7315   001CF8                     l6691:
  7316   001CF8  5037               	movf	___fladd@a^0,w,c
  7317   001CFA  5C33               	subwf	___fladd@b^0,w,c
  7318   001CFC  5038               	movf	(___fladd@a+1)^0,w,c
  7319   001CFE  5834               	subwfb	(___fladd@b+1)^0,w,c
  7320   001D00  5039               	movf	(___fladd@a+2)^0,w,c
  7321   001D02  5835               	subwfb	(___fladd@b+2)^0,w,c
  7322   001D04  5036               	movf	(___fladd@b+3)^0,w,c
  7323   001D06  0A80               	xorlw	128
  7324   001D08  6E3B               	movwf	??___fladd^0,c
  7325   001D0A  503A               	movf	(___fladd@a+3)^0,w,c
  7326   001D0C  0A80               	xorlw	128
  7327   001D0E  583B               	subwfb	??___fladd^0,w,c
  7328   001D10  B0D8               	btfsc	status,0,c
  7329   001D12  EF8D  F00E         	goto	u5241
  7330   001D16  EF8F  F00E         	goto	u5240
  7331   001D1A                     u5241:
  7332   001D1A  EFBA  F00E         	goto	l6701
  7333   001D1E                     u5240:
  7334   001D1E  5033               	movf	___fladd@b^0,w,c
  7335   001D20  5C37               	subwf	___fladd@a^0,w,c
  7336   001D22  6E3B               	movwf	??___fladd^0,c
  7337   001D24  5034               	movf	(___fladd@b+1)^0,w,c
  7338   001D26  5838               	subwfb	(___fladd@a+1)^0,w,c
  7339   001D28  6E3C               	movwf	(??___fladd+1)^0,c
  7340   001D2A  5035               	movf	(___fladd@b+2)^0,w,c
  7341   001D2C  5839               	subwfb	(___fladd@a+2)^0,w,c
  7342   001D2E  6E3D               	movwf	(??___fladd+2)^0,c
  7343   001D30  5036               	movf	(___fladd@b+3)^0,w,c
  7344   001D32  583A               	subwfb	(___fladd@a+3)^0,w,c
  7345   001D34  6E3E               	movwf	(??___fladd+3)^0,c
  7346   001D36  0EFF               	movlw	255
  7347   001D38  243B               	addwf	??___fladd^0,w,c
  7348   001D3A  6E33               	movwf	___fladd@b^0,c
  7349   001D3C  0EFF               	movlw	255
  7350   001D3E  203C               	addwfc	(??___fladd+1)^0,w,c
  7351   001D40  6E34               	movwf	(___fladd@b+1)^0,c
  7352   001D42  0EFF               	movlw	255
  7353   001D44  203D               	addwfc	(??___fladd+2)^0,w,c
  7354   001D46  6E35               	movwf	(___fladd@b+2)^0,c
  7355   001D48  0EFF               	movlw	255
  7356   001D4A  203E               	addwfc	(??___fladd+3)^0,w,c
  7357   001D4C  6E36               	movwf	(___fladd@b+3)^0,c
  7358   001D4E  0E80               	movlw	128
  7359   001D50  1A3F               	xorwf	___fladd@signs^0,f,c
  7360   001D52  6C42               	negf	___fladd@grs^0,c
  7361   001D54  5042               	movf	___fladd@grs^0,w,c
  7362   001D56  A4D8               	btfss	status,2,c
  7363   001D58  EFB0  F00E         	goto	u5251
  7364   001D5C  EFB2  F00E         	goto	u5250
  7365   001D60                     u5251:
  7366   001D60  EFC2  F00E         	goto	l2342
  7367   001D64                     u5250:
  7368   001D64  0E01               	movlw	1
  7369   001D66  2633               	addwf	___fladd@b^0,f,c
  7370   001D68  0E00               	movlw	0
  7371   001D6A  2234               	addwfc	(___fladd@b+1)^0,f,c
  7372   001D6C  2235               	addwfc	(___fladd@b+2)^0,f,c
  7373   001D6E  2236               	addwfc	(___fladd@b+3)^0,f,c
  7374   001D70  EFC2  F00E         	goto	l2342
  7375   001D74                     l6701:
  7376   001D74  5037               	movf	___fladd@a^0,w,c
  7377   001D76  5E33               	subwf	___fladd@b^0,f,c
  7378   001D78  5038               	movf	(___fladd@a+1)^0,w,c
  7379   001D7A  5A34               	subwfb	(___fladd@b+1)^0,f,c
  7380   001D7C  5039               	movf	(___fladd@a+2)^0,w,c
  7381   001D7E  5A35               	subwfb	(___fladd@b+2)^0,f,c
  7382   001D80  503A               	movf	(___fladd@a+3)^0,w,c
  7383   001D82  5A36               	subwfb	(___fladd@b+3)^0,f,c
  7384   001D84                     l2342:
  7385   001D84  5033               	movf	___fladd@b^0,w,c
  7386   001D86  1034               	iorwf	(___fladd@b+1)^0,w,c
  7387   001D88  1035               	iorwf	(___fladd@b+2)^0,w,c
  7388   001D8A  1036               	iorwf	(___fladd@b+3)^0,w,c
  7389   001D8C  A4D8               	btfss	status,2,c
  7390   001D8E  EFCB  F00E         	goto	u5261
  7391   001D92  EFCD  F00E         	goto	u5260
  7392   001D96                     u5261:
  7393   001D96  EF02  F00F         	goto	l6725
  7394   001D9A                     u5260:
  7395   001D9A  5042               	movf	___fladd@grs^0,w,c
  7396   001D9C  A4D8               	btfss	status,2,c
  7397   001D9E  EFD3  F00E         	goto	u5271
  7398   001DA2  EFD5  F00E         	goto	u5270
  7399   001DA6                     u5271:
  7400   001DA6  EF02  F00F         	goto	l6725
  7401   001DAA                     u5270:
  7402   001DAA  0E00               	movlw	0
  7403   001DAC  6E33               	movwf	?___fladd^0,c
  7404   001DAE  0E00               	movlw	0
  7405   001DB0  6E34               	movwf	(?___fladd+1)^0,c
  7406   001DB2  0E00               	movlw	0
  7407   001DB4  6E35               	movwf	(?___fladd+2)^0,c
  7408   001DB6  0E00               	movlw	0
  7409   001DB8  6E36               	movwf	(?___fladd+3)^0,c
  7410   001DBA  EF9D  F00F         	goto	l2334
  7411   001DBE                     l6709:
  7412   001DBE  90D8               	bcf	status,0,c
  7413   001DC0  3633               	rlcf	___fladd@b^0,f,c
  7414   001DC2  3634               	rlcf	(___fladd@b+1)^0,f,c
  7415   001DC4  3635               	rlcf	(___fladd@b+2)^0,f,c
  7416   001DC6  3636               	rlcf	(___fladd@b+3)^0,f,c
  7417   001DC8  AE42               	btfss	___fladd@grs^0,7,c
  7418   001DCA  EFE9  F00E         	goto	u5281
  7419   001DCE  EFEB  F00E         	goto	u5280
  7420   001DD2                     u5281:
  7421   001DD2  EFEC  F00E         	goto	l6715
  7422   001DD6                     u5280:
  7423   001DD6  8033               	bsf	___fladd@b^0,0,c
  7424   001DD8                     l6715:
  7425   001DD8  A042               	btfss	___fladd@grs^0,0,c
  7426   001DDA  EFF1  F00E         	goto	u5291
  7427   001DDE  EFF3  F00E         	goto	u5290
  7428   001DE2                     u5291:
  7429   001DE2  EFF7  F00E         	goto	l6719
  7430   001DE6                     u5290:
  7431   001DE6  80D8               	bsf	status,0,c
  7432   001DE8  3642               	rlcf	___fladd@grs^0,f,c
  7433   001DEA  EFF9  F00E         	goto	l6721
  7434   001DEE                     l6719:
  7435   001DEE  90D8               	bcf	status,0,c
  7436   001DF0  3642               	rlcf	___fladd@grs^0,f,c
  7437   001DF2                     l6721:
  7438   001DF2  5041               	movf	___fladd@bexp^0,w,c
  7439   001DF4  B4D8               	btfsc	status,2,c
  7440   001DF6  EFFF  F00E         	goto	u5301
  7441   001DFA  EF01  F00F         	goto	u5300
  7442   001DFE                     u5301:
  7443   001DFE  EF02  F00F         	goto	l6725
  7444   001E02                     u5300:
  7445   001E02  0641               	decf	___fladd@bexp^0,f,c
  7446   001E04                     l6725:
  7447   001E04  AE35               	btfss	(___fladd@b+2)^0,7,c
  7448   001E06  EF07  F00F         	goto	u5311
  7449   001E0A  EF09  F00F         	goto	u5310
  7450   001E0E                     u5311:
  7451   001E0E  EFDF  F00E         	goto	l6709
  7452   001E12                     u5310:
  7453   001E12                     l6727:
  7454   001E12  0E00               	movlw	0
  7455   001E14  6E40               	movwf	___fladd@aexp^0,c
  7456   001E16  AE42               	btfss	___fladd@grs^0,7,c
  7457   001E18  EF10  F00F         	goto	u5321
  7458   001E1C  EF12  F00F         	goto	u5320
  7459   001E20                     u5321:
  7460   001E20  EF2A  F00F         	goto	l2351
  7461   001E24                     u5320:
  7462   001E24  C042  F03B         	movff	___fladd@grs,??___fladd
  7463   001E28  0E7F               	movlw	127
  7464   001E2A  163B               	andwf	??___fladd^0,f,c
  7465   001E2C  B4D8               	btfsc	status,2,c
  7466   001E2E  EF1B  F00F         	goto	u5331
  7467   001E32  EF1D  F00F         	goto	u5330
  7468   001E36                     u5331:
  7469   001E36  EF21  F00F         	goto	l2352
  7470   001E3A                     u5330:
  7471   001E3A                     l6733:
  7472   001E3A  0E01               	movlw	1
  7473   001E3C  6E40               	movwf	___fladd@aexp^0,c
  7474   001E3E  EF2A  F00F         	goto	l2351
  7475   001E42                     l2352:
  7476   001E42  A033               	btfss	___fladd@b^0,0,c
  7477   001E44  EF26  F00F         	goto	u5341
  7478   001E48  EF28  F00F         	goto	u5340
  7479   001E4C                     u5341:
  7480   001E4C  EF2A  F00F         	goto	l2351
  7481   001E50                     u5340:
  7482   001E50  EF1D  F00F         	goto	l6733
  7483   001E54                     l2351:
  7484   001E54  5040               	movf	___fladd@aexp^0,w,c
  7485   001E56  B4D8               	btfsc	status,2,c
  7486   001E58  EF30  F00F         	goto	u5351
  7487   001E5C  EF32  F00F         	goto	u5350
  7488   001E60                     u5351:
  7489   001E60  EF5D  F00F         	goto	l6745
  7490   001E64                     u5350:
  7491   001E64  0E01               	movlw	1
  7492   001E66  2633               	addwf	___fladd@b^0,f,c
  7493   001E68  0E00               	movlw	0
  7494   001E6A  2234               	addwfc	(___fladd@b+1)^0,f,c
  7495   001E6C  2235               	addwfc	(___fladd@b+2)^0,f,c
  7496   001E6E  2236               	addwfc	(___fladd@b+3)^0,f,c
  7497   001E70  A036               	btfss	(___fladd@b+3)^0,0,c
  7498   001E72  EF3D  F00F         	goto	u5361
  7499   001E76  EF3F  F00F         	goto	u5360
  7500   001E7A                     u5361:
  7501   001E7A  EF5D  F00F         	goto	l6745
  7502   001E7E                     u5360:
  7503   001E7E  C033  F03B         	movff	___fladd@b,??___fladd
  7504   001E82  C034  F03C         	movff	___fladd@b+1,??___fladd+1
  7505   001E86  C035  F03D         	movff	___fladd@b+2,??___fladd+2
  7506   001E8A  C036  F03E         	movff	___fladd@b+3,??___fladd+3
  7507   001E8E  343E               	rlcf	(??___fladd+3)^0,w,c
  7508   001E90  323E               	rrcf	(??___fladd+3)^0,f,c
  7509   001E92  323D               	rrcf	(??___fladd+2)^0,f,c
  7510   001E94  323C               	rrcf	(??___fladd+1)^0,f,c
  7511   001E96  323B               	rrcf	??___fladd^0,f,c
  7512   001E98  C03B  F033         	movff	??___fladd,___fladd@b
  7513   001E9C  C03C  F034         	movff	??___fladd+1,___fladd@b+1
  7514   001EA0  C03D  F035         	movff	??___fladd+2,___fladd@b+2
  7515   001EA4  C03E  F036         	movff	??___fladd+3,___fladd@b+3
  7516   001EA8  2841               	incf	___fladd@bexp^0,w,c
  7517   001EAA  B4D8               	btfsc	status,2,c
  7518   001EAC  EF5A  F00F         	goto	u5371
  7519   001EB0  EF5C  F00F         	goto	u5370
  7520   001EB4                     u5371:
  7521   001EB4  EF5D  F00F         	goto	l6745
  7522   001EB8                     u5370:
  7523   001EB8  2A41               	incf	___fladd@bexp^0,f,c
  7524   001EBA                     l6745:
  7525   001EBA  2841               	incf	___fladd@bexp^0,w,c
  7526   001EBC  B4D8               	btfsc	status,2,c
  7527   001EBE  EF63  F00F         	goto	u5381
  7528   001EC2  EF65  F00F         	goto	u5380
  7529   001EC6                     u5381:
  7530   001EC6  EF6D  F00F         	goto	l6749
  7531   001ECA                     u5380:
  7532   001ECA  5041               	movf	___fladd@bexp^0,w,c
  7533   001ECC  A4D8               	btfss	status,2,c
  7534   001ECE  EF6B  F00F         	goto	u5391
  7535   001ED2  EF6D  F00F         	goto	u5390
  7536   001ED6                     u5391:
  7537   001ED6  EF7F  F00F         	goto	l6753
  7538   001EDA                     u5390:
  7539   001EDA                     l6749:
  7540   001EDA  0E00               	movlw	0
  7541   001EDC  6E33               	movwf	___fladd@b^0,c
  7542   001EDE  0E00               	movlw	0
  7543   001EE0  6E34               	movwf	(___fladd@b+1)^0,c
  7544   001EE2  0E00               	movlw	0
  7545   001EE4  6E35               	movwf	(___fladd@b+2)^0,c
  7546   001EE6  0E00               	movlw	0
  7547   001EE8  6E36               	movwf	(___fladd@b+3)^0,c
  7548   001EEA  5041               	movf	___fladd@bexp^0,w,c
  7549   001EEC  A4D8               	btfss	status,2,c
  7550   001EEE  EF7B  F00F         	goto	u5401
  7551   001EF2  EF7D  F00F         	goto	u5400
  7552   001EF6                     u5401:
  7553   001EF6  EF7F  F00F         	goto	l6753
  7554   001EFA                     u5400:
  7555   001EFA  0E00               	movlw	0
  7556   001EFC  6E3F               	movwf	___fladd@signs^0,c
  7557   001EFE                     l6753:
  7558   001EFE  A041               	btfss	___fladd@bexp^0,0,c
  7559   001F00  EF84  F00F         	goto	u5411
  7560   001F04  EF86  F00F         	goto	u5410
  7561   001F08                     u5411:
  7562   001F08  EF89  F00F         	goto	l6757
  7563   001F0C                     u5410:
  7564   001F0C  8E35               	bsf	(___fladd@b+2)^0,7,c
  7565   001F0E  EF8A  F00F         	goto	l6759
  7566   001F12                     l6757:
  7567   001F12  9E35               	bcf	(___fladd@b+2)^0,7,c
  7568   001F14                     l6759:
  7569   001F14  90D8               	bcf	status,0,c
  7570   001F16  3041               	rrcf	___fladd@bexp^0,w,c
  7571   001F18  6E36               	movwf	(___fladd@b+3)^0,c
  7572   001F1A  AE3F               	btfss	___fladd@signs^0,7,c
  7573   001F1C  EF92  F00F         	goto	u5421
  7574   001F20  EF94  F00F         	goto	u5420
  7575   001F24                     u5421:
  7576   001F24  EF95  F00F         	goto	l6765
  7577   001F28                     u5420:
  7578   001F28  8E36               	bsf	(___fladd@b+3)^0,7,c
  7579   001F2A                     l6765:
  7580   001F2A  C033  F033         	movff	___fladd@b,?___fladd
  7581   001F2E  C034  F034         	movff	___fladd@b+1,?___fladd+1
  7582   001F32  C035  F035         	movff	___fladd@b+2,?___fladd+2
  7583   001F36  C036  F036         	movff	___fladd@b+3,?___fladd+3
  7584   001F3A                     l2334:
  7585   001F3A  0012               	return		;funcret
  7586   001F3C                     __end_of___fladd:
  7587                           	callstack 0
  7588                           
  7589 ;; *************** function _EUSART_ASYNC_TX_Init *****************
  7590 ;; Defined at:
  7591 ;;		line 164 in file "MCAL_Layer/USART/hal_usart.c"
  7592 ;; Parameters:    Size  Location     Type
  7593 ;;  _eusart         2   11[COMRAM] PTR const struct .
  7594 ;;		 -> usart_obj(16), 
  7595 ;; Auto vars:     Size  Location     Type
  7596 ;;		None
  7597 ;; Return value:  Size  Location     Type
  7598 ;;                  1    wreg      void 
  7599 ;; Registers used:
  7600 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7601 ;; Tracked objects:
  7602 ;;		On entry : 0/0
  7603 ;;		On exit  : 0/0
  7604 ;;		Unchanged: 0/0
  7605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7606 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7609 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7610 ;;Total ram usage:        2 bytes
  7611 ;; Hardware stack levels used: 1
  7612 ;; Hardware stack levels required when called: 4
  7613 ;; This function calls:
  7614 ;;		Nothing
  7615 ;; This function is called by:
  7616 ;;		_EUSART_ASYNC_Init
  7617 ;; This function uses a non-reentrant model
  7618 ;;
  7619                           
  7620                           	psect	text35
  7621   003758                     __ptext35:
  7622                           	callstack 0
  7623   003758                     _EUSART_ASYNC_TX_Init:
  7624                           	callstack 23
  7625   003758                     
  7626                           ;MCAL_Layer/USART/hal_usart.c: 166:    if(1 == _eusart->usart_tx_cfg.usart_tx_enable) {
  7627   003758  EE20 F003          	lfsr	2,3
  7628   00375C  500C               	movf	EUSART_ASYNC_TX_Init@_eusart^0,w,c
  7629   00375E  26D9               	addwf	fsr2l,f,c
  7630   003760  500D               	movf	(EUSART_ASYNC_TX_Init@_eusart+1)^0,w,c
  7631   003762  22DA               	addwfc	fsr2h,f,c
  7632   003764  AADF               	btfss	indf2,5,c
  7633   003766  EFB7  F01B         	goto	u6021
  7634   00376A  EFB9  F01B         	goto	u6020
  7635   00376E                     u6021:
  7636   00376E  EF07  F01C         	goto	l7189
  7637   003772                     u6020:
  7638   003772                     
  7639                           ;MCAL_Layer/USART/hal_usart.c: 167:        TXSTAbits.TXEN=1;
  7640   003772  8AAC               	bsf	172,5,c	;volatile
  7641   003774                     
  7642                           ;MCAL_Layer/USART/hal_usart.c: 168:         EUSART_TxInterruptHandler=_eusart->EUSART_Tx
      +                          DefaultInterruptHandler;
  7643   003774  EE20 F008          	lfsr	2,8
  7644   003778  500C               	movf	EUSART_ASYNC_TX_Init@_eusart^0,w,c
  7645   00377A  26D9               	addwf	fsr2l,f,c
  7646   00377C  500D               	movf	(EUSART_ASYNC_TX_Init@_eusart+1)^0,w,c
  7647   00377E  22DA               	addwfc	fsr2h,f,c
  7648   003780  CFDE F090          	movff	postinc2,_EUSART_TxInterruptHandler
  7649   003784  CFDD F091          	movff	postdec2,_EUSART_TxInterruptHandler+1
  7650                           
  7651                           ;MCAL_Layer/USART/hal_usart.c: 170:        if(1 == _eusart->usart_tx_cfg.usart_tx_interr
      +                          upt_enable){
  7652   003788  EE20 F003          	lfsr	2,3
  7653   00378C  500C               	movf	EUSART_ASYNC_TX_Init@_eusart^0,w,c
  7654   00378E  26D9               	addwf	fsr2l,f,c
  7655   003790  500D               	movf	(EUSART_ASYNC_TX_Init@_eusart+1)^0,w,c
  7656   003792  22DA               	addwfc	fsr2h,f,c
  7657   003794  ACDF               	btfss	indf2,6,c
  7658   003796  EFCF  F01B         	goto	u6031
  7659   00379A  EFD1  F01B         	goto	u6030
  7660   00379E                     u6031:
  7661   00379E  EFD7  F01B         	goto	l7177
  7662   0037A2                     u6030:
  7663   0037A2                     
  7664                           ;MCAL_Layer/USART/hal_usart.c: 171:             PIE1bits.TXIE=1;
  7665   0037A2  889D               	bsf	157,4,c	;volatile
  7666                           
  7667                           ;MCAL_Layer/USART/hal_usart.c: 174:     (PIE1bits.TXIE=1);
  7668   0037A4  889D               	bsf	157,4,c	;volatile
  7669                           
  7670                           ;MCAL_Layer/USART/hal_usart.c: 187:         (INTCONbits.GIE=1);
  7671   0037A6  8EF2               	bsf	242,7,c	;volatile
  7672                           
  7673                           ;MCAL_Layer/USART/hal_usart.c: 188:         (INTCONbits.PEIE=1);
  7674   0037A8  8CF2               	bsf	242,6,c	;volatile
  7675                           
  7676                           ;MCAL_Layer/USART/hal_usart.c: 191:        }
  7677   0037AA  EFE5  F01B         	goto	l7181
  7678   0037AE                     l7177:
  7679   0037AE  EE20 F003          	lfsr	2,3
  7680   0037B2  500C               	movf	EUSART_ASYNC_TX_Init@_eusart^0,w,c
  7681   0037B4  26D9               	addwf	fsr2l,f,c
  7682   0037B6  500D               	movf	(EUSART_ASYNC_TX_Init@_eusart+1)^0,w,c
  7683   0037B8  22DA               	addwfc	fsr2h,f,c
  7684   0037BA  BCDF               	btfsc	indf2,6,c
  7685   0037BC  EFE2  F01B         	goto	u6041
  7686   0037C0  EFE4  F01B         	goto	u6040
  7687   0037C4                     u6041:
  7688   0037C4  EFE5  F01B         	goto	l7181
  7689   0037C8                     u6040:
  7690   0037C8                     
  7691                           ;MCAL_Layer/USART/hal_usart.c: 193:           PIE1bits.TXIE=0;
  7692   0037C8  989D               	bcf	157,4,c	;volatile
  7693   0037CA                     l7181:
  7694                           
  7695                           ;MCAL_Layer/USART/hal_usart.c: 197:        if( 1 ==_eusart->usart_tx_cfg.usart_tx_9bit_e
      +                          nable){
  7696   0037CA  EE20 F003          	lfsr	2,3
  7697   0037CE  500C               	movf	EUSART_ASYNC_TX_Init@_eusart^0,w,c
  7698   0037D0  26D9               	addwf	fsr2l,f,c
  7699   0037D2  500D               	movf	(EUSART_ASYNC_TX_Init@_eusart+1)^0,w,c
  7700   0037D4  22DA               	addwfc	fsr2h,f,c
  7701   0037D6  AEDF               	btfss	indf2,7,c
  7702   0037D8  EFF0  F01B         	goto	u6051
  7703   0037DC  EFF2  F01B         	goto	u6050
  7704   0037E0                     u6051:
  7705   0037E0  EFF5  F01B         	goto	l7185
  7706   0037E4                     u6050:
  7707   0037E4                     
  7708                           ;MCAL_Layer/USART/hal_usart.c: 198:            TXSTAbits.TX9=1;
  7709   0037E4  8CAC               	bsf	172,6,c	;volatile
  7710                           
  7711                           ;MCAL_Layer/USART/hal_usart.c: 199:        }
  7712   0037E6  EF15  F01C         	goto	l1703
  7713   0037EA                     l7185:
  7714   0037EA  EE20 F003          	lfsr	2,3
  7715   0037EE  500C               	movf	EUSART_ASYNC_TX_Init@_eusart^0,w,c
  7716   0037F0  26D9               	addwf	fsr2l,f,c
  7717   0037F2  500D               	movf	(EUSART_ASYNC_TX_Init@_eusart+1)^0,w,c
  7718   0037F4  22DA               	addwfc	fsr2h,f,c
  7719   0037F6  BEDF               	btfsc	indf2,7,c
  7720   0037F8  EF00  F01C         	goto	u6061
  7721   0037FC  EF02  F01C         	goto	u6060
  7722   003800                     u6061:
  7723   003800  EF05  F01C         	goto	l1697
  7724   003804                     u6060:
  7725   003804                     
  7726                           ;MCAL_Layer/USART/hal_usart.c: 201:            TXSTAbits.TX9=0;
  7727   003804  9CAC               	bcf	172,6,c	;volatile
  7728                           
  7729                           ;MCAL_Layer/USART/hal_usart.c: 202:        }
  7730   003806  EF15  F01C         	goto	l1703
  7731   00380A                     l1697:
  7732                           
  7733                           ;MCAL_Layer/USART/hal_usart.c: 204:    }
  7734   00380A  EF15  F01C         	goto	l1703
  7735   00380E                     l7189:
  7736   00380E  EE20 F003          	lfsr	2,3
  7737   003812  500C               	movf	EUSART_ASYNC_TX_Init@_eusart^0,w,c
  7738   003814  26D9               	addwf	fsr2l,f,c
  7739   003816  500D               	movf	(EUSART_ASYNC_TX_Init@_eusart+1)^0,w,c
  7740   003818  22DA               	addwfc	fsr2h,f,c
  7741   00381A  BADF               	btfsc	indf2,5,c
  7742   00381C  EF12  F01C         	goto	u6071
  7743   003820  EF14  F01C         	goto	u6070
  7744   003824                     u6071:
  7745   003824  EF15  F01C         	goto	l1703
  7746   003828                     u6070:
  7747   003828                     
  7748                           ;MCAL_Layer/USART/hal_usart.c: 206:        TXSTAbits.TXEN=0;
  7749   003828  9AAC               	bcf	172,5,c	;volatile
  7750   00382A                     l1703:
  7751   00382A  0012               	return		;funcret
  7752   00382C                     __end_of_EUSART_ASYNC_TX_Init:
  7753                           	callstack 0
  7754                           
  7755 ;; *************** function _EUSART_ASYNC_RX_Init *****************
  7756 ;; Defined at:
  7757 ;;		line 211 in file "MCAL_Layer/USART/hal_usart.c"
  7758 ;; Parameters:    Size  Location     Type
  7759 ;;  _eusart         2   11[COMRAM] PTR const struct .
  7760 ;;		 -> usart_obj(16), 
  7761 ;; Auto vars:     Size  Location     Type
  7762 ;;		None
  7763 ;; Return value:  Size  Location     Type
  7764 ;;                  1    wreg      void 
  7765 ;; Registers used:
  7766 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7767 ;; Tracked objects:
  7768 ;;		On entry : 0/0
  7769 ;;		On exit  : 0/0
  7770 ;;		Unchanged: 0/0
  7771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7772 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7775 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7776 ;;Total ram usage:        2 bytes
  7777 ;; Hardware stack levels used: 1
  7778 ;; Hardware stack levels required when called: 4
  7779 ;; This function calls:
  7780 ;;		Nothing
  7781 ;; This function is called by:
  7782 ;;		_EUSART_ASYNC_Init
  7783 ;; This function uses a non-reentrant model
  7784 ;;
  7785                           
  7786                           	psect	text36
  7787   003584                     __ptext36:
  7788                           	callstack 0
  7789   003584                     _EUSART_ASYNC_RX_Init:
  7790                           	callstack 23
  7791   003584                     
  7792                           ;MCAL_Layer/USART/hal_usart.c: 213:     if(1 == _eusart->usart_rx_cfg.usart_rx_enable) {
  7793   003584  EE20 F005          	lfsr	2,5
  7794   003588  500C               	movf	EUSART_ASYNC_RX_Init@_eusart^0,w,c
  7795   00358A  26D9               	addwf	fsr2l,f,c
  7796   00358C  500D               	movf	(EUSART_ASYNC_RX_Init@_eusart+1)^0,w,c
  7797   00358E  22DA               	addwfc	fsr2h,f,c
  7798   003590  AADF               	btfss	indf2,5,c
  7799   003592  EFCD  F01A         	goto	u6081
  7800   003596  EFCF  F01A         	goto	u6080
  7801   00359A                     u6081:
  7802   00359A  EF31  F01B         	goto	l7213
  7803   00359E                     u6080:
  7804   00359E                     
  7805                           ;MCAL_Layer/USART/hal_usart.c: 214:        RCSTAbits.CREN=1;
  7806   00359E  88AB               	bsf	171,4,c	;volatile
  7807   0035A0                     
  7808                           ;MCAL_Layer/USART/hal_usart.c: 215:        EUSART_RxInterruptHandler=_eusart->EUSART_RxD
      +                          efaultInterruptHandler;
  7809   0035A0  EE20 F00A          	lfsr	2,10
  7810   0035A4  500C               	movf	EUSART_ASYNC_RX_Init@_eusart^0,w,c
  7811   0035A6  26D9               	addwf	fsr2l,f,c
  7812   0035A8  500D               	movf	(EUSART_ASYNC_RX_Init@_eusart+1)^0,w,c
  7813   0035AA  22DA               	addwfc	fsr2h,f,c
  7814   0035AC  CFDE F08E          	movff	postinc2,_EUSART_RxInterruptHandler
  7815   0035B0  CFDD F08F          	movff	postdec2,_EUSART_RxInterruptHandler+1
  7816                           
  7817                           ;MCAL_Layer/USART/hal_usart.c: 216:        EUSART_FramingErrorHandler=_eusart->EUSART_Fr
      +                          amingErrorHandler;
  7818   0035B4  EE20 F00C          	lfsr	2,12
  7819   0035B8  500C               	movf	EUSART_ASYNC_RX_Init@_eusart^0,w,c
  7820   0035BA  26D9               	addwf	fsr2l,f,c
  7821   0035BC  500D               	movf	(EUSART_ASYNC_RX_Init@_eusart+1)^0,w,c
  7822   0035BE  22DA               	addwfc	fsr2h,f,c
  7823   0035C0  CFDE F08C          	movff	postinc2,_EUSART_FramingErrorHandler
  7824   0035C4  CFDD F08D          	movff	postdec2,_EUSART_FramingErrorHandler+1
  7825                           
  7826                           ;MCAL_Layer/USART/hal_usart.c: 217:        EUSART_OverrunErrorHandler=_eusart->EUSART_Ov
      +                          errunErrorHandler;
  7827   0035C8  EE20 F00E          	lfsr	2,14
  7828   0035CC  500C               	movf	EUSART_ASYNC_RX_Init@_eusart^0,w,c
  7829   0035CE  26D9               	addwf	fsr2l,f,c
  7830   0035D0  500D               	movf	(EUSART_ASYNC_RX_Init@_eusart+1)^0,w,c
  7831   0035D2  22DA               	addwfc	fsr2h,f,c
  7832   0035D4  CFDE F08A          	movff	postinc2,_EUSART_OverrunErrorHandler
  7833   0035D8  CFDD F08B          	movff	postdec2,_EUSART_OverrunErrorHandler+1
  7834                           
  7835                           ;MCAL_Layer/USART/hal_usart.c: 219:        if(1 == _eusart->usart_rx_cfg.usart_rx_interr
      +                          upt_enable){
  7836   0035DC  EE20 F005          	lfsr	2,5
  7837   0035E0  500C               	movf	EUSART_ASYNC_RX_Init@_eusart^0,w,c
  7838   0035E2  26D9               	addwf	fsr2l,f,c
  7839   0035E4  500D               	movf	(EUSART_ASYNC_RX_Init@_eusart+1)^0,w,c
  7840   0035E6  22DA               	addwfc	fsr2h,f,c
  7841   0035E8  ACDF               	btfss	indf2,6,c
  7842   0035EA  EFF9  F01A         	goto	u6091
  7843   0035EE  EFFB  F01A         	goto	u6090
  7844   0035F2                     u6091:
  7845   0035F2  EF01  F01B         	goto	l7201
  7846   0035F6                     u6090:
  7847   0035F6                     
  7848                           ;MCAL_Layer/USART/hal_usart.c: 220:           PIE1bits.RCIE=1;
  7849   0035F6  8A9D               	bsf	157,5,c	;volatile
  7850                           
  7851                           ;MCAL_Layer/USART/hal_usart.c: 223:     (PIE1bits.RCIE=1);
  7852   0035F8  8A9D               	bsf	157,5,c	;volatile
  7853                           
  7854                           ;MCAL_Layer/USART/hal_usart.c: 236:         (INTCONbits.GIE=1);
  7855   0035FA  8EF2               	bsf	242,7,c	;volatile
  7856                           
  7857                           ;MCAL_Layer/USART/hal_usart.c: 237:         (INTCONbits.PEIE=1);
  7858   0035FC  8CF2               	bsf	242,6,c	;volatile
  7859                           
  7860                           ;MCAL_Layer/USART/hal_usart.c: 240:        }
  7861   0035FE  EF0F  F01B         	goto	l7205
  7862   003602                     l7201:
  7863   003602  EE20 F005          	lfsr	2,5
  7864   003606  500C               	movf	EUSART_ASYNC_RX_Init@_eusart^0,w,c
  7865   003608  26D9               	addwf	fsr2l,f,c
  7866   00360A  500D               	movf	(EUSART_ASYNC_RX_Init@_eusart+1)^0,w,c
  7867   00360C  22DA               	addwfc	fsr2h,f,c
  7868   00360E  BCDF               	btfsc	indf2,6,c
  7869   003610  EF0C  F01B         	goto	u6101
  7870   003614  EF0E  F01B         	goto	u6100
  7871   003618                     u6101:
  7872   003618  EF0F  F01B         	goto	l7205
  7873   00361C                     u6100:
  7874   00361C                     
  7875                           ;MCAL_Layer/USART/hal_usart.c: 242:           PIE1bits.RCIE=0;
  7876   00361C  9A9D               	bcf	157,5,c	;volatile
  7877   00361E                     l7205:
  7878                           
  7879                           ;MCAL_Layer/USART/hal_usart.c: 246:        if( 1 ==_eusart->usart_rx_cfg.usart_rx_9bit_e
      +                          nable){
  7880   00361E  EE20 F005          	lfsr	2,5
  7881   003622  500C               	movf	EUSART_ASYNC_RX_Init@_eusart^0,w,c
  7882   003624  26D9               	addwf	fsr2l,f,c
  7883   003626  500D               	movf	(EUSART_ASYNC_RX_Init@_eusart+1)^0,w,c
  7884   003628  22DA               	addwfc	fsr2h,f,c
  7885   00362A  AEDF               	btfss	indf2,7,c
  7886   00362C  EF1A  F01B         	goto	u6111
  7887   003630  EF1C  F01B         	goto	u6110
  7888   003634                     u6111:
  7889   003634  EF1F  F01B         	goto	l7209
  7890   003638                     u6110:
  7891   003638                     
  7892                           ;MCAL_Layer/USART/hal_usart.c: 247:          RCSTAbits.RC9=1;
  7893   003638  8CAB               	bsf	171,6,c	;volatile
  7894                           
  7895                           ;MCAL_Layer/USART/hal_usart.c: 248:        }
  7896   00363A  EF3F  F01B         	goto	l1718
  7897   00363E                     l7209:
  7898   00363E  EE20 F005          	lfsr	2,5
  7899   003642  500C               	movf	EUSART_ASYNC_RX_Init@_eusart^0,w,c
  7900   003644  26D9               	addwf	fsr2l,f,c
  7901   003646  500D               	movf	(EUSART_ASYNC_RX_Init@_eusart+1)^0,w,c
  7902   003648  22DA               	addwfc	fsr2h,f,c
  7903   00364A  BEDF               	btfsc	indf2,7,c
  7904   00364C  EF2A  F01B         	goto	u6121
  7905   003650  EF2C  F01B         	goto	u6120
  7906   003654                     u6121:
  7907   003654  EF2F  F01B         	goto	l1712
  7908   003658                     u6120:
  7909   003658                     
  7910                           ;MCAL_Layer/USART/hal_usart.c: 250:          RCSTAbits.RC9=0;
  7911   003658  9CAB               	bcf	171,6,c	;volatile
  7912                           
  7913                           ;MCAL_Layer/USART/hal_usart.c: 251:        }
  7914   00365A  EF3F  F01B         	goto	l1718
  7915   00365E                     l1712:
  7916                           
  7917                           ;MCAL_Layer/USART/hal_usart.c: 253:    }
  7918   00365E  EF3F  F01B         	goto	l1718
  7919   003662                     l7213:
  7920   003662  EE20 F005          	lfsr	2,5
  7921   003666  500C               	movf	EUSART_ASYNC_RX_Init@_eusart^0,w,c
  7922   003668  26D9               	addwf	fsr2l,f,c
  7923   00366A  500D               	movf	(EUSART_ASYNC_RX_Init@_eusart+1)^0,w,c
  7924   00366C  22DA               	addwfc	fsr2h,f,c
  7925   00366E  BADF               	btfsc	indf2,5,c
  7926   003670  EF3C  F01B         	goto	u6131
  7927   003674  EF3E  F01B         	goto	u6130
  7928   003678                     u6131:
  7929   003678  EF3F  F01B         	goto	l1718
  7930   00367C                     u6130:
  7931   00367C                     
  7932                           ;MCAL_Layer/USART/hal_usart.c: 255:        RCSTAbits.CREN=0;
  7933   00367C  98AB               	bcf	171,4,c	;volatile
  7934   00367E                     l1718:
  7935   00367E  0012               	return		;funcret
  7936   003680                     __end_of_EUSART_ASYNC_RX_Init:
  7937                           	callstack 0
  7938                           
  7939 ;; *************** function _ADC_Init *****************
  7940 ;; Defined at:
  7941 ;;		line 21 in file "MCAL_Layer/ADC/hal_adc.c"
  7942 ;; Parameters:    Size  Location     Type
  7943 ;;  _adc            2   14[COMRAM] PTR const struct .
  7944 ;;		 -> adc_1(7), 
  7945 ;; Auto vars:     Size  Location     Type
  7946 ;;  ret             1    0        unsigned char 
  7947 ;; Return value:  Size  Location     Type
  7948 ;;                  1    wreg      unsigned char 
  7949 ;; Registers used:
  7950 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7951 ;; Tracked objects:
  7952 ;;		On entry : 0/0
  7953 ;;		On exit  : 0/0
  7954 ;;		Unchanged: 0/0
  7955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7956 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7958 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7959 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7960 ;;Total ram usage:        3 bytes
  7961 ;; Hardware stack levels used: 1
  7962 ;; Hardware stack levels required when called: 5
  7963 ;; This function calls:
  7964 ;;		_adc_input_channel_port_configure
  7965 ;;		_configure_voltage_reference
  7966 ;;		_select_result_format
  7967 ;; This function is called by:
  7968 ;;		_ecu_layer_intialize
  7969 ;; This function uses a non-reentrant model
  7970 ;;
  7971                           
  7972                           	psect	text37
  7973   003B36                     __ptext37:
  7974                           	callstack 0
  7975   003B36                     _ADC_Init:
  7976                           	callstack 23
  7977   003B36                     
  7978                           ;MCAL_Layer/ADC/hal_adc.c: 24:     if(((void*)0)== _adc){
  7979   003B36  500F               	movf	ADC_Init@_adc^0,w,c
  7980   003B38  1010               	iorwf	(ADC_Init@_adc+1)^0,w,c
  7981   003B3A  A4D8               	btfss	status,2,c
  7982   003B3C  EFA2  F01D         	goto	u6251
  7983   003B40  EFA4  F01D         	goto	u6250
  7984   003B44                     u6251:
  7985   003B44  EFA6  F01D         	goto	l511
  7986   003B48                     u6250:
  7987   003B48                     l7385:
  7988                           
  7989                           ;MCAL_Layer/ADC/hal_adc.c: 26:     }
  7990   003B48  EFF7  F01D         	goto	l7409
  7991   003B4C                     l511:
  7992                           
  7993                           ;MCAL_Layer/ADC/hal_adc.c: 29:         (ADCON0bits.ADON=0);
  7994   003B4C  90C2               	bcf	194,0,c	;volatile
  7995   003B4E                     
  7996                           ;MCAL_Layer/ADC/hal_adc.c: 32:         ADCON2bits.ACQT=_adc->acquisition_time;
  7997   003B4E  EE20 F003          	lfsr	2,3
  7998   003B52  500F               	movf	ADC_Init@_adc^0,w,c
  7999   003B54  26D9               	addwf	fsr2l,f,c
  8000   003B56  5010               	movf	(ADC_Init@_adc+1)^0,w,c
  8001   003B58  22DA               	addwfc	fsr2h,f,c
  8002   003B5A  50DF               	movf	indf2,w,c
  8003   003B5C  6E11               	movwf	??_ADC_Init^0,c
  8004   003B5E  4611               	rlncf	??_ADC_Init^0,f,c
  8005   003B60  4611               	rlncf	??_ADC_Init^0,f,c
  8006   003B62  4611               	rlncf	??_ADC_Init^0,f,c
  8007   003B64  50C0               	movf	192,w,c	;volatile
  8008   003B66  1811               	xorwf	??_ADC_Init^0,w,c
  8009   003B68  0BC7               	andlw	-57
  8010   003B6A  1811               	xorwf	??_ADC_Init^0,w,c
  8011   003B6C  6EC0               	movwf	192,c	;volatile
  8012                           
  8013                           ;MCAL_Layer/ADC/hal_adc.c: 34:         ADCON2bits.ADCS=_adc->conversion_clock;
  8014   003B6E  EE20 F004          	lfsr	2,4
  8015   003B72  500F               	movf	ADC_Init@_adc^0,w,c
  8016   003B74  26D9               	addwf	fsr2l,f,c
  8017   003B76  5010               	movf	(ADC_Init@_adc+1)^0,w,c
  8018   003B78  22DA               	addwfc	fsr2h,f,c
  8019   003B7A  50DF               	movf	indf2,w,c
  8020   003B7C  6E11               	movwf	??_ADC_Init^0,c
  8021   003B7E  50C0               	movf	192,w,c	;volatile
  8022   003B80  1811               	xorwf	??_ADC_Init^0,w,c
  8023   003B82  0BF8               	andlw	-8
  8024   003B84  1811               	xorwf	??_ADC_Init^0,w,c
  8025   003B86  6EC0               	movwf	192,c	;volatile
  8026                           
  8027                           ;MCAL_Layer/ADC/hal_adc.c: 36:         ADCON0bits.CHS=_adc->channel_select;
  8028   003B88  EE20 F005          	lfsr	2,5
  8029   003B8C  500F               	movf	ADC_Init@_adc^0,w,c
  8030   003B8E  26D9               	addwf	fsr2l,f,c
  8031   003B90  5010               	movf	(ADC_Init@_adc+1)^0,w,c
  8032   003B92  22DA               	addwfc	fsr2h,f,c
  8033   003B94  50DF               	movf	indf2,w,c
  8034   003B96  6E11               	movwf	??_ADC_Init^0,c
  8035   003B98  4611               	rlncf	??_ADC_Init^0,f,c
  8036   003B9A  4611               	rlncf	??_ADC_Init^0,f,c
  8037   003B9C  50C2               	movf	194,w,c	;volatile
  8038   003B9E  1811               	xorwf	??_ADC_Init^0,w,c
  8039   003BA0  0BC3               	andlw	-61
  8040   003BA2  1811               	xorwf	??_ADC_Init^0,w,c
  8041   003BA4  6EC2               	movwf	194,c	;volatile
  8042   003BA6                     
  8043                           ;MCAL_Layer/ADC/hal_adc.c: 37:         adc_input_channel_port_configure(_adc->channel_se
      +                          lect);
  8044   003BA6  EE20 F005          	lfsr	2,5
  8045   003BAA  500F               	movf	ADC_Init@_adc^0,w,c
  8046   003BAC  26D9               	addwf	fsr2l,f,c
  8047   003BAE  5010               	movf	(ADC_Init@_adc+1)^0,w,c
  8048   003BB0  22DA               	addwfc	fsr2h,f,c
  8049   003BB2  50DF               	movf	indf2,w,c
  8050   003BB4  EC40  F01B         	call	_adc_input_channel_port_configure
  8051   003BB8                     
  8052                           ;MCAL_Layer/ADC/hal_adc.c: 41:         (PIE1bits.ADIE=1);
  8053   003BB8  8C9D               	bsf	157,6,c	;volatile
  8054   003BBA                     
  8055                           ;MCAL_Layer/ADC/hal_adc.c: 42:         (PIR1bits.ADIF=0);
  8056   003BBA  9C9E               	bcf	158,6,c	;volatile
  8057   003BBC                     
  8058                           ;MCAL_Layer/ADC/hal_adc.c: 55:         (INTCONbits.GIE=1);
  8059   003BBC  8EF2               	bsf	242,7,c	;volatile
  8060   003BBE                     
  8061                           ;MCAL_Layer/ADC/hal_adc.c: 56:         (INTCONbits.PEIE=1);
  8062   003BBE  8CF2               	bsf	242,6,c	;volatile
  8063   003BC0                     
  8064                           ;MCAL_Layer/ADC/hal_adc.c: 58:         ADC_Interrupt_Handler=_adc->ADC_InterruptHandler;
  8065   003BC0  C00F  FFD9         	movff	ADC_Init@_adc,fsr2l
  8066   003BC4  C010  FFDA         	movff	ADC_Init@_adc+1,fsr2h
  8067   003BC8  CFDE F0C2          	movff	postinc2,_ADC_Interrupt_Handler
  8068   003BCC  CFDD F0C3          	movff	postdec2,_ADC_Interrupt_Handler+1
  8069   003BD0                     
  8070                           ;MCAL_Layer/ADC/hal_adc.c: 61:         select_result_format(_adc) ;
  8071   003BD0  C00F  F00C         	movff	ADC_Init@_adc,select_result_format@_adc
  8072   003BD4  C010  F00D         	movff	ADC_Init@_adc+1,select_result_format@_adc+1
  8073   003BD8  ECEB  F021         	call	_select_result_format	;wreg free
  8074   003BDC                     
  8075                           ;MCAL_Layer/ADC/hal_adc.c: 63:         configure_voltage_reference(_adc);
  8076   003BDC  C00F  F00C         	movff	ADC_Init@_adc,configure_voltage_reference@_adc
  8077   003BE0  C010  F00D         	movff	ADC_Init@_adc+1,configure_voltage_reference@_adc+1
  8078   003BE4  ECA4  F021         	call	_configure_voltage_reference	;wreg free
  8079   003BE8                     
  8080                           ;MCAL_Layer/ADC/hal_adc.c: 65:         (ADCON0bits.ADON=1);
  8081   003BE8  80C2               	bsf	194,0,c	;volatile
  8082   003BEA  EFA4  F01D         	goto	l7385
  8083   003BEE                     l7409:
  8084                           
  8085                           ;MCAL_Layer/ADC/hal_adc.c: 71:     return ret;
  8086   003BEE  0E01               	movlw	1
  8087   003BF0  0012               	return		;funcret
  8088   003BF2                     __end_of_ADC_Init:
  8089                           	callstack 0
  8090                           
  8091 ;; *************** function _select_result_format *****************
  8092 ;; Defined at:
  8093 ;;		line 271 in file "MCAL_Layer/ADC/hal_adc.c"
  8094 ;; Parameters:    Size  Location     Type
  8095 ;;  _adc            2   11[COMRAM] PTR const struct .
  8096 ;;		 -> adc_1(7), 
  8097 ;; Auto vars:     Size  Location     Type
  8098 ;;		None
  8099 ;; Return value:  Size  Location     Type
  8100 ;;                  1    wreg      void 
  8101 ;; Registers used:
  8102 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8103 ;; Tracked objects:
  8104 ;;		On entry : 0/0
  8105 ;;		On exit  : 0/0
  8106 ;;		Unchanged: 0/0
  8107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8108 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8111 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8112 ;;Total ram usage:        2 bytes
  8113 ;; Hardware stack levels used: 1
  8114 ;; Hardware stack levels required when called: 4
  8115 ;; This function calls:
  8116 ;;		Nothing
  8117 ;; This function is called by:
  8118 ;;		_ADC_Init
  8119 ;; This function uses a non-reentrant model
  8120 ;;
  8121                           
  8122                           	psect	text38
  8123   0043D6                     __ptext38:
  8124                           	callstack 0
  8125   0043D6                     _select_result_format:
  8126                           	callstack 23
  8127   0043D6                     
  8128                           ;MCAL_Layer/ADC/hal_adc.c: 272:     if(0x01U == _adc->adc_result_format){
  8129   0043D6  EE20 F006          	lfsr	2,6
  8130   0043DA  500C               	movf	select_result_format@_adc^0,w,c
  8131   0043DC  26D9               	addwf	fsr2l,f,c
  8132   0043DE  500D               	movf	(select_result_format@_adc+1)^0,w,c
  8133   0043E0  22DA               	addwfc	fsr2h,f,c
  8134   0043E2  A2DF               	btfss	indf2,1,c
  8135   0043E4  EFF6  F021         	goto	u5981
  8136   0043E8  EFF8  F021         	goto	u5980
  8137   0043EC                     u5981:
  8138   0043EC  EFFB  F021         	goto	l7127
  8139   0043F0                     u5980:
  8140   0043F0                     
  8141                           ;MCAL_Layer/ADC/hal_adc.c: 273:         (ADCON2bits.ADFM=1);
  8142   0043F0  8EC0               	bsf	192,7,c	;volatile
  8143                           
  8144                           ;MCAL_Layer/ADC/hal_adc.c: 274:     }
  8145   0043F2  EF0C  F022         	goto	l586
  8146   0043F6                     l7127:
  8147   0043F6  EE20 F006          	lfsr	2,6
  8148   0043FA  500C               	movf	select_result_format@_adc^0,w,c
  8149   0043FC  26D9               	addwf	fsr2l,f,c
  8150   0043FE  500D               	movf	(select_result_format@_adc+1)^0,w,c
  8151   004400  22DA               	addwfc	fsr2h,f,c
  8152   004402  B2DF               	btfsc	indf2,1,c
  8153   004404  EF06  F022         	goto	u5991
  8154   004408  EF08  F022         	goto	u5990
  8155   00440C                     u5991:
  8156   00440C  EF0B  F022         	goto	l584
  8157   004410                     u5990:
  8158   004410                     
  8159                           ;MCAL_Layer/ADC/hal_adc.c: 276:         (ADCON2bits.ADFM=0);
  8160   004410  9EC0               	bcf	192,7,c	;volatile
  8161                           
  8162                           ;MCAL_Layer/ADC/hal_adc.c: 277:     }
  8163   004412  EF0C  F022         	goto	l586
  8164   004416                     l584:
  8165                           
  8166                           ;MCAL_Layer/ADC/hal_adc.c: 279:         (ADCON2bits.ADFM=1);
  8167   004416  8EC0               	bsf	192,7,c	;volatile
  8168   004418                     l586:
  8169   004418  0012               	return		;funcret
  8170   00441A                     __end_of_select_result_format:
  8171                           	callstack 0
  8172                           
  8173 ;; *************** function _configure_voltage_reference *****************
  8174 ;; Defined at:
  8175 ;;		line 283 in file "MCAL_Layer/ADC/hal_adc.c"
  8176 ;; Parameters:    Size  Location     Type
  8177 ;;  _adc            2   11[COMRAM] PTR const struct .
  8178 ;;		 -> adc_1(7), 
  8179 ;; Auto vars:     Size  Location     Type
  8180 ;;		None
  8181 ;; Return value:  Size  Location     Type
  8182 ;;                  1    wreg      void 
  8183 ;; Registers used:
  8184 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8185 ;; Tracked objects:
  8186 ;;		On entry : 0/0
  8187 ;;		On exit  : 0/0
  8188 ;;		Unchanged: 0/0
  8189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8190 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8193 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8194 ;;Total ram usage:        2 bytes
  8195 ;; Hardware stack levels used: 1
  8196 ;; Hardware stack levels required when called: 4
  8197 ;; This function calls:
  8198 ;;		Nothing
  8199 ;; This function is called by:
  8200 ;;		_ADC_Init
  8201 ;; This function uses a non-reentrant model
  8202 ;;
  8203                           
  8204                           	psect	text39
  8205   004348                     __ptext39:
  8206                           	callstack 0
  8207   004348                     _configure_voltage_reference:
  8208                           	callstack 23
  8209   004348                     
  8210                           ;MCAL_Layer/ADC/hal_adc.c: 284:     if(0x01U == _adc->voltage_reference){
  8211   004348  EE20 F006          	lfsr	2,6
  8212   00434C  500C               	movf	configure_voltage_reference@_adc^0,w,c
  8213   00434E  26D9               	addwf	fsr2l,f,c
  8214   004350  500D               	movf	(configure_voltage_reference@_adc+1)^0,w,c
  8215   004352  22DA               	addwfc	fsr2h,f,c
  8216   004354  A0DF               	btfss	indf2,0,c
  8217   004356  EFAF  F021         	goto	u6001
  8218   00435A  EFB1  F021         	goto	u6000
  8219   00435E                     u6001:
  8220   00435E  EFB5  F021         	goto	l7133
  8221   004362                     u6000:
  8222   004362  8AC1               	bsf	193,5,c	;volatile
  8223   004364  88C1               	bsf	193,4,c	;volatile
  8224   004366  EFC8  F021         	goto	l599
  8225   00436A                     l7133:
  8226   00436A  EE20 F006          	lfsr	2,6
  8227   00436E  500C               	movf	configure_voltage_reference@_adc^0,w,c
  8228   004370  26D9               	addwf	fsr2l,f,c
  8229   004372  500D               	movf	(configure_voltage_reference@_adc+1)^0,w,c
  8230   004374  22DA               	addwfc	fsr2h,f,c
  8231   004376  B0DF               	btfsc	indf2,0,c
  8232   004378  EFC0  F021         	goto	u6011
  8233   00437C  EFC2  F021         	goto	u6010
  8234   004380                     u6011:
  8235   004380  EFC6  F021         	goto	l597
  8236   004384                     u6010:
  8237   004384  9AC1               	bcf	193,5,c	;volatile
  8238   004386  98C1               	bcf	193,4,c	;volatile
  8239   004388  EFC8  F021         	goto	l599
  8240   00438C                     l597:
  8241   00438C  9AC1               	bcf	193,5,c	;volatile
  8242   00438E  98C1               	bcf	193,4,c	;volatile
  8243   004390                     l599:
  8244   004390  0012               	return		;funcret
  8245   004392                     __end_of_configure_voltage_reference:
  8246                           	callstack 0
  8247                           
  8248 ;; *************** function ___lwdiv *****************
  8249 ;; Defined at:
  8250 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwdiv.c"
  8251 ;; Parameters:    Size  Location     Type
  8252 ;;  dividend        2   11[COMRAM] unsigned int 
  8253 ;;  divisor         2   13[COMRAM] unsigned int 
  8254 ;; Auto vars:     Size  Location     Type
  8255 ;;  quotient        2   15[COMRAM] unsigned int 
  8256 ;;  counter         1   17[COMRAM] unsigned char 
  8257 ;; Return value:  Size  Location     Type
  8258 ;;                  2   11[COMRAM] unsigned int 
  8259 ;; Registers used:
  8260 ;;		wreg, status,2, status,0
  8261 ;; Tracked objects:
  8262 ;;		On entry : 0/0
  8263 ;;		On exit  : 0/0
  8264 ;;		Unchanged: 0/0
  8265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8266 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8267 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8269 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8270 ;;Total ram usage:        7 bytes
  8271 ;; Hardware stack levels used: 1
  8272 ;; Hardware stack levels required when called: 4
  8273 ;; This function calls:
  8274 ;;		Nothing
  8275 ;; This function is called by:
  8276 ;;		_main
  8277 ;; This function uses a non-reentrant model
  8278 ;;
  8279                           
  8280                           	psect	text40
  8281   00409C                     __ptext40:
  8282                           	callstack 0
  8283   00409C                     ___lwdiv:
  8284                           	callstack 26
  8285   00409C  0E00               	movlw	0
  8286   00409E  6E11               	movwf	(___lwdiv@quotient+1)^0,c
  8287   0040A0  0E00               	movlw	0
  8288   0040A2  6E10               	movwf	___lwdiv@quotient^0,c
  8289   0040A4  500E               	movf	___lwdiv@divisor^0,w,c
  8290   0040A6  100F               	iorwf	(___lwdiv@divisor+1)^0,w,c
  8291   0040A8  B4D8               	btfsc	status,2,c
  8292   0040AA  EF59  F020         	goto	u7041
  8293   0040AE  EF5B  F020         	goto	u7040
  8294   0040B2                     u7041:
  8295   0040B2  EF83  F020         	goto	l2288
  8296   0040B6                     u7040:
  8297   0040B6  0E01               	movlw	1
  8298   0040B8  6E12               	movwf	___lwdiv@counter^0,c
  8299   0040BA  EF63  F020         	goto	l8185
  8300   0040BE                     l8183:
  8301   0040BE  90D8               	bcf	status,0,c
  8302   0040C0  360E               	rlcf	___lwdiv@divisor^0,f,c
  8303   0040C2  360F               	rlcf	(___lwdiv@divisor+1)^0,f,c
  8304   0040C4  2A12               	incf	___lwdiv@counter^0,f,c
  8305   0040C6                     l8185:
  8306   0040C6  AE0F               	btfss	(___lwdiv@divisor+1)^0,7,c
  8307   0040C8  EF68  F020         	goto	u7051
  8308   0040CC  EF6A  F020         	goto	u7050
  8309   0040D0                     u7051:
  8310   0040D0  EF5F  F020         	goto	l8183
  8311   0040D4                     u7050:
  8312   0040D4                     l8187:
  8313   0040D4  90D8               	bcf	status,0,c
  8314   0040D6  3610               	rlcf	___lwdiv@quotient^0,f,c
  8315   0040D8  3611               	rlcf	(___lwdiv@quotient+1)^0,f,c
  8316   0040DA  500E               	movf	___lwdiv@divisor^0,w,c
  8317   0040DC  5C0C               	subwf	___lwdiv@dividend^0,w,c
  8318   0040DE  500F               	movf	(___lwdiv@divisor+1)^0,w,c
  8319   0040E0  580D               	subwfb	(___lwdiv@dividend+1)^0,w,c
  8320   0040E2  A0D8               	btfss	status,0,c
  8321   0040E4  EF76  F020         	goto	u7061
  8322   0040E8  EF78  F020         	goto	u7060
  8323   0040EC                     u7061:
  8324   0040EC  EF7D  F020         	goto	l8195
  8325   0040F0                     u7060:
  8326   0040F0  500E               	movf	___lwdiv@divisor^0,w,c
  8327   0040F2  5E0C               	subwf	___lwdiv@dividend^0,f,c
  8328   0040F4  500F               	movf	(___lwdiv@divisor+1)^0,w,c
  8329   0040F6  5A0D               	subwfb	(___lwdiv@dividend+1)^0,f,c
  8330   0040F8  8010               	bsf	___lwdiv@quotient^0,0,c
  8331   0040FA                     l8195:
  8332   0040FA  90D8               	bcf	status,0,c
  8333   0040FC  320F               	rrcf	(___lwdiv@divisor+1)^0,f,c
  8334   0040FE  320E               	rrcf	___lwdiv@divisor^0,f,c
  8335   004100  2E12               	decfsz	___lwdiv@counter^0,f,c
  8336   004102  EF6A  F020         	goto	l8187
  8337   004106                     l2288:
  8338   004106  C010  F00C         	movff	___lwdiv@quotient,?___lwdiv
  8339   00410A  C011  F00D         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8340   00410E  0012               	return		;funcret
  8341   004110                     __end_of___lwdiv:
  8342                           	callstack 0
  8343                           
  8344 ;; *************** function ___flmul *****************
  8345 ;; Defined at:
  8346 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcmul.c"
  8347 ;; Parameters:    Size  Location     Type
  8348 ;;  b               4   25[COMRAM] unsigned int 
  8349 ;;  a               4   29[COMRAM] unsigned int 
  8350 ;; Auto vars:     Size  Location     Type
  8351 ;;  prod            4   44[COMRAM] struct .
  8352 ;;  grs             4   38[COMRAM] unsigned long 
  8353 ;;  temp            2   48[COMRAM] struct .
  8354 ;;  bexp            1   43[COMRAM] unsigned char 
  8355 ;;  aexp            1   42[COMRAM] unsigned char 
  8356 ;;  sign            1   37[COMRAM] unsigned char 
  8357 ;; Return value:  Size  Location     Type
  8358 ;;                  4   25[COMRAM] unsigned char 
  8359 ;; Registers used:
  8360 ;;		wreg, status,2, status,0, prodl, prodh
  8361 ;; Tracked objects:
  8362 ;;		On entry : 0/0
  8363 ;;		On exit  : 0/0
  8364 ;;		Unchanged: 0/0
  8365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8366 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8367 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8368 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8369 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8370 ;;Total ram usage:       25 bytes
  8371 ;; Hardware stack levels used: 1
  8372 ;; Hardware stack levels required when called: 4
  8373 ;; This function calls:
  8374 ;;		Nothing
  8375 ;; This function is called by:
  8376 ;;		_main
  8377 ;; This function uses a non-reentrant model
  8378 ;;
  8379                           
  8380                           	psect	text41
  8381   001F3C                     __ptext41:
  8382                           	callstack 0
  8383   001F3C                     ___flmul:
  8384                           	callstack 26
  8385   001F3C  501D               	movf	(___flmul@b+3)^0,w,c
  8386   001F3E  0B80               	andlw	128
  8387   001F40  6E26               	movwf	___flmul@sign^0,c
  8388   001F42  501D               	movf	(___flmul@b+3)^0,w,c
  8389   001F44  241D               	addwf	(___flmul@b+3)^0,w,c
  8390   001F46  6E2C               	movwf	___flmul@bexp^0,c
  8391   001F48  AE1C               	btfss	(___flmul@b+2)^0,7,c
  8392   001F4A  EFA9  F00F         	goto	u6851
  8393   001F4E  EFAB  F00F         	goto	u6850
  8394   001F52                     u6851:
  8395   001F52  EFAC  F00F         	goto	l8053
  8396   001F56                     u6850:
  8397   001F56  802C               	bsf	___flmul@bexp^0,0,c
  8398   001F58                     l8053:
  8399   001F58  502C               	movf	___flmul@bexp^0,w,c
  8400   001F5A  B4D8               	btfsc	status,2,c
  8401   001F5C  EFB2  F00F         	goto	u6861
  8402   001F60  EFB4  F00F         	goto	u6860
  8403   001F64                     u6861:
  8404   001F64  EFC7  F00F         	goto	l8061
  8405   001F68                     u6860:
  8406   001F68  282C               	incf	___flmul@bexp^0,w,c
  8407   001F6A  A4D8               	btfss	status,2,c
  8408   001F6C  EFBA  F00F         	goto	u6871
  8409   001F70  EFBC  F00F         	goto	u6870
  8410   001F74                     u6871:
  8411   001F74  EFC4  F00F         	goto	l8059
  8412   001F78                     u6870:
  8413   001F78  0E00               	movlw	0
  8414   001F7A  6E1A               	movwf	___flmul@b^0,c
  8415   001F7C  0E00               	movlw	0
  8416   001F7E  6E1B               	movwf	(___flmul@b+1)^0,c
  8417   001F80  0E00               	movlw	0
  8418   001F82  6E1C               	movwf	(___flmul@b+2)^0,c
  8419   001F84  0E00               	movlw	0
  8420   001F86  6E1D               	movwf	(___flmul@b+3)^0,c
  8421   001F88                     l8059:
  8422   001F88  8E1C               	bsf	(___flmul@b+2)^0,7,c
  8423   001F8A  EFCF  F00F         	goto	l8063
  8424   001F8E                     l8061:
  8425   001F8E  0E00               	movlw	0
  8426   001F90  6E1A               	movwf	___flmul@b^0,c
  8427   001F92  0E00               	movlw	0
  8428   001F94  6E1B               	movwf	(___flmul@b+1)^0,c
  8429   001F96  0E00               	movlw	0
  8430   001F98  6E1C               	movwf	(___flmul@b+2)^0,c
  8431   001F9A  0E00               	movlw	0
  8432   001F9C  6E1D               	movwf	(___flmul@b+3)^0,c
  8433   001F9E                     l8063:
  8434   001F9E  5021               	movf	(___flmul@a+3)^0,w,c
  8435   001FA0  0B80               	andlw	128
  8436   001FA2  1A26               	xorwf	___flmul@sign^0,f,c
  8437   001FA4  5021               	movf	(___flmul@a+3)^0,w,c
  8438   001FA6  2421               	addwf	(___flmul@a+3)^0,w,c
  8439   001FA8  6E2B               	movwf	___flmul@aexp^0,c
  8440   001FAA  AE20               	btfss	(___flmul@a+2)^0,7,c
  8441   001FAC  EFDA  F00F         	goto	u6881
  8442   001FB0  EFDC  F00F         	goto	u6880
  8443   001FB4                     u6881:
  8444   001FB4  EFDD  F00F         	goto	l8071
  8445   001FB8                     u6880:
  8446   001FB8  802B               	bsf	___flmul@aexp^0,0,c
  8447   001FBA                     l8071:
  8448   001FBA  502B               	movf	___flmul@aexp^0,w,c
  8449   001FBC  B4D8               	btfsc	status,2,c
  8450   001FBE  EFE3  F00F         	goto	u6891
  8451   001FC2  EFE5  F00F         	goto	u6890
  8452   001FC6                     u6891:
  8453   001FC6  EFF8  F00F         	goto	l8079
  8454   001FCA                     u6890:
  8455   001FCA  282B               	incf	___flmul@aexp^0,w,c
  8456   001FCC  A4D8               	btfss	status,2,c
  8457   001FCE  EFEB  F00F         	goto	u6901
  8458   001FD2  EFED  F00F         	goto	u6900
  8459   001FD6                     u6901:
  8460   001FD6  EFF5  F00F         	goto	l8077
  8461   001FDA                     u6900:
  8462   001FDA  0E00               	movlw	0
  8463   001FDC  6E1E               	movwf	___flmul@a^0,c
  8464   001FDE  0E00               	movlw	0
  8465   001FE0  6E1F               	movwf	(___flmul@a+1)^0,c
  8466   001FE2  0E00               	movlw	0
  8467   001FE4  6E20               	movwf	(___flmul@a+2)^0,c
  8468   001FE6  0E00               	movlw	0
  8469   001FE8  6E21               	movwf	(___flmul@a+3)^0,c
  8470   001FEA                     l8077:
  8471   001FEA  8E20               	bsf	(___flmul@a+2)^0,7,c
  8472   001FEC  EF00  F010         	goto	l2411
  8473   001FF0                     l8079:
  8474   001FF0  0E00               	movlw	0
  8475   001FF2  6E1E               	movwf	___flmul@a^0,c
  8476   001FF4  0E00               	movlw	0
  8477   001FF6  6E1F               	movwf	(___flmul@a+1)^0,c
  8478   001FF8  0E00               	movlw	0
  8479   001FFA  6E20               	movwf	(___flmul@a+2)^0,c
  8480   001FFC  0E00               	movlw	0
  8481   001FFE  6E21               	movwf	(___flmul@a+3)^0,c
  8482   002000                     l2411:
  8483   002000  502B               	movf	___flmul@aexp^0,w,c
  8484   002002  B4D8               	btfsc	status,2,c
  8485   002004  EF06  F010         	goto	u6911
  8486   002008  EF08  F010         	goto	u6910
  8487   00200C                     u6911:
  8488   00200C  EF10  F010         	goto	l8083
  8489   002010                     u6910:
  8490   002010  502C               	movf	___flmul@bexp^0,w,c
  8491   002012  A4D8               	btfss	status,2,c
  8492   002014  EF0E  F010         	goto	u6921
  8493   002018  EF10  F010         	goto	u6920
  8494   00201C                     u6921:
  8495   00201C  EF1A  F010         	goto	l8087
  8496   002020                     u6920:
  8497   002020                     l8083:
  8498   002020  0E00               	movlw	0
  8499   002022  6E1A               	movwf	?___flmul^0,c
  8500   002024  0E00               	movlw	0
  8501   002026  6E1B               	movwf	(?___flmul+1)^0,c
  8502   002028  0E00               	movlw	0
  8503   00202A  6E1C               	movwf	(?___flmul+2)^0,c
  8504   00202C  0E00               	movlw	0
  8505   00202E  6E1D               	movwf	(?___flmul+3)^0,c
  8506   002030  EFB2  F011         	goto	l2415
  8507   002034                     l8087:
  8508   002034  5020               	movf	(___flmul@a+2)^0,w,c
  8509   002036  021A               	mulwf	___flmul@b^0,c
  8510   002038  CFF3 F031          	movff	prodl,___flmul@temp
  8511   00203C  CFF4 F032          	movff	prodh,___flmul@temp+1
  8512   002040  5031               	movf	___flmul@temp^0,w,c
  8513   002042  6E27               	movwf	___flmul@grs^0,c
  8514   002044  6A28               	clrf	(___flmul@grs+1)^0,c
  8515   002046  6A29               	clrf	(___flmul@grs+2)^0,c
  8516   002048  6A2A               	clrf	(___flmul@grs+3)^0,c
  8517   00204A  5032               	movf	(___flmul@temp+1)^0,w,c
  8518   00204C  6E2D               	movwf	___flmul@prod^0,c
  8519   00204E  6A2E               	clrf	(___flmul@prod+1)^0,c
  8520   002050  6A2F               	clrf	(___flmul@prod+2)^0,c
  8521   002052  6A30               	clrf	(___flmul@prod+3)^0,c
  8522   002054  501F               	movf	(___flmul@a+1)^0,w,c
  8523   002056  021B               	mulwf	(___flmul@b+1)^0,c
  8524   002058  CFF3 F031          	movff	prodl,___flmul@temp
  8525   00205C  CFF4 F032          	movff	prodh,___flmul@temp+1
  8526   002060  5031               	movf	___flmul@temp^0,w,c
  8527   002062  2627               	addwf	___flmul@grs^0,f,c
  8528   002064  0E00               	movlw	0
  8529   002066  2228               	addwfc	(___flmul@grs+1)^0,f,c
  8530   002068  2229               	addwfc	(___flmul@grs+2)^0,f,c
  8531   00206A  222A               	addwfc	(___flmul@grs+3)^0,f,c
  8532   00206C  5032               	movf	(___flmul@temp+1)^0,w,c
  8533   00206E  262D               	addwf	___flmul@prod^0,f,c
  8534   002070  0E00               	movlw	0
  8535   002072  222E               	addwfc	(___flmul@prod+1)^0,f,c
  8536   002074  222F               	addwfc	(___flmul@prod+2)^0,f,c
  8537   002076  2230               	addwfc	(___flmul@prod+3)^0,f,c
  8538   002078  501E               	movf	___flmul@a^0,w,c
  8539   00207A  021C               	mulwf	(___flmul@b+2)^0,c
  8540   00207C  CFF3 F031          	movff	prodl,___flmul@temp
  8541   002080  CFF4 F032          	movff	prodh,___flmul@temp+1
  8542   002084  5031               	movf	___flmul@temp^0,w,c
  8543   002086  2627               	addwf	___flmul@grs^0,f,c
  8544   002088  0E00               	movlw	0
  8545   00208A  2228               	addwfc	(___flmul@grs+1)^0,f,c
  8546   00208C  2229               	addwfc	(___flmul@grs+2)^0,f,c
  8547   00208E  222A               	addwfc	(___flmul@grs+3)^0,f,c
  8548   002090  5032               	movf	(___flmul@temp+1)^0,w,c
  8549   002092  262D               	addwf	___flmul@prod^0,f,c
  8550   002094  0E00               	movlw	0
  8551   002096  222E               	addwfc	(___flmul@prod+1)^0,f,c
  8552   002098  222F               	addwfc	(___flmul@prod+2)^0,f,c
  8553   00209A  2230               	addwfc	(___flmul@prod+3)^0,f,c
  8554   00209C  C029  F02A         	movff	___flmul@grs+2,___flmul@grs+3
  8555   0020A0  C028  F029         	movff	___flmul@grs+1,___flmul@grs+2
  8556   0020A4  C027  F028         	movff	___flmul@grs,___flmul@grs+1
  8557   0020A8  6A27               	clrf	___flmul@grs^0,c
  8558   0020AA  501E               	movf	___flmul@a^0,w,c
  8559   0020AC  021B               	mulwf	(___flmul@b+1)^0,c
  8560   0020AE  CFF3 F031          	movff	prodl,___flmul@temp
  8561   0020B2  CFF4 F032          	movff	prodh,___flmul@temp+1
  8562   0020B6  5031               	movf	___flmul@temp^0,w,c
  8563   0020B8  2627               	addwf	___flmul@grs^0,f,c
  8564   0020BA  5032               	movf	(___flmul@temp+1)^0,w,c
  8565   0020BC  2228               	addwfc	(___flmul@grs+1)^0,f,c
  8566   0020BE  0E00               	movlw	0
  8567   0020C0  2229               	addwfc	(___flmul@grs+2)^0,f,c
  8568   0020C2  0E00               	movlw	0
  8569   0020C4  222A               	addwfc	(___flmul@grs+3)^0,f,c
  8570   0020C6  501F               	movf	(___flmul@a+1)^0,w,c
  8571   0020C8  021A               	mulwf	___flmul@b^0,c
  8572   0020CA  CFF3 F031          	movff	prodl,___flmul@temp
  8573   0020CE  CFF4 F032          	movff	prodh,___flmul@temp+1
  8574   0020D2  5031               	movf	___flmul@temp^0,w,c
  8575   0020D4  2627               	addwf	___flmul@grs^0,f,c
  8576   0020D6  5032               	movf	(___flmul@temp+1)^0,w,c
  8577   0020D8  2228               	addwfc	(___flmul@grs+1)^0,f,c
  8578   0020DA  0E00               	movlw	0
  8579   0020DC  2229               	addwfc	(___flmul@grs+2)^0,f,c
  8580   0020DE  0E00               	movlw	0
  8581   0020E0  222A               	addwfc	(___flmul@grs+3)^0,f,c
  8582   0020E2  C029  F02A         	movff	___flmul@grs+2,___flmul@grs+3
  8583   0020E6  C028  F029         	movff	___flmul@grs+1,___flmul@grs+2
  8584   0020EA  C027  F028         	movff	___flmul@grs,___flmul@grs+1
  8585   0020EE  6A27               	clrf	___flmul@grs^0,c
  8586   0020F0  501E               	movf	___flmul@a^0,w,c
  8587   0020F2  021A               	mulwf	___flmul@b^0,c
  8588   0020F4  CFF3 F031          	movff	prodl,___flmul@temp
  8589   0020F8  CFF4 F032          	movff	prodh,___flmul@temp+1
  8590   0020FC  5031               	movf	___flmul@temp^0,w,c
  8591   0020FE  2627               	addwf	___flmul@grs^0,f,c
  8592   002100  5032               	movf	(___flmul@temp+1)^0,w,c
  8593   002102  2228               	addwfc	(___flmul@grs+1)^0,f,c
  8594   002104  0E00               	movlw	0
  8595   002106  2229               	addwfc	(___flmul@grs+2)^0,f,c
  8596   002108  0E00               	movlw	0
  8597   00210A  222A               	addwfc	(___flmul@grs+3)^0,f,c
  8598   00210C  5020               	movf	(___flmul@a+2)^0,w,c
  8599   00210E  021B               	mulwf	(___flmul@b+1)^0,c
  8600   002110  CFF3 F031          	movff	prodl,___flmul@temp
  8601   002114  CFF4 F032          	movff	prodh,___flmul@temp+1
  8602   002118  5031               	movf	___flmul@temp^0,w,c
  8603   00211A  262D               	addwf	___flmul@prod^0,f,c
  8604   00211C  5032               	movf	(___flmul@temp+1)^0,w,c
  8605   00211E  222E               	addwfc	(___flmul@prod+1)^0,f,c
  8606   002120  0E00               	movlw	0
  8607   002122  222F               	addwfc	(___flmul@prod+2)^0,f,c
  8608   002124  0E00               	movlw	0
  8609   002126  2230               	addwfc	(___flmul@prod+3)^0,f,c
  8610   002128  501F               	movf	(___flmul@a+1)^0,w,c
  8611   00212A  021C               	mulwf	(___flmul@b+2)^0,c
  8612   00212C  CFF3 F031          	movff	prodl,___flmul@temp
  8613   002130  CFF4 F032          	movff	prodh,___flmul@temp+1
  8614   002134  5031               	movf	___flmul@temp^0,w,c
  8615   002136  262D               	addwf	___flmul@prod^0,f,c
  8616   002138  5032               	movf	(___flmul@temp+1)^0,w,c
  8617   00213A  222E               	addwfc	(___flmul@prod+1)^0,f,c
  8618   00213C  0E00               	movlw	0
  8619   00213E  222F               	addwfc	(___flmul@prod+2)^0,f,c
  8620   002140  0E00               	movlw	0
  8621   002142  2230               	addwfc	(___flmul@prod+3)^0,f,c
  8622   002144  5020               	movf	(___flmul@a+2)^0,w,c
  8623   002146  021C               	mulwf	(___flmul@b+2)^0,c
  8624   002148  CFF3 F031          	movff	prodl,___flmul@temp
  8625   00214C  CFF4 F032          	movff	prodh,___flmul@temp+1
  8626   002150  5031               	movf	___flmul@temp^0,w,c
  8627   002152  6E22               	movwf	??___flmul^0,c
  8628   002154  5032               	movf	(___flmul@temp+1)^0,w,c
  8629   002156  6E23               	movwf	(??___flmul+1)^0,c
  8630   002158  6A24               	clrf	(??___flmul+2)^0,c
  8631   00215A  6A25               	clrf	(??___flmul+3)^0,c
  8632   00215C  C024  F025         	movff	??___flmul+2,??___flmul+3
  8633   002160  C023  F024         	movff	??___flmul+1,??___flmul+2
  8634   002164  C022  F023         	movff	??___flmul,??___flmul+1
  8635   002168  6A22               	clrf	??___flmul^0,c
  8636   00216A  5022               	movf	??___flmul^0,w,c
  8637   00216C  262D               	addwf	___flmul@prod^0,f,c
  8638   00216E  5023               	movf	(??___flmul+1)^0,w,c
  8639   002170  222E               	addwfc	(___flmul@prod+1)^0,f,c
  8640   002172  5024               	movf	(??___flmul+2)^0,w,c
  8641   002174  222F               	addwfc	(___flmul@prod+2)^0,f,c
  8642   002176  5025               	movf	(??___flmul+3)^0,w,c
  8643   002178  2230               	addwfc	(___flmul@prod+3)^0,f,c
  8644   00217A  C027  F022         	movff	___flmul@grs,??___flmul
  8645   00217E  C028  F023         	movff	___flmul@grs+1,??___flmul+1
  8646   002182  C029  F024         	movff	___flmul@grs+2,??___flmul+2
  8647   002186  C02A  F025         	movff	___flmul@grs+3,??___flmul+3
  8648   00218A  0E19               	movlw	25
  8649   00218C  EFCD  F010         	goto	u6930
  8650   002190                     u6935:
  8651   002190  90D8               	bcf	status,0,c
  8652   002192  3225               	rrcf	(??___flmul+3)^0,f,c
  8653   002194  3224               	rrcf	(??___flmul+2)^0,f,c
  8654   002196  3223               	rrcf	(??___flmul+1)^0,f,c
  8655   002198  3222               	rrcf	??___flmul^0,f,c
  8656   00219A                     u6930:
  8657   00219A  2EE8               	decfsz	wreg,f,c
  8658   00219C  EFC8  F010         	goto	u6935
  8659   0021A0  5022               	movf	??___flmul^0,w,c
  8660   0021A2  262D               	addwf	___flmul@prod^0,f,c
  8661   0021A4  5023               	movf	(??___flmul+1)^0,w,c
  8662   0021A6  222E               	addwfc	(___flmul@prod+1)^0,f,c
  8663   0021A8  5024               	movf	(??___flmul+2)^0,w,c
  8664   0021AA  222F               	addwfc	(___flmul@prod+2)^0,f,c
  8665   0021AC  5025               	movf	(??___flmul+3)^0,w,c
  8666   0021AE  2230               	addwfc	(___flmul@prod+3)^0,f,c
  8667   0021B0  C029  F02A         	movff	___flmul@grs+2,___flmul@grs+3
  8668   0021B4  C028  F029         	movff	___flmul@grs+1,___flmul@grs+2
  8669   0021B8  C027  F028         	movff	___flmul@grs,___flmul@grs+1
  8670   0021BC  6A27               	clrf	___flmul@grs^0,c
  8671   0021BE  502B               	movf	___flmul@aexp^0,w,c
  8672   0021C0  C02C  F022         	movff	___flmul@bexp,??___flmul
  8673   0021C4  6A23               	clrf	(??___flmul+1)^0,c
  8674   0021C6  2622               	addwf	??___flmul^0,f,c
  8675   0021C8  0E00               	movlw	0
  8676   0021CA  2223               	addwfc	(??___flmul+1)^0,f,c
  8677   0021CC  0E82               	movlw	130
  8678   0021CE  2422               	addwf	??___flmul^0,w,c
  8679   0021D0  6E31               	movwf	___flmul@temp^0,c
  8680   0021D2  0EFF               	movlw	255
  8681   0021D4  2023               	addwfc	(??___flmul+1)^0,w,c
  8682   0021D6  6E32               	movwf	(___flmul@temp+1)^0,c
  8683   0021D8  EF03  F011         	goto	l8135
  8684   0021DC                     l8129:
  8685   0021DC  90D8               	bcf	status,0,c
  8686   0021DE  362D               	rlcf	___flmul@prod^0,f,c
  8687   0021E0  362E               	rlcf	(___flmul@prod+1)^0,f,c
  8688   0021E2  362F               	rlcf	(___flmul@prod+2)^0,f,c
  8689   0021E4  3630               	rlcf	(___flmul@prod+3)^0,f,c
  8690   0021E6  AE2A               	btfss	(___flmul@grs+3)^0,7,c
  8691   0021E8  EFF8  F010         	goto	u6941
  8692   0021EC  EFFA  F010         	goto	u6940
  8693   0021F0                     u6941:
  8694   0021F0  EFFB  F010         	goto	l2418
  8695   0021F4                     u6940:
  8696   0021F4  802D               	bsf	___flmul@prod^0,0,c
  8697   0021F6                     l2418:
  8698   0021F6  90D8               	bcf	status,0,c
  8699   0021F8  3627               	rlcf	___flmul@grs^0,f,c
  8700   0021FA  3628               	rlcf	(___flmul@grs+1)^0,f,c
  8701   0021FC  3629               	rlcf	(___flmul@grs+2)^0,f,c
  8702   0021FE  362A               	rlcf	(___flmul@grs+3)^0,f,c
  8703   002200  0631               	decf	___flmul@temp^0,f,c
  8704   002202  A0D8               	btfss	status,0,c
  8705   002204  0632               	decf	(___flmul@temp+1)^0,f,c
  8706   002206                     l8135:
  8707   002206  AE2F               	btfss	(___flmul@prod+2)^0,7,c
  8708   002208  EF08  F011         	goto	u6951
  8709   00220C  EF0A  F011         	goto	u6950
  8710   002210                     u6951:
  8711   002210  EFEE  F010         	goto	l8129
  8712   002214                     u6950:
  8713   002214  0E00               	movlw	0
  8714   002216  6E2B               	movwf	___flmul@aexp^0,c
  8715   002218  AE2A               	btfss	(___flmul@grs+3)^0,7,c
  8716   00221A  EF11  F011         	goto	u6961
  8717   00221E  EF13  F011         	goto	u6960
  8718   002222                     u6961:
  8719   002222  EF37  F011         	goto	l2420
  8720   002226                     u6960:
  8721   002226  0EFF               	movlw	255
  8722   002228  1427               	andwf	___flmul@grs^0,w,c
  8723   00222A  6E22               	movwf	??___flmul^0,c
  8724   00222C  0EFF               	movlw	255
  8725   00222E  1428               	andwf	(___flmul@grs+1)^0,w,c
  8726   002230  6E23               	movwf	(??___flmul+1)^0,c
  8727   002232  0EFF               	movlw	255
  8728   002234  1429               	andwf	(___flmul@grs+2)^0,w,c
  8729   002236  6E24               	movwf	(??___flmul+2)^0,c
  8730   002238  0E7F               	movlw	127
  8731   00223A  142A               	andwf	(___flmul@grs+3)^0,w,c
  8732   00223C  6E25               	movwf	(??___flmul+3)^0,c
  8733   00223E  5022               	movf	??___flmul^0,w,c
  8734   002240  1023               	iorwf	(??___flmul+1)^0,w,c
  8735   002242  1024               	iorwf	(??___flmul+2)^0,w,c
  8736   002244  1025               	iorwf	(??___flmul+3)^0,w,c
  8737   002246  B4D8               	btfsc	status,2,c
  8738   002248  EF28  F011         	goto	u6971
  8739   00224C  EF2A  F011         	goto	u6970
  8740   002250                     u6971:
  8741   002250  EF2E  F011         	goto	l2421
  8742   002254                     u6970:
  8743   002254                     l8143:
  8744   002254  0E01               	movlw	1
  8745   002256  6E2B               	movwf	___flmul@aexp^0,c
  8746   002258  EF37  F011         	goto	l2420
  8747   00225C                     l2421:
  8748   00225C  A02D               	btfss	___flmul@prod^0,0,c
  8749   00225E  EF33  F011         	goto	u6981
  8750   002262  EF35  F011         	goto	u6980
  8751   002266                     u6981:
  8752   002266  EF37  F011         	goto	l2420
  8753   00226A                     u6980:
  8754   00226A  EF2A  F011         	goto	l8143
  8755   00226E                     l2420:
  8756   00226E  502B               	movf	___flmul@aexp^0,w,c
  8757   002270  B4D8               	btfsc	status,2,c
  8758   002272  EF3D  F011         	goto	u6991
  8759   002276  EF3F  F011         	goto	u6990
  8760   00227A                     u6991:
  8761   00227A  EF63  F011         	goto	l8155
  8762   00227E                     u6990:
  8763   00227E  0E01               	movlw	1
  8764   002280  262D               	addwf	___flmul@prod^0,f,c
  8765   002282  0E00               	movlw	0
  8766   002284  222E               	addwfc	(___flmul@prod+1)^0,f,c
  8767   002286  222F               	addwfc	(___flmul@prod+2)^0,f,c
  8768   002288  2230               	addwfc	(___flmul@prod+3)^0,f,c
  8769   00228A  A030               	btfss	(___flmul@prod+3)^0,0,c
  8770   00228C  EF4A  F011         	goto	u7001
  8771   002290  EF4C  F011         	goto	u7000
  8772   002294                     u7001:
  8773   002294  EF63  F011         	goto	l8155
  8774   002298                     u7000:
  8775   002298  C02D  F022         	movff	___flmul@prod,??___flmul
  8776   00229C  C02E  F023         	movff	___flmul@prod+1,??___flmul+1
  8777   0022A0  C02F  F024         	movff	___flmul@prod+2,??___flmul+2
  8778   0022A4  C030  F025         	movff	___flmul@prod+3,??___flmul+3
  8779   0022A8  3425               	rlcf	(??___flmul+3)^0,w,c
  8780   0022AA  3225               	rrcf	(??___flmul+3)^0,f,c
  8781   0022AC  3224               	rrcf	(??___flmul+2)^0,f,c
  8782   0022AE  3223               	rrcf	(??___flmul+1)^0,f,c
  8783   0022B0  3222               	rrcf	??___flmul^0,f,c
  8784   0022B2  C022  F02D         	movff	??___flmul,___flmul@prod
  8785   0022B6  C023  F02E         	movff	??___flmul+1,___flmul@prod+1
  8786   0022BA  C024  F02F         	movff	??___flmul+2,___flmul@prod+2
  8787   0022BE  C025  F030         	movff	??___flmul+3,___flmul@prod+3
  8788   0022C2  4A31               	infsnz	___flmul@temp^0,f,c
  8789   0022C4  2A32               	incf	(___flmul@temp+1)^0,f,c
  8790   0022C6                     l8155:
  8791   0022C6  BE32               	btfsc	(___flmul@temp+1)^0,7,c
  8792   0022C8  EF6E  F011         	goto	u7011
  8793   0022CC  5032               	movf	(___flmul@temp+1)^0,w,c
  8794   0022CE  E108               	bnz	u7010
  8795   0022D0  2831               	incf	___flmul@temp^0,w,c
  8796   0022D2  A0D8               	btfss	status,0,c
  8797   0022D4  EF6E  F011         	goto	u7011
  8798   0022D8  EF70  F011         	goto	u7010
  8799   0022DC                     u7011:
  8800   0022DC  EF7A  F011         	goto	l8159
  8801   0022E0                     u7010:
  8802   0022E0  0E00               	movlw	0
  8803   0022E2  6E2D               	movwf	___flmul@prod^0,c
  8804   0022E4  0E00               	movlw	0
  8805   0022E6  6E2E               	movwf	(___flmul@prod+1)^0,c
  8806   0022E8  0E80               	movlw	128
  8807   0022EA  6E2F               	movwf	(___flmul@prod+2)^0,c
  8808   0022EC  0E7F               	movlw	127
  8809   0022EE  6E30               	movwf	(___flmul@prod+3)^0,c
  8810   0022F0  EFA8  F011         	goto	l8171
  8811   0022F4                     l8159:
  8812   0022F4  BE32               	btfsc	(___flmul@temp+1)^0,7,c
  8813   0022F6  EF87  F011         	goto	u7020
  8814   0022FA  5032               	movf	(___flmul@temp+1)^0,w,c
  8815   0022FC  E106               	bnz	u7021
  8816   0022FE  0431               	decf	___flmul@temp^0,w,c
  8817   002300  B0D8               	btfsc	status,0,c
  8818   002302  EF85  F011         	goto	u7021
  8819   002306  EF87  F011         	goto	u7020
  8820   00230A                     u7021:
  8821   00230A  EF93  F011         	goto	l2428
  8822   00230E                     u7020:
  8823   00230E  0E00               	movlw	0
  8824   002310  6E2D               	movwf	___flmul@prod^0,c
  8825   002312  0E00               	movlw	0
  8826   002314  6E2E               	movwf	(___flmul@prod+1)^0,c
  8827   002316  0E00               	movlw	0
  8828   002318  6E2F               	movwf	(___flmul@prod+2)^0,c
  8829   00231A  0E00               	movlw	0
  8830   00231C  6E30               	movwf	(___flmul@prod+3)^0,c
  8831   00231E  0E00               	movlw	0
  8832   002320  6E26               	movwf	___flmul@sign^0,c
  8833   002322  EFA8  F011         	goto	l8171
  8834   002326                     l2428:
  8835   002326  C031  F02C         	movff	___flmul@temp,___flmul@bexp
  8836   00232A  0EFF               	movlw	255
  8837   00232C  162D               	andwf	___flmul@prod^0,f,c
  8838   00232E  0EFF               	movlw	255
  8839   002330  162E               	andwf	(___flmul@prod+1)^0,f,c
  8840   002332  0E7F               	movlw	127
  8841   002334  162F               	andwf	(___flmul@prod+2)^0,f,c
  8842   002336  0E00               	movlw	0
  8843   002338  1630               	andwf	(___flmul@prod+3)^0,f,c
  8844   00233A  A02C               	btfss	___flmul@bexp^0,0,c
  8845   00233C  EFA2  F011         	goto	u7031
  8846   002340  EFA4  F011         	goto	u7030
  8847   002344                     u7031:
  8848   002344  EFA5  F011         	goto	l8169
  8849   002348                     u7030:
  8850   002348  8E2F               	bsf	(___flmul@prod+2)^0,7,c
  8851   00234A                     l8169:
  8852   00234A  90D8               	bcf	status,0,c
  8853   00234C  302C               	rrcf	___flmul@bexp^0,w,c
  8854   00234E  6E30               	movwf	(___flmul@prod+3)^0,c
  8855   002350                     l8171:
  8856   002350  5026               	movf	___flmul@sign^0,w,c
  8857   002352  1230               	iorwf	(___flmul@prod+3)^0,f,c
  8858   002354  C02D  F01A         	movff	___flmul@prod,?___flmul
  8859   002358  C02E  F01B         	movff	___flmul@prod+1,?___flmul+1
  8860   00235C  C02F  F01C         	movff	___flmul@prod+2,?___flmul+2
  8861   002360  C030  F01D         	movff	___flmul@prod+3,?___flmul+3
  8862   002364                     l2415:
  8863   002364  0012               	return		;funcret
  8864   002366                     __end_of___flmul:
  8865                           	callstack 0
  8866                           
  8867 ;; *************** function _ADC_GetConversion_Blocking *****************
  8868 ;; Defined at:
  8869 ;;		line 207 in file "MCAL_Layer/ADC/hal_adc.c"
  8870 ;; Parameters:    Size  Location     Type
  8871 ;;  _adc            2   18[COMRAM] PTR const struct .
  8872 ;;		 -> adc_1(7), 
  8873 ;;  channel         1   20[COMRAM] enum E3032
  8874 ;;  conversion_r    2   21[COMRAM] PTR unsigned short 
  8875 ;;		 -> adc_lm35_1(2), 
  8876 ;; Auto vars:     Size  Location     Type
  8877 ;;  ret             1   23[COMRAM] unsigned char 
  8878 ;; Return value:  Size  Location     Type
  8879 ;;                  1    wreg      unsigned char 
  8880 ;; Registers used:
  8881 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8882 ;; Tracked objects:
  8883 ;;		On entry : 0/0
  8884 ;;		On exit  : 0/0
  8885 ;;		Unchanged: 0/0
  8886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8887 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8888 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8890 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8891 ;;Total ram usage:        6 bytes
  8892 ;; Hardware stack levels used: 1
  8893 ;; Hardware stack levels required when called: 6
  8894 ;; This function calls:
  8895 ;;		_ADC_GetConversionResult
  8896 ;;		_ADC_SelectChannel
  8897 ;;		_ADC_StartConversion
  8898 ;; This function is called by:
  8899 ;;		_main
  8900 ;; This function uses a non-reentrant model
  8901 ;;
  8902                           
  8903                           	psect	text42
  8904   004110                     __ptext42:
  8905                           	callstack 0
  8906   004110                     _ADC_GetConversion_Blocking:
  8907                           	callstack 24
  8908   004110                     
  8909                           ;MCAL_Layer/ADC/hal_adc.c: 210:     if((((void*)0)== _adc) || (((void*)0)==conversion_re
      +                          sult)){
  8910   004110  5013               	movf	ADC_GetConversion_Blocking@_adc^0,w,c
  8911   004112  1014               	iorwf	(ADC_GetConversion_Blocking@_adc+1)^0,w,c
  8912   004114  B4D8               	btfsc	status,2,c
  8913   004116  EF8F  F020         	goto	u6731
  8914   00411A  EF91  F020         	goto	u6730
  8915   00411E                     u6731:
  8916   00411E  EF9A  F020         	goto	l7841
  8917   004122                     u6730:
  8918   004122  5016               	movf	ADC_GetConversion_Blocking@conversion_result^0,w,c
  8919   004124  1017               	iorwf	(ADC_GetConversion_Blocking@conversion_result+1)^0,w,c
  8920   004126  A4D8               	btfss	status,2,c
  8921   004128  EF98  F020         	goto	u6741
  8922   00412C  EF9A  F020         	goto	u6740
  8923   004130                     u6741:
  8924   004130  EF9E  F020         	goto	l7843
  8925   004134                     u6740:
  8926   004134                     l7841:
  8927                           
  8928                           ;MCAL_Layer/ADC/hal_adc.c: 211:         ret=(Std_ReturnType)0x01;
  8929   004134  0E01               	movlw	1
  8930   004136  6E18               	movwf	ADC_GetConversion_Blocking@ret^0,c
  8931                           
  8932                           ;MCAL_Layer/ADC/hal_adc.c: 212:     }
  8933   004138  EFC0  F020         	goto	l7847
  8934   00413C                     l7843:
  8935                           
  8936                           ;MCAL_Layer/ADC/hal_adc.c: 215:         ret=ADC_SelectChannel(_adc,channel);
  8937   00413C  C013  F00F         	movff	ADC_GetConversion_Blocking@_adc,ADC_SelectChannel@_adc
  8938   004140  C014  F010         	movff	ADC_GetConversion_Blocking@_adc+1,ADC_SelectChannel@_adc+1
  8939   004144  C015  F011         	movff	ADC_GetConversion_Blocking@channel,ADC_SelectChannel@channel
  8940   004148  ECC5  F022         	call	_ADC_SelectChannel	;wreg free
  8941   00414C  6E18               	movwf	ADC_GetConversion_Blocking@ret^0,c
  8942                           
  8943                           ;MCAL_Layer/ADC/hal_adc.c: 217:         ret=ADC_StartConversion(_adc);
  8944   00414E  C013  F00C         	movff	ADC_GetConversion_Blocking@_adc,ADC_StartConversion@_adc
  8945   004152  C014  F00D         	movff	ADC_GetConversion_Blocking@_adc+1,ADC_StartConversion@_adc+1
  8946   004156  EC34  F023         	call	_ADC_StartConversion	;wreg free
  8947   00415A  6E18               	movwf	ADC_GetConversion_Blocking@ret^0,c
  8948   00415C                     l553:
  8949   00415C  B2C2               	btfsc	194,1,c	;volatile
  8950   00415E  EFB3  F020         	goto	u6751
  8951   004162  EFB5  F020         	goto	u6750
  8952   004166                     u6751:
  8953   004166  EFAE  F020         	goto	l553
  8954   00416A                     u6750:
  8955   00416A                     
  8956                           ;MCAL_Layer/ADC/hal_adc.c: 220:         ret=ADC_GetConversionResult(_adc,conversion_resu
      +                          lt);
  8957   00416A  C013  F00C         	movff	ADC_GetConversion_Blocking@_adc,ADC_GetConversionResult@_adc
  8958   00416E  C014  F00D         	movff	ADC_GetConversion_Blocking@_adc+1,ADC_GetConversionResult@_adc+1
  8959   004172  C016  F00E         	movff	ADC_GetConversion_Blocking@conversion_result,ADC_GetConversionResult@conversion_r
      +                          esult
  8960   004176  C017  F00F         	movff	ADC_GetConversion_Blocking@conversion_result+1,ADC_GetConversionResult@conversion
      +                          _result+1
  8961   00417A  ECDD  F01C         	call	_ADC_GetConversionResult	;wreg free
  8962   00417E  6E18               	movwf	ADC_GetConversion_Blocking@ret^0,c
  8963   004180                     l7847:
  8964                           
  8965                           ;MCAL_Layer/ADC/hal_adc.c: 224:     return ret;
  8966   004180  5018               	movf	ADC_GetConversion_Blocking@ret^0,w,c
  8967   004182  0012               	return		;funcret
  8968   004184                     __end_of_ADC_GetConversion_Blocking:
  8969                           	callstack 0
  8970                           
  8971 ;; *************** function _ADC_StartConversion *****************
  8972 ;; Defined at:
  8973 ;;		line 131 in file "MCAL_Layer/ADC/hal_adc.c"
  8974 ;; Parameters:    Size  Location     Type
  8975 ;;  _adc            2   11[COMRAM] PTR const struct .
  8976 ;;		 -> adc_1(7), 
  8977 ;; Auto vars:     Size  Location     Type
  8978 ;;  ret             1    0        unsigned char 
  8979 ;; Return value:  Size  Location     Type
  8980 ;;                  1    wreg      unsigned char 
  8981 ;; Registers used:
  8982 ;;		wreg, status,2, status,0
  8983 ;; Tracked objects:
  8984 ;;		On entry : 0/0
  8985 ;;		On exit  : 0/0
  8986 ;;		Unchanged: 0/0
  8987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8988 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8991 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8992 ;;Total ram usage:        2 bytes
  8993 ;; Hardware stack levels used: 1
  8994 ;; Hardware stack levels required when called: 4
  8995 ;; This function calls:
  8996 ;;		Nothing
  8997 ;; This function is called by:
  8998 ;;		_ADC_GetConversion_Blocking
  8999 ;;		_ADC_StartConversion_Interrupt
  9000 ;; This function uses a non-reentrant model
  9001 ;;
  9002                           
  9003                           	psect	text43
  9004   004668                     __ptext43:
  9005                           	callstack 0
  9006   004668                     _ADC_StartConversion:
  9007                           	callstack 25
  9008   004668                     
  9009                           ;MCAL_Layer/ADC/hal_adc.c: 134:     if(((void*)0)== _adc){
  9010   004668  500C               	movf	ADC_StartConversion@_adc^0,w,c
  9011   00466A  100D               	iorwf	(ADC_StartConversion@_adc+1)^0,w,c
  9012   00466C  A4D8               	btfss	status,2,c
  9013   00466E  EF3B  F023         	goto	u6391
  9014   004672  EF3D  F023         	goto	u6390
  9015   004676                     u6391:
  9016   004676  EF3F  F023         	goto	l526
  9017   00467A                     u6390:
  9018   00467A                     l7597:
  9019                           
  9020                           ;MCAL_Layer/ADC/hal_adc.c: 136:     }
  9021   00467A  EF42  F023         	goto	l527
  9022   00467E                     l526:
  9023                           
  9024                           ;MCAL_Layer/ADC/hal_adc.c: 138:         (ADCON0bits.GO_DONE=1);
  9025   00467E  82C2               	bsf	194,1,c	;volatile
  9026   004680  EF3D  F023         	goto	l7597
  9027   004684                     l527:
  9028                           
  9029                           ;MCAL_Layer/ADC/hal_adc.c: 142:     return ret;
  9030   004684  0E01               	movlw	1
  9031   004686  0012               	return		;funcret
  9032   004688                     __end_of_ADC_StartConversion:
  9033                           	callstack 0
  9034                           
  9035 ;; *************** function _ADC_SelectChannel *****************
  9036 ;; Defined at:
  9037 ;;		line 106 in file "MCAL_Layer/ADC/hal_adc.c"
  9038 ;; Parameters:    Size  Location     Type
  9039 ;;  _adc            2   14[COMRAM] PTR const struct .
  9040 ;;		 -> adc_1(7), 
  9041 ;;  channel         1   16[COMRAM] enum E3032
  9042 ;; Auto vars:     Size  Location     Type
  9043 ;;  ret             1    0        unsigned char 
  9044 ;; Return value:  Size  Location     Type
  9045 ;;                  1    wreg      unsigned char 
  9046 ;; Registers used:
  9047 ;;		wreg, status,2, status,0, cstack
  9048 ;; Tracked objects:
  9049 ;;		On entry : 0/0
  9050 ;;		On exit  : 0/0
  9051 ;;		Unchanged: 0/0
  9052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9053 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9055 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9056 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9057 ;;Total ram usage:        4 bytes
  9058 ;; Hardware stack levels used: 1
  9059 ;; Hardware stack levels required when called: 5
  9060 ;; This function calls:
  9061 ;;		_adc_input_channel_port_configure
  9062 ;; This function is called by:
  9063 ;;		_ADC_GetConversion_Blocking
  9064 ;;		_ADC_StartConversion_Interrupt
  9065 ;; This function uses a non-reentrant model
  9066 ;;
  9067                           
  9068                           	psect	text44
  9069   00458A                     __ptext44:
  9070                           	callstack 0
  9071   00458A                     _ADC_SelectChannel:
  9072                           	callstack 24
  9073   00458A                     
  9074                           ;MCAL_Layer/ADC/hal_adc.c: 109:     if(((void*)0)== _adc){
  9075   00458A  500F               	movf	ADC_SelectChannel@_adc^0,w,c
  9076   00458C  1010               	iorwf	(ADC_SelectChannel@_adc+1)^0,w,c
  9077   00458E  A4D8               	btfss	status,2,c
  9078   004590  EFCC  F022         	goto	u6381
  9079   004594  EFCE  F022         	goto	u6380
  9080   004598                     u6381:
  9081   004598  EFD0  F022         	goto	l7583
  9082   00459C                     u6380:
  9083   00459C                     l7581:
  9084                           
  9085                           ;MCAL_Layer/ADC/hal_adc.c: 111:     }
  9086   00459C  EFDE  F022         	goto	l7589
  9087   0045A0                     l7583:
  9088                           
  9089                           ;MCAL_Layer/ADC/hal_adc.c: 115:         ADCON0bits.CHS=channel;
  9090   0045A0  C011  F012         	movff	ADC_SelectChannel@channel,??_ADC_SelectChannel
  9091   0045A4  4612               	rlncf	??_ADC_SelectChannel^0,f,c
  9092   0045A6  4612               	rlncf	??_ADC_SelectChannel^0,f,c
  9093   0045A8  50C2               	movf	194,w,c	;volatile
  9094   0045AA  1812               	xorwf	??_ADC_SelectChannel^0,w,c
  9095   0045AC  0BC3               	andlw	-61
  9096   0045AE  1812               	xorwf	??_ADC_SelectChannel^0,w,c
  9097   0045B0  6EC2               	movwf	194,c	;volatile
  9098   0045B2                     
  9099                           ;MCAL_Layer/ADC/hal_adc.c: 116:         adc_input_channel_port_configure(channel);
  9100   0045B2  5011               	movf	ADC_SelectChannel@channel^0,w,c
  9101   0045B4  EC40  F01B         	call	_adc_input_channel_port_configure
  9102   0045B8  EFCE  F022         	goto	l7581
  9103   0045BC                     l7589:
  9104                           
  9105                           ;MCAL_Layer/ADC/hal_adc.c: 122:     return ret;
  9106   0045BC  0E01               	movlw	1
  9107   0045BE  0012               	return		;funcret
  9108   0045C0                     __end_of_ADC_SelectChannel:
  9109                           	callstack 0
  9110                           
  9111 ;; *************** function _adc_input_channel_port_configure *****************
  9112 ;; Defined at:
  9113 ;;		line 253 in file "MCAL_Layer/ADC/hal_adc.c"
  9114 ;; Parameters:    Size  Location     Type
  9115 ;;  channel         1    wreg     enum E3032
  9116 ;; Auto vars:     Size  Location     Type
  9117 ;;  channel         1   13[COMRAM] enum E3032
  9118 ;; Return value:  Size  Location     Type
  9119 ;;                  1    wreg      void 
  9120 ;; Registers used:
  9121 ;;		wreg, status,2, status,0
  9122 ;; Tracked objects:
  9123 ;;		On entry : 0/0
  9124 ;;		On exit  : 0/0
  9125 ;;		Unchanged: 0/0
  9126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9128 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9129 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9130 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9131 ;;Total ram usage:        3 bytes
  9132 ;; Hardware stack levels used: 1
  9133 ;; Hardware stack levels required when called: 4
  9134 ;; This function calls:
  9135 ;;		Nothing
  9136 ;; This function is called by:
  9137 ;;		_ADC_Init
  9138 ;;		_ADC_SelectChannel
  9139 ;; This function uses a non-reentrant model
  9140 ;;
  9141                           
  9142                           	psect	text45
  9143   003680                     __ptext45:
  9144                           	callstack 0
  9145   003680                     _adc_input_channel_port_configure:
  9146                           	callstack 23
  9147                           
  9148                           ;incstack = 0
  9149                           ;adc_input_channel_port_configure@channel stored from wreg
  9150   003680  6E0E               	movwf	adc_input_channel_port_configure@channel^0,c
  9151   003682                     
  9152                           ;MCAL_Layer/ADC/hal_adc.c: 254:     switch(channel){
  9153   003682  EF6A  F01B         	goto	l7117
  9154   003686                     l7089:
  9155   003686  8092               	bsf	146,0,c	;volatile
  9156   003688  EFAB  F01B         	goto	l579
  9157   00368C                     l7091:
  9158   00368C  8292               	bsf	146,1,c	;volatile
  9159   00368E  EFAB  F01B         	goto	l579
  9160   003692                     l7093:
  9161   003692  8492               	bsf	146,2,c	;volatile
  9162   003694  EFAB  F01B         	goto	l579
  9163   003698                     l7095:
  9164   003698  8692               	bsf	146,3,c	;volatile
  9165   00369A  EFAB  F01B         	goto	l579
  9166   00369E                     l7097:
  9167   00369E  8A92               	bsf	146,5,c	;volatile
  9168   0036A0  EFAB  F01B         	goto	l579
  9169   0036A4                     l7099:
  9170   0036A4  8096               	bsf	150,0,c	;volatile
  9171   0036A6  EFAB  F01B         	goto	l579
  9172   0036AA                     l7101:
  9173   0036AA  8296               	bsf	150,1,c	;volatile
  9174   0036AC  EFAB  F01B         	goto	l579
  9175   0036B0                     l7103:
  9176   0036B0  8496               	bsf	150,2,c	;volatile
  9177   0036B2  EFAB  F01B         	goto	l579
  9178   0036B6                     l7105:
  9179   0036B6  8493               	bsf	147,2,c	;volatile
  9180   0036B8  EFAB  F01B         	goto	l579
  9181   0036BC                     l7107:
  9182   0036BC  8693               	bsf	147,3,c	;volatile
  9183   0036BE  EFAB  F01B         	goto	l579
  9184   0036C2                     l7109:
  9185   0036C2  8293               	bsf	147,1,c	;volatile
  9186   0036C4  EFAB  F01B         	goto	l579
  9187   0036C8                     l7111:
  9188   0036C8  8893               	bsf	147,4,c	;volatile
  9189   0036CA  EFAB  F01B         	goto	l579
  9190   0036CE                     l7113:
  9191   0036CE  8093               	bsf	147,0,c	;volatile
  9192   0036D0  EFAB  F01B         	goto	l579
  9193   0036D4                     l7117:
  9194   0036D4  500E               	movf	adc_input_channel_port_configure@channel^0,w,c
  9195   0036D6  6E0C               	movwf	??_adc_input_channel_port_configure^0,c
  9196   0036D8  6A0D               	clrf	(??_adc_input_channel_port_configure+1)^0,c
  9197                           
  9198                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9199                           ; Switch size 1, requested type "simple"
  9200                           ; Number of cases is 1, Range of values is 0 to 0
  9201                           ; switch strategies available:
  9202                           ; Name         Instructions Cycles
  9203                           ; simple_byte            4     3 (average)
  9204                           ;	Chosen strategy is simple_byte
  9205   0036DA  500D               	movf	(??_adc_input_channel_port_configure+1)^0,w,c
  9206   0036DC  0A00               	xorlw	0	; case 0
  9207   0036DE  B4D8               	btfsc	status,2,c
  9208   0036E0  EF74  F01B         	goto	l10209
  9209   0036E4  EFAB  F01B         	goto	l579
  9210   0036E8                     l10209:
  9211                           
  9212                           ; Switch size 1, requested type "simple"
  9213                           ; Number of cases is 13, Range of values is 0 to 12
  9214                           ; switch strategies available:
  9215                           ; Name         Instructions Cycles
  9216                           ; simple_byte           40    21 (average)
  9217                           ;	Chosen strategy is simple_byte
  9218   0036E8  500C               	movf	??_adc_input_channel_port_configure^0,w,c
  9219   0036EA  0A00               	xorlw	0	; case 0
  9220   0036EC  B4D8               	btfsc	status,2,c
  9221   0036EE  EF43  F01B         	goto	l7089
  9222   0036F2  0A01               	xorlw	1	; case 1
  9223   0036F4  B4D8               	btfsc	status,2,c
  9224   0036F6  EF46  F01B         	goto	l7091
  9225   0036FA  0A03               	xorlw	3	; case 2
  9226   0036FC  B4D8               	btfsc	status,2,c
  9227   0036FE  EF49  F01B         	goto	l7093
  9228   003702  0A01               	xorlw	1	; case 3
  9229   003704  B4D8               	btfsc	status,2,c
  9230   003706  EF4C  F01B         	goto	l7095
  9231   00370A  0A07               	xorlw	7	; case 4
  9232   00370C  B4D8               	btfsc	status,2,c
  9233   00370E  EF4F  F01B         	goto	l7097
  9234   003712  0A01               	xorlw	1	; case 5
  9235   003714  B4D8               	btfsc	status,2,c
  9236   003716  EF52  F01B         	goto	l7099
  9237   00371A  0A03               	xorlw	3	; case 6
  9238   00371C  B4D8               	btfsc	status,2,c
  9239   00371E  EF55  F01B         	goto	l7101
  9240   003722  0A01               	xorlw	1	; case 7
  9241   003724  B4D8               	btfsc	status,2,c
  9242   003726  EF58  F01B         	goto	l7103
  9243   00372A  0A0F               	xorlw	15	; case 8
  9244   00372C  B4D8               	btfsc	status,2,c
  9245   00372E  EF5B  F01B         	goto	l7105
  9246   003732  0A01               	xorlw	1	; case 9
  9247   003734  B4D8               	btfsc	status,2,c
  9248   003736  EF5E  F01B         	goto	l7107
  9249   00373A  0A03               	xorlw	3	; case 10
  9250   00373C  B4D8               	btfsc	status,2,c
  9251   00373E  EF61  F01B         	goto	l7109
  9252   003742  0A01               	xorlw	1	; case 11
  9253   003744  B4D8               	btfsc	status,2,c
  9254   003746  EF64  F01B         	goto	l7111
  9255   00374A  0A07               	xorlw	7	; case 12
  9256   00374C  B4D8               	btfsc	status,2,c
  9257   00374E  EF67  F01B         	goto	l7113
  9258   003752  EFAB  F01B         	goto	l579
  9259   003756                     l579:
  9260   003756  0012               	return		;funcret
  9261   003758                     __end_of_adc_input_channel_port_configure:
  9262                           	callstack 0
  9263                           
  9264 ;; *************** function _ADC_GetConversionResult *****************
  9265 ;; Defined at:
  9266 ;;		line 174 in file "MCAL_Layer/ADC/hal_adc.c"
  9267 ;; Parameters:    Size  Location     Type
  9268 ;;  _adc            2   11[COMRAM] PTR const struct .
  9269 ;;		 -> adc_1(7), 
  9270 ;;  conversion_r    2   13[COMRAM] PTR unsigned short 
  9271 ;;		 -> adc_lm35_1(2), 
  9272 ;; Auto vars:     Size  Location     Type
  9273 ;;  ret             1    0        unsigned char 
  9274 ;; Return value:  Size  Location     Type
  9275 ;;                  1    wreg      unsigned char 
  9276 ;; Registers used:
  9277 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9278 ;; Tracked objects:
  9279 ;;		On entry : 0/0
  9280 ;;		On exit  : 0/0
  9281 ;;		Unchanged: 0/0
  9282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9283 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9285 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9286 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9287 ;;Total ram usage:        7 bytes
  9288 ;; Hardware stack levels used: 1
  9289 ;; Hardware stack levels required when called: 4
  9290 ;; This function calls:
  9291 ;;		Nothing
  9292 ;; This function is called by:
  9293 ;;		_ADC_GetConversion_Blocking
  9294 ;; This function uses a non-reentrant model
  9295 ;;
  9296                           
  9297                           	psect	text46
  9298   0039BA                     __ptext46:
  9299                           	callstack 0
  9300   0039BA                     _ADC_GetConversionResult:
  9301                           	callstack 25
  9302   0039BA                     
  9303                           ;MCAL_Layer/ADC/hal_adc.c: 177:     if((((void*)0)== _adc) || (((void*)0)==conversion_re
      +                          sult)){
  9304   0039BA  500C               	movf	ADC_GetConversionResult@_adc^0,w,c
  9305   0039BC  100D               	iorwf	(ADC_GetConversionResult@_adc+1)^0,w,c
  9306   0039BE  B4D8               	btfsc	status,2,c
  9307   0039C0  EFE4  F01C         	goto	u6401
  9308   0039C4  EFE6  F01C         	goto	u6400
  9309   0039C8                     u6401:
  9310   0039C8  EFEF  F01C         	goto	l7609
  9311   0039CC                     u6400:
  9312   0039CC  500E               	movf	ADC_GetConversionResult@conversion_result^0,w,c
  9313   0039CE  100F               	iorwf	(ADC_GetConversionResult@conversion_result+1)^0,w,c
  9314   0039D0  A4D8               	btfss	status,2,c
  9315   0039D2  EFED  F01C         	goto	u6411
  9316   0039D6  EFEF  F01C         	goto	u6410
  9317   0039DA                     u6411:
  9318   0039DA  EFF1  F01C         	goto	l7611
  9319   0039DE                     u6410:
  9320   0039DE                     l7609:
  9321                           
  9322                           ;MCAL_Layer/ADC/hal_adc.c: 180:     }
  9323   0039DE  EF3B  F01D         	goto	l7623
  9324   0039E2                     l7611:
  9325                           
  9326                           ;MCAL_Layer/ADC/hal_adc.c: 182:         if(0x01U == _adc->adc_result_format){
  9327   0039E2  EE20 F006          	lfsr	2,6
  9328   0039E6  500C               	movf	ADC_GetConversionResult@_adc^0,w,c
  9329   0039E8  26D9               	addwf	fsr2l,f,c
  9330   0039EA  500D               	movf	(ADC_GetConversionResult@_adc+1)^0,w,c
  9331   0039EC  22DA               	addwfc	fsr2h,f,c
  9332   0039EE  A2DF               	btfss	indf2,1,c
  9333   0039F0  EFFC  F01C         	goto	u6421
  9334   0039F4  EFFE  F01C         	goto	u6420
  9335   0039F8                     u6421:
  9336   0039F8  EF12  F01D         	goto	l7615
  9337   0039FC                     u6420:
  9338   0039FC                     l7613:
  9339                           
  9340                           ;MCAL_Layer/ADC/hal_adc.c: 183:             *conversion_result= (adc_result_t)((ADRESH <
      +                          < 8) + ADRESL);
  9341   0039FC  50C3               	movf	195,w,c	;volatile
  9342   0039FE  CFC4 F010          	movff	4036,??_ADC_GetConversionResult	;volatile
  9343   003A02  6A11               	clrf	(??_ADC_GetConversionResult+1)^0,c
  9344   003A04  C010  F011         	movff	??_ADC_GetConversionResult,??_ADC_GetConversionResult+1
  9345   003A08  6A10               	clrf	??_ADC_GetConversionResult^0,c
  9346   003A0A  2610               	addwf	??_ADC_GetConversionResult^0,f,c
  9347   003A0C  0E00               	movlw	0
  9348   003A0E  2211               	addwfc	(??_ADC_GetConversionResult+1)^0,f,c
  9349   003A10  C00E  FFD9         	movff	ADC_GetConversionResult@conversion_result,fsr2l
  9350   003A14  C00F  FFDA         	movff	ADC_GetConversionResult@conversion_result+1,fsr2h
  9351   003A18  C010  FFDE         	movff	??_ADC_GetConversionResult,postinc2
  9352   003A1C  C011  FFDD         	movff	??_ADC_GetConversionResult+1,postdec2
  9353                           
  9354                           ;MCAL_Layer/ADC/hal_adc.c: 184:         }
  9355   003A20  EFEF  F01C         	goto	l7609
  9356   003A24                     l7615:
  9357   003A24  EE20 F006          	lfsr	2,6
  9358   003A28  500C               	movf	ADC_GetConversionResult@_adc^0,w,c
  9359   003A2A  26D9               	addwf	fsr2l,f,c
  9360   003A2C  500D               	movf	(ADC_GetConversionResult@_adc+1)^0,w,c
  9361   003A2E  22DA               	addwfc	fsr2h,f,c
  9362   003A30  B2DF               	btfsc	indf2,1,c
  9363   003A32  EF1D  F01D         	goto	u6431
  9364   003A36  EF1F  F01D         	goto	u6430
  9365   003A3A                     u6431:
  9366   003A3A  EFFE  F01C         	goto	l7613
  9367   003A3E                     u6430:
  9368   003A3E                     
  9369                           ;MCAL_Layer/ADC/hal_adc.c: 186:             *conversion_result= (adc_result_t)(((ADRESH 
      +                          << 8) + ADRESL) >>6);
  9370   003A3E  50C3               	movf	195,w,c	;volatile
  9371   003A40  CFC4 F010          	movff	4036,??_ADC_GetConversionResult	;volatile
  9372   003A44  6A11               	clrf	(??_ADC_GetConversionResult+1)^0,c
  9373   003A46  C010  F011         	movff	??_ADC_GetConversionResult,??_ADC_GetConversionResult+1
  9374   003A4A  6A10               	clrf	??_ADC_GetConversionResult^0,c
  9375   003A4C  2610               	addwf	??_ADC_GetConversionResult^0,f,c
  9376   003A4E  0E00               	movlw	0
  9377   003A50  2211               	addwfc	(??_ADC_GetConversionResult+1)^0,f,c
  9378   003A52  0E06               	movlw	6
  9379   003A54  6E12               	movwf	(??_ADC_GetConversionResult+2)^0,c
  9380   003A56                     u6445:
  9381   003A56  3411               	rlcf	(??_ADC_GetConversionResult+1)^0,w,c
  9382   003A58  3211               	rrcf	(??_ADC_GetConversionResult+1)^0,f,c
  9383   003A5A  3210               	rrcf	??_ADC_GetConversionResult^0,f,c
  9384   003A5C  2E12               	decfsz	(??_ADC_GetConversionResult+2)^0,f,c
  9385   003A5E  EF2B  F01D         	goto	u6445
  9386   003A62  C00E  FFD9         	movff	ADC_GetConversionResult@conversion_result,fsr2l
  9387   003A66  C00F  FFDA         	movff	ADC_GetConversionResult@conversion_result+1,fsr2h
  9388   003A6A  C010  FFDE         	movff	??_ADC_GetConversionResult,postinc2
  9389   003A6E  C011  FFDD         	movff	??_ADC_GetConversionResult+1,postdec2
  9390                           
  9391                           ;MCAL_Layer/ADC/hal_adc.c: 187:         }
  9392   003A72  EFEF  F01C         	goto	l7609
  9393   003A76                     l7623:
  9394                           
  9395                           ;MCAL_Layer/ADC/hal_adc.c: 196:     return ret;
  9396   003A76  0E01               	movlw	1
  9397   003A78  0012               	return		;funcret
  9398   003A7A                     __end_of_ADC_GetConversionResult:
  9399                           	callstack 0
  9400                           
  9401 ;; *************** function _InterruptManagerHigh *****************
  9402 ;; Defined at:
  9403 ;;		line 88 in file "MCAL_Layer/Interrupt/mcal_interrupt_manager.c"
  9404 ;; Parameters:    Size  Location     Type
  9405 ;;		None
  9406 ;; Auto vars:     Size  Location     Type
  9407 ;;		None
  9408 ;; Return value:  Size  Location     Type
  9409 ;;                  1    wreg      void 
  9410 ;; Registers used:
  9411 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  9412 ;; Tracked objects:
  9413 ;;		On entry : 0/0
  9414 ;;		On exit  : 0/0
  9415 ;;		Unchanged: 0/0
  9416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9419 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9420 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9421 ;;Total ram usage:        4 bytes
  9422 ;; Hardware stack levels used: 1
  9423 ;; Hardware stack levels required when called: 3
  9424 ;; This function calls:
  9425 ;;		_ADC_ISR
  9426 ;;		_CCP1_ISR
  9427 ;;		_CCP2_ISR
  9428 ;;		_EUSART_Rx_ISR
  9429 ;;		_EUSART_Tx_ISR
  9430 ;;		_INT0_ISR
  9431 ;;		_INT1_ISR
  9432 ;;		_INT2_ISR
  9433 ;;		_MSSP_I2C_BC_ISR
  9434 ;;		_MSSP_I2C_ISR
  9435 ;;		_RB4_ISR
  9436 ;;		_RB5_ISR
  9437 ;;		_RB6_ISR
  9438 ;;		_RB7_ISR
  9439 ;;		_TMR0_ISR
  9440 ;;		_TMR1_ISR
  9441 ;;		_TMR2_ISR
  9442 ;;		_TMR3_ISR
  9443 ;; This function is called by:
  9444 ;;		Interrupt level 2
  9445 ;; This function uses a non-reentrant model
  9446 ;;
  9447                           
  9448                           	psect	intcode
  9449   000000                     __pintcode:
  9450                           	callstack 0
  9451   000000                     _InterruptManagerHigh:
  9452                           	callstack 18
  9453                           
  9454                           ;incstack = 0
  9455   000000  8273               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9456   000002  EDB3  F011         	call	int_func,f	;refresh shadow registers
  9457                           
  9458                           	psect	intcode_body
  9459   002366                     __pintcode_body:
  9460                           	callstack 18
  9461   002366                     int_func:
  9462                           	callstack 18
  9463   002366  0006               	pop		; remove dummy address from shadow register refresh
  9464   002368  CFFA F008          	movff	pclath,??_InterruptManagerHigh
  9465   00236C  CFFB F009          	movff	pclatu,??_InterruptManagerHigh+1
  9466   002370  CFD9 F00A          	movff	fsr2l,??_InterruptManagerHigh+2
  9467   002374  CFDA F00B          	movff	fsr2h,??_InterruptManagerHigh+3
  9468   002378                     
  9469                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 89:     if((1 == INTCONbits.INT0IE) && (
      +                          1 == INTCONbits.INT0IF)){
  9470   002378  A8F2               	btfss	242,4,c	;volatile
  9471   00237A  EFC1  F011         	goto	i2u801_41
  9472   00237E  EFC3  F011         	goto	i2u801_40
  9473   002382                     i2u801_41:
  9474   002382  EFCC  F011         	goto	i2l1340
  9475   002386                     i2u801_40:
  9476   002386  A2F2               	btfss	242,1,c	;volatile
  9477   002388  EFC8  F011         	goto	i2u802_41
  9478   00238C  EFCA  F011         	goto	i2u802_40
  9479   002390                     i2u802_41:
  9480   002390  EFCC  F011         	goto	i2l1340
  9481   002394                     i2u802_40:
  9482   002394                     
  9483                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 90:         INT0_ISR();
  9484   002394  ECAB  F023         	call	_INT0_ISR	;wreg free
  9485   002398                     i2l1340:
  9486                           
  9487                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 94:      if((1 == INTCON3bits.INT1IE) &&
      +                           (1 == INTCON3bits.INT1IF)){
  9488   002398  A6F0               	btfss	240,3,c	;volatile
  9489   00239A  EFD1  F011         	goto	i2u803_41
  9490   00239E  EFD3  F011         	goto	i2u803_40
  9491   0023A2                     i2u803_41:
  9492   0023A2  EFDC  F011         	goto	i2l1342
  9493   0023A6                     i2u803_40:
  9494   0023A6  A0F0               	btfss	240,0,c	;volatile
  9495   0023A8  EFD8  F011         	goto	i2u804_41
  9496   0023AC  EFDA  F011         	goto	i2u804_40
  9497   0023B0                     i2u804_41:
  9498   0023B0  EFDC  F011         	goto	i2l1342
  9499   0023B4                     i2u804_40:
  9500   0023B4                     
  9501                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 95:         INT1_ISR();
  9502   0023B4  ECA9  F023         	call	_INT1_ISR	;wreg free
  9503   0023B8                     i2l1342:
  9504                           
  9505                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 99:      if((1 == INTCON3bits.INT2IE) &&
      +                           (1 == INTCON3bits.INT2IF)){
  9506   0023B8  A8F0               	btfss	240,4,c	;volatile
  9507   0023BA  EFE1  F011         	goto	i2u805_41
  9508   0023BE  EFE3  F011         	goto	i2u805_40
  9509   0023C2                     i2u805_41:
  9510   0023C2  EFEC  F011         	goto	i2l1344
  9511   0023C6                     i2u805_40:
  9512   0023C6  A2F0               	btfss	240,1,c	;volatile
  9513   0023C8  EFE8  F011         	goto	i2u806_41
  9514   0023CC  EFEA  F011         	goto	i2u806_40
  9515   0023D0                     i2u806_41:
  9516   0023D0  EFEC  F011         	goto	i2l1344
  9517   0023D4                     i2u806_40:
  9518   0023D4                     
  9519                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 100:         INT2_ISR();
  9520   0023D4  ECA7  F023         	call	_INT2_ISR	;wreg free
  9521   0023D8                     i2l1344:
  9522                           
  9523                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 104:     if((1 == INTCONbits.RBIE) && (1
      +                           == INTCONbits.RBIF) &&
  9524   0023D8  A6F2               	btfss	242,3,c	;volatile
  9525   0023DA  EFF1  F011         	goto	i2u807_41
  9526   0023DE  EFF3  F011         	goto	i2u807_40
  9527   0023E2                     i2u807_41:
  9528   0023E2  EF0E  F012         	goto	i2l1346
  9529   0023E6                     i2u807_40:
  9530   0023E6  A0F2               	btfss	242,0,c	;volatile
  9531   0023E8  EFF8  F011         	goto	i2u808_41
  9532   0023EC  EFFA  F011         	goto	i2u808_40
  9533   0023F0                     i2u808_41:
  9534   0023F0  EF0E  F012         	goto	i2l1346
  9535   0023F4                     i2u808_40:
  9536   0023F4  A881               	btfss	129,4,c	;volatile
  9537   0023F6  EFFF  F011         	goto	i2u809_41
  9538   0023FA  EF01  F012         	goto	i2u809_40
  9539   0023FE                     i2u809_41:
  9540   0023FE  EF0E  F012         	goto	i2l1346
  9541   002402                     i2u809_40:
  9542   002402  0470               	decf	_RB4_Flag^0,w,c	;volatile
  9543   002404  A4D8               	btfss	status,2,c
  9544   002406  EF07  F012         	goto	i2u810_41
  9545   00240A  EF09  F012         	goto	i2u810_40
  9546   00240E                     i2u810_41:
  9547   00240E  EF0E  F012         	goto	i2l1346
  9548   002412                     i2u810_40:
  9549   002412                     
  9550                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 105:             (PORTBbits.RB4==GPIO_HI
      +                          GH) && (RB4_Flag==1)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 106:         RB4_F
      +                          lag=0;
  9551   002412  0E00               	movlw	0
  9552   002414  6E70               	movwf	_RB4_Flag^0,c	;volatile
  9553   002416                     
  9554                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 107:         RB4_ISR(0);
  9555   002416  0E00               	movlw	0
  9556   002418  EC6B  F023         	call	_RB4_ISR
  9557   00241C                     i2l1346:
  9558                           
  9559                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 111:     if((1 == INTCONbits.RBIE) && (1
      +                           == INTCONbits.RBIF) &&
  9560   00241C  A6F2               	btfss	242,3,c	;volatile
  9561   00241E  EF13  F012         	goto	i2u811_41
  9562   002422  EF15  F012         	goto	i2u811_40
  9563   002426                     i2u811_41:
  9564   002426  EF30  F012         	goto	i2l9221
  9565   00242A                     i2u811_40:
  9566   00242A  A0F2               	btfss	242,0,c	;volatile
  9567   00242C  EF1A  F012         	goto	i2u812_41
  9568   002430  EF1C  F012         	goto	i2u812_40
  9569   002434                     i2u812_41:
  9570   002434  EF30  F012         	goto	i2l9221
  9571   002438                     i2u812_40:
  9572   002438  B881               	btfsc	129,4,c	;volatile
  9573   00243A  EF21  F012         	goto	i2u813_41
  9574   00243E  EF23  F012         	goto	i2u813_40
  9575   002442                     i2u813_41:
  9576   002442  EF30  F012         	goto	i2l9221
  9577   002446                     i2u813_40:
  9578   002446  5070               	movf	_RB4_Flag^0,w,c	;volatile
  9579   002448  A4D8               	btfss	status,2,c
  9580   00244A  EF29  F012         	goto	i2u814_41
  9581   00244E  EF2B  F012         	goto	i2u814_40
  9582   002452                     i2u814_41:
  9583   002452  EF30  F012         	goto	i2l9221
  9584   002456                     i2u814_40:
  9585   002456                     
  9586                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 112:             (PORTBbits.RB4==GPIO_LO
      +                          W) && (RB4_Flag==0)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 113:         RB4_Fl
      +                          ag=1;
  9587   002456  0E01               	movlw	1
  9588   002458  6E70               	movwf	_RB4_Flag^0,c	;volatile
  9589   00245A                     
  9590                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 114:         RB4_ISR(1);
  9591   00245A  0E01               	movlw	1
  9592   00245C  EC6B  F023         	call	_RB4_ISR
  9593   002460                     i2l9221:
  9594                           
  9595                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 116:     if((1 == INTCONbits.RBIE) && (1
      +                           == INTCONbits.RBIF) &&
  9596   002460  A6F2               	btfss	242,3,c	;volatile
  9597   002462  EF35  F012         	goto	i2u815_41
  9598   002466  EF37  F012         	goto	i2u815_40
  9599   00246A                     i2u815_41:
  9600   00246A  EF52  F012         	goto	i2l1349
  9601   00246E                     i2u815_40:
  9602   00246E  A0F2               	btfss	242,0,c	;volatile
  9603   002470  EF3C  F012         	goto	i2u816_41
  9604   002474  EF3E  F012         	goto	i2u816_40
  9605   002478                     i2u816_41:
  9606   002478  EF52  F012         	goto	i2l1349
  9607   00247C                     i2u816_40:
  9608   00247C  AA81               	btfss	129,5,c	;volatile
  9609   00247E  EF43  F012         	goto	i2u817_41
  9610   002482  EF45  F012         	goto	i2u817_40
  9611   002486                     i2u817_41:
  9612   002486  EF52  F012         	goto	i2l1349
  9613   00248A                     i2u817_40:
  9614   00248A  046F               	decf	_RB5_Flag^0,w,c	;volatile
  9615   00248C  A4D8               	btfss	status,2,c
  9616   00248E  EF4B  F012         	goto	i2u818_41
  9617   002492  EF4D  F012         	goto	i2u818_40
  9618   002496                     i2u818_41:
  9619   002496  EF52  F012         	goto	i2l1349
  9620   00249A                     i2u818_40:
  9621   00249A                     
  9622                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 117:             (PORTBbits.RB5==GPIO_HI
      +                          GH) && (RB5_Flag==1)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 118:         RB5_F
      +                          lag=0;
  9623   00249A  0E00               	movlw	0
  9624   00249C  6E6F               	movwf	_RB5_Flag^0,c	;volatile
  9625   00249E                     
  9626                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 119:         RB5_ISR(0);
  9627   00249E  0E00               	movlw	0
  9628   0024A0  EC5E  F023         	call	_RB5_ISR
  9629   0024A4                     i2l1349:
  9630                           
  9631                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 123:     if((1 == INTCONbits.RBIE) && (1
      +                           == INTCONbits.RBIF) &&
  9632   0024A4  A6F2               	btfss	242,3,c	;volatile
  9633   0024A6  EF57  F012         	goto	i2u819_41
  9634   0024AA  EF59  F012         	goto	i2u819_40
  9635   0024AE                     i2u819_41:
  9636   0024AE  EF74  F012         	goto	i2l9243
  9637   0024B2                     i2u819_40:
  9638   0024B2  A0F2               	btfss	242,0,c	;volatile
  9639   0024B4  EF5E  F012         	goto	i2u820_41
  9640   0024B8  EF60  F012         	goto	i2u820_40
  9641   0024BC                     i2u820_41:
  9642   0024BC  EF74  F012         	goto	i2l9243
  9643   0024C0                     i2u820_40:
  9644   0024C0  BA81               	btfsc	129,5,c	;volatile
  9645   0024C2  EF65  F012         	goto	i2u821_41
  9646   0024C6  EF67  F012         	goto	i2u821_40
  9647   0024CA                     i2u821_41:
  9648   0024CA  EF74  F012         	goto	i2l9243
  9649   0024CE                     i2u821_40:
  9650   0024CE  506F               	movf	_RB5_Flag^0,w,c	;volatile
  9651   0024D0  A4D8               	btfss	status,2,c
  9652   0024D2  EF6D  F012         	goto	i2u822_41
  9653   0024D6  EF6F  F012         	goto	i2u822_40
  9654   0024DA                     i2u822_41:
  9655   0024DA  EF74  F012         	goto	i2l9243
  9656   0024DE                     i2u822_40:
  9657   0024DE                     
  9658                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 124:             (PORTBbits.RB5==GPIO_LO
      +                          W) && (RB5_Flag==0)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 125:         RB5_Fl
      +                          ag=1;
  9659   0024DE  0E01               	movlw	1
  9660   0024E0  6E6F               	movwf	_RB5_Flag^0,c	;volatile
  9661   0024E2                     
  9662                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 126:         RB5_ISR(1);
  9663   0024E2  0E01               	movlw	1
  9664   0024E4  EC5E  F023         	call	_RB5_ISR
  9665   0024E8                     i2l9243:
  9666                           
  9667                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 128:     if((1 == INTCONbits.RBIE) && (1
      +                           == INTCONbits.RBIF) &&
  9668   0024E8  A6F2               	btfss	242,3,c	;volatile
  9669   0024EA  EF79  F012         	goto	i2u823_41
  9670   0024EE  EF7B  F012         	goto	i2u823_40
  9671   0024F2                     i2u823_41:
  9672   0024F2  EF96  F012         	goto	i2l1352
  9673   0024F6                     i2u823_40:
  9674   0024F6  A0F2               	btfss	242,0,c	;volatile
  9675   0024F8  EF80  F012         	goto	i2u824_41
  9676   0024FC  EF82  F012         	goto	i2u824_40
  9677   002500                     i2u824_41:
  9678   002500  EF96  F012         	goto	i2l1352
  9679   002504                     i2u824_40:
  9680   002504  AC81               	btfss	129,6,c	;volatile
  9681   002506  EF87  F012         	goto	i2u825_41
  9682   00250A  EF89  F012         	goto	i2u825_40
  9683   00250E                     i2u825_41:
  9684   00250E  EF96  F012         	goto	i2l1352
  9685   002512                     i2u825_40:
  9686   002512  046E               	decf	_RB6_Flag^0,w,c	;volatile
  9687   002514  A4D8               	btfss	status,2,c
  9688   002516  EF8F  F012         	goto	i2u826_41
  9689   00251A  EF91  F012         	goto	i2u826_40
  9690   00251E                     i2u826_41:
  9691   00251E  EF96  F012         	goto	i2l1352
  9692   002522                     i2u826_40:
  9693   002522                     
  9694                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 129:             (PORTBbits.RB6==GPIO_HI
      +                          GH) && (RB6_Flag==1)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 130:         RB6_F
      +                          lag=0;
  9695   002522  0E00               	movlw	0
  9696   002524  6E6E               	movwf	_RB6_Flag^0,c	;volatile
  9697   002526                     
  9698                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 131:         RB6_ISR(0);
  9699   002526  0E00               	movlw	0
  9700   002528  EC51  F023         	call	_RB6_ISR
  9701   00252C                     i2l1352:
  9702                           
  9703                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 135:     if((1 == INTCONbits.RBIE) && (1
      +                           == INTCONbits.RBIF) &&
  9704   00252C  A6F2               	btfss	242,3,c	;volatile
  9705   00252E  EF9B  F012         	goto	i2u827_41
  9706   002532  EF9D  F012         	goto	i2u827_40
  9707   002536                     i2u827_41:
  9708   002536  EFB8  F012         	goto	i2l9265
  9709   00253A                     i2u827_40:
  9710   00253A  A0F2               	btfss	242,0,c	;volatile
  9711   00253C  EFA2  F012         	goto	i2u828_41
  9712   002540  EFA4  F012         	goto	i2u828_40
  9713   002544                     i2u828_41:
  9714   002544  EFB8  F012         	goto	i2l9265
  9715   002548                     i2u828_40:
  9716   002548  BC81               	btfsc	129,6,c	;volatile
  9717   00254A  EFA9  F012         	goto	i2u829_41
  9718   00254E  EFAB  F012         	goto	i2u829_40
  9719   002552                     i2u829_41:
  9720   002552  EFB8  F012         	goto	i2l9265
  9721   002556                     i2u829_40:
  9722   002556  506E               	movf	_RB6_Flag^0,w,c	;volatile
  9723   002558  A4D8               	btfss	status,2,c
  9724   00255A  EFB1  F012         	goto	i2u830_41
  9725   00255E  EFB3  F012         	goto	i2u830_40
  9726   002562                     i2u830_41:
  9727   002562  EFB8  F012         	goto	i2l9265
  9728   002566                     i2u830_40:
  9729   002566                     
  9730                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 136:             (PORTBbits.RB6==GPIO_LO
      +                          W) && (RB6_Flag==0)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 137:         RB6_Fl
      +                          ag=1;
  9731   002566  0E01               	movlw	1
  9732   002568  6E6E               	movwf	_RB6_Flag^0,c	;volatile
  9733   00256A                     
  9734                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 138:         RB6_ISR(1);
  9735   00256A  0E01               	movlw	1
  9736   00256C  EC51  F023         	call	_RB6_ISR
  9737   002570                     i2l9265:
  9738                           
  9739                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 140:     if((1 == INTCONbits.RBIE) && (1
      +                           == INTCONbits.RBIF) &&
  9740   002570  A6F2               	btfss	242,3,c	;volatile
  9741   002572  EFBD  F012         	goto	i2u831_41
  9742   002576  EFBF  F012         	goto	i2u831_40
  9743   00257A                     i2u831_41:
  9744   00257A  EFDA  F012         	goto	i2l1355
  9745   00257E                     i2u831_40:
  9746   00257E  A0F2               	btfss	242,0,c	;volatile
  9747   002580  EFC4  F012         	goto	i2u832_41
  9748   002584  EFC6  F012         	goto	i2u832_40
  9749   002588                     i2u832_41:
  9750   002588  EFDA  F012         	goto	i2l1355
  9751   00258C                     i2u832_40:
  9752   00258C  AE81               	btfss	129,7,c	;volatile
  9753   00258E  EFCB  F012         	goto	i2u833_41
  9754   002592  EFCD  F012         	goto	i2u833_40
  9755   002596                     i2u833_41:
  9756   002596  EFDA  F012         	goto	i2l1355
  9757   00259A                     i2u833_40:
  9758   00259A  046D               	decf	_RB7_Flag^0,w,c	;volatile
  9759   00259C  A4D8               	btfss	status,2,c
  9760   00259E  EFD3  F012         	goto	i2u834_41
  9761   0025A2  EFD5  F012         	goto	i2u834_40
  9762   0025A6                     i2u834_41:
  9763   0025A6  EFDA  F012         	goto	i2l1355
  9764   0025AA                     i2u834_40:
  9765   0025AA                     
  9766                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 141:             (PORTBbits.RB7==GPIO_HI
      +                          GH) && (RB7_Flag==1)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 142:         RB7_F
      +                          lag=0;
  9767   0025AA  0E00               	movlw	0
  9768   0025AC  6E6D               	movwf	_RB7_Flag^0,c	;volatile
  9769   0025AE                     
  9770                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 143:         RB7_ISR(0);
  9771   0025AE  0E00               	movlw	0
  9772   0025B0  EC44  F023         	call	_RB7_ISR
  9773   0025B4                     i2l1355:
  9774                           
  9775                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 147:     if((1 == INTCONbits.RBIE) && (1
      +                           == INTCONbits.RBIF) &&
  9776   0025B4  A6F2               	btfss	242,3,c	;volatile
  9777   0025B6  EFDF  F012         	goto	i2u835_41
  9778   0025BA  EFE1  F012         	goto	i2u835_40
  9779   0025BE                     i2u835_41:
  9780   0025BE  EFFC  F012         	goto	i2l1357
  9781   0025C2                     i2u835_40:
  9782   0025C2  A0F2               	btfss	242,0,c	;volatile
  9783   0025C4  EFE6  F012         	goto	i2u836_41
  9784   0025C8  EFE8  F012         	goto	i2u836_40
  9785   0025CC                     i2u836_41:
  9786   0025CC  EFFC  F012         	goto	i2l1357
  9787   0025D0                     i2u836_40:
  9788   0025D0  BE81               	btfsc	129,7,c	;volatile
  9789   0025D2  EFED  F012         	goto	i2u837_41
  9790   0025D6  EFEF  F012         	goto	i2u837_40
  9791   0025DA                     i2u837_41:
  9792   0025DA  EFFC  F012         	goto	i2l1357
  9793   0025DE                     i2u837_40:
  9794   0025DE  506D               	movf	_RB7_Flag^0,w,c	;volatile
  9795   0025E0  A4D8               	btfss	status,2,c
  9796   0025E2  EFF5  F012         	goto	i2u838_41
  9797   0025E6  EFF7  F012         	goto	i2u838_40
  9798   0025EA                     i2u838_41:
  9799   0025EA  EFFC  F012         	goto	i2l1357
  9800   0025EE                     i2u838_40:
  9801   0025EE                     
  9802                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 148:             (PORTBbits.RB7==GPIO_LO
      +                          W) && (RB7_Flag==0)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 149:         RB7_Fl
      +                          ag=1;
  9803   0025EE  0E01               	movlw	1
  9804   0025F0  6E6D               	movwf	_RB7_Flag^0,c	;volatile
  9805   0025F2                     
  9806                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 150:         RB7_ISR(1);
  9807   0025F2  0E01               	movlw	1
  9808   0025F4  EC44  F023         	call	_RB7_ISR
  9809   0025F8                     i2l1357:
  9810                           
  9811                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 156:     if((1 == PIE1bits.ADIE) && (1 =
      +                          = PIR1bits.ADIF)){
  9812   0025F8  AC9D               	btfss	157,6,c	;volatile
  9813   0025FA  EF01  F013         	goto	i2u839_41
  9814   0025FE  EF03  F013         	goto	i2u839_40
  9815   002602                     i2u839_41:
  9816   002602  EF0C  F013         	goto	i2l1359
  9817   002606                     i2u839_40:
  9818   002606  AC9E               	btfss	158,6,c	;volatile
  9819   002608  EF08  F013         	goto	i2u840_41
  9820   00260C  EF0A  F013         	goto	i2u840_40
  9821   002610                     i2u840_41:
  9822   002610  EF0C  F013         	goto	i2l1359
  9823   002614                     i2u840_40:
  9824   002614                     
  9825                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 157:         ADC_ISR();
  9826   002614  ECB1  F023         	call	_ADC_ISR	;wreg free
  9827   002618                     i2l1359:
  9828                           
  9829                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 163:     if((1 == INTCONbits.TMR0IE) && 
      +                          (1 == INTCONbits.TMR0IF)){
  9830   002618  AAF2               	btfss	242,5,c	;volatile
  9831   00261A  EF11  F013         	goto	i2u841_41
  9832   00261E  EF13  F013         	goto	i2u841_40
  9833   002622                     i2u841_41:
  9834   002622  EF1C  F013         	goto	i2l9295
  9835   002626                     i2u841_40:
  9836   002626  A4F2               	btfss	242,2,c	;volatile
  9837   002628  EF18  F013         	goto	i2u842_41
  9838   00262C  EF1A  F013         	goto	i2u842_40
  9839   002630                     i2u842_41:
  9840   002630  EF1C  F013         	goto	i2l9295
  9841   002634                     i2u842_40:
  9842   002634                     
  9843                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 164:         TMR0_ISR();
  9844   002634  EC93  F023         	call	_TMR0_ISR	;wreg free
  9845   002638                     i2l9295:
  9846                           
  9847                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 168:     if((1 == PIE1bits.TMR1IE) && (1
      +                           == PIR1bits.TMR1IF)){
  9848   002638  A09D               	btfss	157,0,c	;volatile
  9849   00263A  EF21  F013         	goto	i2u843_41
  9850   00263E  EF23  F013         	goto	i2u843_40
  9851   002642                     i2u843_41:
  9852   002642  EF2C  F013         	goto	i2l9301
  9853   002646                     i2u843_40:
  9854   002646  A09E               	btfss	158,0,c	;volatile
  9855   002648  EF28  F013         	goto	i2u844_41
  9856   00264C  EF2A  F013         	goto	i2u844_40
  9857   002650                     i2u844_41:
  9858   002650  EF2C  F013         	goto	i2l9301
  9859   002654                     i2u844_40:
  9860   002654                     
  9861                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 169:         TMR1_ISR();
  9862   002654  EC8C  F023         	call	_TMR1_ISR	;wreg free
  9863   002658                     i2l9301:
  9864                           
  9865                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 173:     if((1 == PIE1bits.TMR2IE) && (1
      +                           == PIR1bits.TMR2IF)){
  9866   002658  A29D               	btfss	157,1,c	;volatile
  9867   00265A  EF31  F013         	goto	i2u845_41
  9868   00265E  EF33  F013         	goto	i2u845_40
  9869   002662                     i2u845_41:
  9870   002662  EF3C  F013         	goto	i2l9307
  9871   002666                     i2u845_40:
  9872   002666  A29E               	btfss	158,1,c	;volatile
  9873   002668  EF38  F013         	goto	i2u846_41
  9874   00266C  EF3A  F013         	goto	i2u846_40
  9875   002670                     i2u846_41:
  9876   002670  EF3C  F013         	goto	i2l9307
  9877   002674                     i2u846_40:
  9878   002674                     
  9879                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 174:         TMR2_ISR();
  9880   002674  EC9A  F023         	call	_TMR2_ISR	;wreg free
  9881   002678                     i2l9307:
  9882                           
  9883                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 178:     if((1 == PIE2bits.TMR3IE) && (1
      +                           == PIR2bits.TMR3IF)){
  9884   002678  A2A0               	btfss	160,1,c	;volatile
  9885   00267A  EF41  F013         	goto	i2u847_41
  9886   00267E  EF43  F013         	goto	i2u847_40
  9887   002682                     i2u847_41:
  9888   002682  EF4C  F013         	goto	i2l9313
  9889   002686                     i2u847_40:
  9890   002686  A2A1               	btfss	161,1,c	;volatile
  9891   002688  EF48  F013         	goto	i2u848_41
  9892   00268C  EF4A  F013         	goto	i2u848_40
  9893   002690                     i2u848_41:
  9894   002690  EF4C  F013         	goto	i2l9313
  9895   002694                     i2u848_40:
  9896   002694                     
  9897                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 179:         TMR3_ISR();
  9898   002694  EC85  F023         	call	_TMR3_ISR	;wreg free
  9899   002698                     i2l9313:
  9900                           
  9901                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 183:     if((1 == PIE1bits.CCP1IE) && (1
      +                           == PIR1bits.CCP1IF)){
  9902   002698  A49D               	btfss	157,2,c	;volatile
  9903   00269A  EF51  F013         	goto	i2u849_41
  9904   00269E  EF53  F013         	goto	i2u849_40
  9905   0026A2                     i2u849_41:
  9906   0026A2  EF5C  F013         	goto	i2l9319
  9907   0026A6                     i2u849_40:
  9908   0026A6  A49E               	btfss	158,2,c	;volatile
  9909   0026A8  EF58  F013         	goto	i2u850_41
  9910   0026AC  EF5A  F013         	goto	i2u850_40
  9911   0026B0                     i2u850_41:
  9912   0026B0  EF5C  F013         	goto	i2l9319
  9913   0026B4                     i2u850_40:
  9914   0026B4                     
  9915                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 184:         CCP1_ISR();
  9916   0026B4  ECFA  F022         	call	_CCP1_ISR	;wreg free
  9917   0026B8                     i2l9319:
  9918                           
  9919                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 186:     if((1 == PIE2bits.CCP2IE) && (1
      +                           == PIR2bits.CCP2IF)){
  9920   0026B8  A0A0               	btfss	160,0,c	;volatile
  9921   0026BA  EF61  F013         	goto	i2u851_41
  9922   0026BE  EF63  F013         	goto	i2u851_40
  9923   0026C2                     i2u851_41:
  9924   0026C2  EF6C  F013         	goto	i2l9325
  9925   0026C6                     i2u851_40:
  9926   0026C6  A0A1               	btfss	161,0,c	;volatile
  9927   0026C8  EF68  F013         	goto	i2u852_41
  9928   0026CC  EF6A  F013         	goto	i2u852_40
  9929   0026D0                     i2u852_41:
  9930   0026D0  EF6C  F013         	goto	i2l9325
  9931   0026D4                     i2u852_40:
  9932   0026D4                     
  9933                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 187:         CCP2_ISR();
  9934   0026D4  ECAF  F023         	call	_CCP2_ISR	;wreg free
  9935   0026D8                     i2l9325:
  9936                           
  9937                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 191:     if((1 == PIE1bits.TXIE) && (1 =
      +                          = PIR1bits.TXIF)){
  9938   0026D8  A89D               	btfss	157,4,c	;volatile
  9939   0026DA  EF71  F013         	goto	i2u853_41
  9940   0026DE  EF73  F013         	goto	i2u853_40
  9941   0026E2                     i2u853_41:
  9942   0026E2  EF7C  F013         	goto	i2l9331
  9943   0026E6                     i2u853_40:
  9944   0026E6  A89E               	btfss	158,4,c	;volatile
  9945   0026E8  EF78  F013         	goto	i2u854_41
  9946   0026EC  EF7A  F013         	goto	i2u854_40
  9947   0026F0                     i2u854_41:
  9948   0026F0  EF7C  F013         	goto	i2l9331
  9949   0026F4                     i2u854_40:
  9950   0026F4                     
  9951                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 192:         EUSART_Tx_ISR();
  9952   0026F4  ECAD  F023         	call	_EUSART_Tx_ISR	;wreg free
  9953   0026F8                     i2l9331:
  9954                           
  9955                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 194:     if((1 == PIE1bits.RCIE) && (1 =
      +                          = PIR1bits.RCIF)){
  9956   0026F8  AA9D               	btfss	157,5,c	;volatile
  9957   0026FA  EF81  F013         	goto	i2u855_41
  9958   0026FE  EF83  F013         	goto	i2u855_40
  9959   002702                     i2u855_41:
  9960   002702  EF8C  F013         	goto	i2l9337
  9961   002706                     i2u855_40:
  9962   002706  AA9E               	btfss	158,5,c	;volatile
  9963   002708  EF88  F013         	goto	i2u856_41
  9964   00270C  EF8A  F013         	goto	i2u856_40
  9965   002710                     i2u856_41:
  9966   002710  EF8C  F013         	goto	i2l9337
  9967   002714                     i2u856_40:
  9968   002714                     
  9969                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 195:         EUSART_Rx_ISR();
  9970   002714  ECB4  F023         	call	_EUSART_Rx_ISR	;wreg free
  9971   002718                     i2l9337:
  9972                           
  9973                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 200:     if((1 == PIE1bits.SSPIE) && (1 
      +                          == PIR1bits.SSPIF)){
  9974   002718  A69D               	btfss	157,3,c	;volatile
  9975   00271A  EF91  F013         	goto	i2u857_41
  9976   00271E  EF93  F013         	goto	i2u857_40
  9977   002722                     i2u857_41:
  9978   002722  EF9C  F013         	goto	i2l9343
  9979   002726                     i2u857_40:
  9980   002726  A69E               	btfss	158,3,c	;volatile
  9981   002728  EF98  F013         	goto	i2u858_41
  9982   00272C  EF9A  F013         	goto	i2u858_40
  9983   002730                     i2u858_41:
  9984   002730  EF9C  F013         	goto	i2l9343
  9985   002734                     i2u858_40:
  9986   002734                     
  9987                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 201:         MSSP_I2C_ISR();
  9988   002734  ECA3  F023         	call	_MSSP_I2C_ISR	;wreg free
  9989   002738                     i2l9343:
  9990                           
  9991                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 203:     if((1 == PIE2bits.BCLIE) && (1 
      +                          == PIR2bits.BCLIF)){
  9992   002738  A6A0               	btfss	160,3,c	;volatile
  9993   00273A  EFA1  F013         	goto	i2u859_41
  9994   00273E  EFA3  F013         	goto	i2u859_40
  9995   002742                     i2u859_41:
  9996   002742  EFAC  F013         	goto	i2l1370
  9997   002746                     i2u859_40:
  9998   002746  A6A1               	btfss	161,3,c	;volatile
  9999   002748  EFA8  F013         	goto	i2u860_41
 10000   00274C  EFAA  F013         	goto	i2u860_40
 10001   002750                     i2u860_41:
 10002   002750  EFAC  F013         	goto	i2l1370
 10003   002754                     i2u860_40:
 10004   002754                     
 10005                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 204:         MSSP_I2C_BC_ISR();
 10006   002754  ECA5  F023         	call	_MSSP_I2C_BC_ISR	;wreg free
 10007   002758                     i2l1370:
 10008   002758  C00B  FFDA         	movff	??_InterruptManagerHigh+3,fsr2h
 10009   00275C  C00A  FFD9         	movff	??_InterruptManagerHigh+2,fsr2l
 10010   002760  C009  FFFB         	movff	??_InterruptManagerHigh+1,pclatu
 10011   002764  C008  FFFA         	movff	??_InterruptManagerHigh,pclath
 10012   002768  9273               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10013   00276A  0011               	retfie		f
 10014   00276C                     __end_of_InterruptManagerHigh:
 10015                           	callstack 0
 10016                           
 10017 ;; *************** function _TMR3_ISR *****************
 10018 ;; Defined at:
 10019 ;;		line 125 in file "MCAL_Layer/Timer3/hal_timer3.c"
 10020 ;; Parameters:    Size  Location     Type
 10021 ;;		None
 10022 ;; Auto vars:     Size  Location     Type
 10023 ;;		None
 10024 ;; Return value:  Size  Location     Type
 10025 ;;                  1    wreg      void 
 10026 ;; Registers used:
 10027 ;;		wreg, status,2
 10028 ;; Tracked objects:
 10029 ;;		On entry : 0/0
 10030 ;;		On exit  : 0/0
 10031 ;;		Unchanged: 0/0
 10032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10037 ;;Total ram usage:        0 bytes
 10038 ;; Hardware stack levels used: 1
 10039 ;; This function calls:
 10040 ;;		Nothing
 10041 ;; This function is called by:
 10042 ;;		_InterruptManagerHigh
 10043 ;; This function uses a non-reentrant model
 10044 ;;
 10045                           
 10046                           	psect	text48
 10047   00470A                     __ptext48:
 10048                           	callstack 0
 10049   00470A                     _TMR3_ISR:
 10050                           	callstack 20
 10051   00470A                     
 10052                           ;MCAL_Layer/Timer3/hal_timer3.c: 126:     (PIR2bits.TMR3IF=0) ;
 10053   00470A  92A1               	bcf	161,1,c	;volatile
 10054   00470C                     
 10055                           ;MCAL_Layer/Timer3/hal_timer3.c: 127:     TMR3H=(timer3_preload) >> 8;
 10056   00470C  0100               	movlb	0	; () banked
 10057   00470E  5193               	movf	(_timer3_preload+1)& (0+255),w,b
 10058   004710  6EB3               	movwf	179,c	;volatile
 10059   004712                     
 10060                           ; BSR set to: 0
 10061                           ;MCAL_Layer/Timer3/hal_timer3.c: 128:     TMR3L=(uint8)(timer3_preload);
 10062   004712  C092  FFB2         	movff	_timer3_preload,4018	;volatile
 10063   004716                     
 10064                           ; BSR set to: 0
 10065   004716  0012               	return		;funcret
 10066   004718                     __end_of_TMR3_ISR:
 10067                           	callstack 0
 10068                           
 10069 ;; *************** function _TMR2_ISR *****************
 10070 ;; Defined at:
 10071 ;;		line 106 in file "MCAL_Layer/Timer2/hal_timer2.c"
 10072 ;; Parameters:    Size  Location     Type
 10073 ;;		None
 10074 ;; Auto vars:     Size  Location     Type
 10075 ;;		None
 10076 ;; Return value:  Size  Location     Type
 10077 ;;                  1    wreg      void 
 10078 ;; Registers used:
 10079 ;;		None
 10080 ;; Tracked objects:
 10081 ;;		On entry : 0/0
 10082 ;;		On exit  : 0/0
 10083 ;;		Unchanged: 0/0
 10084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10089 ;;Total ram usage:        0 bytes
 10090 ;; Hardware stack levels used: 1
 10091 ;; This function calls:
 10092 ;;		Nothing
 10093 ;; This function is called by:
 10094 ;;		_InterruptManagerHigh
 10095 ;; This function uses a non-reentrant model
 10096 ;;
 10097                           
 10098                           	psect	text49
 10099   004734                     __ptext49:
 10100                           	callstack 0
 10101   004734                     _TMR2_ISR:
 10102                           	callstack 20
 10103   004734                     
 10104                           ;MCAL_Layer/Timer2/hal_timer2.c: 107:     (PIR1bits.TMR2IF=0) ;
 10105   004734  929E               	bcf	158,1,c	;volatile
 10106                           
 10107                           ;MCAL_Layer/Timer2/hal_timer2.c: 108:     TMR2=timer2_preload;
 10108   004736  C062  FFCC         	movff	_timer2_preload,4044	;volatile
 10109   00473A  0012               	return		;funcret
 10110   00473C                     __end_of_TMR2_ISR:
 10111                           	callstack 0
 10112                           
 10113 ;; *************** function _TMR1_ISR *****************
 10114 ;; Defined at:
 10115 ;;		line 108 in file "MCAL_Layer/Timer1/hal_timer1.c"
 10116 ;; Parameters:    Size  Location     Type
 10117 ;;		None
 10118 ;; Auto vars:     Size  Location     Type
 10119 ;;		None
 10120 ;; Return value:  Size  Location     Type
 10121 ;;                  1    wreg      void 
 10122 ;; Registers used:
 10123 ;;		wreg, status,2
 10124 ;; Tracked objects:
 10125 ;;		On entry : 0/0
 10126 ;;		On exit  : 0/0
 10127 ;;		Unchanged: 0/0
 10128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10133 ;;Total ram usage:        0 bytes
 10134 ;; Hardware stack levels used: 1
 10135 ;; This function calls:
 10136 ;;		Nothing
 10137 ;; This function is called by:
 10138 ;;		_InterruptManagerHigh
 10139 ;; This function uses a non-reentrant model
 10140 ;;
 10141                           
 10142                           	psect	text50
 10143   004718                     __ptext50:
 10144                           	callstack 0
 10145   004718                     _TMR1_ISR:
 10146                           	callstack 20
 10147   004718                     
 10148                           ;MCAL_Layer/Timer1/hal_timer1.c: 109:     (PIR1bits.TMR1IF=0) ;
 10149   004718  909E               	bcf	158,0,c	;volatile
 10150   00471A                     
 10151                           ;MCAL_Layer/Timer1/hal_timer1.c: 110:     TMR1H=(timer1_preload) >> 8;
 10152   00471A  0100               	movlb	0	; () banked
 10153   00471C  5199               	movf	(_timer1_preload+1)& (0+255),w,b
 10154   00471E  6ECF               	movwf	207,c	;volatile
 10155   004720                     
 10156                           ; BSR set to: 0
 10157                           ;MCAL_Layer/Timer1/hal_timer1.c: 111:     TMR1L=(uint8)(timer1_preload);
 10158   004720  C098  FFCE         	movff	_timer1_preload,4046	;volatile
 10159   004724                     
 10160                           ; BSR set to: 0
 10161   004724  0012               	return		;funcret
 10162   004726                     __end_of_TMR1_ISR:
 10163                           	callstack 0
 10164                           
 10165 ;; *************** function _TMR0_ISR *****************
 10166 ;; Defined at:
 10167 ;;		line 105 in file "MCAL_Layer/Timer0/hal_timer0.c"
 10168 ;; Parameters:    Size  Location     Type
 10169 ;;		None
 10170 ;; Auto vars:     Size  Location     Type
 10171 ;;		None
 10172 ;; Return value:  Size  Location     Type
 10173 ;;                  1    wreg      void 
 10174 ;; Registers used:
 10175 ;;		wreg, status,2
 10176 ;; Tracked objects:
 10177 ;;		On entry : 0/0
 10178 ;;		On exit  : 0/0
 10179 ;;		Unchanged: 0/0
 10180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10185 ;;Total ram usage:        0 bytes
 10186 ;; Hardware stack levels used: 1
 10187 ;; This function calls:
 10188 ;;		Nothing
 10189 ;; This function is called by:
 10190 ;;		_InterruptManagerHigh
 10191 ;; This function uses a non-reentrant model
 10192 ;;
 10193                           
 10194                           	psect	text51
 10195   004726                     __ptext51:
 10196                           	callstack 0
 10197   004726                     _TMR0_ISR:
 10198                           	callstack 20
 10199   004726                     
 10200                           ;MCAL_Layer/Timer0/hal_timer0.c: 106:     (INTCONbits.TMR0IF=0) ;
 10201   004726  94F2               	bcf	242,2,c	;volatile
 10202   004728                     
 10203                           ;MCAL_Layer/Timer0/hal_timer0.c: 107:     TMR0H=(timer0_preload) >> 8;
 10204   004728  0100               	movlb	0	; () banked
 10205   00472A  519D               	movf	(_timer0_preload+1)& (0+255),w,b
 10206   00472C  6ED7               	movwf	215,c	;volatile
 10207   00472E                     
 10208                           ; BSR set to: 0
 10209                           ;MCAL_Layer/Timer0/hal_timer0.c: 108:     TMR0L=(uint8)(timer0_preload);
 10210   00472E  C09C  FFD6         	movff	_timer0_preload,4054	;volatile
 10211   004732                     
 10212                           ; BSR set to: 0
 10213   004732  0012               	return		;funcret
 10214   004734                     __end_of_TMR0_ISR:
 10215                           	callstack 0
 10216                           
 10217 ;; *************** function _RB7_ISR *****************
 10218 ;; Defined at:
 10219 ;;		line 128 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 10220 ;; Parameters:    Size  Location     Type
 10221 ;;  RB7_source      1    wreg     unsigned char 
 10222 ;; Auto vars:     Size  Location     Type
 10223 ;;  RB7_source      1    0[COMRAM] unsigned char 
 10224 ;; Return value:  Size  Location     Type
 10225 ;;                  1    wreg      void 
 10226 ;; Registers used:
 10227 ;;		wreg, status,2, status,0
 10228 ;; Tracked objects:
 10229 ;;		On entry : 0/0
 10230 ;;		On exit  : 0/0
 10231 ;;		Unchanged: 0/0
 10232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10234 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10236 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10237 ;;Total ram usage:        1 bytes
 10238 ;; Hardware stack levels used: 1
 10239 ;; This function calls:
 10240 ;;		Nothing
 10241 ;; This function is called by:
 10242 ;;		_InterruptManagerHigh
 10243 ;; This function uses a non-reentrant model
 10244 ;;
 10245                           
 10246                           	psect	text52
 10247   004688                     __ptext52:
 10248                           	callstack 0
 10249   004688                     _RB7_ISR:
 10250                           	callstack 20
 10251                           
 10252                           ; BSR set to: 0
 10253                           ;incstack = 0
 10254                           ;RB7_ISR@RB7_source stored from wreg
 10255   004688  6E01               	movwf	RB7_ISR@RB7_source^0,c
 10256   00468A                     
 10257                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 130:     (INTCONbits.RBIF=0) ;
 10258   00468A  90F2               	bcf	242,0,c	;volatile
 10259   00468C                     
 10260                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 132:     if (0 == RB7_source){
 10261   00468C  5001               	movf	RB7_ISR@RB7_source^0,w,c
 10262   00468E  A4D8               	btfss	status,2,c
 10263   004690  EF4C  F023         	goto	i2u681_41
 10264   004694  EF4E  F023         	goto	i2u681_40
 10265   004698                     i2u681_41:
 10266   004698  EF50  F023         	goto	i2l7949
 10267   00469C                     i2u681_40:
 10268   00469C  EF50  F023         	goto	i2l1137
 10269   0046A0                     i2l7949:
 10270   0046A0                     i2l1137:
 10271   0046A0  0012               	return		;funcret
 10272   0046A2                     __end_of_RB7_ISR:
 10273                           	callstack 0
 10274                           
 10275 ;; *************** function _RB6_ISR *****************
 10276 ;; Defined at:
 10277 ;;		line 110 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 10278 ;; Parameters:    Size  Location     Type
 10279 ;;  RB6_source      1    wreg     unsigned char 
 10280 ;; Auto vars:     Size  Location     Type
 10281 ;;  RB6_source      1    0[COMRAM] unsigned char 
 10282 ;; Return value:  Size  Location     Type
 10283 ;;                  1    wreg      void 
 10284 ;; Registers used:
 10285 ;;		wreg, status,2, status,0
 10286 ;; Tracked objects:
 10287 ;;		On entry : 0/0
 10288 ;;		On exit  : 0/0
 10289 ;;		Unchanged: 0/0
 10290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10292 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10294 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10295 ;;Total ram usage:        1 bytes
 10296 ;; Hardware stack levels used: 1
 10297 ;; This function calls:
 10298 ;;		Nothing
 10299 ;; This function is called by:
 10300 ;;		_InterruptManagerHigh
 10301 ;; This function uses a non-reentrant model
 10302 ;;
 10303                           
 10304                           	psect	text53
 10305   0046A2                     __ptext53:
 10306                           	callstack 0
 10307   0046A2                     _RB6_ISR:
 10308                           	callstack 20
 10309                           
 10310                           ;incstack = 0
 10311                           ;RB6_ISR@RB6_source stored from wreg
 10312   0046A2  6E01               	movwf	RB6_ISR@RB6_source^0,c
 10313   0046A4                     
 10314                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 112:     (INTCONbits.RBIF=0) ;
 10315   0046A4  90F2               	bcf	242,0,c	;volatile
 10316   0046A6                     
 10317                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 114:     if (0 == RB6_source){
 10318   0046A6  5001               	movf	RB6_ISR@RB6_source^0,w,c
 10319   0046A8  A4D8               	btfss	status,2,c
 10320   0046AA  EF59  F023         	goto	i2u680_41
 10321   0046AE  EF5B  F023         	goto	i2u680_40
 10322   0046B2                     i2u680_41:
 10323   0046B2  EF5D  F023         	goto	i2l7935
 10324   0046B6                     i2u680_40:
 10325   0046B6  EF5D  F023         	goto	i2l1126
 10326   0046BA                     i2l7935:
 10327   0046BA                     i2l1126:
 10328   0046BA  0012               	return		;funcret
 10329   0046BC                     __end_of_RB6_ISR:
 10330                           	callstack 0
 10331                           
 10332 ;; *************** function _RB5_ISR *****************
 10333 ;; Defined at:
 10334 ;;		line 92 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 10335 ;; Parameters:    Size  Location     Type
 10336 ;;  RB5_source      1    wreg     unsigned char 
 10337 ;; Auto vars:     Size  Location     Type
 10338 ;;  RB5_source      1    0[COMRAM] unsigned char 
 10339 ;; Return value:  Size  Location     Type
 10340 ;;                  1    wreg      void 
 10341 ;; Registers used:
 10342 ;;		wreg, status,2, status,0
 10343 ;; Tracked objects:
 10344 ;;		On entry : 0/0
 10345 ;;		On exit  : 0/0
 10346 ;;		Unchanged: 0/0
 10347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10349 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10351 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10352 ;;Total ram usage:        1 bytes
 10353 ;; Hardware stack levels used: 1
 10354 ;; This function calls:
 10355 ;;		Nothing
 10356 ;; This function is called by:
 10357 ;;		_InterruptManagerHigh
 10358 ;; This function uses a non-reentrant model
 10359 ;;
 10360                           
 10361                           	psect	text54
 10362   0046BC                     __ptext54:
 10363                           	callstack 0
 10364   0046BC                     _RB5_ISR:
 10365                           	callstack 20
 10366                           
 10367                           ;incstack = 0
 10368                           ;RB5_ISR@RB5_source stored from wreg
 10369   0046BC  6E01               	movwf	RB5_ISR@RB5_source^0,c
 10370   0046BE                     
 10371                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 94:     (INTCONbits.RBIF=0) ;
 10372   0046BE  90F2               	bcf	242,0,c	;volatile
 10373   0046C0                     
 10374                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 96:     if (0 == RB5_source){
 10375   0046C0  5001               	movf	RB5_ISR@RB5_source^0,w,c
 10376   0046C2  A4D8               	btfss	status,2,c
 10377   0046C4  EF66  F023         	goto	i2u679_41
 10378   0046C8  EF68  F023         	goto	i2u679_40
 10379   0046CC                     i2u679_41:
 10380   0046CC  EF6A  F023         	goto	i2l7921
 10381   0046D0                     i2u679_40:
 10382   0046D0  EF6A  F023         	goto	i2l1115
 10383   0046D4                     i2l7921:
 10384   0046D4                     i2l1115:
 10385   0046D4  0012               	return		;funcret
 10386   0046D6                     __end_of_RB5_ISR:
 10387                           	callstack 0
 10388                           
 10389 ;; *************** function _RB4_ISR *****************
 10390 ;; Defined at:
 10391 ;;		line 74 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 10392 ;; Parameters:    Size  Location     Type
 10393 ;;  RB4_source      1    wreg     unsigned char 
 10394 ;; Auto vars:     Size  Location     Type
 10395 ;;  RB4_source      1    0[COMRAM] unsigned char 
 10396 ;; Return value:  Size  Location     Type
 10397 ;;                  1    wreg      void 
 10398 ;; Registers used:
 10399 ;;		wreg, status,2, status,0
 10400 ;; Tracked objects:
 10401 ;;		On entry : 0/0
 10402 ;;		On exit  : 0/0
 10403 ;;		Unchanged: 0/0
 10404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10406 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10408 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10409 ;;Total ram usage:        1 bytes
 10410 ;; Hardware stack levels used: 1
 10411 ;; This function calls:
 10412 ;;		Nothing
 10413 ;; This function is called by:
 10414 ;;		_InterruptManagerHigh
 10415 ;; This function uses a non-reentrant model
 10416 ;;
 10417                           
 10418                           	psect	text55
 10419   0046D6                     __ptext55:
 10420                           	callstack 0
 10421   0046D6                     _RB4_ISR:
 10422                           	callstack 20
 10423                           
 10424                           ;incstack = 0
 10425                           ;RB4_ISR@RB4_source stored from wreg
 10426   0046D6  6E01               	movwf	RB4_ISR@RB4_source^0,c
 10427   0046D8                     
 10428                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 76:     (INTCONbits.RBIF=0) ;
 10429   0046D8  90F2               	bcf	242,0,c	;volatile
 10430   0046DA                     
 10431                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 78:     if (0 == RB4_source){
 10432   0046DA  5001               	movf	RB4_ISR@RB4_source^0,w,c
 10433   0046DC  A4D8               	btfss	status,2,c
 10434   0046DE  EF73  F023         	goto	i2u678_41
 10435   0046E2  EF75  F023         	goto	i2u678_40
 10436   0046E6                     i2u678_41:
 10437   0046E6  EF77  F023         	goto	i2l7907
 10438   0046EA                     i2u678_40:
 10439   0046EA  EF77  F023         	goto	i2l1104
 10440   0046EE                     i2l7907:
 10441   0046EE                     i2l1104:
 10442   0046EE  0012               	return		;funcret
 10443   0046F0                     __end_of_RB4_ISR:
 10444                           	callstack 0
 10445                           
 10446 ;; *************** function _MSSP_I2C_ISR *****************
 10447 ;; Defined at:
 10448 ;;		line 270 in file "MCAL_Layer/I2C/hal_i2c.c"
 10449 ;; Parameters:    Size  Location     Type
 10450 ;;		None
 10451 ;; Auto vars:     Size  Location     Type
 10452 ;;		None
 10453 ;; Return value:  Size  Location     Type
 10454 ;;                  1    wreg      void 
 10455 ;; Registers used:
 10456 ;;		None
 10457 ;; Tracked objects:
 10458 ;;		On entry : 0/0
 10459 ;;		On exit  : 0/0
 10460 ;;		Unchanged: 0/0
 10461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10466 ;;Total ram usage:        0 bytes
 10467 ;; Hardware stack levels used: 1
 10468 ;; This function calls:
 10469 ;;		Nothing
 10470 ;; This function is called by:
 10471 ;;		_InterruptManagerHigh
 10472 ;; This function uses a non-reentrant model
 10473 ;;
 10474                           
 10475                           	psect	text56
 10476   004746                     __ptext56:
 10477                           	callstack 0
 10478   004746                     _MSSP_I2C_ISR:
 10479                           	callstack 20
 10480   004746                     
 10481                           ;MCAL_Layer/I2C/hal_i2c.c: 272:     (PIR1bits.SSPIF=0);
 10482   004746  969E               	bcf	158,3,c	;volatile
 10483   004748  0012               	return		;funcret
 10484   00474A                     __end_of_MSSP_I2C_ISR:
 10485                           	callstack 0
 10486                           
 10487 ;; *************** function _MSSP_I2C_BC_ISR *****************
 10488 ;; Defined at:
 10489 ;;		line 279 in file "MCAL_Layer/I2C/hal_i2c.c"
 10490 ;; Parameters:    Size  Location     Type
 10491 ;;		None
 10492 ;; Auto vars:     Size  Location     Type
 10493 ;;		None
 10494 ;; Return value:  Size  Location     Type
 10495 ;;                  1    wreg      void 
 10496 ;; Registers used:
 10497 ;;		None
 10498 ;; Tracked objects:
 10499 ;;		On entry : 0/0
 10500 ;;		On exit  : 0/0
 10501 ;;		Unchanged: 0/0
 10502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10507 ;;Total ram usage:        0 bytes
 10508 ;; Hardware stack levels used: 1
 10509 ;; This function calls:
 10510 ;;		Nothing
 10511 ;; This function is called by:
 10512 ;;		_InterruptManagerHigh
 10513 ;; This function uses a non-reentrant model
 10514 ;;
 10515                           
 10516                           	psect	text57
 10517   00474A                     __ptext57:
 10518                           	callstack 0
 10519   00474A                     _MSSP_I2C_BC_ISR:
 10520                           	callstack 20
 10521   00474A                     
 10522                           ;MCAL_Layer/I2C/hal_i2c.c: 281:     (PIR2bits.BCLIF=0);
 10523   00474A  96A1               	bcf	161,3,c	;volatile
 10524   00474C  0012               	return		;funcret
 10525   00474E                     __end_of_MSSP_I2C_BC_ISR:
 10526                           	callstack 0
 10527                           
 10528 ;; *************** function _INT2_ISR *****************
 10529 ;; Defined at:
 10530 ;;		line 64 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 10531 ;; Parameters:    Size  Location     Type
 10532 ;;		None
 10533 ;; Auto vars:     Size  Location     Type
 10534 ;;		None
 10535 ;; Return value:  Size  Location     Type
 10536 ;;                  1    wreg      void 
 10537 ;; Registers used:
 10538 ;;		None
 10539 ;; Tracked objects:
 10540 ;;		On entry : 0/0
 10541 ;;		On exit  : 0/0
 10542 ;;		Unchanged: 0/0
 10543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10548 ;;Total ram usage:        0 bytes
 10549 ;; Hardware stack levels used: 1
 10550 ;; This function calls:
 10551 ;;		Nothing
 10552 ;; This function is called by:
 10553 ;;		_InterruptManagerHigh
 10554 ;; This function uses a non-reentrant model
 10555 ;;
 10556                           
 10557                           	psect	text58
 10558   00474E                     __ptext58:
 10559                           	callstack 0
 10560   00474E                     _INT2_ISR:
 10561                           	callstack 20
 10562   00474E                     
 10563                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 66:     (INTCON3bits.INT2IF=0) ;
 10564   00474E  92F0               	bcf	240,1,c	;volatile
 10565   004750  0012               	return		;funcret
 10566   004752                     __end_of_INT2_ISR:
 10567                           	callstack 0
 10568                           
 10569 ;; *************** function _INT1_ISR *****************
 10570 ;; Defined at:
 10571 ;;		line 54 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 10572 ;; Parameters:    Size  Location     Type
 10573 ;;		None
 10574 ;; Auto vars:     Size  Location     Type
 10575 ;;		None
 10576 ;; Return value:  Size  Location     Type
 10577 ;;                  1    wreg      void 
 10578 ;; Registers used:
 10579 ;;		None
 10580 ;; Tracked objects:
 10581 ;;		On entry : 0/0
 10582 ;;		On exit  : 0/0
 10583 ;;		Unchanged: 0/0
 10584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10589 ;;Total ram usage:        0 bytes
 10590 ;; Hardware stack levels used: 1
 10591 ;; This function calls:
 10592 ;;		Nothing
 10593 ;; This function is called by:
 10594 ;;		_InterruptManagerHigh
 10595 ;; This function uses a non-reentrant model
 10596 ;;
 10597                           
 10598                           	psect	text59
 10599   004752                     __ptext59:
 10600                           	callstack 0
 10601   004752                     _INT1_ISR:
 10602                           	callstack 20
 10603   004752                     
 10604                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 56:     (INTCON3bits.INT1IF=0) ;
 10605   004752  90F0               	bcf	240,0,c	;volatile
 10606   004754  0012               	return		;funcret
 10607   004756                     __end_of_INT1_ISR:
 10608                           	callstack 0
 10609                           
 10610 ;; *************** function _INT0_ISR *****************
 10611 ;; Defined at:
 10612 ;;		line 44 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 10613 ;; Parameters:    Size  Location     Type
 10614 ;;		None
 10615 ;; Auto vars:     Size  Location     Type
 10616 ;;		None
 10617 ;; Return value:  Size  Location     Type
 10618 ;;                  1    wreg      void 
 10619 ;; Registers used:
 10620 ;;		None
 10621 ;; Tracked objects:
 10622 ;;		On entry : 0/0
 10623 ;;		On exit  : 0/0
 10624 ;;		Unchanged: 0/0
 10625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10630 ;;Total ram usage:        0 bytes
 10631 ;; Hardware stack levels used: 1
 10632 ;; This function calls:
 10633 ;;		Nothing
 10634 ;; This function is called by:
 10635 ;;		_InterruptManagerHigh
 10636 ;; This function uses a non-reentrant model
 10637 ;;
 10638                           
 10639                           	psect	text60
 10640   004756                     __ptext60:
 10641                           	callstack 0
 10642   004756                     _INT0_ISR:
 10643                           	callstack 20
 10644   004756                     
 10645                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 46:     (INTCONbits.INT0IF=0) ;
 10646   004756  92F2               	bcf	242,1,c	;volatile
 10647   004758  0012               	return		;funcret
 10648   00475A                     __end_of_INT0_ISR:
 10649                           	callstack 0
 10650                           
 10651 ;; *************** function _EUSART_Tx_ISR *****************
 10652 ;; Defined at:
 10653 ;;		line 262 in file "MCAL_Layer/USART/hal_usart.c"
 10654 ;; Parameters:    Size  Location     Type
 10655 ;;		None
 10656 ;; Auto vars:     Size  Location     Type
 10657 ;;		None
 10658 ;; Return value:  Size  Location     Type
 10659 ;;                  1    wreg      void 
 10660 ;; Registers used:
 10661 ;;		None
 10662 ;; Tracked objects:
 10663 ;;		On entry : 0/0
 10664 ;;		On exit  : 0/0
 10665 ;;		Unchanged: 0/0
 10666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10671 ;;Total ram usage:        0 bytes
 10672 ;; Hardware stack levels used: 1
 10673 ;; This function calls:
 10674 ;;		Nothing
 10675 ;; This function is called by:
 10676 ;;		_InterruptManagerHigh
 10677 ;; This function uses a non-reentrant model
 10678 ;;
 10679                           
 10680                           	psect	text61
 10681   00475A                     __ptext61:
 10682                           	callstack 0
 10683   00475A                     _EUSART_Tx_ISR:
 10684                           	callstack 20
 10685   00475A                     
 10686                           ;MCAL_Layer/USART/hal_usart.c: 263:     (PIE1bits.TXIE=0);
 10687   00475A  989D               	bcf	157,4,c	;volatile
 10688   00475C  0012               	return		;funcret
 10689   00475E                     __end_of_EUSART_Tx_ISR:
 10690                           	callstack 0
 10691                           
 10692 ;; *************** function _EUSART_Rx_ISR *****************
 10693 ;; Defined at:
 10694 ;;		line 269 in file "MCAL_Layer/USART/hal_usart.c"
 10695 ;; Parameters:    Size  Location     Type
 10696 ;;		None
 10697 ;; Auto vars:     Size  Location     Type
 10698 ;;		None
 10699 ;; Return value:  Size  Location     Type
 10700 ;;                  1    wreg      void 
 10701 ;; Registers used:
 10702 ;;		wreg, status,2, status,0
 10703 ;; Tracked objects:
 10704 ;;		On entry : 0/0
 10705 ;;		On exit  : 0/0
 10706 ;;		Unchanged: 0/0
 10707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10712 ;;Total ram usage:        0 bytes
 10713 ;; Hardware stack levels used: 1
 10714 ;; This function calls:
 10715 ;;		Nothing
 10716 ;; This function is called by:
 10717 ;;		_InterruptManagerHigh
 10718 ;; This function uses a non-reentrant model
 10719 ;;
 10720                           
 10721                           	psect	text62
 10722   004768                     __ptext62:
 10723                           	callstack 0
 10724   004768                     _EUSART_Rx_ISR:
 10725                           	callstack 20
 10726   004768  0012               	return		;funcret
 10727   00476A                     __end_of_EUSART_Rx_ISR:
 10728                           	callstack 0
 10729                           
 10730 ;; *************** function _CCP2_ISR *****************
 10731 ;; Defined at:
 10732 ;;		line 20 in file "MCAL_Layer/CCP1/hal_ccp1.c"
 10733 ;; Parameters:    Size  Location     Type
 10734 ;;		None
 10735 ;; Auto vars:     Size  Location     Type
 10736 ;;		None
 10737 ;; Return value:  Size  Location     Type
 10738 ;;                  1    wreg      void 
 10739 ;; Registers used:
 10740 ;;		None
 10741 ;; Tracked objects:
 10742 ;;		On entry : 0/0
 10743 ;;		On exit  : 0/0
 10744 ;;		Unchanged: 0/0
 10745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10750 ;;Total ram usage:        0 bytes
 10751 ;; Hardware stack levels used: 1
 10752 ;; This function calls:
 10753 ;;		Nothing
 10754 ;; This function is called by:
 10755 ;;		_InterruptManagerHigh
 10756 ;; This function uses a non-reentrant model
 10757 ;;
 10758                           
 10759                           	psect	text63
 10760   00475E                     __ptext63:
 10761                           	callstack 0
 10762   00475E                     _CCP2_ISR:
 10763                           	callstack 20
 10764   00475E                     
 10765                           ;MCAL_Layer/CCP1/hal_ccp1.c: 21:     (PIR2bits.CCP2IF=0) ;
 10766   00475E  90A1               	bcf	161,0,c	;volatile
 10767   004760  0012               	return		;funcret
 10768   004762                     __end_of_CCP2_ISR:
 10769                           	callstack 0
 10770                           
 10771 ;; *************** function _CCP1_ISR *****************
 10772 ;; Defined at:
 10773 ;;		line 27 in file "MCAL_Layer/CCP1/hal_ccp1.c"
 10774 ;; Parameters:    Size  Location     Type
 10775 ;;		None
 10776 ;; Auto vars:     Size  Location     Type
 10777 ;;		None
 10778 ;; Return value:  Size  Location     Type
 10779 ;;                  1    wreg      void 
 10780 ;; Registers used:
 10781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 10782 ;; Tracked objects:
 10783 ;;		On entry : 0/0
 10784 ;;		On exit  : 0/0
 10785 ;;		Unchanged: 0/0
 10786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10791 ;;Total ram usage:        0 bytes
 10792 ;; Hardware stack levels used: 1
 10793 ;; Hardware stack levels required when called: 2
 10794 ;; This function calls:
 10795 ;;		NULL
 10796 ;;		_CCP1_DefaultInterruptHandler
 10797 ;; This function is called by:
 10798 ;;		_InterruptManagerHigh
 10799 ;; This function uses a non-reentrant model
 10800 ;;
 10801                           
 10802                           	psect	text64
 10803   0045F4                     __ptext64:
 10804                           	callstack 0
 10805   0045F4                     _CCP1_ISR:
 10806                           	callstack 18
 10807   0045F4                     
 10808                           ;MCAL_Layer/CCP1/hal_ccp1.c: 28:     (PIR1bits.CCP1IF=0) ;
 10809   0045F4  949E               	bcf	158,2,c	;volatile
 10810   0045F6                     
 10811                           ;MCAL_Layer/CCP1/hal_ccp1.c: 29:     if(CCP1_Interrupt_Handler){
 10812   0045F6  0100               	movlb	0	; () banked
 10813   0045F8  51C0               	movf	_CCP1_Interrupt_Handler& (0+255),w,b
 10814   0045FA  11C1               	iorwf	(_CCP1_Interrupt_Handler+1)& (0+255),w,b
 10815   0045FC  B4D8               	btfsc	status,2,c
 10816   0045FE  EF03  F023         	goto	i2u676_41
 10817   004602  EF05  F023         	goto	i2u676_40
 10818   004606                     i2u676_41:
 10819   004606  EF11  F023         	goto	i2l650
 10820   00460A                     i2u676_40:
 10821   00460A                     
 10822                           ; BSR set to: 0
 10823                           ;MCAL_Layer/CCP1/hal_ccp1.c: 30:         CCP1_Interrupt_Handler();
 10824   00460A  D802               	call	i2u677_48
 10825   00460C  EF11  F023         	goto	i2u677_49
 10826   004610                     i2u677_48:
 10827   004610  0005               	push	
 10828   004612  6EFA               	movwf	pclath,c
 10829   004614  51C0               	movf	_CCP1_Interrupt_Handler& (0+255),w,b
 10830   004616  6EFD               	movwf	tosl,c
 10831   004618  51C1               	movf	(_CCP1_Interrupt_Handler+1)& (0+255),w,b
 10832   00461A  6EFE               	movwf	tosh,c
 10833   00461C  6AFF               	clrf	tosu,c
 10834   00461E  50FA               	movf	pclath,w,c
 10835   004620  0012               	return		;indir
 10836   004622                     i2u677_49:
 10837   004622                     i2l650:
 10838   004622  0012               	return		;funcret
 10839   004624                     __end_of_CCP1_ISR:
 10840                           	callstack 0
 10841                           
 10842 ;; *************** function _CCP1_DefaultInterruptHandler *****************
 10843 ;; Defined at:
 10844 ;;		line 134 in file "ECU_Layer/ecu_layer_init.c"
 10845 ;; Parameters:    Size  Location     Type
 10846 ;;		None
 10847 ;; Auto vars:     Size  Location     Type
 10848 ;;		None
 10849 ;; Return value:  Size  Location     Type
 10850 ;;                  1    wreg      void 
 10851 ;; Registers used:
 10852 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10853 ;; Tracked objects:
 10854 ;;		On entry : 0/0
 10855 ;;		On exit  : 0/0
 10856 ;;		Unchanged: 0/0
 10857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10862 ;;Total ram usage:        0 bytes
 10863 ;; Hardware stack levels used: 1
 10864 ;; Hardware stack levels required when called: 1
 10865 ;; This function calls:
 10866 ;;		_CCP_Compare_Mode_Set_Value
 10867 ;;		_Timer3_Write_value
 10868 ;; This function is called by:
 10869 ;;		_CCP_SET_Duty
 10870 ;;		_CCP1_ISR
 10871 ;; This function uses a non-reentrant model
 10872 ;;
 10873                           
 10874                           	psect	text65
 10875   003F9C                     __ptext65:
 10876                           	callstack 0
 10877   003F9C                     _CCP1_DefaultInterruptHandler:
 10878                           	callstack 18
 10879   003F9C                     
 10880                           ;ECU_Layer/ecu_layer_init.c: 135:     compare_flag++;
 10881   003F9C  2A63               	incf	_compare_flag^0,f,c	;volatile
 10882   003F9E                     
 10883                           ;ECU_Layer/ecu_layer_init.c: 136:     ret=Timer3_Write_value(&timer_obj,0);
 10884   003F9E  0EDE               	movlw	low _timer_obj
 10885   003FA0  6E01               	movwf	Timer3_Write_value@_timer^0,c
 10886   003FA2  0E00               	movlw	high _timer_obj
 10887   003FA4  6E02               	movwf	(Timer3_Write_value@_timer+1)^0,c
 10888   003FA6  0E00               	movlw	0
 10889   003FA8  6E04               	movwf	(Timer3_Write_value@_value+1)^0,c
 10890   003FAA  0E00               	movlw	0
 10891   003FAC  6E03               	movwf	Timer3_Write_value@_value^0,c
 10892   003FAE  EC12  F023         	call	_Timer3_Write_value	;wreg free
 10893   003FB2  0100               	movlb	0	; () banked
 10894   003FB4  6FEF               	movwf	_ret& (0+255),b
 10895   003FB6                     
 10896                           ; BSR set to: 0
 10897                           ;ECU_Layer/ecu_layer_init.c: 137:     if (1== compare_flag){
 10898   003FB6  0463               	decf	_compare_flag^0,w,c	;volatile
 10899   003FB8  A4D8               	btfss	status,2,c
 10900   003FBA  EFE1  F01F         	goto	i2u636_41
 10901   003FBE  EFE3  F01F         	goto	i2u636_40
 10902   003FC2                     i2u636_41:
 10903   003FC2  EFF5  F01F         	goto	i2l7555
 10904   003FC6                     i2u636_40:
 10905   003FC6                     
 10906                           ; BSR set to: 0
 10907                           ;ECU_Layer/ecu_layer_init.c: 138:       ret=CCP_Compare_Mode_Set_Value(&ccp1_obj ,2400);
 10908   003FC6  0E3E               	movlw	low _ccp1_obj
 10909   003FC8  6E01               	movwf	CCP_Compare_Mode_Set_Value@_ccp_obj^0,c
 10910   003FCA  0E01               	movlw	high _ccp1_obj
 10911   003FCC  6E02               	movwf	(CCP_Compare_Mode_Set_Value@_ccp_obj+1)^0,c
 10912   003FCE  0E09               	movlw	9
 10913   003FD0  6E04               	movwf	(CCP_Compare_Mode_Set_Value@compare_value+1)^0,c
 10914   003FD2  0E60               	movlw	96
 10915   003FD4  6E03               	movwf	CCP_Compare_Mode_Set_Value@compare_value^0,c
 10916   003FD6  ECC2  F020         	call	_CCP_Compare_Mode_Set_Value	;wreg free
 10917   003FDA  0100               	movlb	0	; () banked
 10918   003FDC  6FEF               	movwf	_ret& (0+255),b
 10919   003FDE                     
 10920                           ; BSR set to: 0
 10921                           ;ECU_Layer/ecu_layer_init.c: 139:       (CCP1CONbits.CCP1M = ((uint8)0x09));
 10922   003FDE  50BD               	movf	189,w,c	;volatile
 10923   003FE0  0BF0               	andlw	-16
 10924   003FE2  0909               	iorlw	9
 10925   003FE4  6EBD               	movwf	189,c	;volatile
 10926                           
 10927                           ;ECU_Layer/ecu_layer_init.c: 140:     }
 10928   003FE6  EF10  F020         	goto	i2l464
 10929   003FEA                     i2l7555:
 10930                           
 10931                           ; BSR set to: 0
 10932   003FEA  0E02               	movlw	2
 10933   003FEC  1863               	xorwf	_compare_flag^0,w,c	;volatile
 10934   003FEE  A4D8               	btfss	status,2,c
 10935   003FF0  EFFC  F01F         	goto	i2u637_41
 10936   003FF4  EFFE  F01F         	goto	i2u637_40
 10937   003FF8                     i2u637_41:
 10938   003FF8  EF10  F020         	goto	i2l464
 10939   003FFC                     i2u637_40:
 10940   003FFC                     
 10941                           ; BSR set to: 0
 10942                           ;ECU_Layer/ecu_layer_init.c: 142:       ret=CCP_Compare_Mode_Set_Value(&ccp1_obj ,17600)
      +                          ;
 10943   003FFC  0E3E               	movlw	low _ccp1_obj
 10944   003FFE  6E01               	movwf	CCP_Compare_Mode_Set_Value@_ccp_obj^0,c
 10945   004000  0E01               	movlw	high _ccp1_obj
 10946   004002  6E02               	movwf	(CCP_Compare_Mode_Set_Value@_ccp_obj+1)^0,c
 10947   004004  0E44               	movlw	68
 10948   004006  6E04               	movwf	(CCP_Compare_Mode_Set_Value@compare_value+1)^0,c
 10949   004008  0EC0               	movlw	192
 10950   00400A  6E03               	movwf	CCP_Compare_Mode_Set_Value@compare_value^0,c
 10951   00400C  ECC2  F020         	call	_CCP_Compare_Mode_Set_Value	;wreg free
 10952   004010  0100               	movlb	0	; () banked
 10953   004012  6FEF               	movwf	_ret& (0+255),b
 10954   004014                     
 10955                           ; BSR set to: 0
 10956                           ;ECU_Layer/ecu_layer_init.c: 143:       (CCP1CONbits.CCP1M = ((uint8)0x08));
 10957   004014  50BD               	movf	189,w,c	;volatile
 10958   004016  0BF0               	andlw	-16
 10959   004018  0908               	iorlw	8
 10960   00401A  6EBD               	movwf	189,c	;volatile
 10961   00401C                     
 10962                           ; BSR set to: 0
 10963                           ;ECU_Layer/ecu_layer_init.c: 144:       compare_flag=0;
 10964   00401C  0E00               	movlw	0
 10965   00401E  6E63               	movwf	_compare_flag^0,c	;volatile
 10966   004020                     i2l464:
 10967                           
 10968                           ; BSR set to: 0
 10969   004020  0012               	return		;funcret
 10970   004022                     __end_of_CCP1_DefaultInterruptHandler:
 10971                           	callstack 0
 10972                           
 10973 ;; *************** function _Timer3_Write_value *****************
 10974 ;; Defined at:
 10975 ;;		line 74 in file "MCAL_Layer/Timer3/hal_timer3.c"
 10976 ;; Parameters:    Size  Location     Type
 10977 ;;  _timer          2    0[COMRAM] PTR const struct .
 10978 ;;		 -> timer_obj(7), 
 10979 ;;  _value          2    2[COMRAM] unsigned short 
 10980 ;; Auto vars:     Size  Location     Type
 10981 ;;  ret             1    0        unsigned char 
 10982 ;; Return value:  Size  Location     Type
 10983 ;;                  1    wreg      unsigned char 
 10984 ;; Registers used:
 10985 ;;		wreg, status,2, status,0
 10986 ;; Tracked objects:
 10987 ;;		On entry : 0/0
 10988 ;;		On exit  : 0/0
 10989 ;;		Unchanged: 0/0
 10990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10991 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10994 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10995 ;;Total ram usage:        4 bytes
 10996 ;; Hardware stack levels used: 1
 10997 ;; This function calls:
 10998 ;;		Nothing
 10999 ;; This function is called by:
 11000 ;;		_CCP1_DefaultInterruptHandler
 11001 ;; This function uses a non-reentrant model
 11002 ;;
 11003                           
 11004                           	psect	text66
 11005   004624                     __ptext66:
 11006                           	callstack 0
 11007   004624                     _Timer3_Write_value:
 11008                           	callstack 18
 11009   004624                     
 11010                           ;MCAL_Layer/Timer3/hal_timer3.c: 77:     if(((void*)0) == _timer){
 11011   004624  5001               	movf	Timer3_Write_value@_timer^0,w,c
 11012   004626  1002               	iorwf	(Timer3_Write_value@_timer+1)^0,w,c
 11013   004628  A4D8               	btfss	status,2,c
 11014   00462A  EF19  F023         	goto	i2u620_41
 11015   00462E  EF1B  F023         	goto	i2u620_40
 11016   004632                     i2u620_41:
 11017   004632  EF1D  F023         	goto	i2l7333
 11018   004636                     i2u620_40:
 11019   004636                     
 11020                           ;MCAL_Layer/Timer3/hal_timer3.c: 79:     }
 11021   004636  EF21  F023         	goto	i2l1569
 11022   00463A                     i2l7333:
 11023                           
 11024                           ;MCAL_Layer/Timer3/hal_timer3.c: 81:         TMR3H=(_value) >> 8;
 11025   00463A  5004               	movf	(Timer3_Write_value@_value+1)^0,w,c
 11026   00463C  6EB3               	movwf	179,c	;volatile
 11027   00463E                     
 11028                           ;MCAL_Layer/Timer3/hal_timer3.c: 82:         TMR3L=(uint8)(_value);
 11029   00463E  C003  FFB2         	movff	Timer3_Write_value@_value,4018	;volatile
 11030   004642                     i2l1569:
 11031                           
 11032                           ;MCAL_Layer/Timer3/hal_timer3.c: 87:     return ret;
 11033   004642  0E01               	movlw	1
 11034   004644  0012               	return		;funcret
 11035   004646                     __end_of_Timer3_Write_value:
 11036                           	callstack 0
 11037                           
 11038 ;; *************** function _CCP_Compare_Mode_Set_Value *****************
 11039 ;; Defined at:
 11040 ;;		line 195 in file "MCAL_Layer/CCP1/hal_ccp1.c"
 11041 ;; Parameters:    Size  Location     Type
 11042 ;;  _ccp_obj        2    0[COMRAM] PTR const struct .
 11043 ;;		 -> ccp1_obj(11), 
 11044 ;;  compare_valu    2    2[COMRAM] unsigned short 
 11045 ;; Auto vars:     Size  Location     Type
 11046 ;;  capture_temp    2    5[COMRAM] struct .
 11047 ;;  ret             1    0        unsigned char 
 11048 ;; Return value:  Size  Location     Type
 11049 ;;                  1    wreg      unsigned char 
 11050 ;; Registers used:
 11051 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11052 ;; Tracked objects:
 11053 ;;		On entry : 0/0
 11054 ;;		On exit  : 0/0
 11055 ;;		Unchanged: 0/0
 11056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11057 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11058 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11059 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11060 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11061 ;;Total ram usage:        7 bytes
 11062 ;; Hardware stack levels used: 1
 11063 ;; This function calls:
 11064 ;;		Nothing
 11065 ;; This function is called by:
 11066 ;;		_CCP1_DefaultInterruptHandler
 11067 ;; This function uses a non-reentrant model
 11068 ;;
 11069                           
 11070                           	psect	text67
 11071   004184                     __ptext67:
 11072                           	callstack 0
 11073   004184                     _CCP_Compare_Mode_Set_Value:
 11074                           	callstack 18
 11075   004184                     
 11076                           ;MCAL_Layer/CCP1/hal_ccp1.c: 198:     if (((void*)0) == _ccp_obj){
 11077   004184  5001               	movf	CCP_Compare_Mode_Set_Value@_ccp_obj^0,w,c
 11078   004186  1002               	iorwf	(CCP_Compare_Mode_Set_Value@_ccp_obj+1)^0,w,c
 11079   004188  A4D8               	btfss	status,2,c
 11080   00418A  EFC9  F020         	goto	i2u621_41
 11081   00418E  EFCB  F020         	goto	i2u621_40
 11082   004192                     i2u621_41:
 11083   004192  EFCD  F020         	goto	i2l691
 11084   004196                     i2u621_40:
 11085   004196                     i2l7345:
 11086                           
 11087                           ;MCAL_Layer/CCP1/hal_ccp1.c: 200:     }
 11088   004196  EFF9  F020         	goto	i2l692
 11089   00419A                     i2l691:
 11090                           
 11091                           ;MCAL_Layer/CCP1/hal_ccp1.c: 203:         capture_temp_value.ccpr_16Bit = compare_value;
 11092   00419A  C003  F006         	movff	CCP_Compare_Mode_Set_Value@compare_value,CCP_Compare_Mode_Set_Value@capture_temp_
      +                          value
 11093   00419E  C004  F007         	movff	CCP_Compare_Mode_Set_Value@compare_value+1,CCP_Compare_Mode_Set_Value@capture_tem
      +                          p_value+1
 11094   0041A2                     
 11095                           ;MCAL_Layer/CCP1/hal_ccp1.c: 204:         if( CCP1_INST == _ccp_obj->ccp_inst){
 11096   0041A2  EE20 F003          	lfsr	2,3
 11097   0041A6  5001               	movf	CCP_Compare_Mode_Set_Value@_ccp_obj^0,w,c
 11098   0041A8  26D9               	addwf	fsr2l,f,c
 11099   0041AA  5002               	movf	(CCP_Compare_Mode_Set_Value@_ccp_obj+1)^0,w,c
 11100   0041AC  22DA               	addwfc	fsr2h,f,c
 11101   0041AE  50DF               	movf	indf2,w,c
 11102   0041B0  A4D8               	btfss	status,2,c
 11103   0041B2  EFDD  F020         	goto	i2u622_41
 11104   0041B6  EFDF  F020         	goto	i2u622_40
 11105   0041BA                     i2u622_41:
 11106   0041BA  EFE5  F020         	goto	i2l7351
 11107   0041BE                     i2u622_40:
 11108   0041BE                     
 11109                           ;MCAL_Layer/CCP1/hal_ccp1.c: 205:             CCPR1L = capture_temp_value.ccpr_low;
 11110   0041BE  C006  FFBE         	movff	CCP_Compare_Mode_Set_Value@capture_temp_value,4030	;volatile
 11111                           
 11112                           ;MCAL_Layer/CCP1/hal_ccp1.c: 206:             CCPR1H = capture_temp_value.ccpr_high;
 11113   0041C2  C007  FFBF         	movff	CCP_Compare_Mode_Set_Value@capture_temp_value+1,4031	;volatile
 11114                           
 11115                           ;MCAL_Layer/CCP1/hal_ccp1.c: 207:         }
 11116   0041C6  EFCB  F020         	goto	i2l7345
 11117   0041CA                     i2l7351:
 11118   0041CA  EE20 F003          	lfsr	2,3
 11119   0041CE  5001               	movf	CCP_Compare_Mode_Set_Value@_ccp_obj^0,w,c
 11120   0041D0  26D9               	addwf	fsr2l,f,c
 11121   0041D2  5002               	movf	(CCP_Compare_Mode_Set_Value@_ccp_obj+1)^0,w,c
 11122   0041D4  22DA               	addwfc	fsr2h,f,c
 11123   0041D6  04DE               	decf	postinc2,w,c
 11124   0041D8  A4D8               	btfss	status,2,c
 11125   0041DA  EFF1  F020         	goto	i2u623_41
 11126   0041DE  EFF3  F020         	goto	i2u623_40
 11127   0041E2                     i2u623_41:
 11128   0041E2  EFCB  F020         	goto	i2l7345
 11129   0041E6                     i2u623_40:
 11130   0041E6                     
 11131                           ;MCAL_Layer/CCP1/hal_ccp1.c: 209:             CCPR2L = capture_temp_value.ccpr_low;
 11132   0041E6  C006  FFBB         	movff	CCP_Compare_Mode_Set_Value@capture_temp_value,4027	;volatile
 11133                           
 11134                           ;MCAL_Layer/CCP1/hal_ccp1.c: 210:             CCPR2H = capture_temp_value.ccpr_high;
 11135   0041EA  C007  FFBC         	movff	CCP_Compare_Mode_Set_Value@capture_temp_value+1,4028	;volatile
 11136   0041EE  EFCB  F020         	goto	i2l7345
 11137   0041F2                     i2l692:
 11138                           
 11139                           ;MCAL_Layer/CCP1/hal_ccp1.c: 216:     return ret;
 11140   0041F2  0E01               	movlw	1
 11141   0041F4  0012               	return		;funcret
 11142   0041F6                     __end_of_CCP_Compare_Mode_Set_Value:
 11143                           	callstack 0
 11144                           
 11145 ;; *************** function _ADC_ISR *****************
 11146 ;; Defined at:
 11147 ;;		line 295 in file "MCAL_Layer/ADC/hal_adc.c"
 11148 ;; Parameters:    Size  Location     Type
 11149 ;;		None
 11150 ;; Auto vars:     Size  Location     Type
 11151 ;;		None
 11152 ;; Return value:  Size  Location     Type
 11153 ;;                  1    wreg      void 
 11154 ;; Registers used:
 11155 ;;		None
 11156 ;; Tracked objects:
 11157 ;;		On entry : 0/0
 11158 ;;		On exit  : 0/0
 11159 ;;		Unchanged: 0/0
 11160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11165 ;;Total ram usage:        0 bytes
 11166 ;; Hardware stack levels used: 1
 11167 ;; This function calls:
 11168 ;;		Nothing
 11169 ;; This function is called by:
 11170 ;;		_InterruptManagerHigh
 11171 ;; This function uses a non-reentrant model
 11172 ;;
 11173                           
 11174                           	psect	text68
 11175   004762                     __ptext68:
 11176                           	callstack 0
 11177   004762                     _ADC_ISR:
 11178                           	callstack 20
 11179   004762                     
 11180                           ;MCAL_Layer/ADC/hal_adc.c: 296:     (PIR1bits.ADIF=0);
 11181   004762  9C9E               	bcf	158,6,c	;volatile
 11182   004764  0012               	return		;funcret
 11183   004766                     __end_of_ADC_ISR:
 11184                           	callstack 0
 11185                           
 11186                           	psect	text69
 11187   000000                     __ptext69:
 11188                           	callstack 0
 11189   000000                     
 11190                           	psect	rparam
 11191   000000                     
 11192                           	psect	temp
 11193   000073                     btemp:
 11194                           	callstack 0
 11195   000073                     	ds	1
 11196   000000                     int$flags	set	btemp
 11197   000000                     wtemp8	set	btemp+1
 11198   000000                     ttemp5	set	btemp+1
 11199   000000                     ttemp6	set	btemp+4
 11200   000000                     ttemp7	set	btemp+8
 11201                           
 11202                           	psect	config
 11203                           
 11204                           ; Padding undefined space
 11205   300000                     	org	3145728
 11206   300000  FF                 	db	255
 11207                           
 11208                           ;Config register CONFIG1H @ 0x300001
 11209                           ;	Oscillator Selection bits
 11210                           ;	OSC = HS, HS oscillator
 11211                           ;	Fail-Safe Clock Monitor Enable bit
 11212                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 11213                           ;	Internal/External Oscillator Switchover bit
 11214                           ;	IESO = OFF, Oscillator Switchover mode disabled
 11215   300001                     	org	3145729
 11216   300001  02                 	db	2
 11217                           
 11218                           ;Config register CONFIG2L @ 0x300002
 11219                           ;	Power-up Timer Enable bit
 11220                           ;	PWRT = OFF, PWRT disabled
 11221                           ;	Brown-out Reset Enable bits
 11222                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
 11223                           ;	Brown Out Reset Voltage bits
 11224                           ;	BORV = 1, 
 11225   300002                     	org	3145730
 11226   300002  09                 	db	9
 11227                           
 11228                           ;Config register CONFIG2H @ 0x300003
 11229                           ;	Watchdog Timer Enable bit
 11230                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 11231                           ;	Watchdog Timer Postscale Select bits
 11232                           ;	WDTPS = 32768, 1:32768
 11233   300003                     	org	3145731
 11234   300003  1E                 	db	30
 11235                           
 11236                           ; Padding undefined space
 11237   300004                     	org	3145732
 11238   300004  FF                 	db	255
 11239                           
 11240                           ;Config register CONFIG3H @ 0x300005
 11241                           ;	CCP2 MUX bit
 11242                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 11243                           ;	PORTB A/D Enable bit
 11244                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 11245                           ;	Low-Power Timer1 Oscillator Enable bit
 11246                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 11247                           ;	MCLR Pin Enable bit
 11248                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 11249   300005                     	org	3145733
 11250   300005  81                 	db	129
 11251                           
 11252                           ;Config register CONFIG4L @ 0x300006
 11253                           ;	Stack Full/Underflow Reset Enable bit
 11254                           ;	STVREN = ON, Stack full/underflow will cause Reset
 11255                           ;	Single-Supply ICSP Enable bit
 11256                           ;	LVP = OFF, Single-Supply ICSP disabled
 11257                           ;	Extended Instruction Set Enable bit
 11258                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 11259                           ;	Background Debugger Enable bit
 11260                           ;	DEBUG = 0x1, unprogrammed default
 11261   300006                     	org	3145734
 11262   300006  81                 	db	129
 11263                           
 11264                           ; Padding undefined space
 11265   300007                     	org	3145735
 11266   300007  FF                 	db	255
 11267                           
 11268                           ;Config register CONFIG5L @ 0x300008
 11269                           ;	Code Protection bit
 11270                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 11271                           ;	Code Protection bit
 11272                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 11273                           ;	Code Protection bit
 11274                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 11275                           ;	Code Protection bit
 11276                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 11277   300008                     	org	3145736
 11278   300008  0F                 	db	15
 11279                           
 11280                           ;Config register CONFIG5H @ 0x300009
 11281                           ;	Boot Block Code Protection bit
 11282                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 11283                           ;	Data EEPROM Code Protection bit
 11284                           ;	CPD = OFF, Data EEPROM not code-protected
 11285   300009                     	org	3145737
 11286   300009  C0                 	db	192
 11287                           
 11288                           ;Config register CONFIG6L @ 0x30000A
 11289                           ;	Write Protection bit
 11290                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 11291                           ;	Write Protection bit
 11292                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 11293                           ;	Write Protection bit
 11294                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 11295                           ;	Write Protection bit
 11296                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 11297   30000A                     	org	3145738
 11298   30000A  0F                 	db	15
 11299                           
 11300                           ;Config register CONFIG6H @ 0x30000B
 11301                           ;	Configuration Register Write Protection bit
 11302                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 11303                           ;	Boot Block Write Protection bit
 11304                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 11305                           ;	Data EEPROM Write Protection bit
 11306                           ;	WRTD = OFF, Data EEPROM not write-protected
 11307   30000B                     	org	3145739
 11308   30000B  E0                 	db	224
 11309                           
 11310                           ;Config register CONFIG7L @ 0x30000C
 11311                           ;	Table Read Protection bit
 11312                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 11313                           ;	Table Read Protection bit
 11314                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 11315                           ;	Table Read Protection bit
 11316                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 11317                           ;	Table Read Protection bit
 11318                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 11319   30000C                     	org	3145740
 11320   30000C  0F                 	db	15
 11321                           
 11322                           ;Config register CONFIG7H @ 0x30000D
 11323                           ;	Boot Block Table Read Protection bit
 11324                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 11325   30000D                     	org	3145741
 11326   30000D  40                 	db	64
 11327                           tosu	equ	0xFFF
 11328                           tosh	equ	0xFFE
 11329                           tosl	equ	0xFFD
 11330                           stkptr	equ	0xFFC
 11331                           pclatu	equ	0xFFB
 11332                           pclath	equ	0xFFA
 11333                           pcl	equ	0xFF9
 11334                           tblptru	equ	0xFF8
 11335                           tblptrh	equ	0xFF7
 11336                           tblptrl	equ	0xFF6
 11337                           tablat	equ	0xFF5
 11338                           prodh	equ	0xFF4
 11339                           prodl	equ	0xFF3
 11340                           indf0	equ	0xFEF
 11341                           postinc0	equ	0xFEE
 11342                           postdec0	equ	0xFED
 11343                           preinc0	equ	0xFEC
 11344                           plusw0	equ	0xFEB
 11345                           fsr0h	equ	0xFEA
 11346                           fsr0l	equ	0xFE9
 11347                           wreg	equ	0xFE8
 11348                           indf1	equ	0xFE7
 11349                           postinc1	equ	0xFE6
 11350                           postdec1	equ	0xFE5
 11351                           preinc1	equ	0xFE4
 11352                           plusw1	equ	0xFE3
 11353                           fsr1h	equ	0xFE2
 11354                           fsr1l	equ	0xFE1
 11355                           bsr	equ	0xFE0
 11356                           indf2	equ	0xFDF
 11357                           postinc2	equ	0xFDE
 11358                           postdec2	equ	0xFDD
 11359                           preinc2	equ	0xFDC
 11360                           plusw2	equ	0xFDB
 11361                           fsr2h	equ	0xFDA
 11362                           fsr2l	equ	0xFD9
 11363                           status	equ	0xFD8

Data Sizes:
    Strings     75
    Constant    16
    Data        62
    BSS         219
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     94     114
    BANK0           128      0     126
    BANK1           256     12     136
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S5100$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 11
		 -> convert_uint32_to_string@Temp_String(COMRAM[11]), convert_uint16_to_string@Temp_String(BANK1[6]), convert_uint8_to_string@Temp_String(COMRAM[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S5047$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S5047$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(2) Largest target is 7
		 -> adc_lm35_1_txt(BANK0[7]), 

    memset@s	PTR unsigned char  size(2) Largest target is 7
		 -> adc_lm35_1_txt(BANK0[7]), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), NULL(NULL[0]), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), NULL(NULL[0]), 

    EUSART_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), NULL(NULL[0]), 

    EUSART_ASYNC_RX_Init@_eusart.EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    EUSART_ASYNC_RX_Init@_eusart.EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    EUSART_ASYNC_RX_Init@_eusart.EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    EUSART_ASYNC_RX_Init@_eusart.EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    EUSART_ASYNC_RX_Init@_eusart	PTR const struct . size(2) Largest target is 16
		 -> usart_obj(BANK0[16]), 

    EUSART_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), NULL(NULL[0]), 

    EUSART_ASYNC_TX_Init@_eusart.EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    EUSART_ASYNC_TX_Init@_eusart.EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    EUSART_ASYNC_TX_Init@_eusart.EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    EUSART_ASYNC_TX_Init@_eusart.EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    EUSART_ASYNC_TX_Init@_eusart	PTR const struct . size(2) Largest target is 16
		 -> usart_obj(BANK0[16]), 

    EUSART_Baud_Rate_Calculation@_eusart.EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    EUSART_Baud_Rate_Calculation@_eusart.EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    EUSART_Baud_Rate_Calculation@_eusart.EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    EUSART_Baud_Rate_Calculation@_eusart.EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    EUSART_Baud_Rate_Calculation@_eusart	PTR const struct . size(2) Largest target is 16
		 -> usart_obj(BANK0[16]), 

    EUSART_ASYNC_Init@_eusart	PTR const struct . size(2) Largest target is 16
		 -> usart_obj(BANK0[16]), 

    Timer3_Mode_Select@_timer.TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    Timer3_Write_value@_timer	PTR const struct . size(2) Largest target is 7
		 -> timer_obj(BANK0[7]), 

    TMR3_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), NULL(NULL[0]), 

    Timer3_Init@_timer.TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TMR2_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S3754$TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer2_Init@_timer.TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Mode_Select@_timer.TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    TMR1_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S3565$TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Init@_timer.TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Register_Size_Config@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Mode_Select@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Prescaler_Config@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    TMR0_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S3395$TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Init@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_SetInterruptHandler@int_obj.EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_SetInterruptHandler@int_obj.EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    S2863$EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Pin_Init@int_obj.EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    S2863$EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Pin_Init@int_obj.EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_SetInterruptHandler@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Clear_Flag@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Disable@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S2825$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Enable@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    RB7_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Report_Receive_Overflow_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    MSSP_I2C_Interrupt_Configuration@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Interrupt_Configuration@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Interrupt_Configuration@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Report_Write_Collision_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    MSSP_I2C_Master_Mode_Clock_CFG@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Master_Mode_Clock_CFG@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Master_Mode_Clock_CFG@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    gpio_pin_intialize@_pin_config	PTR const struct . size(2) Largest target is 10
		 -> dc_motor2.dc_motor_pin(BANK0[2]), dc_motor2(BANK0[2]), dc_motor1.dc_motor_pin(BANK0[2]), dc_motor1(BANK0[2]), 
		 -> lcd_2.lcd_data(BANK0[8]), relay_initialize@pin_obj(COMRAM[1]), lcd_2(BANK0[10]), led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(2) Largest target is 10
		 -> dc_motor2.dc_motor_pin(BANK0[2]), dc_motor2(BANK0[2]), dc_motor1.dc_motor_pin(BANK0[2]), dc_motor1(BANK0[2]), 
		 -> lcd_2.lcd_data(BANK0[8]), relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 
		 -> lcd_2(BANK0[10]), led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_direction_intialize@_pin_config	PTR const struct . size(2) Largest target is 10
		 -> dc_motor2.dc_motor_pin(BANK0[2]), dc_motor2(BANK0[2]), dc_motor1.dc_motor_pin(BANK0[2]), dc_motor1(BANK0[2]), 
		 -> lcd_2.lcd_data(BANK0[8]), relay_initialize@pin_obj(COMRAM[1]), lcd_2(BANK0[10]), led_initialize@pin_obj(COMRAM[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRllll[1]), PORTD(BITBIGSFRllll[1]), PORTC(BITBIGSFRllll[1]), PORTB(BITBIGSFRllll[1]), 
		 -> PORTA(BITBIGSFRllll[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlllh[1]), LATD(BITBIGSFRlllh[1]), LATC(BITBIGSFRlllh[1]), LATB(BITBIGSFRlllh[1]), 
		 -> LATA(BITBIGSFRllll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISD(ABS[1]), TRISC(ABS[1]), TRISB(ABS[1]), TRISE(ABS[1]), 
		 -> TRISA(BITBIGSFRllll[1]), 

    CCP_Compare_Mode_Config@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Compare_Mode_Config@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_DefaultInterruptHandler(), 

    CCP_Capture_Mode_Config@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Capture_Mode_Config@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_DefaultInterruptHandler(), 

    CCP_Mode_Timer_Select@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Mode_Timer_Select@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_DefaultInterruptHandler(), 

    CCP_Interrupt_Config@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Interrupt_Config@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_DefaultInterruptHandler(), 

    CCP_Compare_Mode_Set_Value@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Compare_Mode_Set_Value@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_DefaultInterruptHandler(), 

    CCP_Compare_Mode_Set_Value@_ccp_obj	PTR const struct . size(2) Largest target is 11
		 -> ccp1_obj(BANK1[11]), 

    CCP_IsCompareComplete@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_IsCompareComplete@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_DefaultInterruptHandler(), 

    CCP1_DeInit@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP1_DeInit@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_DefaultInterruptHandler(), 

    CCP_Init@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Init@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_DefaultInterruptHandler(), 

    CCP1_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), CCP1_DefaultInterruptHandler(), 

    CCP2_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    configure_voltage_reference@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    configure_voltage_reference@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK1[7]), 

    select_result_format@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    select_result_format@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK1[7]), 

    ADC_GetConversion_Blocking@conversion_result	PTR unsigned short  size(2) Largest target is 2
		 -> adc_lm35_1(COMRAM[2]), 

    ADC_GetConversion_Blocking@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK1[7]), 

    ADC_GetConversionResult@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ADC_GetConversionResult@conversion_result	PTR unsigned short  size(2) Largest target is 2
		 -> adc_lm35_1(COMRAM[2]), 

    ADC_GetConversionResult@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK1[7]), 

    ADC_StartConversion@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK1[7]), 

    ADC_SelectChannel@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK1[7]), 

    ADC_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ADC_Init@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ADC_Init@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(BANK1[7]), 

    S1036$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    adc_1.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S903$TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    timer_obj.TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S887$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    ccp1_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S887$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_DefaultInterruptHandler(), 

    ccp1_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_DefaultInterruptHandler(), 

    S859$EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    usart_obj.EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S859$EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    usart_obj.EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S859$EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    usart_obj.EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S859$EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    usart_obj.EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S457$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    S457$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    S457$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    dc_motor_stop@_motor	PTR const struct . size(2) Largest target is 2
		 -> dc_motor2(BANK0[2]), dc_motor1(BANK0[2]), 

    dc_motor_move_right@_motor	PTR const struct . size(2) Largest target is 2
		 -> dc_motor2(BANK0[2]), dc_motor1(BANK0[2]), 

    dc_motor_initialize@_motor	PTR const struct . size(2) Largest target is 2
		 -> dc_motor2(BANK0[2]), dc_motor1(BANK0[2]), 

    lcd_8bit_set_cursor@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_2(BANK0[10]), 

    lcd_8bit_send_enable_signal@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_2(BANK0[10]), 

    convert_uint16_to_string@str	PTR unsigned char  size(2) Largest target is 7
		 -> adc_lm35_1_txt(BANK0[7]), 

    sp__memset	PTR void  size(2) Largest target is 7
		 -> adc_lm35_1_txt(BANK0[7]), 

    lcd_8bit_send_string_pos@str	PTR unsigned char  size(2) Largest target is 22
		 -> STR_12(CODE[22]), STR_11(CODE[15]), STR_10(CODE[11]), STR_9(CODE[15]), 
		 -> STR_8(CODE[8]), STR_7(CODE[15]), STR_6(CODE[15]), adc_lm35_1_txt(BANK0[7]), 
		 -> STR_5(CODE[8]), STR_4(CODE[8]), RealTimeClockDS1307_Time(BANK1[9]), RealTimeClockDS1307_Data(BANK1[9]), 

    lcd_8bit_send_string_pos@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_2(BANK0[10]), 

    lcd_8bit_send_char_data@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_2(BANK0[10]), 

    lcd_8bit_send_command@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_2(BANK0[10]), 

    lcd_8bit_initialize@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_2(BANK0[10]), 


Critical Paths under _main in COMRAM

    _lcd_8bit_send_string_pos->_lcd_8bit_set_cursor
    _lcd_8bit_set_cursor->_lcd_8bit_send_command
    _lcd_8bit_send_char_data->_lcd_8bit_send_enable_signal
    _dc_motor_stop->_gpio_pin_write_logic
    _dc_motor_move_right->_gpio_pin_write_logic
    _convert_uint16_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _ecu_layer_intialize->_EUSART_ASYNC_Init
    _lcd_8bit_initialize->_lcd_8bit_send_command
    _lcd_8bit_send_command->_lcd_8bit_send_enable_signal
    _lcd_8bit_send_enable_signal->_gpio_pin_write_logic
    _dc_motor_initialize->_gpio_pin_intialize
    _gpio_pin_intialize->_gpio_pin_write_logic
    _EUSART_ASYNC_Init->_EUSART_Baud_Rate_Calculation
    _EUSART_Baud_Rate_Calculation->___fladd
    ___fltol->___flmul
    ___fldiv->___xxtofl
    ___fladd->___fldiv
    _ADC_Init->_adc_input_channel_port_configure
    ___flmul->___xxtofl
    _ADC_GetConversion_Blocking->_ADC_GetConversionResult
    _ADC_GetConversion_Blocking->_ADC_SelectChannel
    _ADC_SelectChannel->_adc_input_channel_port_configure

Critical Paths under _InterruptManagerHigh in COMRAM

    _CCP1_DefaultInterruptHandler->_CCP_Compare_Mode_Set_Value

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_convert_uint16_to_string

Critical Paths under _InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManagerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManagerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  105764
                                             93 COMRAM     1     1      0
         _ADC_GetConversion_Blocking
                            ___flmul
                            ___fltol
                            ___lwdiv
                           ___xxtofl
              _application_intialize
           _convert_uint16_to_string
                _dc_motor_move_right
                      _dc_motor_stop
              _lcd_8bit_send_command
           _lcd_8bit_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_8bit_send_string_pos                             7     1      6   29077
                                             38 COMRAM     7     1      6
            _lcd_8bit_send_char_data
                _lcd_8bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_set_cursor                                  7     3      4   13475
                                             32 COMRAM     6     2      4
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_send_char_data                              9     6      3   10839
                                             23 COMRAM     9     6      3
               _gpio_pin_write_logic
        _lcd_8bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (1) _dc_motor_stop                                        3     1      2    5285
                                             20 COMRAM     2     0      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _dc_motor_move_right                                  3     1      2    5133
                                             20 COMRAM     2     0      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _convert_uint16_to_string                            12     8      4   10594
                                              0 BANK1     12     8      4
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             22    16      6    7642
                                             73 COMRAM    20    14      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6796
                                             65 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           19    13      6    6335
                                             51 COMRAM    14     8      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                13     9      4    4768
                                             38 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2533
                                             27 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1177
                                             20 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     857
                                             11 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             17 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                             11 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                             11 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _memset                                              12     6      6    1827
                                             11 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (1) _application_intialize                                0     0      0   36093
                _ecu_layer_intialize
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_intialize                                  1     1      0   36093
                           _ADC_Init
                  _EUSART_ASYNC_Init
                _dc_motor_initialize
                _lcd_8bit_initialize
                   _usart_model_init
 ---------------------------------------------------------------------------------
 (3) _usart_model_init                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_initialize                                  6     4      2   20084
                                             32 COMRAM     6     4      2
                 _gpio_pin_intialize
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_command                                9     6      3   12815
                                             23 COMRAM     9     6      3
               _gpio_pin_write_logic
        _lcd_8bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (4) _lcd_8bit_send_enable_signal                          3     1      2    5112
                                             20 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _dc_motor_initialize                                  3     1      2    7044
                                             24 COMRAM     2     0      2
                 _gpio_pin_intialize
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_intialize                                   4     2      2    6802
                                             20 COMRAM     4     2      2
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                10     7      3    4891
                                             11 COMRAM     9     6      3
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_intialize                         9     7      2     559
                                             11 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_ASYNC_Init                                    3     1      2    8420
                                             78 COMRAM     2     0      2
               _EUSART_ASYNC_RX_Init
               _EUSART_ASYNC_TX_Init
       _EUSART_Baud_Rate_Calculation
 ---------------------------------------------------------------------------------
 (4) _EUSART_Baud_Rate_Calculation                        12    10      2    7727
                                             66 COMRAM    12    10      2
                            ___fladd
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___xxtofl                                            14    10      4     996
                                             11 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     761
                                             50 COMRAM    10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2575
                                             25 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             16     8      8    2976
                                             50 COMRAM    16     8      8
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) _EUSART_ASYNC_TX_Init                                 2     0      2     230
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_ASYNC_RX_Init                                 2     0      2     274
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _ADC_Init                                             4     2      2     539
                                             14 COMRAM     3     1      2
   _adc_input_channel_port_configure
        _configure_voltage_reference
               _select_result_format
 ---------------------------------------------------------------------------------
 (4) _select_result_format                                 2     0      2     120
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _configure_voltage_reference                          2     0      2     120
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     770
                                             11 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    2200
                                             25 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion_Blocking                           6     1      5    2040
                                             18 COMRAM     6     1      5
            _ADC_GetConversionResult
                  _ADC_SelectChannel
                _ADC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADC_StartConversion                                  3     1      2     199
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_SelectChannel                                    5     2      3     417
                                             14 COMRAM     4     1      3
   _adc_input_channel_port_configure
 ---------------------------------------------------------------------------------
 (4) _adc_input_channel_port_configure                     3     3      0      22
                                             11 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversionResult                              8     4      4     331
                                             11 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptManagerHigh                                4     4      0     928
                                              7 COMRAM     4     4      0
                            _ADC_ISR
                           _CCP1_ISR
                           _CCP2_ISR
                      _EUSART_Rx_ISR
                      _EUSART_Tx_ISR
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                    _MSSP_I2C_BC_ISR
                       _MSSP_I2C_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR3_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR2_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _RB7_ISR                                             1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _RB6_ISR                                             1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _RB5_ISR                                             1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _RB4_ISR                                             1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _MSSP_I2C_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _MSSP_I2C_BC_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _INT2_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _INT1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _INT0_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Tx_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Rx_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _CCP2_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _CCP1_ISR                                            0     0      0     752
                                NULL *
       _CCP1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _CCP1_DefaultInterruptHandler                        0     0      0     752
         _CCP_Compare_Mode_Set_Value
                 _Timer3_Write_value
 ---------------------------------------------------------------------------------
 (13) _Timer3_Write_value                                  5     1      4     243
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (13) _CCP_Compare_Mode_Set_Value                          8     4      4     509
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (12) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADC_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion_Blocking
     _ADC_GetConversionResult
     _ADC_SelectChannel
       _adc_input_channel_port_configure
     _ADC_StartConversion
   ___flmul
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
     ___xxtofl (ARG)
   ___lwdiv
   ___xxtofl
   _application_intialize
     _ecu_layer_intialize
       _ADC_Init
         _adc_input_channel_port_configure
         _configure_voltage_reference
         _select_result_format
       _EUSART_ASYNC_Init
         _EUSART_ASYNC_RX_Init
         _EUSART_ASYNC_TX_Init
         _EUSART_Baud_Rate_Calculation
           ___fladd
             ___fldiv (ARG)
               ___xxtofl (ARG)
           ___fldiv
           ___fltol
           ___xxtofl
       _dc_motor_initialize
         _gpio_pin_intialize
           _gpio_pin_direction_intialize
           _gpio_pin_write_logic
       _lcd_8bit_initialize
         _gpio_pin_intialize
         _lcd_8bit_send_command
           _gpio_pin_write_logic
           _lcd_8bit_send_enable_signal
             _gpio_pin_write_logic
       _usart_model_init
   _convert_uint16_to_string
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
   _dc_motor_move_right
     _gpio_pin_write_logic
   _dc_motor_stop
     _gpio_pin_write_logic
   _lcd_8bit_send_command
   _lcd_8bit_send_string_pos
     _lcd_8bit_send_char_data
       _gpio_pin_write_logic
       _lcd_8bit_send_enable_signal
     _lcd_8bit_set_cursor
       _lcd_8bit_send_command

 _InterruptManagerHigh (ROOT)
   _ADC_ISR
   _CCP1_ISR
     NULL(Fake) *
     _CCP1_DefaultInterruptHandler *
       _CCP_Compare_Mode_Set_Value
       _Timer3_Write_value
   _CCP2_ISR
   _EUSART_Rx_ISR
   _EUSART_Tx_ISR
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR
   _MSSP_I2C_BC_ISR
   _MSSP_I2C_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR
   _TMR0_ISR
   _TMR1_ISR
   _TMR2_ISR
   _TMR3_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      48        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      C      88       7       53.1%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      7E       5       98.4%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     5E      72       1       90.5%
BITBIGSFRhhlhhh     18      0       0      37        0.0%
BITBIGSFRhhh         D      0       0      36        0.0%
BITBIGSFRllhh        6      0       0      44        0.0%
BITBIGSFRhhlhhh      5      0       0      38        0.0%
BITBIGSFRlhhlhh      4      0       0      41        0.0%
BITBIGSFRlllh        4      0       0      45        0.0%
BITBIGSFRlhhlll      4      0       0      42        0.0%
BITBIGSFRllll        4      0       0      46        0.0%
BITBIGSFRlhhlhh      1      0       0      40        0.0%
BITBIGSFRhhlhhh      1      0       0      39        0.0%
BITBIGSFRlhl         1      0       0      43        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     178      47        0.0%
DATA                 0      0     178       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Feb 04 14:25:37 2024

                                ___fldiv@aexp 0032                                  ___fldiv@bexp 0031  
                                           _i 00C5                                  ___fldiv@sign 002A  
                                 _SSPSTATbits 0FC7                                  ___awdiv@sign 0011  
                                         l120 3358                                           l205 45F2  
                                         l134 3E7C                                           l127 3F0C  
                                         l215 3DEC                                           l234 4588  
                                         l511 3B4C                                           l239 4516  
                                         l159 3CA2                                           l513 3BF0  
                                         l249 44D8                                           l186 3B34  
                                         l523 45BE                                           l526 467E  
                                         l454 4552                                           l527 4684  
                                         l528 4686                                           l553 415C  
                                         l546 3A78                                           l556 4182  
                                         l590 4362                                           l478 445A  
                                         l823 3100                                           l584 4416  
                                         l594 4384                                           l586 4418  
                                         l842 347C                                           l579 3756  
                                         l597 438C                                           l599 4390  
                                         l863 4260           __end_of_configure_voltage_reference 4392  
                 _configure_voltage_reference 4348                                           _abs 445C  
                      ??_InterruptManagerHigh 0008                                           _pad 4022  
                   _RB5_InterruptHandler_HIGH 00AA                               __end_of_ADC_ISR 4766  
                                         _ret 00EF                                  ___awmod@sign 0011  
                         led_initialize@F3048 006A                                           prod 0FF3  
                   ?_lcd_8bit_send_string_pos 0027                         relay_initialize@F3042 0066  
                                         tosl 0FFD                                           wreg 0FE8  
                 __end_of_lcd_8bit_set_cursor 3DEE                                  ___flmul@aexp 002B  
                                ___flmul@bexp 002C                                  ___flmul@sign 0026  
                                ___flmul@temp 0031                                  ___flmul@prod 002D  
                   ?_convert_uint16_to_string 017C                               __end_of_RB4_ISR 46F0  
                             __end_of_RB5_ISR 46D6                               __end_of_RB6_ISR 46BC  
                             __end_of_RB7_ISR 46A2  _I2C_Report_Receive_Overflow_InterruptHandler 00B6  
                                ___fltol@exp1 003C                                          ?_abs 0012  
                                        l2041 3D52                                          l2028 39B8  
                                        l2411 2000                                          l2420 226E  
                                        l2421 225C                                          l2325 1C6A  
                                        l2342 1D84                                          l2334 1F3A  
                                        l2326 1C58                                          l2094 3582  
                                        l2415 2364                                          l1703 382A  
                                        l2351 1E54                                          l2327 1C1E  
                                        l2511 409A                                          l1712 365E  
                                        l2352 1E42                                          l2418 21F6  
                                        l1634 4346                                          l2530 2E4E  
                                        l2507 4044                                          l2428 2326  
                                        l2452 2B5C                                          l2516 2D02  
                                        l2381 2964                                          l1718 367E  
                                        l2390 29AA                                          l2550 449A  
                                        l2518 2D0A                                          l2295 410E  
                                        l2455 2CB8                                          l2519 2D50  
                                        l2543 42B0                                          l2288 4106  
                                        l2392 2A22                                          l2384 2928  
                                        l1680 15A2                                          l2472 2FC4  
                                        l2393 2A10                                          l2537 322C  
                                        l2466 2C50                                          l1682 165A  
                                        l2562 38F4                                          l2570 43D4  
                                        l2379 2B04                                          l2459 2BF4  
                                        l1683 1712                                          l2547 4492  
                                        l1684 17CA                                          l1685 1882  
                                        l2573 4766                                          l2485 42FC  
                                        l1686 1938                                          l1688 1A7A  
                                        l1697 380A                                          l1794 4740  
                                        l7101 36AA                                          ?_pad 001C  
                                        l7111 36C8                                          l7103 36B0  
                                        l7113 36CE                                          l7105 36B6  
                                        l7201 3602                                          l7107 36BC  
                                        l7131 4348                                          l7123 43D6  
                                        l7211 3658                                          l7203 361C  
                                        l6411 335A                                          l7051 4208  
                                        l7109 36C2                                          l7117 36D4  
                                        l8101 209C                                          l7133 436A  
                                        l7125 43F0                                          l7205 361E  
                                        l7213 3662                                          l7141 1660  
                                        l6421 33EE                                          l6413 335A  
                                        l7053 422A                                          l7301 4586  
                                        l7061 3E7E                                          l8111 20E2  
                                        l8103 20AA                                          l7127 43F6  
                                        l7215 367C                                          l7207 3638  
                                        l7151 1826                                          l7143 16B6  
                                        l7135 158E                                          l6415 336C  
                                        l7055 4232                                          l7047 41F6  
                                        l7063 3E82                                          l7311 452A  
                                        l8121 2150                                          l8113 20FC  
                                        l8105 20B6                                          l7129 4410  
                                        l7401 3BD0                                          l7209 363E  
                                        l6601 1B32                                          l7153 1886  
                                        l7145 1718                                          l7137 15A8  
                                        l7161 19EE                                          l6425 3450  
                                        l6417 338E                                          l7057 425E  
                                        l7049 41F6                                          l7081 3EFC  
                                        l7065 3E94                                          l7321 453A  
                                        l7313 452C                                          l7305 4518  
                                        l7091 368C                                          l8131 21E6  
                                        l8123 217A                                          l8115 210C  
                                        l8107 20C6                                          l8051 1F56  
                                        l7403 3BDC                                          l7171 3772  
                                        l6611 1B6E                                          l6603 1B42  
                                        l7155 18DC                                          l7147 176E  
                                        l7163 1A44                                          l7139 15FE  
                                        l6419 3392                                          l6427 347A  
                                        l7075 3EB0                                          l7083 3F0A  
                                        l7067 3E9C                                          l7251 3244  
                                        l7323 4542                                          l7315 452E  
                                        l7307 4526                                          l7093 3692  
                                        l8141 2226                                          l8133 21F4  
                                        l8125 21B0                                          l8117 2128  
                                        l8109 20D2                                          l8061 1F8E  
                                        l8053 1F58                                          l7405 3BE8  
                                        l7181 37CA                                          l7173 3774  
                                        l6701 1D74                                          l6621 1B8C  
                                        l6613 1B7C                                          l6605 1B44  
                                        l7157 193C                                          l7149 17D0  
                                        l6541 2FFE                                          l6533 2FC6  
                                        l7077 3EEA                                          l7069 3EAC  
                                        l7261 3270                                          l7253 324C  
                                        l7325 454A                                          l7317 4530  
                                        l7309 4528                                          l8045 473C  
                                        l7095 3698                                          l7087 3682  
                                        l8151 2298                                          l8143 2254  
                                        l8135 2206                                          l8127 21BE  
                                        l8119 2134                                          l8071 1FBA  
                                        l8063 1F9E                                          l8055 1F68  
                                        l8047 1F3C                                          l7191 3828  
                                        l7183 37E4                                          l7175 37A2  
                                        l6711 1DC8                                          l6703 1D9A  
                                        l6631 1BA0                                          l6623 1B90  
                                        l6615 1B80                                          l6607 1B4C  
                                        l7159 1992                                          l6543 3060  
                                        l6535 2FC6                                          l7079 3EEC  
                                        l7271 32BE                                          l7263 328C  
                                        l7255 326C                                          l7247 322E  
                                        l7319 4532                                          l7097 369E  
                                        l7089 3686                                          l8161 230E  
                                        l8153 22C2                                          l8137 2214  
                                        l8129 21DC                                          l8081 2010  
                                        l8073 1FCA                                          l8065 1FA4  
                                        l8057 1F78                                          l8049 1F48  
                                        l7409 3BEE                                          l7193 3584  
                                        l7185 37EA                                          l7177 37AE  
                                        l7169 3758                                          l6721 1DF2  
                                        l6713 1DD6                                          l6705 1DAA  
                                        l6641 1BB4                                          l6633 1BA4  
                                        l6625 1B94                                          l6617 1B84  
                                        l6609 1B5C                                          l6801 281E  
                                        l7361 42FE                                          l6537 2FD8  
                                        l6561 45D4                                          l7281 3314  
                                        l7273 32DE                                          l7265 328E  
                                        l7249 3232                                          l7611 39E2  
                                        l7603 39BA                                          l7099 36A4  
                                        l8163 232A                                          l8171 2350  
                                        l8147 227E                                          l8155 22C6  
                                        l8139 2218                                          l8091 204A  
                                        l8083 2020                                          l8075 1FDA  
                                        l8067 1FAA                                          l8059 1F88  
                                        l7195 359E                                          l7187 3804  
                                        l7179 37C8                                          l6731 1E24  
                                        l6723 1E02                                          l6715 1DD8  
                                        l6651 1C06                                          l6643 1BB8  
                                        l6635 1BA8                                          l6627 1B98  
                                        l6619 1B88                                          l6571 1A96  
                                        l6811 285E                                          l6803 2820  
                                        l7371 4324                                          l7363 4310  
                                        l6547 30BC                                          l6539 2FFA  
                                        l6563 45DA                                          l7283 3324  
                                        l7275 32E4                                          l7267 329E  
                                        l7613 39FC                                          l7605 39BA  
                                        l8173 2354                                          l8165 233A  
                                        l8157 22E0                                          l8149 228A  
                                        l8093 2060                                          l8077 1FEA  
                                        l8069 1FB8                                          l8181 40B6  
                                        l7381 3B36                                          l7197 35A0  
                                        l7189 380E                                          l6741 1E7E  
                                        l6733 1E3A                                          l6717 1DE6  
                                        l6709 1DBE                                          l6725 1E04  
                                        l6661 1C4A                                          l6653 1C16  
                                        l6637 1BAC                                          l6629 1B9C  
                                        l6645 1BBC                                          l6581 1ACA  
                                        l6573 1A98                                          l6821 288E  
                                        l6813 2866                                          l6805 2828  
                                        l7373 433E                                          l7365 4314  
                                        l6549 30FE                                          l7293 4554  
                                        l6557 45C0                                          l7285 3334  
                                        l7277 32F4                                          l7269 32AE  
                                        l7461 3E04                                          l7615 3A24  
                                        l7623 3A76                                          l7607 39CC  
                                        l8167 2348                                          l8159 22F4  
                                        l8095 206C                                          l8087 2034  
                                        l8079 1FF0                                          l8191 40F0  
                                        l8183 40BE                                          l7391 3BB8  
                                        l7383 3B36                                          l7199 35F6  
                                        l6751 1EFA                                          l6743 1EB8  
                                        l6719 1DEE                                          l6727 1E12  
                                        l6663 1C4C                                          l6655 1C2C  
                                        l6647 1BC0                                          l6639 1BB0  
                                        l6591 1AFC                                          l6575 1AA8  
                                        l6583 1AD2                                          l6567 1A7C  
                                        l6831 28CC                                          l6823 288E  
                                        l6815 286A                                          l6807 2838  
                                        l7367 4320                                          l7359 42FE  
                                        l7295 4554                                          l6559 45C0  
                                        l7287 3344                                          l7279 3304  
                                        l7711 44DA                                          l7471 3E20  
                                        l7463 3E0C                                          l7617 3A3E  
                                        l7609 39DE                                          l8169 234A  
                                        l8097 2084                                          l8089 2040  
                                        l8193 40F8                                          l8185 40C6  
                                        l8177 409C                                          l7393 3BBA  
                                        l7385 3B48                                          l6761 1F1A  
                                        l6753 1EFE                                          l6737 1E64  
                                        l6745 1EBA                                          l6729 1E16  
                                        l6681 1CD4                                          l6673 1C9C  
                                        l6665 1C56                                          l6657 1C38  
                                        l6649 1BEA                                          l6593 1B02  
                                        l6585 1AE2                                          l6577 1AB8  
                                        l6569 1A88                                          l6841 2918  
                                        l6833 28DC                                          l6809 284E  
                                        l6921 34E8                                          l6913 34A8  
                                        l7369 4322                                          l7377 4344  
                                        l7297 4566                                          l7289 3356  
                                        l7713 44EC                                          l7721 449C  
                                        l7473 3E5A                                          l7465 3E1C  
                                        l7457 3DEE                                          l8099 2090  
                                        l8195 40FA                                          l8187 40D4  
                                        l8179 40A4                                          l7395 3BBC  
                                        l7387 3B4E                                          l6763 1F28  
                                        l6755 1F0C                                          l6747 1ECA  
                                        l6739 1E70                                          l6683 1CD8  
                                        l6675 1CAC                                          l6667 1C78  
                                        l6691 1CF8                                          l6659 1C3C  
                                        l6595 1B10                                          l6587 1AE8  
                                        l6579 1AC8                                          l6851 2962  
                                        l6843 2926                                          l6835 28EC  
                                        l6827 28A2                                          l6819 287E  
                                        l6771 2778                                          l6931 3518  
                                        l6923 34F6                                          l6915 34D2  
                                        l6907 347E                                          l7299 456A  
                                        l7571 4436                                          l7563 441A  
                                        l7715 44F0                                          l7723 449C  
                                        l7475 3E5C                                          l7459 3DF2  
                                        l7491 3D86                                          l7483 3D54  
                                        l7581 459C                                          l8197 4100  
                                        l8189 40DA                                          l7397 3BBE  
                                        l7389 3BA6                                          l6765 1F2A  
                                        l6757 1F12                                          l6749 1EDA  
                                        l6693 1D1E                                          l6685 1CE6  
                                        l6677 1CBA                                          l6669 1C88  
                                        l6597 1B12                                          l6589 1AFA  
                                        l6861 29A8                                          l6853 2974  
                                        l6845 2932                                          l6837 28F4  
                                        l6829 28BC                                          l6781 27B8  
                                        l6773 2786                                          l6941 3542  
                                        l6933 3522                                          l6917 34D4  
                                        l6909 3494                                          l7573 4442  
                                        l7565 441A                                          l7717 4514  
                                        l7709 44DA                                          l7725 44AE  
                                        l7477 3E6C                                          l7493 3D9C  
                                        l7485 3D54                                          l7583 45A0  
                                        l7399 3BC0                                          l6759 1F14  
                                        l6695 1D52                                          l6687 1CE8  
                                        l6679 1CC8                                          l6599 1B22  
                                        l6871 2A08                                          l6855 298A  
                                        l6863 29BA                                          l6847 2950  
                                        l6839 2904                                          l6791 27DE  
                                        l6783 27BA                                          l6775 2788  
                                        l6943 3552                                          l6919 34E4  
                                        l6951 2B08                                          l7575 444E  
                                        l7567 441E                                          l7727 44B2  
                                        l7479 3E7A                                          l7487 3D5A  
                                        l7495 3DB2                                          l7671 3C1E  
                                        l7663 3BF2                                          l7585 45B2  
                                        l7577 458A                                          l7593 4668  
                                        l7841 4134                                          l6697 1D54  
                                        l6689 1CF2                                          l6881 2A76  
                                        l6865 29C8                                          l6857 2990  
                                        l6849 2952                                          l6793 27EC  
                                        l6777 2798                                          l6785 27C2  
                                        l6769 276C                                          l6945 3562  
                                        l6929 350E                                          l6953 2B18  
                                        l7569 442A                                          l7729 44D6  
                                        l7489 3D70                                          l7673 3C38  
                                        l7665 3BF2                                          l7579 458A  
                                        l7595 4668                                          l7843 413C  
                                        l7835 4110                                          l6699 1D64  
                                        l6891 2AE0                                          l6875 2A32  
                                        l6883 2A7A                                          l6867 29CC  
                                        l6859 299A                                          l6795 27EE  
                                        l6787 27D2                                          l6779 27A8  
                                        l6947 3572                                          l6939 3536  
                                        l6971 2BDE                                          l6963 2B96  
                                        l6955 2B26                                          l7675 3C6A  
                                        l7667 3C04                                          l7589 45BC  
                                        l7597 467A                                          l7845 416A  
                                        l7837 4110                                          l6893 2AE4  
                                        l6885 2A94                                          l6877 2A3E  
                                        l6869 29DA                                          l6797 27FE  
                                        l6789 27D8                                          l6981 2C5E  
                                        l6973 2BEA                                          l6965 2B9E  
                                        l6957 2B6C                                          l9701 38AE  
                                        l7677 3C6E                                          l7669 3C16  
                                        l7847 4180                                          l7839 4122  
                                        l6895 2AF2                                          l6887 2AAA  
                                        l6879 2A4C                                          l6799 280E  
                                        l6991 2CA6                                          l6983 2C60  
                                        l6975 2C26                                          l6967 2BAA  
                                        l6959 2B82                                          l9711 43B4  
                                        l7679 3CA0                                          l6897 2AF8  
                                        l6889 2AC4                                          l6993 2CA8  
                                        l6985 2C64                                          l6977 2C32  
                                        l6969 2BDC                                          l9721 3914  
                                        l9713 38F6                                          l9705 4392  
                                        l9801 4064                                          l6899 2AFA  
                                        l6987 2C88                                          l6979 2C40  
                                        l9731 3948                                          l9723 3922  
                                        l9715 38FA                                          l9707 439E  
                                        l9803 4068                                          l9811 2CBA  
                                        l6989 2C98                                          l9901 2E50  
                                        l9741 3982                                          l9733 3950  
                                        l9725 392A                                          l9717 3908  
                                        l9709 43B0                                          l9805 4086  
                                        l9821 2D12                                          l9813 2CCE  
                                        l9911 2EB0                                          l9751 39A8  
                                        l9743 398A                                          l9735 3958  
                                        l9727 392E                                          l9719 3910  
                                        l9807 445C                                          l9831 2D4C  
                                        l9823 2D22                                          l9815 2CDE  
                                        l9913 2F08                                          l9905 2E6E  
                                        l9753 39B0                                          l9745 398C  
                                        l9737 3966                                          l9729 3936  
                                        l9761 3CB6                                          l9809 4476  
                                        l9841 2DA0                                          l9833 2D58  
                                        l9825 2D28                                          l9817 2CE6  
                                        l9931 2FB2                                          l9923 2F68  
                                        l9907 2E7A                                          l9747 3992  
                                        l9739 396C                                          l9771 3CEA  
                                        l9763 3CBE                                          l9691 382C  
                                        l9851 2E08                                          l9843 2DA6  
                                        l9835 2D62                                          l9827 2D38  
                                        l9819 2CF6                                          l9925 2F9C  
                                        l9917 2F22                                          l9749 3998  
                                        l9781 3D26                                          l9773 3CF2  
                                        l9765 3CC2                                          l9757 3CA4  
                                        l9693 383E                                          l9853 2E18  
                                        l9837 2D68                                          l9845 2DC2  
                                        l9829 2D44                                          l9861 3102  
                                        l9941 42EE                                          l9933 42B2  
                                        l9927 2FA8                                          l9919 2F4E  
                                        l9783 3D2C                                          l9775 3CFA  
                                        l9767 3CD0                                          l9759 3CA8  
                                        l9695 3850                                          l9855 2E1E  
                                        l9847 2DDC                                          l9839 2D9A  
                                        l9871 3158                                          l9863 3128  
                                        l9935 42C2                                          l9951 3A90  
                                        STR_1 1059                                          STR_2 1059  
                                        l9929 2FAE                                          l9777 3D08  
                                        l9785 3D32                                          l9769 3CD8  
                                        l9697 385A                                          l9793 4022  
                                        l9857 2E2E                                          l9849 2DEE  
                                        l9881 31F0                                          l9873 3176  
                                        l9865 3136                                          l9937 42CA  
                                        l9961 3AF6                                          l9953 3AA2  
                                        l9945 3A7A                                          STR_4 1051  
                                        l9787 3D42                                          l9779 3D1E  
                                        l9699 3878                                          l9795 4030  
                                        l9875 3194                                          l9867 3144  
                                        l9891 4262                                          l9939 42D2  
                                        l9963 3B12                                          l9955 3AAA  
                                        l9947 3A80                                          STR_5 1049  
                                        STR_6 1027                                          l9789 3D4A  
                                        l9797 403C                                          l9877 31D8  
                                        l9869 3148                                          l9885 3202  
                                        l9893 426E                                          l9965 3B14  
                                        l9957 3AC6                                          l9949 3A8C  
                                        STR_7 1027                                          STR_8 1041  
                                        l9799 4050                                          l9895 428A  
                                        l9959 3AD6                                          l9967 3B32  
                                        STR_9 1027                                          l9897 42A8  
                                        _LATA 0F89                                          _LATB 0F8A  
                                        _LATC 0F8B                                          _LATD 0F8C  
                                        _LATE 0F8D                                          u5100 1B32  
                                        u5020 30D4                                          u5004 301E  
                                        u5101 1B2E                                          u5021 30CE  
                                        u5005 301A                                          u5110 1B6E  
                                        u5030 30D6                                          u5014 3080  
                                        u5111 1B6A                                          u5015 307C  
                                        u6000 4362                                          u5200 1C88  
                                        u5120 1B7C                                          u5040 1A96  
                                        u6001 435E                                          u5201 1C84  
                                        u5121 1B78                                          u5041 1A92  
                                        u6010 4384                                          u5210 1CBA  
                                        u5130 1BEA                                          u5050 1AA8  
                                        u6011 4380                                          u5211 1CB6  
                                        u5131 1BE6                                          u5051 1AA4  
                                        u6100 361C                                          u6020 3772  
                                        u5300 1E02                                          u5220 1CC8  
                                        u5140 1C02                                          u5060 1AB8  
                                        u6101 3618                                          u6021 376E  
                                        u5301 1DFE                                          u5221 1CC4  
                                        u5141 1BFC                                          u5061 1AB4  
                                        u6110 3638                                          u6030 37A2  
                                        u5310 1E12                                          u5230 1CE6  
                                        u5150 1C04                                          u5070 1AFA  
                                        u6111 3634                                          u6031 379E  
                                        u5311 1E0E                                          u5231 1CE2  
                                        u5071 1AF6                                          u7000 2298  
                                        u6120 3658                                          u6040 37C8  
                                        u5400 1EFA                                          u5320 1E24  
                                        u5240 1D1E                                          u5160 1C2C  
                                        u5080 1B10                                          u7001 2294  
                                        u6121 3654                                          u6041 37C4  
                                        u5401 1EF6                                          u5321 1E20  
                                        u5241 1D1A                                          u5161 1C28  
                                        u5081 1B0C                                          u7010 22E0  
                                        u6130 367C                                          u6050 37E4  
                                        u5410 1F0C                                          u5330 1E3A  
                                        u5250 1D64                                          u5170 1C4A  
                                        u5090 1B22                                          u7011 22DC  
                                        u6131 3678                                          u6051 37E0  
                                        u5411 1F08                                          u5331 1E36  
                                        u5251 1D60                                          u5171 1C46  
                                        u5091 1B1E                                          u7020 230E  
                                        u6060 3804                                          u5420 1F28  
                                        u5340 1E50                                          u5260 1D9A  
                                        u5180 1C6A                                          u5500 288E  
                                        u6300 3E6C                                          u7021 230A  
                                        u6061 3800                                          u5421 1F24  
                                        u5341 1E4C                                          u5261 1D96  
                                        u5181 1C66                                          u5501 288A  
                                        u6301 3E68                                          u7030 2348  
                                        u6070 3828                                          u5350 1E64  
                                        u5270 1DAA                                          u5190 1C78  
                                        u5510 2904                                          u5430 2786  
                                        u7031 2344                                          u6071 3824  
                                        u5351 1E60                                          u5271 1DA6  
                                        u5191 1C74                                          u5511 2900  
                                        u5431 2782                                          u6400 39CC  
                                        u7040 40B6                                          u6080 359E  
                                        u5360 1E7E                                          u5280 1DD6  
                                        u5600 2A1E                                          u5520 2926  
                                        u5440 2798                                          u6240 4310  
                                        u4800 338E                                          u6401 39C8  
                                        u7041 40B2                                          u6081 359A  
                                        u5361 1E7A                                          u5281 1DD2  
                                        u5601 2A1A                                          u5521 2922  
                                        u5441 2794                                          u6241 430C  
                                        u4801 338A                                          u6410 39DE  
                                        u7050 40D4                                          u6250 3B48  
                                        u6090 35F6                                          u5370 1EB8  
                                        u5290 1DE6                                          u5610 2A32  
                                        u5530 2950                                          u5450 27A8  
                                        u6170 3244                                          u6411 39DA  
                                        u7051 40D0                                          u6251 3B44  
                                        u6091 35F2                                          u5371 1EB4  
                                        u5291 1DE2                                          u5611 2A2E  
                                        u5531 294C                                          u5451 27A4  
                                        u6171 3240                                          u6420 39FC  
                                        u7060 40F0                                          u5380 1ECA  
                                        u5620 2A4C                                          u5540 2974  
                                        u5460 27EC                                          u5700 3532  
                                        u6180 329E                                          u6500 3C62  
                                        u6421 39F8                                          u7061 40EC  
                                        u5381 1EC6                                          u5621 2A48  
                                        u5541 2970                                          u5461 27E8  
                                        u5701 352E                                          u6181 329A  
                                        u6430 3A3E                                          u5390 1EDA  
                                        u5630 2A94                                          u5550 298A  
                                        u5470 27FE                                          u5710 3552  
                                        u4814 33B2                                          u6190 4566  
                                        u6510 3C90                                          u6431 3A3A  
                                        u5391 1ED6                                          u5631 2A90  
                                        u5551 2986                                          u5471 27FA  
                                        u5711 354E                                          u4815 33AE  
                                        u6191 4562                                          u5640 2AC4  
                                        u5560 29A8                                          u5480 280E  
                                        u5720 3562                                          u5800 2C5E  
                                        u4824 340E                                          u9000 3D1E  
                                        u6280 3E04                                          u6520 3CA0  
                                        u5641 2AC0                                          u5561 29A4  
                                        u5481 280A                                          u5721 355E  
                                        u5801 2C5A                                          u4825 340A  
                                        u9001 3D1A                                          u6281 3E00  
                                        u6521 3C9C                                          u5650 2AF2  
                                        u5570 29C8                                          u5490 284E  
                                        u5810 2C98                                          u5730 2B18  
                                        u9010 3D42                                          u5651 2AEE  
                                        u5571 29C4                                          u5491 284A  
                                        u5811 2C94                                          u5731 2B14  
                                        u9011 3D3E                                          u6507 3C58  
                                        u6380 459C                                          u5580 29DA  
                                        u5660 3494                                          u5820 2CA6  
                                        u5740 2B26                                          u9020 4030  
                                        u9100 2D38                                          u6445 3A56  
                                        u6381 4598                                          u5581 29D6  
                                        u5661 3490                                          u5821 2CA2  
                                        u5741 2B22                                          u9021 402C  
                                        u9101 2D34                                          u6517 3C86  
                                        u6390 467A                                          u5590 2A08  
                                        u5670 34C8                                          u5750 2B82  
                                        u4790 336C                                          u9030 4086  
                                        u9110 2DDC                                          u6294 3E4A  
                                        u6391 4676                                          u5591 2A04  
                                        u5751 2B7E                                          u4791 3368  
                                        u9031 4082                                          u9111 2DD8  
                                        u6295 3E46                                          u5680 34F6  
                                        u5760 2BD8                                          u9200 2EAC  
                                        u9040 4476                                          u9120 2DEE  
                                        u6560 44EC                                          u6480 3C04  
                                        u5681 34F2                                          u5761 2BD4  
                                        u9201 2EA8                                          u9041 4472  
                                        u9121 2DEA                                          u6561 44E8  
                                        u6481 3C00                                          u6730 4122  
                                        u5690 350A                                          u5770 2C22  
                                        u5930 4208                                          u9210 2F1E  
                                        u9130 2E08                                          u9050 2CCA  
                                        u6570 44AE                                          u6490 3C16  
                                        u6731 411E                                          u5691 3506  
                                        u5675 34BE                                          u5771 2C1E  
                                        u5931 4204                                          u9211 2F1A  
                                        u9131 2E04                                          u9051 2CC4  
                                        u6571 44AA                                          u6491 3C12  
                                        u6740 4134                                          u6900 1FDA  
                                        u5780 2C40                                          u4980 2FD8  
                                        u5940 422A                                          u9220 2F64  
                                        u9140 2E18                                          u9060 2CCC  
                                        u6741 4130                                          u6901 1FD6  
                                        u5781 2C3C                                          u4981 2FD4  
                                        u5941 4226                                          u9221 2F60  
                                        u9141 2E14                                          u6750 416A  
                                        u6910 2010                                          u5790 2C50  
                                        u4990 2FFA                                          u5950 3E94  
                                        u9230 2FC4                                          u9070 2CDE  
                                        u9150 3128                                          u6751 4166  
                                        u6911 200C                                          u5791 2C4C  
                                        u4991 2FF6                                          u5951 3E90  
                                        u9231 2FC0                                          u9071 2CDA  
                                        u9151 3124                                          u6920 2020  
                                        u9080 2CF6                                          u9160 3176  
                                        u9320 116C                                          u6921 201C  
                                        u9081 2CF2                                          u9161 3172  
                                        u9241 3A86                                          u9321 1168  
                                        u6930 219A                                          u6850 1F56  
                                        u5970 3EFC                                          u9090 2D22  
                                        u9170 3194                                          u9250 3AA2  
                                        u9330 1184                                          u6851 1F52  
                                        u5971 3EF8                                          u9091 2D1E  
                                        u9171 3190                                          u9251 3A9E  
                                        u9331 1180                                          u6940 21F4  
                                        u6860 1F68                                          u5980 43F0  
                                        u5964 3EDA                                          u9180 42A8  
                                        u9260 3B32                                          u9340 12DA  
                                        u6941 21F0                                          u6861 1F64  
                                        u5981 43EC                                          u5965 3ED6  
                                        u9181 42A4                                          u9261 3B2E  
                                        u9341 12D6                                          u6950 2214  
                                        u6870 1F78                                          u5990 4410  
                                        u9190 2E6A                                          u9350 1312  
                                        u6951 2210                                          u6935 2190  
                                        u6871 1F74                                          u5991 440C  
                                        u9407 32E0                                          u9191 2E66  
                                        u9351 130E                                          u6960 2226  
                                        u6880 1FB8                                          u9360 146A  
                                        u6961 2222                                          u6881 1FB4  
                                        u9361 1466                                          u6970 2254  
                                        u6890 1FCA                                          u6971 2250  
                                        u6891 1FC6                                          u6980 226A  
                                        u8900 3908                                          u6981 2266  
                                        u8901 3904                                          u6990 227E  
                                        u8910 3922                                          u6991 227A  
                                        u8911 391E                                          u8920 3948  
                                        u8921 3944                                          u9377 114C  
                                        u8930 3966                                          u8850 383E  
                                        u9387 32A4                                          u8931 3962  
                                        u8851 383A                                          u8940 3982  
                                        u8860 3850                                          u9397 32C4  
                                        u8941 397E                                          u8861 384C  
                                        u8950 39A8                                          u8870 3878  
                                        u8951 39A4                                          u8871 3874  
                                        u8960 3CB6                                          u8880 38AE  
                                        u8961 3CB2                                          u8881 38AA  
                                        u8970 3CD0                                          u8890 43D4  
                                        u8971 3CCC                                          u8891 43D0  
                                        u8980 3CEA                                          u8981 3CE6  
                                        u8990 3D08                                          u8991 3D04  
                                        _TMR2 0FCC                       ??_application_intialize 0051  
                    _RB4_InterruptHandler_LOW 00AC                                          abs@a 0012  
                                        _dbuf 011E                                          _main 105E  
                                        _dtoa 2CBA                              __end_of_CCP1_ISR 4624  
                            __end_of_CCP2_ISR 4762                                          _prec 0088  
                    _RB7_InterruptHandler_LOW 00A0                                          pad@i 0023  
                                        pad@p 0020                                          fsr0h 0FEA  
                                        fsr1h 0FE2                                          indf0 0FEF  
                                        fsr2h 0FDA                                          fsr0l 0FE9  
                                        indf1 0FE7                                          indf2 0FDF  
                                        fsr1l 0FE1                                          pad@w 0025  
                                        fsr2l 0FD9                                          btemp 0073  
                            __end_of_ADC_Init 3BF2                                          prodh 0FF4  
                                        prodl 0FF3                                          start 0006  
                             ___fldiv@new_exp 002B                 __end_of_lcd_8bit_send_command 3F0E  
                                ___param_bank 0000                                         ??_abs 0014  
                        _gpio_pin_write_logic 335A                                         ??_pad 0022  
                            __end_of_INT0_ISR 475A                              __end_of_INT1_ISR 4756  
                            __end_of_INT2_ISR 4752                                         l10011 105E  
                                       l10021 1126                                         l10013 1062  
                                       l10031 1198                                         l10023 1146  
                                       l10015 107E                                         l10201 3DC6  
                                       l10041 125C                                         l10033 11B8  
                                       l10025 1156                                         l10017 10EC  
                                       l10203 3464                                         l10043 127C  
                                       l10035 11D4                                         l10027 116C  
                                       l10051 12C4                                         l10019 1106  
                                       l10205 30E8                                         l10061 1326  
                                       l10053 12DA                                         l10037 1226  
                                       l10029 1184                                         l10045 1280  
                                       l10207 1A0E                                         l10071 13EA  
                                       l10063 1346                                         l10055 12E2  
                                       l10047 12A0                                         l10039 1242  
                                       l10209 36E8                                         l10081 144A  
                                       l10073 140A                                         l10065 1362  
                                       l10057 12F2                                         l10049 12B0  
                                       l10091 150C                                         l10083 146A  
                                       l10067 13B4                                         l10059 1312  
                                       l10075 140E                                         l10093 1528  
                                       l10085 147E                                         l10069 13D0  
                                       l10077 1432                                         l10095 1542  
                                       l10087 149E                                         l10079 143A  
                                       l10097 1562                                         l10089 14BA  
                                       l10099 1566                                 ___fltol@sign1 003B  
                             __end_of___fladd 1F3C                                         ?_main 0001  
                                       ?_dtoa 0027                               __end_of___fldiv 2B06  
                             __end_of___awdiv 39BA                                         _EEADR 0FA9  
                                       STR_10 1036                                         STR_11 1027  
                                       STR_12 1011                               __end_of___awmod 3D54  
                             __end_of___flmul 2366                               __end_of___fltol 3584  
                             ___awdiv@divisor 000E                               __end_of___lwdiv 4110  
                                       i2l604 4764                                         i2l464 4020  
                                       i2l650 4622                                         i2l645 4760  
                                       i2l691 419A                                         i2l692 41F2  
                                       i2l696 41F4                               ___awdiv@counter 0010  
                                       _RCREG 0FAE                           relay_turn_off@F3052 0064  
                                vfpfcnvrt@fmt 0036                                         _TMR0H 0FD7  
                                       _TMR1H 0FCF                                         _TMR0L 0FD6  
                                       _TMR1L 0FCE                                         _TMR3H 0FB3  
                                       _TMR3L 0FB2                                         _SPBRG 0FAF  
                                       _PORTA 0F80                                         _PORTB 0F81  
                                       _PORTC 0F82                                         _PORTD 0F83  
                                       _PORTE 0F84                                 _EUSART_Rx_ISR 4768  
                                       _TRISA 0F92                                         _TRISB 0F93  
                                       _TRISC 0F94                                         _TRISD 0F95  
                                       _TRISE 0F96                                 _EUSART_Tx_ISR 475A  
                                       _TXREG 0FAD                              __end_of_TMR0_ISR 4734  
                            __end_of_TMR1_ISR 4726                              __end_of_TMR2_ISR 473C  
                                       _adc_1 0175                              __end_of_TMR3_ISR 4718  
                                       _lcd_1 016F                                         _lcd_2 00F0  
                                       _flags 00C4                                         _fputc 382C  
                                       _fputs 4392                      ?_lcd_8bit_send_char_data 0018  
                                       pad@fp 001C                                         _width 0086  
                                       _putch 4766                                         dtoa@d 0029  
                                       dtoa@i 0032                                         dtoa@p 002D  
                                       dtoa@s 0031                                         dtoa@w 002F  
                                       pclath 0FFA                                         pclatu 0FFB  
                                       tablat 0FF5            CCP_Compare_Mode_Set_Value@_ccp_obj 0001  
                                       ttemp5 0074                                         ttemp6 0077  
                                       ttemp7 007B                                         status 0FD8  
                                       wtemp8 0074                               __end_of_sprintf 42FE  
                 _I2C_DefaultInterruptHandler 00B8                               __initialization 3F0E  
                                __end_of_main 158E                                  __end_of_dtoa 2E50  
                       ?_gpio_pin_write_logic 000C                                     ??_ADC_ISR 0001  
                      lcd_8bit_set_cursor@lcd 0021                        lcd_8bit_set_cursor@row 0023  
                               _lat_registers 00E5                   __end_of_dc_motor_initialize 458A  
         lcd_8bit_send_command@l_pins_counter 0020                                        ??_main 005E  
                                      ??_dtoa 002B                                 __activetblptr 0003  
                              ?_EUSART_Rx_ISR 0001                                ?_EUSART_Tx_ISR 0001  
                            led_turn_on@F3053 0069                             ?_usart_model_init 0001  
                                   ??_RB4_ISR 0001                                     ??_RB5_ISR 0001  
                                   ??_RB6_ISR 0001                                     ??_RB7_ISR 0001  
                          ??_usart_model_init 000C                    _EUSART_OverrunErrorHandler 008A  
                                      ?_fputc 000C                                        ?_fputs 0015  
                                      _ADRESH 0FC4                                        _EEADRH 0FAA  
                                      _ADRESL 0FC3                                        _EEDATA 0FA8  
                                      _CCPR1H 0FBF                                        _CCPR2H 0FBC  
                                      _CCPR1L 0FBE                                        _CCPR2L 0FBB  
                                      _EECON2 0FA7                              ___awdiv@dividend 000C  
                                      ?_putch 0001                     dc_motor_initialize@_motor 0019  
                           _EUSART_ASYNC_Init 42FE                                        i2l1023 474C  
                                      i2l1104 46EE                                        i2l1018 4748  
                                      i2l1115 46D4                                        i2l1126 46BA  
                                      i2l1137 46A0                                        i2l1083 4758  
                                      i2l1340 2398                                        i2l1093 4750  
                                      i2l1342 23B8                                        i2l1415 4732  
                                      i2l1088 4754                                        i2l1352 252C  
                                      i2l1344 23D8                                        i2l1370 2758  
                                      i2l1346 241C                                        i2l1355 25B4  
                                      i2l1357 25F8                                        i2l1349 24A4  
                                      i2l1359 2618                                        i2l1537 473A  
                                      i2l1570 4644                                        i2l1723 475C  
                                      i2l1732 4768                                        i2l1485 4724  
                                      i2l1569 4642                                        i2l1593 4716  
                                      i2l8001 4718                                        i2l8003 471A  
                                      i2l8011 4734                                        i2l8005 4720  
                                      i2l8021 4712                                        i2l8033 4768  
                                      i2l8017 470A                                        i2l7331 4636  
                                      i2l8027 475A                                        i2l8019 470C  
                                      i2l7341 4184                                        i2l7333 463A  
                                      i2l7351 41CA                                        i2l7343 4184  
                                      i2l7335 463E                                        i2l7327 4624  
                                      i2l7353 41E6                                        i2l7345 4196  
                                      i2l7329 4624                                        i2l9201 23E6  
                                      i2l7347 41A2                                        i2l7339 4184  
                                      i2l9211 242A                                        i2l9203 23F4  
                                      i2l7349 41BE                                        i2l9301 2658  
                                      i2l9213 2438                                        i2l9221 2460  
                                      i2l9205 2402                                        i2l7551 3FC6  
                                      i2l9311 2694                                        i2l9303 2666  
                                      i2l9231 249E                                        i2l9223 246E  
                                      i2l9215 2446                                        i2l9207 2412  
                                      i2l7561 401C                                        i2l7553 3FDE  
                                      i2l7545 3F9C                                        i2l9321 26C6  
                                      i2l9313 2698                                        i2l9305 2674  
                                      i2l9241 24E2                                        i2l9233 24B2  
                                      i2l9225 247C                                        i2l9217 2456  
                                      i2l9209 2416                                        i2l7555 3FEA  
                                      i2l7547 3F9E                                        i2l9331 26F8  
                                      i2l9323 26D4                                        i2l9315 26A6  
                                      i2l9307 2678                                        i2l9251 2522  
                                      i2l9235 24C0                                        i2l9243 24E8  
                                      i2l9227 248A                                        i2l9219 245A  
                                      i2l7557 3FFC                                        i2l7549 3FB6  
                                      i2l7901 46DA                                        i2l9341 2734  
                                      i2l9333 2706                                        i2l9325 26D8  
                                      i2l9317 26B4                                        i2l9309 2686  
                                      i2l9261 2566                                        i2l9253 2526  
                                      i2l9245 24F6                                        i2l9237 24CE  
                                      i2l9229 249A                                        i2l7559 4014  
                                      i2l9343 2738                                        i2l9335 2714  
                                      i2l9327 26E6                                        i2l9319 26B8  
                                      i2l9271 259A                                        i2l9263 256A  
                                      i2l9255 253A                                        i2l9247 2504  
                                      i2l9239 24DE                                        i2l9191 2394  
                                      i2l7921 46D4                                        i2l7913 46BE  
                                      i2l9345 2746                                        i2l9337 2718  
                                      i2l9329 26F4                                        i2l9281 25DE  
                                      i2l9273 25AA                                        i2l9257 2548  
                                      i2l9265 2570                                        i2l9249 2512  
                                      i2l9193 23A6                                        i2l7851 4762  
                                      i2l7907 46EE                                        i2l7915 46C0  
                                      i2l9347 2754                                        i2l9339 2726  
                                      i2l9291 2626                                        i2l9283 25EE  
                                      i2l9275 25AE                                        i2l9267 257E  
                                      i2l9259 2556                                        i2l9195 23B4  
                                      i2l9187 2378                                        i2l7941 468A  
                                      i2l9293 2634                                        i2l9285 25F2  
                                      i2l9277 25C2                                        i2l9269 258C  
                                      i2l9197 23C6                                        i2l9189 2386  
                                      i2l7863 45F4                                        i2l7935 46BA  
                                      i2l7927 46A4                                        i2l7943 468C  
                                      i2l9295 2638                                        i2l9287 2606  
                                      i2l9279 25D0                                        i2l9199 23D4  
                                      i2l7865 45F6                                        i2l7857 475E  
                                      i2l7881 4756                                        i2l7929 46A6  
                                      i2l9297 2646                                        i2l9289 2614  
                                      i2l7867 460A                                        i2l7875 474A  
                                      i2l9299 2654                                        i2l7893 474E  
                                      i2l7869 4746                                        i2l7949 46A0  
                                      i2l7887 4752                                        i2l7991 4726  
                                      i2l7993 4728                                        i2l7899 46D8  
                                      i2l7995 472E           convert_uint16_to_string@Temp_String 0180  
                                      _SPBRGH 0FB0                            ?_EUSART_ASYNC_Init 004F  
                                      _SSPADD 0FC8                                        _SSPBUF 0FC9  
           ADC_GetConversion_Blocking@channel 0015                              __end_of___xxtofl 2CBA  
                 __end_of_dc_motor_move_right 4518                                  vfprintf@cfmt 0048  
                         ??_EUSART_ASYNC_Init 0051                                     ??___fladd 003B  
                                      _check1 0061                                        _check2 0060  
                                      _check3 005F                                     ??___fldiv 0022  
                                   ??___awdiv 0010                                     ??___awmod 0010  
                                   ??___flmul 0022                                     ??___fltol 0037  
                                   ??___lwdiv 0010                                        _memset 2E50  
                                      clear_0 3F74                                        clear_1 3F80  
                                      clear_2 3F8C                              ___awdiv@quotient 0012  
                             ___awmod@divisor 000E                                        isa$std 0001  
                             ___awmod@counter 0010                                        pad@buf 001E  
                                      dtoa@fp 0027                   lcd_8bit_send_string_pos@lcd 0027  
                 lcd_8bit_send_string_pos@ret 002D                   lcd_8bit_send_string_pos@row 0029  
                 lcd_8bit_send_string_pos@str 002B       gpio_pin_direction_intialize@_pin_config 000C  
                                      fputc@c 000C                                     ?_CCP1_ISR 0001  
                                      fputs@c 0019                                        fputs@i 001A  
                                __pdataCOMRAM 006D                                     ?_CCP2_ISR 0001  
                                      fputs@s 0015                                _adc_lm35_1_txt 00D7  
                                   ?_ADC_Init 000F                                  __mediumconst 0000  
                                      tblptrh 0FF7                                        tblptrl 0FF6  
                                      tblptru 0FF8                     __end_of_EUSART_ASYNC_Init 4348  
                                      putch@c 0001                              __end_of_vfprintf 42B2  
                                   ??_sprintf 0050                  __end_of_EUSART_ASYNC_RX_Init 3680  
                __end_of_EUSART_ASYNC_TX_Init 382C                  __end_of_select_result_format 441A  
                                ___xxtofl@arg 0016                                  ___xxtofl@exp 0015  
                                ___xxtofl@val 000C                                    __accesstop 0080  
                     __end_of__initialization 3F92                                     ?_INT0_ISR 0001  
                                   ?_INT1_ISR 0001                                     ?_INT2_ISR 0001  
                               ___rparam_used 0001                                    ___fltol@f1 0033  
                                  _adc_lm35_1 006B                        ??_gpio_pin_write_logic 000F  
                              __pcstackCOMRAM 0001                                  __pidataBANK0 46F0  
                                __pidataBANK1 4646                                     ?_TMR0_ISR 0001  
                                   ?_TMR1_ISR 0001                                     ?_TMR2_ISR 0001  
                                   ?_TMR3_ISR 0001                  ??_ADC_GetConversion_Blocking 0018  
                               __end_of_fputc 38F6                                 __end_of_fputs 43D6  
                               __end_of_putch 4768                               ??_EUSART_Rx_ISR 0001  
                             ??_EUSART_Tx_ISR 0001                             RB5_ISR@RB5_source 0001  
                          _Timer3_Write_value 4624                       _ADC_GetConversionResult 39BA  
                                  ??_CCP1_ISR 0008                                    ??_CCP2_ISR 0001  
                                  ??_ADC_Init 0011                           ?_Timer3_Write_value 0001  
                                     ??_fputc 0010                                       ??_fputs 0019  
                                     ??_putch 000C                                    __pbssBANK0 0080  
                                  __pbssBANK1 0100                         _INT0_InterruptHandler 00B4  
                                  ??_INT0_ISR 0001                                    ??_INT1_ISR 0001  
                                  ??_INT2_ISR 0001                                    __pnvCOMRAM 0071  
               __end_of_application_intialize 4742                     dc_motor_move_right@_motor 0015  
                      lcd_8bit_initialize@lcd 0021                        lcd_8bit_initialize@ret 0026  
                      _TMR0_Interrupt_Handler 009E                        _TMR3_Interrupt_Handler 0094  
                        ??_Timer3_Write_value 0005                                    ??_TMR0_ISR 0001  
                                  ??_TMR1_ISR 0001                                    ??_TMR2_ISR 0001  
                                  ??_TMR3_ISR 0001                             led_turn_off@F3058 0068  
                 convert_uint16_to_string@ret 0186                                       _ADC_ISR 4762  
                 EUSART_ASYNC_TX_Init@_eusart 000C                               led_toggle@F3063 0067  
                 convert_uint16_to_string@str 017E                                       ?_memset 000C  
                                     _ADC_Req 00C6                ADC_GetConversion_Blocking@_adc 0013  
                                     _RB4_ISR 46D6                                       _RB5_ISR 46BC  
                                     _RB6_ISR 46A2                                       _RB7_ISR 4688  
                                   ?___xxtofl 000C                     _RB6_InterruptHandler_HIGH 00A6  
                               ?_MSSP_I2C_ISR 0001           __end_of_lcd_8bit_send_enable_signal 45F4  
                 _lcd_8bit_send_enable_signal 45C0                             RB7_ISR@RB7_source 0001  
              ??_CCP1_DefaultInterruptHandler 0008               CCP_Compare_Mode_Set_Value@F3112 00BC  
              lcd_8bit_send_enable_signal@lcd 0015                lcd_8bit_send_enable_signal@ret 0017  
                              _tris_registers 0165                      _RB6_InterruptHandler_LOW 00A4  
               ??_lcd_8bit_send_enable_signal 0017                                       _i2c_obj 0000  
                           ??_MSSP_I2C_BC_ISR 0001        lcd_8bit_initialize@l_data_pins_counter 0025  
                                     __Hparam 0000                                  ADC_Init@_adc 000F  
                                     __Lparam 0000                           _ecu_layer_intialize 441A  
                                     ___fladd 1A7C                         _lcd_8bit_send_command 3E7E  
                                     ___fldiv 276C                                       ___awdiv 38F6  
                                     ___awmod 3CA4                                       ___flmul 1F3C  
                                     ___fltol 347E                                       ___lwdiv 409C  
                           __end_of_btn_value 1011             _EUSART_Baud_Rate_Calculation$5662 004B  
                                   ?_vfprintf 0042                                  __psmallconst 1000  
                        _EUSART_ASYNC_RX_Init 3584                     ??_ADC_GetConversionResult 0010  
                        _EUSART_ASYNC_TX_Init 3758                    __end_of_gpio_pin_intialize 4262  
                                     __pcinit 3F0E                          _select_result_format 43D6  
                                     __ramtop 1000                      _lcd_8bit_send_string_pos 3BF2  
                                     __ptext0 105E                                       __ptext1 3BF2  
                                     __ptext2 3D54                                       __ptext3 3DEE  
                                     __ptext4 449C                                       __ptext5 44DA  
                                     __ptext6 3A7A                                       __ptext7 42B2  
                                     __ptext8 4262                                       __ptext9 3102  
                                   _T0CONbits 0FD5                                     _T1CONbits 0FCD  
                    _convert_uint16_to_string 3A7A                                ??_MSSP_I2C_ISR 0001  
                                   _T2CONbits 0FCA                                    ??___xxtofl 0010  
                                   _T3CONbits 0FB1                              ___awmod@dividend 000C  
                        ?_ecu_layer_intialize 0001    EUSART_Baud_Rate_Calculation@Baud_Rate_Temp 0047  
                                     _sprintf 42B2                                __pintcode_body 2366  
                        end_of_initialization 3F92                      select_result_format@_adc 000C  
 ADC_GetConversion_Blocking@conversion_result 0016                                       fputc@fp 000E  
                                     memset@c 000E                                       memset@k 0014  
                                     memset@n 0010                                       memset@s 0016  
                                     int_func 2366                                       fputs@fp 0017  
                ??_CCP_Compare_Mode_Set_Value 0005                         gpio_pin_intialize@ret 0018  
                               _dc_motor_stop 449C                             __end_of_vfpfcnvrt 322E  
                                   _RCSTAbits 0FAB            __end_of_ADC_GetConversion_Blocking 4184  
                  _ADC_GetConversion_Blocking 4110                                       postdec1 0FE5  
                                     postdec2 0FDD                                       postinc0 0FEE  
                                     postinc1 0FE6                                       postinc2 0FDE  
                            vfpfcnvrt@convarg 003C                         ?_EUSART_ASYNC_RX_Init 000C  
                                  ??_vfprintf 0048                         ?_EUSART_ASYNC_TX_Init 000C  
                       ?_select_result_format 000C                         _INT1_InterruptHandler 00B2  
                                   _PORTBbits 0F81                 gpio_pin_intialize@_pin_config 0015  
                                _compare_flag 0063                                   ___fladd@grs 0042  
                       ??_ecu_layer_intialize 0051          __end_of_gpio_pin_direction_intialize 3102  
                _gpio_pin_direction_intialize 2FC6                                 ___xxtofl@sign 0014  
                                   _TRISCbits 0F94                           _ADC_StartConversion 4668  
                                 ___fldiv@grs 002D                                   ___fldiv@rem 0026  
                                 ___flmul@grs 0027                                   _CCP1CONbits 0FBD  
                                 _CCP2CONbits 0FBA                                     _TXSTAbits 0FAC  
                              ?_dc_motor_stop 0015                            relay_turn_on@F3047 0065  
                      ?_lcd_8bit_send_command 0018                          ?_ADC_StartConversion 000C  
              lcd_8bit_send_string_pos@column 002A                      EUSART_ASYNC_Init@_eusart 004F  
               convert_uint16_to_string@F3201 0114                 convert_uint32_to_string@F3208 0100  
                                 vfpfcnvrt@ap 0038                                   vfpfcnvrt@cp 0040  
                                 vfpfcnvrt@fp 0034                                   _BAUDCONbits 0FB8  
                               __pidataCOMRAM 4742       adc_input_channel_port_configure@channel 000E  
                              _timer0_preload 009C         lcd_8bit_send_char_data@l_pins_counter 0020  
                              __end_of_memset 2FC6                                _timer1_preload 0098  
                              _timer2_preload 0062                  ?_configure_voltage_reference 000C  
                         start_initialization 3F0E                                _timer3_preload 0092  
         EUSART_Baud_Rate_Calculation@_eusart 0043                           _lcd_8bit_initialize 322E  
               convert_uint16_to_string@value 017C                                   __end_of_abs 449C  
                                 __end_of_pad 409C                 ?_gpio_pin_direction_intialize 000C  
    ADC_GetConversionResult@conversion_result 000E          __end_of_EUSART_Baud_Rate_Calculation 1A7C  
                _EUSART_Baud_Rate_Calculation 158E                     _EUSART_RxInterruptHandler 008E  
                       ADC_SelectChannel@_adc 000F                          __end_of_MSSP_I2C_ISR 474A  
                        ?_lcd_8bit_initialize 0021                         ??_ADC_StartConversion 000E  
                     _lcd_8bit_send_char_data 3DEE                                   vfprintf@fmt 0044  
                  _EUSART_FramingErrorHandler 008C                        ??_EUSART_ASYNC_RX_Init 000E  
                      ??_EUSART_ASYNC_TX_Init 000E                        ??_select_result_format 000E  
                                 __pdataBANK0 00E5                                   __pdataBANK1 015B  
                convert_uint8_to_string@F3194 011A                                      ?_ADC_ISR 0001  
                                    ??_memset 0012                           _lcd_8bit_set_cursor 3D54  
                                  memset@dest 000C                      lcd_8bit_send_command@lcd 0018  
                    lcd_8bit_send_command@ret 001F                       ADC_StartConversion@_adc 000C  
                       __end_of_EUSART_Rx_ISR 476A                                     ___fladd@a 0037  
                                   ___fladd@b 0033                         __end_of_EUSART_Tx_ISR 475E  
                                   ___fldiv@a 001E                                     ___fldiv@b 001A  
                                    ?_RB4_ISR 0001                                      ?_RB5_ISR 0001  
                                    ?_RB6_ISR 0001                                      ?_RB7_ISR 0001  
                                   ___flmul@a 001E                                     ___flmul@b 001A  
                                 __pbssCOMRAM 005F   _I2C_Report_Write_Collision_InterruptHandler 00BA  
                               __pcstackBANK1 017C                 ??_configure_voltage_reference 000E  
                             _MSSP_I2C_BC_ISR 474A                        _CCP1_Interrupt_Handler 00C0  
                 ADC_GetConversionResult@_adc 000C                          ?_lcd_8bit_set_cursor 0021  
                       _INT2_InterruptHandler 00B0                                     _dc_motor1 00FC  
                                   _dc_motor2 00FA                              _usart_model_init 4518  
                             ??_dc_motor_stop 0017            __end_of_CCP_Compare_Mode_Set_Value 41F6  
                  _CCP_Compare_Mode_Set_Value 4184                 ?_EUSART_Baud_Rate_Calculation 0043  
                       ??_lcd_8bit_initialize 0023                  __end_of_InterruptManagerHigh 276C  
                  ??_lcd_8bit_send_string_pos 002D                              ___lwdiv@dividend 000C  
                      _TMR1_Interrupt_Handler 009A                         _application_intialize 473C  
                                   _dtoa$5127 002B                                     __pintcode 0000  
    __end_of_adc_input_channel_port_configure 3758            ??_adc_input_channel_port_configure 000C  
           ?_adc_input_channel_port_configure 0001              _adc_input_channel_port_configure 3680  
                           _ADC_SelectChannel 458A                   lcd_8bit_send_char_data@data 001A  
                  ??_convert_uint16_to_string 005E                                      ?___fladd 0033  
             gpio_pin_write_logic@_pin_config 000C                                      ?___fldiv 001A  
                                    ?___awdiv 000C                                      ?___awmod 000C  
                                    ?___flmul 001A                                      ?___fltol 0033  
                                    ?___lwdiv 000C                 ADC_GetConversion_Blocking@ret 0018  
                          ?_ADC_SelectChannel 000F                     gpio_pin_write_logic@logic 000E  
                                   _btn_value 1001                                   __smallconst 1000  
                   _RB4_InterruptHandler_HIGH 00AE                                      _CCP1_ISR 45F4  
                                    _CCP2_ISR 475E                           ??_ADC_SelectChannel 0012  
                                    _ADC_Init 3B36                      Timer3_Write_value@_value 0003  
                    Timer3_Write_value@_timer 0001                     _RB7_InterruptHandler_HIGH 00A2  
                            ___lwdiv@quotient 0010                                      ?_sprintf 004A  
                          _gpio_pin_intialize 41F6                         ??_lcd_8bit_set_cursor 0025  
              ??_gpio_pin_direction_intialize 000E                      _RB5_InterruptHandler_LOW 00A8  
                                    _INT0_ISR 4756                                      _INT1_ISR 4752  
                                    _INT2_ISR 474E                                      _RB4_Flag 0070  
                   ??_lcd_8bit_send_char_data 001B                                      _RB5_Flag 006F  
                                    _RB6_Flag 006E                                      _RB7_Flag 006D  
                         ?_gpio_pin_intialize 0015                                      _PIE1bits 0F9D  
                                    _PIE2bits 0FA0                     __end_of_ADC_SelectChannel 45C0  
                                    _PIR1bits 0F9E                                      _PIR2bits 0FA1  
                                    i2u620_40 4636                                      i2u620_41 4632  
                                    i2u621_40 4196                                      i2u621_41 4192  
                                    i2u622_40 41BE                                      i2u622_41 41BA  
                                    i2u623_40 41E6                                      i2u623_41 41E2  
                                    i2u801_40 2386                                      i2u801_41 2382  
                                    i2u810_40 2412                                      i2u802_40 2394  
                                    i2u810_41 240E                                      i2u802_41 2390  
                                    i2u811_40 242A                                      i2u803_40 23A6  
                                    i2u811_41 2426                                      i2u803_41 23A2  
                                    i2u636_40 3FC6                                      i2u820_40 24C0  
                                    i2u812_40 2438                                      i2u804_40 23B4  
                                    i2u636_41 3FC2                                      i2u820_41 24BC  
                                    i2u812_41 2434                                      i2u804_41 23B0  
                                    i2u637_40 3FFC                                      i2u821_40 24CE  
                                    i2u813_40 2446                                      i2u805_40 23C6  
                                    i2u637_41 3FF8                                      i2u821_41 24CA  
                                    i2u813_41 2442                                      i2u805_41 23C2  
                                    i2u830_40 2566                                      i2u822_40 24DE  
                                    i2u814_40 2456                                      i2u806_40 23D4  
                                    i2u830_41 2562                                      i2u822_41 24DA  
                                    i2u814_41 2452                                      i2u806_41 23D0  
                                    i2u831_40 257E                                      i2u823_40 24F6  
                                    i2u815_40 246E                                      i2u807_40 23E6  
                                    i2u831_41 257A                                      i2u823_41 24F2  
                                    i2u815_41 246A                                      i2u807_41 23E2  
                                    i2u680_40 46B6                                      i2u840_40 2614  
                                    i2u832_40 258C                                      i2u824_40 2504  
                                    i2u816_40 247C                                      i2u808_40 23F4  
                                    i2u680_41 46B2                                      i2u840_41 2610  
                                    i2u832_41 2588                                      i2u824_41 2500  
                                    i2u816_41 2478                                      i2u808_41 23F0  
                                    i2u681_40 469C                                      i2u841_40 2626  
                                    i2u833_40 259A                                      i2u825_40 2512  
                                    i2u817_40 248A                                      i2u809_40 2402  
                                    i2u681_41 4698                                      i2u841_41 2622  
                                    i2u833_41 2596                                      i2u825_41 250E  
                                    i2u817_41 2486                                      i2u809_41 23FE  
                                    i2u850_40 26B4                                      i2u842_40 2634  
                                    i2u834_40 25AA                                      i2u826_40 2522  
                                    i2u818_40 249A                                      i2u850_41 26B0  
                                    i2u842_41 2630                                      i2u834_41 25A6  
                                    i2u826_41 251E                                      i2u818_41 2496  
                                    i2u851_40 26C6                                      i2u843_40 2646  
                                    i2u835_40 25C2                                      i2u827_40 253A  
                                    i2u819_40 24B2                                      i2u851_41 26C2  
                                    i2u843_41 2642                                      i2u835_41 25BE  
                                    i2u827_41 2536                                      i2u819_41 24AE  
                                    i2u676_40 460A                                      i2u860_40 2754  
                                    i2u852_40 26D4                                      i2u844_40 2654  
                                    i2u836_40 25D0                                      i2u828_40 2548  
                                    i2u676_41 4606                                      i2u860_41 2750  
                                    i2u852_41 26D0                                      i2u844_41 2650  
                                    i2u836_41 25CC                                      i2u828_41 2544  
                                    i2u853_40 26E6                                      i2u845_40 2666  
                                    i2u837_40 25DE                                      i2u829_40 2556  
                                    i2u853_41 26E2                                      i2u845_41 2662  
                                    i2u837_41 25DA                                      i2u829_41 2552  
                                    i2u677_48 4610                                      i2u678_40 46EA  
                                    i2u854_40 26F4                                      i2u846_40 2674  
                                    i2u838_40 25EE                                      i2u677_49 4622  
                                    i2u678_41 46E6                                      i2u854_41 26F0  
                                    i2u846_41 2670                                      i2u838_41 25EA  
                                    i2u679_40 46D0                                      i2u855_40 2706  
                                    i2u847_40 2686                                      i2u839_40 2606  
                                    i2u679_41 46CC                                      i2u855_41 2702  
                                    i2u847_41 2682                                      i2u839_41 2602  
                                    i2u856_40 2714                                      i2u848_40 2694  
                                    i2u856_41 2710                                      i2u848_41 2690  
                                    i2u857_40 2726                                      i2u849_40 26A6  
                                    i2u857_41 2722                                      i2u849_41 26A2  
                                    i2u858_40 2734                                      i2u858_41 2730  
                                    i2u859_40 2746                                      i2u859_41 2742  
                         _dc_motor_initialize 4554                   ?_ADC_GetConversion_Blocking 0013  
                           RB4_ISR@RB4_source 0001                                      _TMR0_ISR 4726  
        __end_of_CCP1_DefaultInterruptHandler 4022                  _CCP1_DefaultInterruptHandler 3F9C  
                                    _TMR1_ISR 4718                                      _TMR2_ISR 4734  
                                    _TMR3_ISR 470A                                     _timer_obj 00DE  
                                   _vfpfcnvrt 3102                                    _ADCON0bits 0FC2  
                                  _ADCON1bits 0FC1                                    _ADCON2bits 0FC0  
                     __end_of_MSSP_I2C_BC_ISR 474E                          ??_gpio_pin_intialize 0017  
                    ADC_SelectChannel@channel 0011                                     _usart_obj 00C7  
                   lcd_8bit_set_cursor@coulmn 0024                          ?_dc_motor_initialize 0019  
                                 _INTCON2bits 0FF1                                   _INTCON3bits 0FF0  
                                   copy_data0 3F22                                     copy_data1 3F42  
                                   copy_data2 3F62                           _dc_motor_move_right 44DA  
                     ??_lcd_8bit_send_command 001B                  _RealTimeClockDS1307_Str_Data 010B  
                                  _EECON1bits 0FA6                        ?_application_intialize 0001  
                                    __Hrparam 0000                                    vfprintf@ap 0046  
                                    __Lrparam 0000                                    vfprintf@fp 0042  
                    ?_ADC_GetConversionResult 000C                ??_EUSART_Baud_Rate_Calculation 0045  
                 EUSART_ASYNC_RX_Init@_eusart 000C                         _ADC_Interrupt_Handler 00C2  
                         _RealTimeClockDS1307 0080                   __end_of_ecu_layer_intialize 445C  
                                  ?_vfpfcnvrt 0034               fp__CCP1_DefaultInterruptHandler 0000  
               ?_CCP1_DefaultInterruptHandler 0001                                      _ccp1_obj 013E  
                        ?_dc_motor_move_right 0015               __end_of_lcd_8bit_send_char_data 3E7E  
                                  sprintf@fmt 004C                             RB6_ISR@RB6_source 0001  
                                    ___xxtofl 2B06                                  _MSSP_I2C_ISR 4746  
                       ??_dc_motor_initialize 001B                               ___lwdiv@divisor 000E  
                        _InterruptManagerHigh 0000                    lcd_8bit_send_char_data@lcd 0018  
                             ___lwdiv@counter 0012                    lcd_8bit_send_char_data@ret 001F  
                                    __ptext10 2CBA                                      __ptext11 4022  
                                    __ptext20 441A                                      __ptext12 4392  
                                    __ptext21 4518                                      __ptext13 382C  
                                    __ptext30 158E                                      __ptext22 322E  
                                    __ptext14 4766                                      __ptext31 2B06  
                                    __ptext23 3E7E                                      __ptext15 445C  
                                    __ptext40 409C                                      __ptext32 347E  
                                    __ptext24 45C0                                      __ptext16 3CA4  
                                    __ptext41 1F3C                                      __ptext33 276C  
                                    __ptext25 4554                                      __ptext17 38F6  
                                    __ptext50 4718                                      __ptext42 4110  
                                    __ptext34 1A7C                                      __ptext26 41F6  
                                    __ptext18 2E50                                      __ptext51 4726  
                                    __ptext43 4668                                      __ptext35 3758  
                                    __ptext27 335A                                      __ptext19 473C  
                                    __ptext60 4756                                      __ptext52 4688  
                                    __ptext44 458A                                      __ptext36 3584  
                                    __ptext28 2FC6                                      __ptext61 475A  
                                    __ptext53 46A2                                      __ptext45 3680  
                                    __ptext37 3B36                                      __ptext29 42FE  
                                    __ptext62 4768                                      __ptext54 46BC  
                                    __ptext46 39BA                                      __ptext38 43D6  
                                    __ptext63 475E                                      __ptext55 46D6  
                                    __ptext39 4348                                      __ptext64 45F4  
                                    __ptext56 4746                                      __ptext48 470A  
                                    __ptext65 3F9C                                      __ptext57 474A  
                                    __ptext49 4734                                      __ptext66 4624  
                                    __ptext58 474E                                      __ptext67 4184  
                                    __ptext59 4752                                      __ptext68 4762  
                                    __ptext69 0000               configure_voltage_reference@_adc 000C  
            __end_of_lcd_8bit_send_string_pos 3CA4       CCP_Compare_Mode_Set_Value@compare_value 0003  
         convert_uint16_to_string@DataCounter 0187              __end_of_convert_uint16_to_string 3B36  
                                    isa$xinst 0000                                      int$flags 0073  
                                    _vfprintf 4262                         ??_dc_motor_move_right 0017  
                    __end_of_usart_model_init 4554                              ?_MSSP_I2C_BC_ISR 0001  
                                  _INTCONbits 0FF2                         ?_InterruptManagerHigh 0001  
                __end_of_gpio_pin_write_logic 347E                  ?_lcd_8bit_send_enable_signal 0015  
                                    intlevel2 0000                                     sprintf@ap 0050  
                 __end_of_ADC_StartConversion 4688                     _EUSART_TxInterruptHandler 0090  
             __end_of_ADC_GetConversionResult 3A7A                   ?_CCP_Compare_Mode_Set_Value 0001  
                                 ??_vfpfcnvrt 003A  CCP_Compare_Mode_Set_Value@capture_temp_value 0006  
                    _RealTimeClockDS1307_Data 0152                           dc_motor_stop@_motor 0015  
                    _RealTimeClockDS1307_Time 0149                                      sprintf@f 0052  
                                    sprintf@s 004A                                _port_registers 015B  
                            _adc_lm35_celsius 0071                                   _SSPCON1bits 0FC6  
                                 _SSPCON2bits 0FC5                                 ___fladd@signs 003F  
                      _CCP2_Interrupt_Handler 00BE                   __end_of_lcd_8bit_initialize 335A  
                lcd_8bit_send_command@command 001A                                  ___fladd@aexp 0040  
                                ___fladd@bexp 0041                    __end_of_Timer3_Write_value 4646  
                       __end_of_dc_motor_stop 44DA                        _TMR2_Interrupt_Handler 0096  
